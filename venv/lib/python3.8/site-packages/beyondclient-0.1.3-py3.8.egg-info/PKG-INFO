Metadata-Version: 2.1
Name: beyondclient
Version: 0.1.3
Summary: a library for poking production via beyondcorp
Home-page: UNKNOWN
Author: Travis Johnson
Author-email: traviscj@squareup.com
License: UNKNOWN
Description: # beyondclient-py
        
        a library for poking production via beyondcorp
        
        ## Migrating from py-doorman-cli
        
        Most of the parts of py-doorman-cli are no longer required. You can delete anything about logging in and prompting for passwords. You can delete anywhere you set the `doorman_token` cookie. All you need is to create a beyondclient session and use it. See `example.py` in this repo for an example.
        
        ## Features
        
        ## Installation
        
        ### Via internal PyPI server
        
        If it is your first time using the internal PyPI server, create a Pip configuration file (`~/.pip/pip.conf`) with the following contents:
        ```
        [global]
        trusted-host = nexus3.sqcorp.co
        extra-index-url = https://nexus3.sqcorp.co/repository/pypi-square-general/simple
        ```
        You can then install `beyondclient-py` with:
        ```
        pip install beyondclient
        ```
        
        ### Via Stash
        
        ```
        pip install git+https://git.sqcorp.co/scm/ACCESS/beyondclient-py.git@master
        ```
        
        
        ## Development
        
        ### Setup
        
        For development, the default package managing tool is `pipenv` (more info at [go/pipenv](https://docs.google.com/document/d/1KjfLOXvMZ-wKPfmFpY4jcgsus-p15EL_u8AFMuOLpok/edit))
        
        To install all dependencies for local development and testing, you just do
        
            pipenv install
        
        to add new dependencies, update `setup.py` and then run
        
            pipenv upgrade
        
        you should add the `Pipfile.lock` that gets created to the repo for the CI tests (info below)
        
        ### Tests
        
        There are two categories of tests
        
        * `py.test` which tests that your code does what you expect
        * `flake8` which verifies that you're using standard conventions in writing your code
        
        To run them locally:
        
            pipenv run flake8 .
            pipenv run py.test tests
        
        I highly recommend installing live `flake8` checking in your editor, it makes the whole process much easier:
        
        [[sublime]](https://github.com/MagicStack/MagicPython)
        [[atom]](https://github.com/MagicStack/MagicPython)
        [[vim]](https://realpython.com/blog/python/vim-and-python-a-match-made-in-heaven/)
        [[emacs]](http://www.flycheck.org/en/latest/)
        
        ### Continuous Integrations
        
        When you make a PR, the script in script/ci will run the tests on Kochiku and are required
        to pass in order to merge. This ensures PRs do not break existing functionally and also
        that new code lives up to the coding standards for the repo.
        
        * Read more about [Making Clean Code a Part of Your Build Process](https://www.caktusgroup.com/blog/2015/08/15/making-clean-code-part-your-build-process/)
        
        ### Versions and Tags
        
        Use bumpversion to update the version of the package
        
            bumpversion [major|minor|patch]
        
        This will increment the version and update it both in `setup.py` and `beyondclient/__init__.py`.
        It will also automatically commit a tag with the corresponding version. You can push this to the repo
        with
        
            git push --tags
        
        
        
        ## Publish to Nexus (internal Square Pypi server)
        
        Follow instructions from the wiki: https://wiki.sqcorp.co/display/IS/Data+Science%3A+Internal+Pip+Server
        
        The `script/boxer/build` file is already configured to load your library into Nexus and GCS on build. By default, if you build from `master`, Boxer will upload your library on every build. If you use `canary` it will prefix the release with canary and only load onto GCS.
        
        Read more about the upload script at [PY/nexus](https://git.sqcorp.co/projects/PY/repos/nexus/browse)
        
Keywords: beyondclient,beyondcorp
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Provides-Extra: dev
