# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.money_transfer import money_transfer_pb2 as squareup_dot_money__transfer_dot_money__transfer__pb2


class MoneyTransferServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMoneyTransfer = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/CreateMoneyTransfer',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateMoneyTransferResponse.FromString,
                )
        self.PushToCard = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/PushToCard',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.PushToCardRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.PushToCardResponse.FromString,
                )
        self.GetPushToCard = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/GetPushToCard',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetPushToCardRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetPushToCardResponse.FromString,
                )
        self.BeginMoneyTransfer = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/BeginMoneyTransfer',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.BeginMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.BeginMoneyTransferResponse.FromString,
                )
        self.AuthorizeTenders = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/AuthorizeTenders',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeTendersRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeTendersResponse.FromString,
                )
        self.CompleteMoneyTransfer = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/CompleteMoneyTransfer',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CompleteMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CompleteMoneyTransferResponse.FromString,
                )
        self.CancelMoneyTransfer = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/CancelMoneyTransfer',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CancelMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CancelMoneyTransferResponse.FromString,
                )
        self.CreateReversalMoneyTransfer = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/CreateReversalMoneyTransfer',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateReversalMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateReversalMoneyTransferResponse.FromString,
                )
        self.AuthorizeReversalTenders = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/AuthorizeReversalTenders',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeReversalTendersRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeReversalTendersResponse.FromString,
                )
        self.GetMoneyTransfer = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/GetMoneyTransfer',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetMoneyTransferResponse.FromString,
                )
        self.UpdateTender = channel.unary_unary(
                '/squareup.money_transfer.MoneyTransferService/UpdateTender',
                request_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.UpdateTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.UpdateTenderResponse.FromString,
                )


class MoneyTransferServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMoneyTransfer(self, request, context):
        """*
        Creates a money transfer in "single-message" fashion. The money transfer returned
        from this API should be rolled forward to completion according to tender responses.

        All tenders are pushed forward as much as they can, with complete-tenders auto-submitted
        by the system. This will roll back any tenders if one rejects, or roll forward all tenders
        if all approved.

        "Success" should be derived by looking at individual tender states in the returned response.
        Specifically:
        - If one tender is COMPLETED, then all are COMPLETED. All rolled forward.
        - If one tender is CANCELLED, then all are CANCELLED. All rolled back.
        - If you have asynchronous tenders (i.e. state PENDING), then the tender states will
        all be in (PENDING, APPROVED, REJECTED). None have been cancelled or completed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushToCard(self, request, context):
        """*
        A "simple" money transfer API tailored towards pushing funds to a card that encapsulates
        creating a money transfer with an "auto-approved" PULL.

        This API should only be used by services or use cases that can guarantee the "PULL" side of
        the money movement (i.e. the funds flowing into Square), since this API will *purely* push
        funds to a card (i.e. funds flowing out of Square). This API will create a no-op, auto-approved
        money transfer tender as a PULL with a matching amount to this PUSH.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPushToCard(self, request, context):
        """*
        A "simple" money transfer API to fetch a previously performed PushToCard request
        by its money transfer server token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginMoneyTransfer(self, request, context):
        """*
        Begins a money transfer, creating a money transfer on the server without any tenders.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeTenders(self, request, context):
        """*
        Authorizes and attaches a MoneyTransfer Tender to the specified money transfer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteMoneyTransfer(self, request, context):
        """*
        Completes the specified money transfer.

        If the wait_for_terminal_state flag is set on the request, this endpoint will block until
        all of the tender models and operations corresponding to the tenders mentioned in the
        CompleteMoneyTransferRequest have been successfully processed. If all tenders are in a
        terminal state, the money transfer will push everything to completion or cancellation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelMoneyTransfer(self, request, context):
        """*
        Cancels the specified money transfer. The money transfer and all tenders will be rolled back.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateReversalMoneyTransfer(self, request, context):
        """*
        Creates a *reversal* money transfer in "single-message" fashion.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeReversalTenders(self, request, context):
        """*
        Authorizes and attaches a Reversal MoneyTransfer Tender to the specified reversal money transfer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMoneyTransfer(self, request, context):
        """*
        Fetches a money transfer.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTender(self, request, context):
        """*
        Update the state of a tender.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MoneyTransferServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMoneyTransfer,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateMoneyTransferResponse.SerializeToString,
            ),
            'PushToCard': grpc.unary_unary_rpc_method_handler(
                    servicer.PushToCard,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.PushToCardRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.PushToCardResponse.SerializeToString,
            ),
            'GetPushToCard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPushToCard,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetPushToCardRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetPushToCardResponse.SerializeToString,
            ),
            'BeginMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginMoneyTransfer,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.BeginMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.BeginMoneyTransferResponse.SerializeToString,
            ),
            'AuthorizeTenders': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeTenders,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeTendersRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeTendersResponse.SerializeToString,
            ),
            'CompleteMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteMoneyTransfer,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CompleteMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CompleteMoneyTransferResponse.SerializeToString,
            ),
            'CancelMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelMoneyTransfer,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CancelMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CancelMoneyTransferResponse.SerializeToString,
            ),
            'CreateReversalMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateReversalMoneyTransfer,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateReversalMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.CreateReversalMoneyTransferResponse.SerializeToString,
            ),
            'AuthorizeReversalTenders': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeReversalTenders,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeReversalTendersRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeReversalTendersResponse.SerializeToString,
            ),
            'GetMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMoneyTransfer,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.GetMoneyTransferResponse.SerializeToString,
            ),
            'UpdateTender': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTender,
                    request_deserializer=squareup_dot_money__transfer_dot_money__transfer__pb2.UpdateTenderRequest.FromString,
                    response_serializer=squareup_dot_money__transfer_dot_money__transfer__pb2.UpdateTenderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.money_transfer.MoneyTransferService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MoneyTransferService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/CreateMoneyTransfer',
            squareup_dot_money__transfer_dot_money__transfer__pb2.CreateMoneyTransferRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.CreateMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushToCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/PushToCard',
            squareup_dot_money__transfer_dot_money__transfer__pb2.PushToCardRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.PushToCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPushToCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/GetPushToCard',
            squareup_dot_money__transfer_dot_money__transfer__pb2.GetPushToCardRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.GetPushToCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BeginMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/BeginMoneyTransfer',
            squareup_dot_money__transfer_dot_money__transfer__pb2.BeginMoneyTransferRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.BeginMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthorizeTenders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/AuthorizeTenders',
            squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeTendersRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeTendersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/CompleteMoneyTransfer',
            squareup_dot_money__transfer_dot_money__transfer__pb2.CompleteMoneyTransferRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.CompleteMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/CancelMoneyTransfer',
            squareup_dot_money__transfer_dot_money__transfer__pb2.CancelMoneyTransferRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.CancelMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateReversalMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/CreateReversalMoneyTransfer',
            squareup_dot_money__transfer_dot_money__transfer__pb2.CreateReversalMoneyTransferRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.CreateReversalMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthorizeReversalTenders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/AuthorizeReversalTenders',
            squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeReversalTendersRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.AuthorizeReversalTendersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/GetMoneyTransfer',
            squareup_dot_money__transfer_dot_money__transfer__pb2.GetMoneyTransferRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.GetMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.money_transfer.MoneyTransferService/UpdateTender',
            squareup_dot_money__transfer_dot_money__transfer__pb2.UpdateTenderRequest.SerializeToString,
            squareup_dot_money__transfer_dot_money__transfer__pb2.UpdateTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
