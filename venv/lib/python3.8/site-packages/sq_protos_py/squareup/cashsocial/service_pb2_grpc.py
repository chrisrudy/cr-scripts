# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc



class CashSocialServiceStub(object):
    """* Request for a foobar. 

    message FoobarRequest {}

    * Response for a foobar. 

    message FoobarResponse {}

    rpc Foobar (FoobarRequest) returns (FoobarResponse) {
    option (squareup.sake.idempotent) = true;
    }
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """


class CashSocialServiceServicer(object):
    """* Request for a foobar. 

    message FoobarRequest {}

    * Response for a foobar. 

    message FoobarResponse {}

    rpc Foobar (FoobarRequest) returns (FoobarResponse) {
    option (squareup.sake.idempotent) = true;
    }
    """


def add_CashSocialServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cashsocial.service.CashSocialService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CashSocialService(object):
    """* Request for a foobar. 

    message FoobarRequest {}

    * Response for a foobar. 

    message FoobarResponse {}

    rpc Foobar (FoobarRequest) returns (FoobarResponse) {
    option (squareup.sake.idempotent) = true;
    }
    """
