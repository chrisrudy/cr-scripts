# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/logging/events/open_tickets.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.logging import events_pb2 as squareup_dot_logging_dot_events__pb2
from sq_protos_py.squareup.common import time_pb2 as squareup_dot_common_dot_time__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/logging/events/open_tickets.proto',
  package='squareup.logging.events.open_tickets',
  syntax='proto2',
  serialized_options=_b('\n/com.squareup.protos.logging.events.open_tickets'),
  serialized_pb=_b('\n*squareup/logging/events/open_tickets.proto\x12$squareup.logging.events.open_tickets\x1a\x1dsquareup/logging/events.proto\x1a\x1asquareup/common/time.proto\"\xcb\x02\n\x0fOpenTicketEvent\x12J\n\x05\x65vent\x18\x01 \x01(\x0e\x32;.squareup.logging.events.open_tickets.OpenTicketEvent.Event\x12\x45\n\x0bopen_ticket\x18\x02 \x01(\x0b\x32\x30.squareup.logging.events.open_tickets.OpenTicket\"\xa4\x01\n\x05\x45vent\x12\x10\n\x0cTICKET_SAVED\x10\x00\x12\"\n\x1eTICKET_CREATED_WITH_CARD_SWIPE\x10\x01\x12\x12\n\x0eTICKET_DELETED\x10\x02\x12\x11\n\rTICKET_EDITED\x10\x03\x12\x15\n\x11\x43LEAR_NEW_PRESSED\x10\x04\x12\x10\n\x0c\x42ILL_PRINTED\x10\x05\x12\x15\n\x11TICKET_CLOSED_OUT\x10\x06\"{\n\nOpenTicket\x12\x1b\n\x13ticket_client_token\x18\x01 \x01(\t\x12\x32\n\ncreated_at\x18\x02 \x01(\x0b\x32\x1e.squareup.common.time.DateTime\x12\x1c\n\x14ticket_payment_token\x18\x03 \x01(\t:q\n\x11open_ticket_event\x12\x1e.squareup.logging.events.Event\x18\xb5\x02 \x01(\x0b\x32\x35.squareup.logging.events.open_tickets.OpenTicketEventB1\n/com.squareup.protos.logging.events.open_tickets')
  ,
  dependencies=[squareup_dot_logging_dot_events__pb2.DESCRIPTOR,squareup_dot_common_dot_time__pb2.DESCRIPTOR,])


OPEN_TICKET_EVENT_FIELD_NUMBER = 309
open_ticket_event = _descriptor.FieldDescriptor(
  name='open_ticket_event', full_name='squareup.logging.events.open_tickets.open_ticket_event', index=0,
  number=309, type=11, cpp_type=10, label=1,
  has_default_value=False, default_value=None,
  message_type=None, enum_type=None, containing_type=None,
  is_extension=True, extension_scope=None,
  serialized_options=None, file=DESCRIPTOR)

_OPENTICKETEVENT_EVENT = _descriptor.EnumDescriptor(
  name='Event',
  full_name='squareup.logging.events.open_tickets.OpenTicketEvent.Event',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TICKET_SAVED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TICKET_CREATED_WITH_CARD_SWIPE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TICKET_DELETED', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TICKET_EDITED', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLEAR_NEW_PRESSED', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BILL_PRINTED', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TICKET_CLOSED_OUT', index=6, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=311,
  serialized_end=475,
)
_sym_db.RegisterEnumDescriptor(_OPENTICKETEVENT_EVENT)


_OPENTICKETEVENT = _descriptor.Descriptor(
  name='OpenTicketEvent',
  full_name='squareup.logging.events.open_tickets.OpenTicketEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='event', full_name='squareup.logging.events.open_tickets.OpenTicketEvent.event', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='open_ticket', full_name='squareup.logging.events.open_tickets.OpenTicketEvent.open_ticket', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPENTICKETEVENT_EVENT,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=144,
  serialized_end=475,
)


_OPENTICKET = _descriptor.Descriptor(
  name='OpenTicket',
  full_name='squareup.logging.events.open_tickets.OpenTicket',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ticket_client_token', full_name='squareup.logging.events.open_tickets.OpenTicket.ticket_client_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='created_at', full_name='squareup.logging.events.open_tickets.OpenTicket.created_at', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ticket_payment_token', full_name='squareup.logging.events.open_tickets.OpenTicket.ticket_payment_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=477,
  serialized_end=600,
)

_OPENTICKETEVENT.fields_by_name['event'].enum_type = _OPENTICKETEVENT_EVENT
_OPENTICKETEVENT.fields_by_name['open_ticket'].message_type = _OPENTICKET
_OPENTICKETEVENT_EVENT.containing_type = _OPENTICKETEVENT
_OPENTICKET.fields_by_name['created_at'].message_type = squareup_dot_common_dot_time__pb2._DATETIME
DESCRIPTOR.message_types_by_name['OpenTicketEvent'] = _OPENTICKETEVENT
DESCRIPTOR.message_types_by_name['OpenTicket'] = _OPENTICKET
DESCRIPTOR.extensions_by_name['open_ticket_event'] = open_ticket_event
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OpenTicketEvent = _reflection.GeneratedProtocolMessageType('OpenTicketEvent', (_message.Message,), {
  'DESCRIPTOR' : _OPENTICKETEVENT,
  '__module__' : 'squareup.logging.events.open_tickets_pb2'
  # @@protoc_insertion_point(class_scope:squareup.logging.events.open_tickets.OpenTicketEvent)
  })
_sym_db.RegisterMessage(OpenTicketEvent)

OpenTicket = _reflection.GeneratedProtocolMessageType('OpenTicket', (_message.Message,), {
  'DESCRIPTOR' : _OPENTICKET,
  '__module__' : 'squareup.logging.events.open_tickets_pb2'
  # @@protoc_insertion_point(class_scope:squareup.logging.events.open_tickets.OpenTicket)
  })
_sym_db.RegisterMessage(OpenTicket)

open_ticket_event.message_type = _OPENTICKETEVENT
squareup_dot_logging_dot_events__pb2.Event.RegisterExtension(open_ticket_event)

DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
