# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.api.rpc.rpc_pb2 import (
    Request as squareup___api___rpc___rpc_pb2___Request,
    Response as squareup___api___rpc___rpc_pb2___Response,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LoggingEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Log4jLoggingEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class LocationInformation(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            class_name: typing___Text = ...
            file_name: typing___Text = ...
            line_number: typing___Text = ...
            method_name: typing___Text = ...

            def __init__(self,
                *,
                class_name : typing___Optional[typing___Text] = None,
                file_name : typing___Optional[typing___Text] = None,
                line_number : typing___Optional[typing___Text] = None,
                method_name : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"class_name",b"class_name",u"file_name",b"file_name",u"line_number",b"line_number",u"method_name",b"method_name"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"class_name",b"class_name",u"file_name",b"file_name",u"line_number",b"line_number",u"method_name",b"method_name"]) -> None: ...
        type___LocationInformation = LocationInformation

        fqn_of_logger_class: typing___Text = ...
        level: typing___Text = ...
        logger_name: typing___Text = ...
        logging_event_message: typing___Text = ...
        rendered_message: typing___Text = ...
        start_date: builtin___int = ...
        thread_name: typing___Text = ...
        throwable_str_rep: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
        timestamp: builtin___int = ...
        user_token: typing___Text = ...

        @property
        def location_information(self) -> type___LoggingEvent.Log4jLoggingEvent.LocationInformation: ...

        @property
        def mdc(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___MDCPair]: ...

        def __init__(self,
            *,
            fqn_of_logger_class : typing___Optional[typing___Text] = None,
            level : typing___Optional[typing___Text] = None,
            location_information : typing___Optional[type___LoggingEvent.Log4jLoggingEvent.LocationInformation] = None,
            logger_name : typing___Optional[typing___Text] = None,
            mdc : typing___Optional[typing___Iterable[type___MDCPair]] = None,
            logging_event_message : typing___Optional[typing___Text] = None,
            rendered_message : typing___Optional[typing___Text] = None,
            start_date : typing___Optional[builtin___int] = None,
            thread_name : typing___Optional[typing___Text] = None,
            throwable_str_rep : typing___Optional[typing___Iterable[typing___Text]] = None,
            timestamp : typing___Optional[builtin___int] = None,
            user_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"fqn_of_logger_class",b"fqn_of_logger_class",u"level",b"level",u"location_information",b"location_information",u"logger_name",b"logger_name",u"logging_event_message",b"logging_event_message",u"rendered_message",b"rendered_message",u"start_date",b"start_date",u"thread_name",b"thread_name",u"timestamp",b"timestamp",u"user_token",b"user_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"fqn_of_logger_class",b"fqn_of_logger_class",u"level",b"level",u"location_information",b"location_information",u"logger_name",b"logger_name",u"logging_event_message",b"logging_event_message",u"mdc",b"mdc",u"rendered_message",b"rendered_message",u"start_date",b"start_date",u"thread_name",b"thread_name",u"throwable_str_rep",b"throwable_str_rep",u"timestamp",b"timestamp",u"user_token",b"user_token"]) -> None: ...
    type___Log4jLoggingEvent = Log4jLoggingEvent

    class SyslogLoggingEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        priority: builtin___int = ...
        timestamp: builtin___int = ...
        hostname: typing___Text = ...
        process: typing___Text = ...
        process_id: builtin___int = ...
        log_message: typing___Text = ...

        def __init__(self,
            *,
            priority : typing___Optional[builtin___int] = None,
            timestamp : typing___Optional[builtin___int] = None,
            hostname : typing___Optional[typing___Text] = None,
            process : typing___Optional[typing___Text] = None,
            process_id : typing___Optional[builtin___int] = None,
            log_message : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"hostname",b"hostname",u"log_message",b"log_message",u"priority",b"priority",u"process",b"process",u"process_id",b"process_id",u"timestamp",b"timestamp"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"hostname",b"hostname",u"log_message",b"log_message",u"priority",b"priority",u"process",b"process",u"process_id",b"process_id",u"timestamp",b"timestamp"]) -> None: ...
    type___SyslogLoggingEvent = SyslogLoggingEvent

    class AccessLoggingEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        RequestTypeValue = typing___NewType('RequestTypeValue', builtin___int)
        type___RequestTypeValue = RequestTypeValue
        RequestType: _RequestType
        class _RequestType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoggingEvent.AccessLoggingEvent.RequestTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 0)
            UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 1)
            SAKE = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 2)
            GRPC = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 3)
            HTTPS = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 4)
        DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 0)
        UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 1)
        SAKE = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 2)
        GRPC = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 3)
        HTTPS = typing___cast(LoggingEvent.AccessLoggingEvent.RequestTypeValue, 4)
        type___RequestType = RequestType

        LogTypeValue = typing___NewType('LogTypeValue', builtin___int)
        type___LogTypeValue = LogTypeValue
        LogType: _LogType
        class _LogType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoggingEvent.AccessLoggingEvent.LogTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            LOG_TYPE_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 0)
            LOG_TYPE_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 1)
            ACCESS = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 2)
            AUTHORIZATION = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 3)
        LOG_TYPE_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 0)
        LOG_TYPE_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 1)
        ACCESS = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 2)
        AUTHORIZATION = typing___cast(LoggingEvent.AccessLoggingEvent.LogTypeValue, 3)
        type___LogType = LogType

        class Trace(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            speleo_id: typing___Text = ...
            opentracing_id: typing___Text = ...

            def __init__(self,
                *,
                speleo_id : typing___Optional[typing___Text] = None,
                opentracing_id : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"opentracing_id",b"opentracing_id",u"speleo_id",b"speleo_id"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"opentracing_id",b"opentracing_id",u"speleo_id",b"speleo_id"]) -> None: ...
        type___Trace = Trace

        class AppNode(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            app: typing___Text = ...
            environment: typing___Text = ...
            datacenter: typing___Text = ...
            availability_zone: typing___Text = ...
            hostname: typing___Text = ...
            sans: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
            spiffe_uri: typing___Text = ...
            cert_serial: typing___Text = ...
            build_version: typing___Text = ...

            def __init__(self,
                *,
                app : typing___Optional[typing___Text] = None,
                environment : typing___Optional[typing___Text] = None,
                datacenter : typing___Optional[typing___Text] = None,
                availability_zone : typing___Optional[typing___Text] = None,
                hostname : typing___Optional[typing___Text] = None,
                sans : typing___Optional[typing___Iterable[typing___Text]] = None,
                spiffe_uri : typing___Optional[typing___Text] = None,
                cert_serial : typing___Optional[typing___Text] = None,
                build_version : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"app",b"app",u"availability_zone",b"availability_zone",u"build_version",b"build_version",u"cert_serial",b"cert_serial",u"datacenter",b"datacenter",u"environment",b"environment",u"hostname",b"hostname",u"spiffe_uri",b"spiffe_uri"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"app",b"app",u"availability_zone",b"availability_zone",u"build_version",b"build_version",u"cert_serial",b"cert_serial",u"datacenter",b"datacenter",u"environment",b"environment",u"hostname",b"hostname",u"sans",b"sans",u"spiffe_uri",b"spiffe_uri"]) -> None: ...
        type___AppNode = AppNode

        class HttpRequest(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            method: typing___Text = ...
            path: typing___Text = ...
            is_https: builtin___bool = ...

            def __init__(self,
                *,
                method : typing___Optional[typing___Text] = None,
                path : typing___Optional[typing___Text] = None,
                is_https : typing___Optional[builtin___bool] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"is_https",b"is_https",u"method",b"method",u"path",b"path"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"is_https",b"is_https",u"method",b"method",u"path",b"path"]) -> None: ...
        type___HttpRequest = HttpRequest

        class RpcRequest(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            service: typing___Text = ...
            method: typing___Text = ...

            def __init__(self,
                *,
                service : typing___Optional[typing___Text] = None,
                method : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"method",b"method",u"service",b"service"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"method",b"method",u"service",b"service"]) -> None: ...
        type___RpcRequest = RpcRequest

        class User(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            username: typing___Text = ...
            capabilities: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

            def __init__(self,
                *,
                username : typing___Optional[typing___Text] = None,
                capabilities : typing___Optional[typing___Iterable[typing___Text]] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"username",b"username"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"capabilities",b"capabilities",u"username",b"username"]) -> None: ...
        type___User = User

        class AclInfo(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            AppAuthorizationValue = typing___NewType('AppAuthorizationValue', builtin___int)
            type___AppAuthorizationValue = AppAuthorizationValue
            AppAuthorization: _AppAuthorization
            class _AppAuthorization(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                APP_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 0)
                APP_AUTHZ_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 1)
                SAME_APP = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 2)
                OU_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 3)
                SPIFFE_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 4)
                GCP = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 5)
                ALL_APPS = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 6)
            APP_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 0)
            APP_AUTHZ_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 1)
            SAME_APP = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 2)
            OU_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 3)
            SPIFFE_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 4)
            GCP = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 5)
            ALL_APPS = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue, 6)
            type___AppAuthorization = AppAuthorization

            UserAuthorizationValue = typing___NewType('UserAuthorizationValue', builtin___int)
            type___UserAuthorizationValue = UserAuthorizationValue
            UserAuthorization: _UserAuthorization
            class _UserAuthorization(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                USER_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 0)
                USER_AUTH_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 1)
                USER_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 2)
                ALL_USERS_ALLOWED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 3)
            USER_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 0)
            USER_AUTH_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 1)
            USER_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 2)
            ALL_USERS_ALLOWED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue, 3)
            type___UserAuthorization = UserAuthorization

            CapabilityAuthorizationValue = typing___NewType('CapabilityAuthorizationValue', builtin___int)
            type___CapabilityAuthorizationValue = CapabilityAuthorizationValue
            CapabilityAuthorization: _CapabilityAuthorization
            class _CapabilityAuthorization(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                CAP_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 0)
                CAP_AUTHZ_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 1)
                CAPABILITY_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 2)
                OWNER_CAPABILITY = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 3)
            CAP_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 0)
            CAP_AUTHZ_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 1)
            CAPABILITY_AUTHORIZED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 2)
            OWNER_CAPABILITY = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue, 3)
            type___CapabilityAuthorization = CapabilityAuthorization

            ConfigAuthorizationValue = typing___NewType('ConfigAuthorizationValue', builtin___int)
            type___ConfigAuthorizationValue = ConfigAuthorizationValue
            ConfigAuthorization: _ConfigAuthorization
            class _ConfigAuthorization(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                CONFIG_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 0)
                CONFIG_AUTHZ_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 1)
                CONFIG_PUBLIC = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 2)
                INSECURE_REMOTE_ALLOWED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 3)
                WHITELISTED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 4)
                TROGDOR_ANON_ALLOWED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 5)
            CONFIG_AUTHZ_DO_NOT_USE = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 0)
            CONFIG_AUTHZ_UNKNOWN = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 1)
            CONFIG_PUBLIC = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 2)
            INSECURE_REMOTE_ALLOWED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 3)
            WHITELISTED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 4)
            TROGDOR_ANON_ALLOWED = typing___cast(LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue, 5)
            type___ConfigAuthorization = ConfigAuthorization

            is_authorized: builtin___bool = ...
            app_authz: type___LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue = ...
            user_authz: type___LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue = ...
            cap_authz: type___LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue = ...
            config_authz: type___LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue = ...

            def __init__(self,
                *,
                is_authorized : typing___Optional[builtin___bool] = None,
                app_authz : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AclInfo.AppAuthorizationValue] = None,
                user_authz : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AclInfo.UserAuthorizationValue] = None,
                cap_authz : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AclInfo.CapabilityAuthorizationValue] = None,
                config_authz : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AclInfo.ConfigAuthorizationValue] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"app_authz",b"app_authz",u"authorization_reason",b"authorization_reason",u"cap_authz",b"cap_authz",u"config_authz",b"config_authz",u"is_authorized",b"is_authorized",u"user_authz",b"user_authz"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"app_authz",b"app_authz",u"authorization_reason",b"authorization_reason",u"cap_authz",b"cap_authz",u"config_authz",b"config_authz",u"is_authorized",b"is_authorized",u"user_authz",b"user_authz"]) -> None: ...
            def WhichOneof(self, oneof_group: typing_extensions___Literal[u"authorization_reason",b"authorization_reason"]) -> typing_extensions___Literal["app_authz","user_authz","cap_authz","config_authz"]: ...
        type___AclInfo = AclInfo

        type: type___LoggingEvent.AccessLoggingEvent.RequestTypeValue = ...
        path: typing___Text = ...
        status_code: builtin___int = ...
        duration_ms: builtin___int = ...
        deadline_duration_ms: builtin___int = ...
        request_timestamp: typing___Text = ...
        protobuf_full_name: typing___Text = ...
        json_schema_uri: typing___Text = ...
        log_type: type___LoggingEvent.AccessLoggingEvent.LogTypeValue = ...

        @property
        def trace(self) -> type___LoggingEvent.AccessLoggingEvent.Trace: ...

        @property
        def source(self) -> type___LoggingEvent.AccessLoggingEvent.AppNode: ...

        @property
        def destination(self) -> type___LoggingEvent.AccessLoggingEvent.AppNode: ...

        @property
        def http_request(self) -> type___LoggingEvent.AccessLoggingEvent.HttpRequest: ...

        @property
        def rpc_request(self) -> type___LoggingEvent.AccessLoggingEvent.RpcRequest: ...

        @property
        def user(self) -> type___LoggingEvent.AccessLoggingEvent.User: ...

        @property
        def acl_info(self) -> type___LoggingEvent.AccessLoggingEvent.AclInfo: ...

        def __init__(self,
            *,
            type : typing___Optional[type___LoggingEvent.AccessLoggingEvent.RequestTypeValue] = None,
            path : typing___Optional[typing___Text] = None,
            status_code : typing___Optional[builtin___int] = None,
            duration_ms : typing___Optional[builtin___int] = None,
            deadline_duration_ms : typing___Optional[builtin___int] = None,
            request_timestamp : typing___Optional[typing___Text] = None,
            trace : typing___Optional[type___LoggingEvent.AccessLoggingEvent.Trace] = None,
            source : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AppNode] = None,
            destination : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AppNode] = None,
            protobuf_full_name : typing___Optional[typing___Text] = None,
            json_schema_uri : typing___Optional[typing___Text] = None,
            log_type : typing___Optional[type___LoggingEvent.AccessLoggingEvent.LogTypeValue] = None,
            http_request : typing___Optional[type___LoggingEvent.AccessLoggingEvent.HttpRequest] = None,
            rpc_request : typing___Optional[type___LoggingEvent.AccessLoggingEvent.RpcRequest] = None,
            user : typing___Optional[type___LoggingEvent.AccessLoggingEvent.User] = None,
            acl_info : typing___Optional[type___LoggingEvent.AccessLoggingEvent.AclInfo] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"acl_info",b"acl_info",u"deadline_duration_ms",b"deadline_duration_ms",u"destination",b"destination",u"duration_ms",b"duration_ms",u"http_request",b"http_request",u"json_schema_uri",b"json_schema_uri",u"log_type",b"log_type",u"path",b"path",u"protobuf_full_name",b"protobuf_full_name",u"request",b"request",u"request_timestamp",b"request_timestamp",u"rpc_request",b"rpc_request",u"schema_ref",b"schema_ref",u"source",b"source",u"status_code",b"status_code",u"trace",b"trace",u"type",b"type",u"user",b"user"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"acl_info",b"acl_info",u"deadline_duration_ms",b"deadline_duration_ms",u"destination",b"destination",u"duration_ms",b"duration_ms",u"http_request",b"http_request",u"json_schema_uri",b"json_schema_uri",u"log_type",b"log_type",u"path",b"path",u"protobuf_full_name",b"protobuf_full_name",u"request",b"request",u"request_timestamp",b"request_timestamp",u"rpc_request",b"rpc_request",u"schema_ref",b"schema_ref",u"source",b"source",u"status_code",b"status_code",u"trace",b"trace",u"type",b"type",u"user",b"user"]) -> None: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"request",b"request"]) -> typing_extensions___Literal["http_request","rpc_request"]: ...
        @typing___overload
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"schema_ref",b"schema_ref"]) -> typing_extensions___Literal["protobuf_full_name","json_schema_uri"]: ...
    type___AccessLoggingEvent = AccessLoggingEvent


    @property
    def log4j_logging_event(self) -> type___LoggingEvent.Log4jLoggingEvent: ...

    @property
    def syslog_logging_event(self) -> type___LoggingEvent.SyslogLoggingEvent: ...

    @property
    def access_logging_event(self) -> type___LoggingEvent.AccessLoggingEvent: ...

    def __init__(self,
        *,
        log4j_logging_event : typing___Optional[type___LoggingEvent.Log4jLoggingEvent] = None,
        syslog_logging_event : typing___Optional[type___LoggingEvent.SyslogLoggingEvent] = None,
        access_logging_event : typing___Optional[type___LoggingEvent.AccessLoggingEvent] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"access_logging_event",b"access_logging_event",u"log4j_logging_event",b"log4j_logging_event",u"syslog_logging_event",b"syslog_logging_event"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"access_logging_event",b"access_logging_event",u"log4j_logging_event",b"log4j_logging_event",u"syslog_logging_event",b"syslog_logging_event"]) -> None: ...
type___LoggingEvent = LoggingEvent

class MDCPair(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    key: typing___Text = ...
    value: typing___Text = ...
    pretty_print: builtin___bool = ...

    def __init__(self,
        *,
        key : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        pretty_print : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"key",b"key",u"pretty_print",b"pretty_print",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"pretty_print",b"pretty_print",u"value",b"value"]) -> None: ...
type___MDCPair = MDCPair

class RpcEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def request(self) -> squareup___api___rpc___rpc_pb2___Request: ...

    @property
    def response(self) -> squareup___api___rpc___rpc_pb2___Response: ...

    def __init__(self,
        *,
        request : typing___Optional[squareup___api___rpc___rpc_pb2___Request] = None,
        response : typing___Optional[squareup___api___rpc___rpc_pb2___Response] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"request",b"request",u"response",b"response"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"request",b"request",u"response",b"response"]) -> None: ...
type___RpcEvent = RpcEvent
