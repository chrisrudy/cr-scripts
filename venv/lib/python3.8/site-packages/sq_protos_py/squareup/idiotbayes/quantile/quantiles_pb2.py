# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/idiotbayes/quantile/quantiles.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/idiotbayes/quantile/quantiles.proto',
  package='squareup.idiotbayes.quantile',
  syntax='proto2',
  serialized_options=_b('\n\'com.squareup.protos.idiotbayes.quantile'),
  serialized_pb=_b('\n,squareup/idiotbayes/quantile/quantiles.proto\x12\x1csquareup.idiotbayes.quantile\"E\n\x0cQuantileData\x12\t\n\x01p\x18\x01 \x01(\x01\x12\x0c\n\x04npos\x18\x02 \x03(\x01\x12\x0b\n\x03pos\x18\x03 \x03(\x03\x12\x0f\n\x07heights\x18\x04 \x03(\x01\"R\n\rMultiQuantile\x12\x41\n\rquantile_data\x18\x01 \x03(\x0b\x32*.squareup.idiotbayes.quantile.QuantileDataB)\n\'com.squareup.protos.idiotbayes.quantile')
)




_QUANTILEDATA = _descriptor.Descriptor(
  name='QuantileData',
  full_name='squareup.idiotbayes.quantile.QuantileData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='p', full_name='squareup.idiotbayes.quantile.QuantileData.p', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='npos', full_name='squareup.idiotbayes.quantile.QuantileData.npos', index=1,
      number=2, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pos', full_name='squareup.idiotbayes.quantile.QuantileData.pos', index=2,
      number=3, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='heights', full_name='squareup.idiotbayes.quantile.QuantileData.heights', index=3,
      number=4, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=78,
  serialized_end=147,
)


_MULTIQUANTILE = _descriptor.Descriptor(
  name='MultiQuantile',
  full_name='squareup.idiotbayes.quantile.MultiQuantile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='quantile_data', full_name='squareup.idiotbayes.quantile.MultiQuantile.quantile_data', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=149,
  serialized_end=231,
)

_MULTIQUANTILE.fields_by_name['quantile_data'].message_type = _QUANTILEDATA
DESCRIPTOR.message_types_by_name['QuantileData'] = _QUANTILEDATA
DESCRIPTOR.message_types_by_name['MultiQuantile'] = _MULTIQUANTILE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

QuantileData = _reflection.GeneratedProtocolMessageType('QuantileData', (_message.Message,), {
  'DESCRIPTOR' : _QUANTILEDATA,
  '__module__' : 'squareup.idiotbayes.quantile.quantiles_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.quantile.QuantileData)
  })
_sym_db.RegisterMessage(QuantileData)

MultiQuantile = _reflection.GeneratedProtocolMessageType('MultiQuantile', (_message.Message,), {
  'DESCRIPTOR' : _MULTIQUANTILE,
  '__module__' : 'squareup.idiotbayes.quantile.quantiles_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.quantile.MultiQuantile)
  })
_sym_db.RegisterMessage(MultiQuantile)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
