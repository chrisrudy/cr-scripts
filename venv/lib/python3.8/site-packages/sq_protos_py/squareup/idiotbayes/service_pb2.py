# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/idiotbayes/service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.common import validation_pb2 as squareup_dot_common_dot_validation__pb2
from sq_protos_py.squareup.sake import options_pb2 as squareup_dot_sake_dot_options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/idiotbayes/service.proto',
  package='squareup.idiotbayes.api',
  syntax='proto2',
  serialized_options=_b('\n\"com.squareup.protos.idiotbayes.api\210\001\001'),
  serialized_pb=_b('\n!squareup/idiotbayes/service.proto\x12\x17squareup.idiotbayes.api\x1a squareup/common/validation.proto\x1a\x1bsquareup/sake/options.proto\"r\n\x14\x45ventSpaceDefinition\x12+\n\x05total\x18\x01 \x01(\x0e\x32\x1c.squareup.idiotbayes.api.Tag\x12-\n\x07\x63ounted\x18\x02 \x01(\x0e\x32\x1c.squareup.idiotbayes.api.Tag\"\xbb\x01\n\x14PropertyCountRequest\x12\x1d\n\x0fmessage_type_id\x18\x01 \x01(\x03\x42\x04\xf0\xf1\n\x01\x12\x17\n\rmessage_bytes\x18\x02 \x01(\x0cH\x00\x12\x0f\n\x05token\x18\x04 \x01(\tH\x00\x12S\n\x16\x65vent_space_definition\x18\x03 \x01(\x0b\x32-.squareup.idiotbayes.api.EventSpaceDefinitionB\x04\xf0\xf1\n\x01\x42\x05\n\x03key\"R\n\x10\x46riendlyProperty\x12\x17\n\x0f\x66ield_name_path\x18\x01 \x01(\t\x12\x13\n\x0b\x66ield_value\x18\x02 \x01(\t\x12\x10\n\x08ingested\x18\x03 \x01(\x08\"\x83\x01\n\nTallyCount\x12)\n\x03tag\x18\x01 \x01(\x0e\x32\x1c.squareup.idiotbayes.api.Tag\x12;\n\x08property\x18\x02 \x01(\x0b\x32).squareup.idiotbayes.api.FriendlyProperty\x12\r\n\x05\x63ount\x18\x03 \x01(\x03\"D\n\x08TagCount\x12)\n\x03tag\x18\x01 \x01(\x0e\x32\x1c.squareup.idiotbayes.api.Tag\x12\r\n\x05\x63ount\x18\x02 \x01(\x03\"Q\n\x15PropertyCountResponse\x12\x38\n\x0btally_count\x18\x01 \x03(\x0b\x32#.squareup.idiotbayes.api.TallyCount\"\x9d\x01\n\x13PropertyProbability\x12;\n\x08property\x18\x01 \x01(\x0b\x32).squareup.idiotbayes.api.FriendlyProperty\x12\x13\n\x0bprobability\x18\x02 \x01(\x01\x12\x34\n\ttag_count\x18\x03 \x03(\x0b\x32!.squareup.idiotbayes.api.TagCount\"\xc2\x01\n\x1b\x43\x61lculateProbabilityRequest\x12\x1d\n\x0fmessage_type_id\x18\x01 \x01(\x03\x42\x04\xf0\xf1\n\x01\x12\x17\n\rmessage_bytes\x18\x02 \x01(\x0cH\x00\x12\x0f\n\x05token\x18\x04 \x01(\tH\x00\x12S\n\x16\x65vent_space_definition\x18\x03 \x01(\x0b\x32-.squareup.idiotbayes.api.EventSpaceDefinitionB\x04\xf0\xf1\n\x01\x42\x05\n\x03key\"\xad\x01\n\x1c\x43\x61lculateProbabilityResponse\x12\r\n\x05score\x18\x01 \x01(\x01\x12\x41\n\x0bprobability\x18\x02 \x03(\x0b\x32,.squareup.idiotbayes.api.PropertyProbability\x12;\n\x08\x65xcluded\x18\x03 \x03(\x0b\x32).squareup.idiotbayes.api.FriendlyProperty*f\n\x03Tag\x12\x10\n\x0cT_DO_NOT_USE\x10\x00\x12\x10\n\x0c\x41LL_OBSERVED\x10\x01\x12\r\n\tSUSPECTED\x10\x02\x12\x15\n\x11\x43\x41SE_DECISION_BAD\x10\x03\x12\x15\n\x11\x45VENTUALLY_FROZEN\x10\x04\x32\x8d\x02\n\x11IdiotBayesService\x12p\n\rPropertyCount\x12-.squareup.idiotbayes.api.PropertyCountRequest\x1a..squareup.idiotbayes.api.PropertyCountResponse\"\x00\x12\x85\x01\n\x14\x43\x61lculateProbability\x12\x34.squareup.idiotbayes.api.CalculateProbabilityRequest\x1a\x35.squareup.idiotbayes.api.CalculateProbabilityResponse\"\x00\x42\'\n\"com.squareup.protos.idiotbayes.api\x88\x01\x01')
  ,
  dependencies=[squareup_dot_common_dot_validation__pb2.DESCRIPTOR,squareup_dot_sake_dot_options__pb2.DESCRIPTOR,])

_TAG = _descriptor.EnumDescriptor(
  name='Tag',
  full_name='squareup.idiotbayes.api.Tag',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='T_DO_NOT_USE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALL_OBSERVED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUSPECTED', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CASE_DECISION_BAD', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EVENTUALLY_FROZEN', index=4, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=1335,
  serialized_end=1437,
)
_sym_db.RegisterEnumDescriptor(_TAG)

Tag = enum_type_wrapper.EnumTypeWrapper(_TAG)
T_DO_NOT_USE = 0
ALL_OBSERVED = 1
SUSPECTED = 2
CASE_DECISION_BAD = 3
EVENTUALLY_FROZEN = 4



_EVENTSPACEDEFINITION = _descriptor.Descriptor(
  name='EventSpaceDefinition',
  full_name='squareup.idiotbayes.api.EventSpaceDefinition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='total', full_name='squareup.idiotbayes.api.EventSpaceDefinition.total', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='counted', full_name='squareup.idiotbayes.api.EventSpaceDefinition.counted', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=125,
  serialized_end=239,
)


_PROPERTYCOUNTREQUEST = _descriptor.Descriptor(
  name='PropertyCountRequest',
  full_name='squareup.idiotbayes.api.PropertyCountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message_type_id', full_name='squareup.idiotbayes.api.PropertyCountRequest.message_type_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message_bytes', full_name='squareup.idiotbayes.api.PropertyCountRequest.message_bytes', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='squareup.idiotbayes.api.PropertyCountRequest.token', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='event_space_definition', full_name='squareup.idiotbayes.api.PropertyCountRequest.event_space_definition', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='key', full_name='squareup.idiotbayes.api.PropertyCountRequest.key',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=242,
  serialized_end=429,
)


_FRIENDLYPROPERTY = _descriptor.Descriptor(
  name='FriendlyProperty',
  full_name='squareup.idiotbayes.api.FriendlyProperty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='field_name_path', full_name='squareup.idiotbayes.api.FriendlyProperty.field_name_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='field_value', full_name='squareup.idiotbayes.api.FriendlyProperty.field_value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ingested', full_name='squareup.idiotbayes.api.FriendlyProperty.ingested', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=431,
  serialized_end=513,
)


_TALLYCOUNT = _descriptor.Descriptor(
  name='TallyCount',
  full_name='squareup.idiotbayes.api.TallyCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tag', full_name='squareup.idiotbayes.api.TallyCount.tag', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='property', full_name='squareup.idiotbayes.api.TallyCount.property', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='squareup.idiotbayes.api.TallyCount.count', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=516,
  serialized_end=647,
)


_TAGCOUNT = _descriptor.Descriptor(
  name='TagCount',
  full_name='squareup.idiotbayes.api.TagCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tag', full_name='squareup.idiotbayes.api.TagCount.tag', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='count', full_name='squareup.idiotbayes.api.TagCount.count', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=649,
  serialized_end=717,
)


_PROPERTYCOUNTRESPONSE = _descriptor.Descriptor(
  name='PropertyCountResponse',
  full_name='squareup.idiotbayes.api.PropertyCountResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tally_count', full_name='squareup.idiotbayes.api.PropertyCountResponse.tally_count', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=719,
  serialized_end=800,
)


_PROPERTYPROBABILITY = _descriptor.Descriptor(
  name='PropertyProbability',
  full_name='squareup.idiotbayes.api.PropertyProbability',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='property', full_name='squareup.idiotbayes.api.PropertyProbability.property', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='probability', full_name='squareup.idiotbayes.api.PropertyProbability.probability', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag_count', full_name='squareup.idiotbayes.api.PropertyProbability.tag_count', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=803,
  serialized_end=960,
)


_CALCULATEPROBABILITYREQUEST = _descriptor.Descriptor(
  name='CalculateProbabilityRequest',
  full_name='squareup.idiotbayes.api.CalculateProbabilityRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message_type_id', full_name='squareup.idiotbayes.api.CalculateProbabilityRequest.message_type_id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message_bytes', full_name='squareup.idiotbayes.api.CalculateProbabilityRequest.message_bytes', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='token', full_name='squareup.idiotbayes.api.CalculateProbabilityRequest.token', index=2,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='event_space_definition', full_name='squareup.idiotbayes.api.CalculateProbabilityRequest.event_space_definition', index=3,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='key', full_name='squareup.idiotbayes.api.CalculateProbabilityRequest.key',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=963,
  serialized_end=1157,
)


_CALCULATEPROBABILITYRESPONSE = _descriptor.Descriptor(
  name='CalculateProbabilityResponse',
  full_name='squareup.idiotbayes.api.CalculateProbabilityResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='score', full_name='squareup.idiotbayes.api.CalculateProbabilityResponse.score', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='probability', full_name='squareup.idiotbayes.api.CalculateProbabilityResponse.probability', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='excluded', full_name='squareup.idiotbayes.api.CalculateProbabilityResponse.excluded', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1160,
  serialized_end=1333,
)

_EVENTSPACEDEFINITION.fields_by_name['total'].enum_type = _TAG
_EVENTSPACEDEFINITION.fields_by_name['counted'].enum_type = _TAG
_PROPERTYCOUNTREQUEST.fields_by_name['event_space_definition'].message_type = _EVENTSPACEDEFINITION
_PROPERTYCOUNTREQUEST.oneofs_by_name['key'].fields.append(
  _PROPERTYCOUNTREQUEST.fields_by_name['message_bytes'])
_PROPERTYCOUNTREQUEST.fields_by_name['message_bytes'].containing_oneof = _PROPERTYCOUNTREQUEST.oneofs_by_name['key']
_PROPERTYCOUNTREQUEST.oneofs_by_name['key'].fields.append(
  _PROPERTYCOUNTREQUEST.fields_by_name['token'])
_PROPERTYCOUNTREQUEST.fields_by_name['token'].containing_oneof = _PROPERTYCOUNTREQUEST.oneofs_by_name['key']
_TALLYCOUNT.fields_by_name['tag'].enum_type = _TAG
_TALLYCOUNT.fields_by_name['property'].message_type = _FRIENDLYPROPERTY
_TAGCOUNT.fields_by_name['tag'].enum_type = _TAG
_PROPERTYCOUNTRESPONSE.fields_by_name['tally_count'].message_type = _TALLYCOUNT
_PROPERTYPROBABILITY.fields_by_name['property'].message_type = _FRIENDLYPROPERTY
_PROPERTYPROBABILITY.fields_by_name['tag_count'].message_type = _TAGCOUNT
_CALCULATEPROBABILITYREQUEST.fields_by_name['event_space_definition'].message_type = _EVENTSPACEDEFINITION
_CALCULATEPROBABILITYREQUEST.oneofs_by_name['key'].fields.append(
  _CALCULATEPROBABILITYREQUEST.fields_by_name['message_bytes'])
_CALCULATEPROBABILITYREQUEST.fields_by_name['message_bytes'].containing_oneof = _CALCULATEPROBABILITYREQUEST.oneofs_by_name['key']
_CALCULATEPROBABILITYREQUEST.oneofs_by_name['key'].fields.append(
  _CALCULATEPROBABILITYREQUEST.fields_by_name['token'])
_CALCULATEPROBABILITYREQUEST.fields_by_name['token'].containing_oneof = _CALCULATEPROBABILITYREQUEST.oneofs_by_name['key']
_CALCULATEPROBABILITYRESPONSE.fields_by_name['probability'].message_type = _PROPERTYPROBABILITY
_CALCULATEPROBABILITYRESPONSE.fields_by_name['excluded'].message_type = _FRIENDLYPROPERTY
DESCRIPTOR.message_types_by_name['EventSpaceDefinition'] = _EVENTSPACEDEFINITION
DESCRIPTOR.message_types_by_name['PropertyCountRequest'] = _PROPERTYCOUNTREQUEST
DESCRIPTOR.message_types_by_name['FriendlyProperty'] = _FRIENDLYPROPERTY
DESCRIPTOR.message_types_by_name['TallyCount'] = _TALLYCOUNT
DESCRIPTOR.message_types_by_name['TagCount'] = _TAGCOUNT
DESCRIPTOR.message_types_by_name['PropertyCountResponse'] = _PROPERTYCOUNTRESPONSE
DESCRIPTOR.message_types_by_name['PropertyProbability'] = _PROPERTYPROBABILITY
DESCRIPTOR.message_types_by_name['CalculateProbabilityRequest'] = _CALCULATEPROBABILITYREQUEST
DESCRIPTOR.message_types_by_name['CalculateProbabilityResponse'] = _CALCULATEPROBABILITYRESPONSE
DESCRIPTOR.enum_types_by_name['Tag'] = _TAG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EventSpaceDefinition = _reflection.GeneratedProtocolMessageType('EventSpaceDefinition', (_message.Message,), {
  'DESCRIPTOR' : _EVENTSPACEDEFINITION,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.EventSpaceDefinition)
  })
_sym_db.RegisterMessage(EventSpaceDefinition)

PropertyCountRequest = _reflection.GeneratedProtocolMessageType('PropertyCountRequest', (_message.Message,), {
  'DESCRIPTOR' : _PROPERTYCOUNTREQUEST,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.PropertyCountRequest)
  })
_sym_db.RegisterMessage(PropertyCountRequest)

FriendlyProperty = _reflection.GeneratedProtocolMessageType('FriendlyProperty', (_message.Message,), {
  'DESCRIPTOR' : _FRIENDLYPROPERTY,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.FriendlyProperty)
  })
_sym_db.RegisterMessage(FriendlyProperty)

TallyCount = _reflection.GeneratedProtocolMessageType('TallyCount', (_message.Message,), {
  'DESCRIPTOR' : _TALLYCOUNT,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.TallyCount)
  })
_sym_db.RegisterMessage(TallyCount)

TagCount = _reflection.GeneratedProtocolMessageType('TagCount', (_message.Message,), {
  'DESCRIPTOR' : _TAGCOUNT,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.TagCount)
  })
_sym_db.RegisterMessage(TagCount)

PropertyCountResponse = _reflection.GeneratedProtocolMessageType('PropertyCountResponse', (_message.Message,), {
  'DESCRIPTOR' : _PROPERTYCOUNTRESPONSE,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.PropertyCountResponse)
  })
_sym_db.RegisterMessage(PropertyCountResponse)

PropertyProbability = _reflection.GeneratedProtocolMessageType('PropertyProbability', (_message.Message,), {
  'DESCRIPTOR' : _PROPERTYPROBABILITY,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.PropertyProbability)
  })
_sym_db.RegisterMessage(PropertyProbability)

CalculateProbabilityRequest = _reflection.GeneratedProtocolMessageType('CalculateProbabilityRequest', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATEPROBABILITYREQUEST,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.CalculateProbabilityRequest)
  })
_sym_db.RegisterMessage(CalculateProbabilityRequest)

CalculateProbabilityResponse = _reflection.GeneratedProtocolMessageType('CalculateProbabilityResponse', (_message.Message,), {
  'DESCRIPTOR' : _CALCULATEPROBABILITYRESPONSE,
  '__module__' : 'squareup.idiotbayes.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.idiotbayes.api.CalculateProbabilityResponse)
  })
_sym_db.RegisterMessage(CalculateProbabilityResponse)


DESCRIPTOR._options = None
_PROPERTYCOUNTREQUEST.fields_by_name['message_type_id']._options = None
_PROPERTYCOUNTREQUEST.fields_by_name['event_space_definition']._options = None
_CALCULATEPROBABILITYREQUEST.fields_by_name['message_type_id']._options = None
_CALCULATEPROBABILITYREQUEST.fields_by_name['event_space_definition']._options = None

_IDIOTBAYESSERVICE = _descriptor.ServiceDescriptor(
  name='IdiotBayesService',
  full_name='squareup.idiotbayes.api.IdiotBayesService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1440,
  serialized_end=1709,
  methods=[
  _descriptor.MethodDescriptor(
    name='PropertyCount',
    full_name='squareup.idiotbayes.api.IdiotBayesService.PropertyCount',
    index=0,
    containing_service=None,
    input_type=_PROPERTYCOUNTREQUEST,
    output_type=_PROPERTYCOUNTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CalculateProbability',
    full_name='squareup.idiotbayes.api.IdiotBayesService.CalculateProbability',
    index=1,
    containing_service=None,
    input_type=_CALCULATEPROBABILITYREQUEST,
    output_type=_CALCULATEPROBABILITYRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IDIOTBAYESSERVICE)

DESCRIPTOR.services_by_name['IdiotBayesService'] = _IDIOTBAYESSERVICE

# @@protoc_insertion_point(module_scope)
