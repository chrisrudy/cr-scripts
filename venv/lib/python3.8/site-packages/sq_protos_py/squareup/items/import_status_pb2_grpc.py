# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.items import import_status_pb2 as squareup_dot_items_dot_import__status__pb2


class ImportStatusServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/squareup.items.ImportStatusService/Create',
                request_serializer=squareup_dot_items_dot_import__status__pb2.CreateRequest.SerializeToString,
                response_deserializer=squareup_dot_items_dot_import__status__pb2.CreateResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/squareup.items.ImportStatusService/Get',
                request_serializer=squareup_dot_items_dot_import__status__pb2.GetRequest.SerializeToString,
                response_deserializer=squareup_dot_items_dot_import__status__pb2.GetResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/squareup.items.ImportStatusService/Update',
                request_serializer=squareup_dot_items_dot_import__status__pb2.UpdateRequest.SerializeToString,
                response_deserializer=squareup_dot_items_dot_import__status__pb2.UpdateResponse.FromString,
                )


class ImportStatusServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """Create makes a new import status record.
        The returned import_status has a status_token which should be used to poll GetByStatusToken for changes.
        idempotency_key should be set to a random value by the client to reduce failure risk.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """GetRequest.merchant_token is required
        GetRequest.status_token is optional
        when omitted: returns the most recently updated import status for the given merchant token.
        when provided: returns the import status uniquely identified by the given merchant and status tokens.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Update modifies an existing import status (identified by status_token).
        idempotency_key should be set to a random value by the client to reduce failure risk.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ImportStatusServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=squareup_dot_items_dot_import__status__pb2.CreateRequest.FromString,
                    response_serializer=squareup_dot_items_dot_import__status__pb2.CreateResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=squareup_dot_items_dot_import__status__pb2.GetRequest.FromString,
                    response_serializer=squareup_dot_items_dot_import__status__pb2.GetResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=squareup_dot_items_dot_import__status__pb2.UpdateRequest.FromString,
                    response_serializer=squareup_dot_items_dot_import__status__pb2.UpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.items.ImportStatusService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ImportStatusService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.ImportStatusService/Create',
            squareup_dot_items_dot_import__status__pb2.CreateRequest.SerializeToString,
            squareup_dot_items_dot_import__status__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.ImportStatusService/Get',
            squareup_dot_items_dot_import__status__pb2.GetRequest.SerializeToString,
            squareup_dot_items_dot_import__status__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.ImportStatusService/Update',
            squareup_dot_items_dot_import__status__pb2.UpdateRequest.SerializeToString,
            squareup_dot_items_dot_import__status__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
