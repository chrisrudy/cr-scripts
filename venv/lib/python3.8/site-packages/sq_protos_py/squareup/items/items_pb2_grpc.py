# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.api.sync import sync_pb2 as squareup_dot_api_dot_sync_dot_sync__pb2
from sq_protos_py.squareup.inventory import adjustment_pb2 as squareup_dot_inventory_dot_adjustment__pb2
from sq_protos_py.squareup.items import items_pb2 as squareup_dot_items_dot_items__pb2


class MerchantItemsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/squareup.api.items.MerchantItems/Get',
                request_serializer=squareup_dot_api_dot_sync_dot_sync__pb2.GetRequest.SerializeToString,
                response_deserializer=squareup_dot_api_dot_sync_dot_sync__pb2.GetResponse.FromString,
                )


class MerchantItemsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """
        Same as sync Api but only supports get requests and only returns
        objects with PUBLIC or PUBLIC_ONLY visibility.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MerchantItemsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=squareup_dot_api_dot_sync_dot_sync__pb2.GetRequest.FromString,
                    response_serializer=squareup_dot_api_dot_sync_dot_sync__pb2.GetResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.api.items.MerchantItems', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MerchantItems(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.api.items.MerchantItems/Get',
            squareup_dot_api_dot_sync_dot_sync__pb2.GetRequest.SerializeToString,
            squareup_dot_api_dot_sync_dot_sync__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InventoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Adjust = channel.unary_unary(
                '/squareup.api.items.InventoryService/Adjust',
                request_serializer=squareup_dot_inventory_dot_adjustment__pb2.InventoryAdjustment.SerializeToString,
                response_deserializer=squareup_dot_items_dot_items__pb2.InventoryAdjustResponse.FromString,
                )


class InventoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Adjust(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Adjust': grpc.unary_unary_rpc_method_handler(
                    servicer.Adjust,
                    request_deserializer=squareup_dot_inventory_dot_adjustment__pb2.InventoryAdjustment.FromString,
                    response_serializer=squareup_dot_items_dot_items__pb2.InventoryAdjustResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.api.items.InventoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Adjust(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.api.items.InventoryService/Adjust',
            squareup_dot_inventory_dot_adjustment__pb2.InventoryAdjustment.SerializeToString,
            squareup_dot_items_dot_items__pb2.InventoryAdjustResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PromoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TryToUsePromo = channel.unary_unary(
                '/squareup.api.items.PromoService/TryToUsePromo',
                request_serializer=squareup_dot_items_dot_items__pb2.TryToUsePromoRequest.SerializeToString,
                response_deserializer=squareup_dot_items_dot_items__pb2.TryToUsePromoResponse.FromString,
                )


class PromoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TryToUsePromo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PromoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TryToUsePromo': grpc.unary_unary_rpc_method_handler(
                    servicer.TryToUsePromo,
                    request_deserializer=squareup_dot_items_dot_items__pb2.TryToUsePromoRequest.FromString,
                    response_serializer=squareup_dot_items_dot_items__pb2.TryToUsePromoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.api.items.PromoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PromoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TryToUsePromo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.api.items.PromoService/TryToUsePromo',
            squareup_dot_items_dot_items__pb2.TryToUsePromoRequest.SerializeToString,
            squareup_dot_items_dot_items__pb2.TryToUsePromoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
