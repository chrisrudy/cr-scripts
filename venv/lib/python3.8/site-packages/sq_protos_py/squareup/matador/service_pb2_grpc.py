# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.matador import bins_pb2 as squareup_dot_matador_dot_bins__pb2
from sq_protos_py.squareup.matador import service_pb2 as squareup_dot_matador_dot_service__pb2


class MatadorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChargebacksForMerchant = channel.unary_unary(
                '/squareup.matador.service.MatadorService/ChargebacksForMerchant',
                request_serializer=squareup_dot_matador_dot_service__pb2.ChargebacksForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_matador_dot_service__pb2.ChargebacksResponse.FromString,
                )
        self.ChargebacksForPaymentCard = channel.unary_unary(
                '/squareup.matador.service.MatadorService/ChargebacksForPaymentCard',
                request_serializer=squareup_dot_matador_dot_service__pb2.ChargebacksForPaymentCardRequest.SerializeToString,
                response_deserializer=squareup_dot_matador_dot_service__pb2.ChargebacksResponse.FromString,
                )
        self.ChargebacksCountForBin = channel.unary_unary(
                '/squareup.matador.service.MatadorService/ChargebacksCountForBin',
                request_serializer=squareup_dot_matador_dot_bins__pb2.ChargebacksCountForBinRequest.SerializeToString,
                response_deserializer=squareup_dot_matador_dot_bins__pb2.ChargebacksCountResponse.FromString,
                )


class MatadorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChargebacksForMerchant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChargebacksForPaymentCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChargebacksCountForBin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MatadorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChargebacksForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.ChargebacksForMerchant,
                    request_deserializer=squareup_dot_matador_dot_service__pb2.ChargebacksForMerchantRequest.FromString,
                    response_serializer=squareup_dot_matador_dot_service__pb2.ChargebacksResponse.SerializeToString,
            ),
            'ChargebacksForPaymentCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ChargebacksForPaymentCard,
                    request_deserializer=squareup_dot_matador_dot_service__pb2.ChargebacksForPaymentCardRequest.FromString,
                    response_serializer=squareup_dot_matador_dot_service__pb2.ChargebacksResponse.SerializeToString,
            ),
            'ChargebacksCountForBin': grpc.unary_unary_rpc_method_handler(
                    servicer.ChargebacksCountForBin,
                    request_deserializer=squareup_dot_matador_dot_bins__pb2.ChargebacksCountForBinRequest.FromString,
                    response_serializer=squareup_dot_matador_dot_bins__pb2.ChargebacksCountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.matador.service.MatadorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MatadorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChargebacksForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.matador.service.MatadorService/ChargebacksForMerchant',
            squareup_dot_matador_dot_service__pb2.ChargebacksForMerchantRequest.SerializeToString,
            squareup_dot_matador_dot_service__pb2.ChargebacksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChargebacksForPaymentCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.matador.service.MatadorService/ChargebacksForPaymentCard',
            squareup_dot_matador_dot_service__pb2.ChargebacksForPaymentCardRequest.SerializeToString,
            squareup_dot_matador_dot_service__pb2.ChargebacksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChargebacksCountForBin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.matador.service.MatadorService/ChargebacksCountForBin',
            squareup_dot_matador_dot_bins__pb2.ChargebacksCountForBinRequest.SerializeToString,
            squareup_dot_matador_dot_bins__pb2.ChargebacksCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
