# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class RecurringSchedule(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    FrequencyValue = typing___NewType('FrequencyValue', builtin___int)
    type___FrequencyValue = FrequencyValue
    Frequency: _Frequency
    class _Frequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RecurringSchedule.FrequencyValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        EVERY_WEEK = typing___cast(RecurringSchedule.FrequencyValue, 1)
        EVERY_TWO_WEEKS = typing___cast(RecurringSchedule.FrequencyValue, 2)
        EVERY_MONTH = typing___cast(RecurringSchedule.FrequencyValue, 3)
        EVERY_DAY = typing___cast(RecurringSchedule.FrequencyValue, 4)
    EVERY_WEEK = typing___cast(RecurringSchedule.FrequencyValue, 1)
    EVERY_TWO_WEEKS = typing___cast(RecurringSchedule.FrequencyValue, 2)
    EVERY_MONTH = typing___cast(RecurringSchedule.FrequencyValue, 3)
    EVERY_DAY = typing___cast(RecurringSchedule.FrequencyValue, 4)
    type___Frequency = Frequency

    frequency: type___RecurringSchedule.FrequencyValue = ...
    days_of_period: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...
    timezone: typing___Text = ...
    time_of_day: builtin___int = ...

    def __init__(self,
        *,
        frequency : typing___Optional[type___RecurringSchedule.FrequencyValue] = None,
        days_of_period : typing___Optional[typing___Iterable[builtin___int]] = None,
        timezone : typing___Optional[typing___Text] = None,
        time_of_day : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"frequency",b"frequency",u"time_of_day",b"time_of_day",u"timezone",b"timezone"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"days_of_period",b"days_of_period",u"frequency",b"frequency",u"time_of_day",b"time_of_day",u"timezone",b"timezone"]) -> None: ...
type___RecurringSchedule = RecurringSchedule

class ScheduledTransactionPreference(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ScheduledTransactionPreference.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CASH_IN = typing___cast(ScheduledTransactionPreference.TypeValue, 1)
        BTC_BUY = typing___cast(ScheduledTransactionPreference.TypeValue, 2)
        EQUITY_BUY = typing___cast(ScheduledTransactionPreference.TypeValue, 3)
    CASH_IN = typing___cast(ScheduledTransactionPreference.TypeValue, 1)
    BTC_BUY = typing___cast(ScheduledTransactionPreference.TypeValue, 2)
    EQUITY_BUY = typing___cast(ScheduledTransactionPreference.TypeValue, 3)
    type___Type = Type

    enabled: builtin___bool = ...
    type: type___ScheduledTransactionPreference.TypeValue = ...
    next_reload_at: builtin___int = ...
    investment_entity_token: typing___Text = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def recurring_schedule(self) -> type___RecurringSchedule: ...

    def __init__(self,
        *,
        enabled : typing___Optional[builtin___bool] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        recurring_schedule : typing___Optional[type___RecurringSchedule] = None,
        type : typing___Optional[type___ScheduledTransactionPreference.TypeValue] = None,
        next_reload_at : typing___Optional[builtin___int] = None,
        investment_entity_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"enabled",b"enabled",u"investment_entity_token",b"investment_entity_token",u"next_reload_at",b"next_reload_at",u"recurring_schedule",b"recurring_schedule",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"enabled",b"enabled",u"investment_entity_token",b"investment_entity_token",u"next_reload_at",b"next_reload_at",u"recurring_schedule",b"recurring_schedule",u"type",b"type"]) -> None: ...
type___ScheduledTransactionPreference = ScheduledTransactionPreference

class MergeCustomers(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    source_customer_token: typing___Text = ...
    target_customer_token: typing___Text = ...

    def __init__(self,
        *,
        source_customer_token : typing___Optional[typing___Text] = None,
        target_customer_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"source_customer_token",b"source_customer_token",u"target_customer_token",b"target_customer_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"source_customer_token",b"source_customer_token",u"target_customer_token",b"target_customer_token"]) -> None: ...
type___MergeCustomers = MergeCustomers
