# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.keyprovisioner import service_pb2 as squareup_dot_keyprovisioner_dot_service__pb2


class KeyprovisionerStub(object):
    """TODO(dge): This was the original service name, but we want to rename it to follow conventions.
    Remove this once we confirm that Keybuffer doesn't depend on this particular name.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDiffBetweenEpochs = channel.unary_unary(
                '/squareup.keyprovisioner.service.Keyprovisioner/GetDiffBetweenEpochs',
                request_serializer=squareup_dot_keyprovisioner_dot_service__pb2.GetDiffBetweenEpochsRequest.SerializeToString,
                response_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.EpochDiff.FromString,
                )
        self.GetProvisionableByUUID = channel.unary_unary(
                '/squareup.keyprovisioner.service.Keyprovisioner/GetProvisionableByUUID',
                request_serializer=squareup_dot_keyprovisioner_dot_service__pb2.GetProvisionableByUUIDRequest.SerializeToString,
                response_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.Provisionable.FromString,
                )
        self.PostProvisioningResults = channel.unary_unary(
                '/squareup.keyprovisioner.service.Keyprovisioner/PostProvisioningResults',
                request_serializer=squareup_dot_keyprovisioner_dot_service__pb2.PostProvisioningResultsRequest.SerializeToString,
                response_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.EmptyResponse.FromString,
                )


class KeyprovisionerServicer(object):
    """TODO(dge): This was the original service name, but we want to rename it to follow conventions.
    Remove this once we confirm that Keybuffer doesn't depend on this particular name.
    """

    def GetDiffBetweenEpochs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProvisionableByUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostProvisioningResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyprovisionerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDiffBetweenEpochs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiffBetweenEpochs,
                    request_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.GetDiffBetweenEpochsRequest.FromString,
                    response_serializer=squareup_dot_keyprovisioner_dot_service__pb2.EpochDiff.SerializeToString,
            ),
            'GetProvisionableByUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProvisionableByUUID,
                    request_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.GetProvisionableByUUIDRequest.FromString,
                    response_serializer=squareup_dot_keyprovisioner_dot_service__pb2.Provisionable.SerializeToString,
            ),
            'PostProvisioningResults': grpc.unary_unary_rpc_method_handler(
                    servicer.PostProvisioningResults,
                    request_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.PostProvisioningResultsRequest.FromString,
                    response_serializer=squareup_dot_keyprovisioner_dot_service__pb2.EmptyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.keyprovisioner.service.Keyprovisioner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Keyprovisioner(object):
    """TODO(dge): This was the original service name, but we want to rename it to follow conventions.
    Remove this once we confirm that Keybuffer doesn't depend on this particular name.
    """

    @staticmethod
    def GetDiffBetweenEpochs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.keyprovisioner.service.Keyprovisioner/GetDiffBetweenEpochs',
            squareup_dot_keyprovisioner_dot_service__pb2.GetDiffBetweenEpochsRequest.SerializeToString,
            squareup_dot_keyprovisioner_dot_service__pb2.EpochDiff.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProvisionableByUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.keyprovisioner.service.Keyprovisioner/GetProvisionableByUUID',
            squareup_dot_keyprovisioner_dot_service__pb2.GetProvisionableByUUIDRequest.SerializeToString,
            squareup_dot_keyprovisioner_dot_service__pb2.Provisionable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostProvisioningResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.keyprovisioner.service.Keyprovisioner/PostProvisioningResults',
            squareup_dot_keyprovisioner_dot_service__pb2.PostProvisioningResultsRequest.SerializeToString,
            squareup_dot_keyprovisioner_dot_service__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class KeyprovisionerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDiffBetweenEpochs = channel.unary_unary(
                '/squareup.keyprovisioner.service.KeyprovisionerService/GetDiffBetweenEpochs',
                request_serializer=squareup_dot_keyprovisioner_dot_service__pb2.GetDiffBetweenEpochsRequest.SerializeToString,
                response_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.EpochDiff.FromString,
                )
        self.GetProvisionableByUUID = channel.unary_unary(
                '/squareup.keyprovisioner.service.KeyprovisionerService/GetProvisionableByUUID',
                request_serializer=squareup_dot_keyprovisioner_dot_service__pb2.GetProvisionableByUUIDRequest.SerializeToString,
                response_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.Provisionable.FromString,
                )
        self.PostProvisioningResults = channel.unary_unary(
                '/squareup.keyprovisioner.service.KeyprovisionerService/PostProvisioningResults',
                request_serializer=squareup_dot_keyprovisioner_dot_service__pb2.PostProvisioningResultsRequest.SerializeToString,
                response_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.EmptyResponse.FromString,
                )


class KeyprovisionerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDiffBetweenEpochs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProvisionableByUUID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostProvisioningResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KeyprovisionerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDiffBetweenEpochs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiffBetweenEpochs,
                    request_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.GetDiffBetweenEpochsRequest.FromString,
                    response_serializer=squareup_dot_keyprovisioner_dot_service__pb2.EpochDiff.SerializeToString,
            ),
            'GetProvisionableByUUID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProvisionableByUUID,
                    request_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.GetProvisionableByUUIDRequest.FromString,
                    response_serializer=squareup_dot_keyprovisioner_dot_service__pb2.Provisionable.SerializeToString,
            ),
            'PostProvisioningResults': grpc.unary_unary_rpc_method_handler(
                    servicer.PostProvisioningResults,
                    request_deserializer=squareup_dot_keyprovisioner_dot_service__pb2.PostProvisioningResultsRequest.FromString,
                    response_serializer=squareup_dot_keyprovisioner_dot_service__pb2.EmptyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.keyprovisioner.service.KeyprovisionerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KeyprovisionerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDiffBetweenEpochs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.keyprovisioner.service.KeyprovisionerService/GetDiffBetweenEpochs',
            squareup_dot_keyprovisioner_dot_service__pb2.GetDiffBetweenEpochsRequest.SerializeToString,
            squareup_dot_keyprovisioner_dot_service__pb2.EpochDiff.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProvisionableByUUID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.keyprovisioner.service.KeyprovisionerService/GetProvisionableByUUID',
            squareup_dot_keyprovisioner_dot_service__pb2.GetProvisionableByUUIDRequest.SerializeToString,
            squareup_dot_keyprovisioner_dot_service__pb2.Provisionable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostProvisioningResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.keyprovisioner.service.KeyprovisionerService/PostProvisioningResults',
            squareup_dot_keyprovisioner_dot_service__pb2.PostProvisioningResultsRequest.SerializeToString,
            squareup_dot_keyprovisioner_dot_service__pb2.EmptyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
