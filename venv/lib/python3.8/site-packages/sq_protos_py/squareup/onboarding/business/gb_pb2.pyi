# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.onboarding.business.common_pb2 import (
    MerchantAnalytic as squareup___onboarding___business___common_pb2___MerchantAnalytic,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class GbBusiness(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GbBusiness.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(GbBusiness.TypeValue, 0)
        BUSINESS = typing___cast(GbBusiness.TypeValue, 1)
        INDIVIDUAL = typing___cast(GbBusiness.TypeValue, 2)
        PARTNERSHIP = typing___cast(GbBusiness.TypeValue, 3)
    UNKNOWN = typing___cast(GbBusiness.TypeValue, 0)
    BUSINESS = typing___cast(GbBusiness.TypeValue, 1)
    INDIVIDUAL = typing___cast(GbBusiness.TypeValue, 2)
    PARTNERSHIP = typing___cast(GbBusiness.TypeValue, 3)
    type___Type = Type

    category: typing___Text = ...
    sub_category: typing___Text = ...
    companies_house_registration_number: typing___Text = ...
    company_type: typing___Text = ...
    legal_name: typing___Text = ...
    registered_address_token: typing___Text = ...
    location_address_token: typing___Text = ...
    vat_number: typing___Text = ...
    vat_name: typing___Text = ...
    vat_address: typing___Text = ...
    vat_country_code: squareup___common___countries_pb2___CountryValue = ...
    trading_name: typing___Text = ...
    type: type___GbBusiness.TypeValue = ...

    @property
    def merchant_analytic(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___onboarding___business___common_pb2___MerchantAnalytic]: ...

    def __init__(self,
        *,
        category : typing___Optional[typing___Text] = None,
        sub_category : typing___Optional[typing___Text] = None,
        companies_house_registration_number : typing___Optional[typing___Text] = None,
        company_type : typing___Optional[typing___Text] = None,
        legal_name : typing___Optional[typing___Text] = None,
        registered_address_token : typing___Optional[typing___Text] = None,
        location_address_token : typing___Optional[typing___Text] = None,
        vat_number : typing___Optional[typing___Text] = None,
        vat_name : typing___Optional[typing___Text] = None,
        vat_address : typing___Optional[typing___Text] = None,
        vat_country_code : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        trading_name : typing___Optional[typing___Text] = None,
        merchant_analytic : typing___Optional[typing___Iterable[squareup___onboarding___business___common_pb2___MerchantAnalytic]] = None,
        type : typing___Optional[type___GbBusiness.TypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"category",b"category",u"companies_house_registration_number",b"companies_house_registration_number",u"company_type",b"company_type",u"legal_name",b"legal_name",u"location_address_token",b"location_address_token",u"registered_address_token",b"registered_address_token",u"sub_category",b"sub_category",u"trading_name",b"trading_name",u"type",b"type",u"vat_address",b"vat_address",u"vat_country_code",b"vat_country_code",u"vat_name",b"vat_name",u"vat_number",b"vat_number"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"category",b"category",u"companies_house_registration_number",b"companies_house_registration_number",u"company_type",b"company_type",u"legal_name",b"legal_name",u"location_address_token",b"location_address_token",u"merchant_analytic",b"merchant_analytic",u"registered_address_token",b"registered_address_token",u"sub_category",b"sub_category",u"trading_name",b"trading_name",u"type",b"type",u"vat_address",b"vat_address",u"vat_country_code",b"vat_country_code",u"vat_name",b"vat_name",u"vat_number",b"vat_number"]) -> None: ...
type___GbBusiness = GbBusiness
