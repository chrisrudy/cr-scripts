# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.client.felica import felica_pb2 as squareup_dot_client_dot_felica_dot_felica__pb2
from sq_protos_py.squareup.felica import service_pb2 as squareup_dot_felica_dot_service__pb2
from sq_protos_py.squareup.snooplogg import service_pb2 as squareup_dot_snooplogg_dot_service__pb2


class FelicaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OpenConnection = channel.unary_unary(
                '/squareup.felica.service.FelicaService/OpenConnection',
                request_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionResponse.FromString,
                )
        self.ProxyMessage = channel.unary_unary(
                '/squareup.felica.service.FelicaService/ProxyMessage',
                request_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageResponse.FromString,
                )
        self.SetTransactionStatus = channel.unary_unary(
                '/squareup.felica.service.FelicaService/SetTransactionStatus',
                request_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusResponse.FromString,
                )


class FelicaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OpenConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProxyMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTransactionStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FelicaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OpenConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenConnection,
                    request_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionRequest.FromString,
                    response_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionResponse.SerializeToString,
            ),
            'ProxyMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.ProxyMessage,
                    request_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageRequest.FromString,
                    response_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageResponse.SerializeToString,
            ),
            'SetTransactionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTransactionStatus,
                    request_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusRequest.FromString,
                    response_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.felica.service.FelicaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FelicaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OpenConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.FelicaService/OpenConnection',
            squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionRequest.SerializeToString,
            squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProxyMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.FelicaService/ProxyMessage',
            squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageRequest.SerializeToString,
            squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTransactionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.FelicaService/SetTransactionStatus',
            squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusRequest.SerializeToString,
            squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FelicaInternalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OpenConnectionInternal = channel.unary_unary(
                '/squareup.felica.service.FelicaInternalService/OpenConnectionInternal',
                request_serializer=squareup_dot_felica_dot_service__pb2.OpenConnectionInternalRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionResponse.FromString,
                )
        self.ProxyMessageInternal = channel.unary_unary(
                '/squareup.felica.service.FelicaInternalService/ProxyMessageInternal',
                request_serializer=squareup_dot_felica_dot_service__pb2.ProxyMessageInternalRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageResponse.FromString,
                )
        self.SetTransactionStatusInternal = channel.unary_unary(
                '/squareup.felica.service.FelicaInternalService/SetTransactionStatusInternal',
                request_serializer=squareup_dot_felica_dot_service__pb2.SetTransactionStatusInternalRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusResponse.FromString,
                )


class FelicaInternalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def OpenConnectionInternal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProxyMessageInternal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTransactionStatusInternal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FelicaInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OpenConnectionInternal': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenConnectionInternal,
                    request_deserializer=squareup_dot_felica_dot_service__pb2.OpenConnectionInternalRequest.FromString,
                    response_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionResponse.SerializeToString,
            ),
            'ProxyMessageInternal': grpc.unary_unary_rpc_method_handler(
                    servicer.ProxyMessageInternal,
                    request_deserializer=squareup_dot_felica_dot_service__pb2.ProxyMessageInternalRequest.FromString,
                    response_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageResponse.SerializeToString,
            ),
            'SetTransactionStatusInternal': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTransactionStatusInternal,
                    request_deserializer=squareup_dot_felica_dot_service__pb2.SetTransactionStatusInternalRequest.FromString,
                    response_serializer=squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.felica.service.FelicaInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FelicaInternalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def OpenConnectionInternal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.FelicaInternalService/OpenConnectionInternal',
            squareup_dot_felica_dot_service__pb2.OpenConnectionInternalRequest.SerializeToString,
            squareup_dot_client_dot_felica_dot_felica__pb2.OpenConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProxyMessageInternal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.FelicaInternalService/ProxyMessageInternal',
            squareup_dot_felica_dot_service__pb2.ProxyMessageInternalRequest.SerializeToString,
            squareup_dot_client_dot_felica_dot_felica__pb2.ProxyMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTransactionStatusInternal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.FelicaInternalService/SetTransactionStatusInternal',
            squareup_dot_felica_dot_service__pb2.SetTransactionStatusInternalRequest.SerializeToString,
            squareup_dot_client_dot_felica_dot_felica__pb2.SetTransactionStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SnooploggForwardingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchMessages = channel.unary_unary(
                '/squareup.felica.service.SnooploggForwardingService/SearchMessages',
                request_serializer=squareup_dot_felica_dot_service__pb2.SnooploggSearchRequest.SerializeToString,
                response_deserializer=squareup_dot_snooplogg_dot_service__pb2.SearchMessagesResponse.FromString,
                )


class SnooploggForwardingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchMessages(self, request, context):
        """*
        Request segments that meet the search criteria
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnooploggForwardingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchMessages,
                    request_deserializer=squareup_dot_felica_dot_service__pb2.SnooploggSearchRequest.FromString,
                    response_serializer=squareup_dot_snooplogg_dot_service__pb2.SearchMessagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.felica.service.SnooploggForwardingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SnooploggForwardingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.felica.service.SnooploggForwardingService/SearchMessages',
            squareup_dot_felica_dot_service__pb2.SnooploggSearchRequest.SerializeToString,
            squareup_dot_snooplogg_dot_service__pb2.SearchMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
