# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ConditionalFeatureName(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    given_feature_name: typing___Text = ...
    given_feature_value: typing___Text = ...
    tested_feature_name: typing___Text = ...

    def __init__(self,
        *,
        given_feature_name : typing___Optional[typing___Text] = None,
        given_feature_value : typing___Optional[typing___Text] = None,
        tested_feature_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"given_feature_name",b"given_feature_name",u"given_feature_value",b"given_feature_value",u"tested_feature_name",b"tested_feature_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"given_feature_name",b"given_feature_name",u"given_feature_value",b"given_feature_value",u"tested_feature_name",b"tested_feature_name"]) -> None: ...
type___ConditionalFeatureName = ConditionalFeatureName

class ConditionalFeatureValuePair(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    given_feature_name: typing___Text = ...
    given_feature_value: typing___Text = ...
    tested_feature_name: typing___Text = ...
    tested_feature_value: typing___Text = ...

    def __init__(self,
        *,
        given_feature_name : typing___Optional[typing___Text] = None,
        given_feature_value : typing___Optional[typing___Text] = None,
        tested_feature_name : typing___Optional[typing___Text] = None,
        tested_feature_value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"given_feature_name",b"given_feature_name",u"given_feature_value",b"given_feature_value",u"tested_feature_name",b"tested_feature_name",u"tested_feature_value",b"tested_feature_value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"given_feature_name",b"given_feature_name",u"given_feature_value",b"given_feature_value",u"tested_feature_name",b"tested_feature_name",u"tested_feature_value",b"tested_feature_value"]) -> None: ...
type___ConditionalFeatureValuePair = ConditionalFeatureValuePair

class FeatureCounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    total_count: builtin___int = ...
    snowflake_count: builtin___int = ...

    def __init__(self,
        *,
        total_count : typing___Optional[builtin___int] = None,
        snowflake_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"snowflake_count",b"snowflake_count",u"total_count",b"total_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"snowflake_count",b"snowflake_count",u"total_count",b"total_count"]) -> None: ...
type___FeatureCounts = FeatureCounts

class FeatureName(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature_name: typing___Text = ...

    def __init__(self,
        *,
        feature_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"feature_name",b"feature_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"feature_name",b"feature_name"]) -> None: ...
type___FeatureName = FeatureName

class FeatureValueCounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    count: builtin___int = ...
    q_count: builtin___int = ...
    q_plus_count: builtin___int = ...
    uniformity_metric: builtin___float = ...

    def __init__(self,
        *,
        count : typing___Optional[builtin___int] = None,
        q_count : typing___Optional[builtin___int] = None,
        q_plus_count : typing___Optional[builtin___int] = None,
        uniformity_metric : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"count",b"count",u"q_count",b"q_count",u"q_plus_count",b"q_plus_count",u"uniformity_metric",b"uniformity_metric"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"count",b"count",u"q_count",b"q_count",u"q_plus_count",b"q_plus_count",u"uniformity_metric",b"uniformity_metric"]) -> None: ...
type___FeatureValueCounts = FeatureValueCounts

class FeatureValuePair(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature_name: typing___Text = ...
    feature_value: typing___Text = ...

    def __init__(self,
        *,
        feature_name : typing___Optional[typing___Text] = None,
        feature_value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"feature_name",b"feature_name",u"feature_value",b"feature_value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"feature_name",b"feature_name",u"feature_value",b"feature_value"]) -> None: ...
type___FeatureValuePair = FeatureValuePair

class UniformityFactor(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unformity_metric: builtin___float = ...

    def __init__(self,
        *,
        unformity_metric : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"unformity_metric",b"unformity_metric"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"unformity_metric",b"unformity_metric"]) -> None: ...
type___UniformityFactor = UniformityFactor
