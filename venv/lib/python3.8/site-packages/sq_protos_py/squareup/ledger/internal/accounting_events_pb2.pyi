# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.ledger.external_sources_pb2 import (
    ExternalSource as squareup___ledger___external_sources_pb2___ExternalSource,
)

from sq_protos_py.squareup.ledger.internal.balance_events_pb2 import (
    Wrapper as squareup___ledger___internal___balance_events_pb2___Wrapper,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class AccountingEventM(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AccountingEventM.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ET_UNKNOWN_DO_NOT_USE = typing___cast(AccountingEventM.EventTypeValue, 0)
        CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 1)
        REFUND = typing___cast(AccountingEventM.EventTypeValue, 2)
        CAPTURE_BALANCE_PAYMENT = typing___cast(AccountingEventM.EventTypeValue, 3)
        COMPLETE_BALANCE_PAYMENT = typing___cast(AccountingEventM.EventTypeValue, 4)
        DEPOSIT = typing___cast(AccountingEventM.EventTypeValue, 5)
        DEPOSIT_FAILURE = typing___cast(AccountingEventM.EventTypeValue, 6)
        DISPUTE_EVENT = typing___cast(AccountingEventM.EventTypeValue, 7)
        UNDO_REFUND = typing___cast(AccountingEventM.EventTypeValue, 8)
        PAYMENT_RISK_TRANSITION = typing___cast(AccountingEventM.EventTypeValue, 9)
        COST_PLUS_SETTLEMENT = typing___cast(AccountingEventM.EventTypeValue, 10)
        SWEEP_BIZBANK = typing___cast(AccountingEventM.EventTypeValue, 11)
        CAPTURE_BALANCE_PAYMENT_REFUND = typing___cast(AccountingEventM.EventTypeValue, 12)
        COMPLETE_BALANCE_PAYMENT_REFUND = typing___cast(AccountingEventM.EventTypeValue, 13)
        ISSUED_CARD_AUTHORIZATION = typing___cast(AccountingEventM.EventTypeValue, 14)
        ISSUED_CARD_AUTHORIZATION_ADVICE = typing___cast(AccountingEventM.EventTypeValue, 15)
        ISSUED_CARD_CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 16)
        ISSUED_CARD_CHARGEBACK = typing___cast(AccountingEventM.EventTypeValue, 25)
        ISSUED_CARD_CHARGEBACK_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 26)
        ISSUED_CARD_DIRECT_CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 17)
        ISSUED_CARD_DIRECT_FORCE_CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 18)
        ISSUED_CARD_REFUND = typing___cast(AccountingEventM.EventTypeValue, 19)
        ISSUED_CARD_REFUND_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 20)
        ISSUED_CARD_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 22)
        ISSUED_CARD_REWARD = typing___cast(AccountingEventM.EventTypeValue, 27)
        ISSUED_CARD_REWARD_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 28)
        ISSUED_CARD_VOID = typing___cast(AccountingEventM.EventTypeValue, 21)
        FORGIVE_DEBT = typing___cast(AccountingEventM.EventTypeValue, 23)
        ADDITIONAL_RECIPIENT_EVENT = typing___cast(AccountingEventM.EventTypeValue, 24)
        RISK_RESERVE_HOLD = typing___cast(AccountingEventM.EventTypeValue, 29)
        RISK_RESERVE_RELEASE = typing___cast(AccountingEventM.EventTypeValue, 30)
        INITIATE_PAY_IN = typing___cast(AccountingEventM.EventTypeValue, 31)
        ACCEPT_PAY_IN = typing___cast(AccountingEventM.EventTypeValue, 32)
        FAIL_PAY_IN = typing___cast(AccountingEventM.EventTypeValue, 33)
        RECOVERY_OFFSET_TRANSFER_DEBIT = typing___cast(AccountingEventM.EventTypeValue, 34)
        RECOVERY_OFFSET_TRANSFER_CREDIT = typing___cast(AccountingEventM.EventTypeValue, 35)
        REDEMPTION = typing___cast(AccountingEventM.EventTypeValue, 36)
        ADJUSTMENT = typing___cast(AccountingEventM.EventTypeValue, 37)
        FREE_PROCESSING_ADJUSTMENT = typing___cast(AccountingEventM.EventTypeValue, 38)
        CAPITAL = typing___cast(AccountingEventM.EventTypeValue, 39)
        SUBSCRIPTION_FEE_CHARGE_ATTEMPT = typing___cast(AccountingEventM.EventTypeValue, 40)
        BANK_SETTLEMENT_RETURN = typing___cast(AccountingEventM.EventTypeValue, 41)
        FEE = typing___cast(AccountingEventM.EventTypeValue, 42)
        THIRD_PARTY_FEE = typing___cast(AccountingEventM.EventTypeValue, 43)
        MONEY_TRANSFER = typing___cast(AccountingEventM.EventTypeValue, 44)
        ESCHEATMENT = typing___cast(AccountingEventM.EventTypeValue, 45)
        INITIAL_BALANCE_CHANGE = typing___cast(AccountingEventM.EventTypeValue, 46)
        HOLD = typing___cast(AccountingEventM.EventTypeValue, 47)
        UNDO_THIRD_PARTY_FEE_REFUND = typing___cast(AccountingEventM.EventTypeValue, 48)
        UNDO = typing___cast(AccountingEventM.EventTypeValue, 49)
    ET_UNKNOWN_DO_NOT_USE = typing___cast(AccountingEventM.EventTypeValue, 0)
    CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 1)
    REFUND = typing___cast(AccountingEventM.EventTypeValue, 2)
    CAPTURE_BALANCE_PAYMENT = typing___cast(AccountingEventM.EventTypeValue, 3)
    COMPLETE_BALANCE_PAYMENT = typing___cast(AccountingEventM.EventTypeValue, 4)
    DEPOSIT = typing___cast(AccountingEventM.EventTypeValue, 5)
    DEPOSIT_FAILURE = typing___cast(AccountingEventM.EventTypeValue, 6)
    DISPUTE_EVENT = typing___cast(AccountingEventM.EventTypeValue, 7)
    UNDO_REFUND = typing___cast(AccountingEventM.EventTypeValue, 8)
    PAYMENT_RISK_TRANSITION = typing___cast(AccountingEventM.EventTypeValue, 9)
    COST_PLUS_SETTLEMENT = typing___cast(AccountingEventM.EventTypeValue, 10)
    SWEEP_BIZBANK = typing___cast(AccountingEventM.EventTypeValue, 11)
    CAPTURE_BALANCE_PAYMENT_REFUND = typing___cast(AccountingEventM.EventTypeValue, 12)
    COMPLETE_BALANCE_PAYMENT_REFUND = typing___cast(AccountingEventM.EventTypeValue, 13)
    ISSUED_CARD_AUTHORIZATION = typing___cast(AccountingEventM.EventTypeValue, 14)
    ISSUED_CARD_AUTHORIZATION_ADVICE = typing___cast(AccountingEventM.EventTypeValue, 15)
    ISSUED_CARD_CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 16)
    ISSUED_CARD_CHARGEBACK = typing___cast(AccountingEventM.EventTypeValue, 25)
    ISSUED_CARD_CHARGEBACK_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 26)
    ISSUED_CARD_DIRECT_CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 17)
    ISSUED_CARD_DIRECT_FORCE_CAPTURE = typing___cast(AccountingEventM.EventTypeValue, 18)
    ISSUED_CARD_REFUND = typing___cast(AccountingEventM.EventTypeValue, 19)
    ISSUED_CARD_REFUND_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 20)
    ISSUED_CARD_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 22)
    ISSUED_CARD_REWARD = typing___cast(AccountingEventM.EventTypeValue, 27)
    ISSUED_CARD_REWARD_REVERSAL = typing___cast(AccountingEventM.EventTypeValue, 28)
    ISSUED_CARD_VOID = typing___cast(AccountingEventM.EventTypeValue, 21)
    FORGIVE_DEBT = typing___cast(AccountingEventM.EventTypeValue, 23)
    ADDITIONAL_RECIPIENT_EVENT = typing___cast(AccountingEventM.EventTypeValue, 24)
    RISK_RESERVE_HOLD = typing___cast(AccountingEventM.EventTypeValue, 29)
    RISK_RESERVE_RELEASE = typing___cast(AccountingEventM.EventTypeValue, 30)
    INITIATE_PAY_IN = typing___cast(AccountingEventM.EventTypeValue, 31)
    ACCEPT_PAY_IN = typing___cast(AccountingEventM.EventTypeValue, 32)
    FAIL_PAY_IN = typing___cast(AccountingEventM.EventTypeValue, 33)
    RECOVERY_OFFSET_TRANSFER_DEBIT = typing___cast(AccountingEventM.EventTypeValue, 34)
    RECOVERY_OFFSET_TRANSFER_CREDIT = typing___cast(AccountingEventM.EventTypeValue, 35)
    REDEMPTION = typing___cast(AccountingEventM.EventTypeValue, 36)
    ADJUSTMENT = typing___cast(AccountingEventM.EventTypeValue, 37)
    FREE_PROCESSING_ADJUSTMENT = typing___cast(AccountingEventM.EventTypeValue, 38)
    CAPITAL = typing___cast(AccountingEventM.EventTypeValue, 39)
    SUBSCRIPTION_FEE_CHARGE_ATTEMPT = typing___cast(AccountingEventM.EventTypeValue, 40)
    BANK_SETTLEMENT_RETURN = typing___cast(AccountingEventM.EventTypeValue, 41)
    FEE = typing___cast(AccountingEventM.EventTypeValue, 42)
    THIRD_PARTY_FEE = typing___cast(AccountingEventM.EventTypeValue, 43)
    MONEY_TRANSFER = typing___cast(AccountingEventM.EventTypeValue, 44)
    ESCHEATMENT = typing___cast(AccountingEventM.EventTypeValue, 45)
    INITIAL_BALANCE_CHANGE = typing___cast(AccountingEventM.EventTypeValue, 46)
    HOLD = typing___cast(AccountingEventM.EventTypeValue, 47)
    UNDO_THIRD_PARTY_FEE_REFUND = typing___cast(AccountingEventM.EventTypeValue, 48)
    UNDO = typing___cast(AccountingEventM.EventTypeValue, 49)
    type___EventType = EventType

    balance_id: typing___Text = ...
    type: type___AccountingEventM.EventTypeValue = ...
    skip_ledger: builtin___bool = ...

    @property
    def balance_event_wrapper(self) -> squareup___ledger___internal___balance_events_pb2___Wrapper: ...

    @property
    def idempotency_key(self) -> squareup___ledger___external_sources_pb2___ExternalSource: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        balance_event_wrapper : typing___Optional[squareup___ledger___internal___balance_events_pb2___Wrapper] = None,
        balance_id : typing___Optional[typing___Text] = None,
        idempotency_key : typing___Optional[squareup___ledger___external_sources_pb2___ExternalSource] = None,
        type : typing___Optional[type___AccountingEventM.EventTypeValue] = None,
        skip_ledger : typing___Optional[builtin___bool] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"balance_event_wrapper",b"balance_event_wrapper",u"balance_id",b"balance_id",u"created_at",b"created_at",u"idempotency_key",b"idempotency_key",u"skip_ledger",b"skip_ledger",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"balance_event_wrapper",b"balance_event_wrapper",u"balance_id",b"balance_id",u"created_at",b"created_at",u"idempotency_key",b"idempotency_key",u"skip_ledger",b"skip_ledger",u"type",b"type"]) -> None: ...
type___AccountingEventM = AccountingEventM

class BookkeeperLedgerEntryData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def accounting_event(self) -> type___AccountingEventM: ...

    def __init__(self,
        *,
        accounting_event : typing___Optional[type___AccountingEventM] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accounting_event",b"accounting_event"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accounting_event",b"accounting_event"]) -> None: ...
type___BookkeeperLedgerEntryData = BookkeeperLedgerEntryData
