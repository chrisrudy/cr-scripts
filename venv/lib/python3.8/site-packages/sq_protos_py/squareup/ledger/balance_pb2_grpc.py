# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.ledger import balance_pb2 as squareup_dot_ledger_dot_balance__pb2


class BalanceServiceStub(object):
    """* API endpoints for the Balance Service 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClearedBalanceV2 = channel.unary_unary(
                '/squareup.ledger.service.BalanceService/GetClearedBalanceV2',
                request_serializer=squareup_dot_ledger_dot_balance__pb2.GetClearedBalanceRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_balance__pb2.GetClearedBalanceResponse.FromString,
                )
        self.FoldBalance = channel.unary_unary(
                '/squareup.ledger.service.BalanceService/FoldBalance',
                request_serializer=squareup_dot_ledger_dot_balance__pb2.FoldBalanceRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_balance__pb2.FoldBalanceResponse.FromString,
                )


class BalanceServiceServicer(object):
    """* API endpoints for the Balance Service 
    """

    def GetClearedBalanceV2(self, request, context):
        """*
        V2 flavor of GetClearedBalance, that properly accounts for MerchantSettlementState.
        Accounts that are not cleared to be settled will have a non-positive balance,
        as their balance can be negative due to debts.
        V1 version will be deprecated once this API is rolled out.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FoldBalance(self, request, context):
        """*
        Fold/Condense the merchant's existing unsettled balance entries into single unsettled entry.
        Only used for manual transfer schedule sellers and does not change sellers balance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BalanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClearedBalanceV2': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClearedBalanceV2,
                    request_deserializer=squareup_dot_ledger_dot_balance__pb2.GetClearedBalanceRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_balance__pb2.GetClearedBalanceResponse.SerializeToString,
            ),
            'FoldBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.FoldBalance,
                    request_deserializer=squareup_dot_ledger_dot_balance__pb2.FoldBalanceRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_balance__pb2.FoldBalanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.ledger.service.BalanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BalanceService(object):
    """* API endpoints for the Balance Service 
    """

    @staticmethod
    def GetClearedBalanceV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.BalanceService/GetClearedBalanceV2',
            squareup_dot_ledger_dot_balance__pb2.GetClearedBalanceRequest.SerializeToString,
            squareup_dot_ledger_dot_balance__pb2.GetClearedBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FoldBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.BalanceService/FoldBalance',
            squareup_dot_ledger_dot_balance__pb2.FoldBalanceRequest.SerializeToString,
            squareup_dot_ledger_dot_balance__pb2.FoldBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
