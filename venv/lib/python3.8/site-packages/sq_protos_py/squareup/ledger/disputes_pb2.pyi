# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.audit_pb2 import (
    AuditTrail as squareup___common___audit_pb2___AuditTrail,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ErrorValue = typing___NewType('ErrorValue', builtin___int)
type___ErrorValue = ErrorValue
Error: _Error
class _Error(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ErrorValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DO_NOT_USE = typing___cast(ErrorValue, 0)
    BAD_CASHFLOW = typing___cast(ErrorValue, 1)
DO_NOT_USE = typing___cast(ErrorValue, 0)
BAD_CASHFLOW = typing___cast(ErrorValue, 1)
type___Error = Error

class Dispute(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    unit_token: typing___Text = ...
    payment_token: typing___Text = ...

    @property
    def current_version(self) -> type___DisputeVersion: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        payment_token : typing___Optional[typing___Text] = None,
        current_version : typing___Optional[type___DisputeVersion] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_version",b"current_version",u"payment_token",b"payment_token",u"token",b"token",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_version",b"current_version",u"payment_token",b"payment_token",u"token",b"token",u"unit_token",b"unit_token"]) -> None: ...
type___Dispute = Dispute

class DisputeVersion(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    resolved: builtin___bool = ...
    liable_unit_token: typing___Text = ...

    @property
    def held_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def audit_trail(self) -> squareup___common___audit_pb2___AuditTrail: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        resolved : typing___Optional[builtin___bool] = None,
        held_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        audit_trail : typing___Optional[squareup___common___audit_pb2___AuditTrail] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        liable_unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_trail",b"audit_trail",u"created_at",b"created_at",u"held_amount",b"held_amount",u"liable_unit_token",b"liable_unit_token",u"resolved",b"resolved",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_trail",b"audit_trail",u"created_at",b"created_at",u"held_amount",b"held_amount",u"liable_unit_token",b"liable_unit_token",u"resolved",b"resolved",u"token",b"token"]) -> None: ...
type___DisputeVersion = DisputeVersion

class HoldTokensForLegacy(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_hold_token: typing___Text = ...
    excess_hold_token: typing___Text = ...

    def __init__(self,
        *,
        payment_hold_token : typing___Optional[typing___Text] = None,
        excess_hold_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"excess_hold_token",b"excess_hold_token",u"payment_hold_token",b"payment_hold_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"excess_hold_token",b"excess_hold_token",u"payment_hold_token",b"payment_hold_token"]) -> None: ...
type___HoldTokensForLegacy = HoldTokensForLegacy

class DisputeIdentifier(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    dispute_token: typing___Text = ...
    payment_token: typing___Text = ...

    @property
    def hold_tokens(self) -> type___HoldTokensForLegacy: ...

    def __init__(self,
        *,
        dispute_token : typing___Optional[typing___Text] = None,
        hold_tokens : typing___Optional[type___HoldTokensForLegacy] = None,
        payment_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute_token",b"dispute_token",u"hold_tokens",b"hold_tokens",u"payment_token",b"payment_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute_token",b"dispute_token",u"hold_tokens",b"hold_tokens",u"payment_token",b"payment_token"]) -> None: ...
type___DisputeIdentifier = DisputeIdentifier

class DisputeResolution(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class DisputeWon(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___DisputeWon = DisputeWon

    class DisputeLost(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def lost_amount(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            lost_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"lost_amount",b"lost_amount"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"lost_amount",b"lost_amount"]) -> None: ...
    type___DisputeLost = DisputeLost


    @property
    def dispute_won(self) -> type___DisputeResolution.DisputeWon: ...

    @property
    def dispute_lost(self) -> type___DisputeResolution.DisputeLost: ...

    def __init__(self,
        *,
        dispute_won : typing___Optional[type___DisputeResolution.DisputeWon] = None,
        dispute_lost : typing___Optional[type___DisputeResolution.DisputeLost] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute_lost",b"dispute_lost",u"dispute_won",b"dispute_won",u"resolution",b"resolution"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute_lost",b"dispute_lost",u"dispute_won",b"dispute_won",u"resolution",b"resolution"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"resolution",b"resolution"]) -> typing_extensions___Literal["dispute_won","dispute_lost"]: ...
type___DisputeResolution = DisputeResolution

class DisputeDetails(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...

    @property
    def identifier(self) -> type___DisputeIdentifier: ...

    @property
    def disputed_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def audit_trail(self) -> squareup___common___audit_pb2___AuditTrail: ...

    @property
    def last_disputed_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        identifier : typing___Optional[type___DisputeIdentifier] = None,
        unit_token : typing___Optional[typing___Text] = None,
        disputed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        audit_trail : typing___Optional[squareup___common___audit_pb2___AuditTrail] = None,
        last_disputed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_trail",b"audit_trail",u"disputed_amount",b"disputed_amount",u"identifier",b"identifier",u"last_disputed_amount",b"last_disputed_amount",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_trail",b"audit_trail",u"disputed_amount",b"disputed_amount",u"identifier",b"identifier",u"last_disputed_amount",b"last_disputed_amount",u"unit_token",b"unit_token"]) -> None: ...
type___DisputeDetails = DisputeDetails

class CreateDisputeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    dispute_token: typing___Text = ...
    payment_token: typing___Text = ...
    unit_token: typing___Text = ...
    liable_unit_token: typing___Text = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def audit_trail(self) -> squareup___common___audit_pb2___AuditTrail: ...

    def __init__(self,
        *,
        dispute_token : typing___Optional[typing___Text] = None,
        payment_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        audit_trail : typing___Optional[squareup___common___audit_pb2___AuditTrail] = None,
        liable_unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"audit_trail",b"audit_trail",u"dispute_token",b"dispute_token",u"liable_unit_token",b"liable_unit_token",u"payment_token",b"payment_token",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"audit_trail",b"audit_trail",u"dispute_token",b"dispute_token",u"liable_unit_token",b"liable_unit_token",u"payment_token",b"payment_token",u"unit_token",b"unit_token"]) -> None: ...
type___CreateDisputeRequest = CreateDisputeRequest

class CreateDisputeResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    error: type___ErrorValue = ...

    @property
    def dispute(self) -> type___Dispute: ...

    def __init__(self,
        *,
        dispute : typing___Optional[type___Dispute] = None,
        error : typing___Optional[type___ErrorValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["dispute","error"]: ...
type___CreateDisputeResponse = CreateDisputeResponse

class AdjustDisputeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def dispute_details(self) -> type___DisputeDetails: ...

    def __init__(self,
        *,
        dispute_details : typing___Optional[type___DisputeDetails] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute_details",b"dispute_details"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute_details",b"dispute_details"]) -> None: ...
type___AdjustDisputeRequest = AdjustDisputeRequest

class AdjustDisputeResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    error: type___ErrorValue = ...

    @property
    def dispute(self) -> type___Dispute: ...

    def __init__(self,
        *,
        dispute : typing___Optional[type___Dispute] = None,
        error : typing___Optional[type___ErrorValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["dispute","error"]: ...
type___AdjustDisputeResponse = AdjustDisputeResponse

class ReopenDisputeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def dispute_details(self) -> type___DisputeDetails: ...

    def __init__(self,
        *,
        dispute_details : typing___Optional[type___DisputeDetails] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute_details",b"dispute_details"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute_details",b"dispute_details"]) -> None: ...
type___ReopenDisputeRequest = ReopenDisputeRequest

class ReopenDisputeResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    error: type___ErrorValue = ...

    @property
    def dispute(self) -> type___Dispute: ...

    def __init__(self,
        *,
        dispute : typing___Optional[type___Dispute] = None,
        error : typing___Optional[type___ErrorValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["dispute","error"]: ...
type___ReopenDisputeResponse = ReopenDisputeResponse

class ResolveDisputeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...

    @property
    def identifier(self) -> type___DisputeIdentifier: ...

    @property
    def resolution(self) -> type___DisputeResolution: ...

    @property
    def audit_trail(self) -> squareup___common___audit_pb2___AuditTrail: ...

    def __init__(self,
        *,
        identifier : typing___Optional[type___DisputeIdentifier] = None,
        unit_token : typing___Optional[typing___Text] = None,
        resolution : typing___Optional[type___DisputeResolution] = None,
        audit_trail : typing___Optional[squareup___common___audit_pb2___AuditTrail] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_trail",b"audit_trail",u"identifier",b"identifier",u"resolution",b"resolution",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_trail",b"audit_trail",u"identifier",b"identifier",u"resolution",b"resolution",u"unit_token",b"unit_token"]) -> None: ...
type___ResolveDisputeRequest = ResolveDisputeRequest

class ResolveDisputeResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    error: type___ErrorValue = ...

    @property
    def dispute(self) -> type___Dispute: ...

    def __init__(self,
        *,
        dispute : typing___Optional[type___Dispute] = None,
        error : typing___Optional[type___ErrorValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"error",b"error",u"result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["dispute","error"]: ...
type___ResolveDisputeResponse = ResolveDisputeResponse

class GetDisputeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...

    @property
    def identifier(self) -> type___DisputeIdentifier: ...

    def __init__(self,
        *,
        identifier : typing___Optional[type___DisputeIdentifier] = None,
        unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"identifier",b"identifier",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"identifier",b"identifier",u"unit_token",b"unit_token"]) -> None: ...
type___GetDisputeRequest = GetDisputeRequest

class GetDisputeResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def dispute(self) -> type___Dispute: ...

    @property
    def settled_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        dispute : typing___Optional[type___Dispute] = None,
        settled_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"settled_amount",b"settled_amount"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute",u"settled_amount",b"settled_amount"]) -> None: ...
type___GetDisputeResponse = GetDisputeResponse

class ConvertHoldToDisputeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    dispute_token: typing___Text = ...
    unit_token: typing___Text = ...
    payment_token: typing___Text = ...
    payment_hold_token: typing___Text = ...
    merchant_hold_token: typing___Text = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def audit_trail(self) -> squareup___common___audit_pb2___AuditTrail: ...

    def __init__(self,
        *,
        dispute_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        payment_token : typing___Optional[typing___Text] = None,
        payment_hold_token : typing___Optional[typing___Text] = None,
        merchant_hold_token : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        audit_trail : typing___Optional[squareup___common___audit_pb2___AuditTrail] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"audit_trail",b"audit_trail",u"dispute_token",b"dispute_token",u"merchant_hold_token",b"merchant_hold_token",u"payment_hold_token",b"payment_hold_token",u"payment_token",b"payment_token",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"audit_trail",b"audit_trail",u"dispute_token",b"dispute_token",u"merchant_hold_token",b"merchant_hold_token",u"payment_hold_token",b"payment_hold_token",u"payment_token",b"payment_token",u"unit_token",b"unit_token"]) -> None: ...
type___ConvertHoldToDisputeRequest = ConvertHoldToDisputeRequest

class ConvertHoldToDisputeResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def dispute(self) -> type___Dispute: ...

    def __init__(self,
        *,
        dispute : typing___Optional[type___Dispute] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dispute",b"dispute"]) -> None: ...
type___ConvertHoldToDisputeResponse = ConvertHoldToDisputeResponse
