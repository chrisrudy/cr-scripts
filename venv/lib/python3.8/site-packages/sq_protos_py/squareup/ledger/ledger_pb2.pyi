# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.bills.tender_pb2 import (
    Tender as squareup___bills___tender_pb2___Tender,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.fee_pb2 import (
    AggregateFeeDetail as squareup___common___fee_pb2___AggregateFeeDetail,
    FeeDetail as squareup___common___fee_pb2___FeeDetail,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
    DateTimeInterval as squareup___common___time_pb2___DateTimeInterval,
    DayTime as squareup___common___time_pb2___DayTime,
    LocalTime as squareup___common___time_pb2___LocalTime,
)

from sq_protos_py.squareup.ledger.detail_pb2 import (
    LedgerEntryDetail as squareup___ledger___detail_pb2___LedgerEntryDetail,
)

from sq_protos_py.squareup.ledger.external_sources_pb2 import (
    ExternalSource as squareup___ledger___external_sources_pb2___ExternalSource,
)

from sq_protos_py.squareup.money_transfer.common_pb2 import (
    CardDetails as squareup___money_transfer___common_pb2___CardDetails,
)

from sq_protos_py.squareup.privacyvault.annotations_pb2 import (
    VaultedData as squareup___privacyvault___annotations_pb2___VaultedData,
)

from sq_protos_py.squareup.settlements.banking_partners_pb2 import (
    TransmissionRoutingKey as squareup___settlements___banking_partners_pb2___TransmissionRoutingKey,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

SettlementFrequencyValue = typing___NewType('SettlementFrequencyValue', builtin___int)
type___SettlementFrequencyValue = SettlementFrequencyValue
SettlementFrequency: _SettlementFrequency
class _SettlementFrequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SettlementFrequencyValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DO_NOT_USE = typing___cast(SettlementFrequencyValue, 0)
    DAILY = typing___cast(SettlementFrequencyValue, 1)
    WEEKDAY = typing___cast(SettlementFrequencyValue, 2)
    WEEKLY = typing___cast(SettlementFrequencyValue, 3)
DO_NOT_USE = typing___cast(SettlementFrequencyValue, 0)
DAILY = typing___cast(SettlementFrequencyValue, 1)
WEEKDAY = typing___cast(SettlementFrequencyValue, 2)
WEEKLY = typing___cast(SettlementFrequencyValue, 3)
type___SettlementFrequency = SettlementFrequency

PayoutFrequencyValue = typing___NewType('PayoutFrequencyValue', builtin___int)
type___PayoutFrequencyValue = PayoutFrequencyValue
PayoutFrequency: _PayoutFrequency
class _PayoutFrequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PayoutFrequencyValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_UNKNOWN = typing___cast(PayoutFrequencyValue, 0)
    MANUAL = typing___cast(PayoutFrequencyValue, 1)
    PER_CLOSE_OF_DAY = typing___cast(PayoutFrequencyValue, 2)
DEFAULT_UNKNOWN = typing___cast(PayoutFrequencyValue, 0)
MANUAL = typing___cast(PayoutFrequencyValue, 1)
PER_CLOSE_OF_DAY = typing___cast(PayoutFrequencyValue, 2)
type___PayoutFrequency = PayoutFrequency

LedgerEntrySummaryTypeValue = typing___NewType('LedgerEntrySummaryTypeValue', builtin___int)
type___LedgerEntrySummaryTypeValue = LedgerEntrySummaryTypeValue
LedgerEntrySummaryType: _LedgerEntrySummaryType
class _LedgerEntrySummaryType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LedgerEntrySummaryTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN = typing___cast(LedgerEntrySummaryTypeValue, 0)
    TO_USER_AMOUNT_BY_ENTRY_TYPE_AND_EXTERNAL_SOURCE_NAME = typing___cast(LedgerEntrySummaryTypeValue, 1)
    TO_FEE_AMOUNT_BY_ENTRY_TYPE_AND_EXTERNAL_SOURCE_NAME = typing___cast(LedgerEntrySummaryTypeValue, 2)
    PAYMENTS = typing___cast(LedgerEntrySummaryTypeValue, 3)
    REFUNDS = typing___cast(LedgerEntrySummaryTypeValue, 4)
    COSTPLUS_FEES = typing___cast(LedgerEntrySummaryTypeValue, 5)
    TOTAL_HELD_AND_RELEASED_MONEY = typing___cast(LedgerEntrySummaryTypeValue, 6)
    REFUNDED_PAYMENTS = typing___cast(LedgerEntrySummaryTypeValue, 7)
    THIRD_PARTY_FEES = typing___cast(LedgerEntrySummaryTypeValue, 8)
UNKNOWN = typing___cast(LedgerEntrySummaryTypeValue, 0)
TO_USER_AMOUNT_BY_ENTRY_TYPE_AND_EXTERNAL_SOURCE_NAME = typing___cast(LedgerEntrySummaryTypeValue, 1)
TO_FEE_AMOUNT_BY_ENTRY_TYPE_AND_EXTERNAL_SOURCE_NAME = typing___cast(LedgerEntrySummaryTypeValue, 2)
PAYMENTS = typing___cast(LedgerEntrySummaryTypeValue, 3)
REFUNDS = typing___cast(LedgerEntrySummaryTypeValue, 4)
COSTPLUS_FEES = typing___cast(LedgerEntrySummaryTypeValue, 5)
TOTAL_HELD_AND_RELEASED_MONEY = typing___cast(LedgerEntrySummaryTypeValue, 6)
REFUNDED_PAYMENTS = typing___cast(LedgerEntrySummaryTypeValue, 7)
THIRD_PARTY_FEES = typing___cast(LedgerEntrySummaryTypeValue, 8)
type___LedgerEntrySummaryType = LedgerEntrySummaryType

class LedgerEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LedgerEntry.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        INITIAL_BALANCE_CHANGE = typing___cast(LedgerEntry.TypeValue, 31)
        UNDO = typing___cast(LedgerEntry.TypeValue, 32)
        CAPTURE = typing___cast(LedgerEntry.TypeValue, 1)
        REFUND = typing___cast(LedgerEntry.TypeValue, 2)
        ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 3)
        REDEMPTION = typing___cast(LedgerEntry.TypeValue, 4)
        HOLD = typing___cast(LedgerEntry.TypeValue, 5)
        RELEASE = typing___cast(LedgerEntry.TypeValue, 6)
        UNDO_HOLD = typing___cast(LedgerEntry.TypeValue, 7)
        UNDO_RELEASE = typing___cast(LedgerEntry.TypeValue, 8)
        PAYOUT = typing___cast(LedgerEntry.TypeValue, 9)
        INCENTED_PAYMENT = typing___cast(LedgerEntry.TypeValue, 10)
        BANK_BALANCE_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 11)
        MCA_REPAYMENT = typing___cast(LedgerEntry.TypeValue, 12)
        MCA_REPAYMENT_REFUND = typing___cast(LedgerEntry.TypeValue, 13)
        MCA_ADVANCE = typing___cast(LedgerEntry.TypeValue, 14)
        LEGACY_RETURNED_PAYOUT = typing___cast(LedgerEntry.TypeValue, 15)
        SQUARE_PLUS = typing___cast(LedgerEntry.TypeValue, 16)
        RETURNED_SQUARE_PLUS = typing___cast(LedgerEntry.TypeValue, 17)
        LEGACY_ABORTED_PAYOUT = typing___cast(LedgerEntry.TypeValue, 18)
        LEGACY_ACH_TRANSFER = typing___cast(LedgerEntry.TypeValue, 19)
        LEGACY_CORRECTION = typing___cast(LedgerEntry.TypeValue, 20)
        LEGACY_GUARANTEED_PAYMENT = typing___cast(LedgerEntry.TypeValue, 21)
        LEGACY_RETURNED_ACH_ENTRY = typing___cast(LedgerEntry.TypeValue, 22)
        LEGACY_SEED = typing___cast(LedgerEntry.TypeValue, 23)
        LEGACY_TRANSFER = typing___cast(LedgerEntry.TypeValue, 24)
        RETURNED_LEDGER_ENTRY = typing___cast(LedgerEntry.TypeValue, 25)
        SUBSCRIPTION_FEE = typing___cast(LedgerEntry.TypeValue, 26)
        FREE_PROCESSING_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 27)
        LEGACY_BALANCE_CAPTURE = typing___cast(LedgerEntry.TypeValue, 28)
        LEGACY_BALANCE_REFUND = typing___cast(LedgerEntry.TypeValue, 29)
        SUBSCRIPTION_FEE_REFUND = typing___cast(LedgerEntry.TypeValue, 30)
        SUBSCRIPTION_FEE_PAID_REFUND = typing___cast(LedgerEntry.TypeValue, 37)
        TAX_ON_FEE = typing___cast(LedgerEntry.TypeValue, 33)
        CAPITAL_FIXED_DEPOSIT = typing___cast(LedgerEntry.TypeValue, 34)
        CAPITAL_FIXED_PAYMENT = typing___cast(LedgerEntry.TypeValue, 35)
        UNDO_TAX_ON_FEE = typing___cast(LedgerEntry.TypeValue, 36)
        OPEN_DISPUTE = typing___cast(LedgerEntry.TypeValue, 38)
        DISPUTE_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 39)
        RESOLVED_DISPUTE = typing___cast(LedgerEntry.TypeValue, 40)
        FEE = typing___cast(LedgerEntry.TypeValue, 41)
        UNDO_FEE = typing___cast(LedgerEntry.TypeValue, 42)
        BALANCE_TENDER = typing___cast(LedgerEntry.TypeValue, 43)
        THIRD_PARTY_FEE = typing___cast(LedgerEntry.TypeValue, 44)
        THIRD_PARTY_FEE_REFUND = typing___cast(LedgerEntry.TypeValue, 47)
        MONEY_TRANSFER = typing___cast(LedgerEntry.TypeValue, 45)
        MONEY_TRANSFER_REVERSAL = typing___cast(LedgerEntry.TypeValue, 46)
        ESCHEATMENT = typing___cast(LedgerEntry.TypeValue, 48)
        CAPITAL_PROMOTION_BONUS = typing___cast(LedgerEntry.TypeValue, 49)
        BOOKKEEPER_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 50)
        APP_FEE_REVENUE = typing___cast(LedgerEntry.TypeValue, 51)
        APP_FEE_REFUND = typing___cast(LedgerEntry.TypeValue, 52)
        RISK_RESERVE_HOLD = typing___cast(LedgerEntry.TypeValue, 53)
        RISK_RESERVE_RELEASE = typing___cast(LedgerEntry.TypeValue, 54)
        RECOVERY_OFFSET_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 55)
    INITIAL_BALANCE_CHANGE = typing___cast(LedgerEntry.TypeValue, 31)
    UNDO = typing___cast(LedgerEntry.TypeValue, 32)
    CAPTURE = typing___cast(LedgerEntry.TypeValue, 1)
    REFUND = typing___cast(LedgerEntry.TypeValue, 2)
    ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 3)
    REDEMPTION = typing___cast(LedgerEntry.TypeValue, 4)
    HOLD = typing___cast(LedgerEntry.TypeValue, 5)
    RELEASE = typing___cast(LedgerEntry.TypeValue, 6)
    UNDO_HOLD = typing___cast(LedgerEntry.TypeValue, 7)
    UNDO_RELEASE = typing___cast(LedgerEntry.TypeValue, 8)
    PAYOUT = typing___cast(LedgerEntry.TypeValue, 9)
    INCENTED_PAYMENT = typing___cast(LedgerEntry.TypeValue, 10)
    BANK_BALANCE_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 11)
    MCA_REPAYMENT = typing___cast(LedgerEntry.TypeValue, 12)
    MCA_REPAYMENT_REFUND = typing___cast(LedgerEntry.TypeValue, 13)
    MCA_ADVANCE = typing___cast(LedgerEntry.TypeValue, 14)
    LEGACY_RETURNED_PAYOUT = typing___cast(LedgerEntry.TypeValue, 15)
    SQUARE_PLUS = typing___cast(LedgerEntry.TypeValue, 16)
    RETURNED_SQUARE_PLUS = typing___cast(LedgerEntry.TypeValue, 17)
    LEGACY_ABORTED_PAYOUT = typing___cast(LedgerEntry.TypeValue, 18)
    LEGACY_ACH_TRANSFER = typing___cast(LedgerEntry.TypeValue, 19)
    LEGACY_CORRECTION = typing___cast(LedgerEntry.TypeValue, 20)
    LEGACY_GUARANTEED_PAYMENT = typing___cast(LedgerEntry.TypeValue, 21)
    LEGACY_RETURNED_ACH_ENTRY = typing___cast(LedgerEntry.TypeValue, 22)
    LEGACY_SEED = typing___cast(LedgerEntry.TypeValue, 23)
    LEGACY_TRANSFER = typing___cast(LedgerEntry.TypeValue, 24)
    RETURNED_LEDGER_ENTRY = typing___cast(LedgerEntry.TypeValue, 25)
    SUBSCRIPTION_FEE = typing___cast(LedgerEntry.TypeValue, 26)
    FREE_PROCESSING_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 27)
    LEGACY_BALANCE_CAPTURE = typing___cast(LedgerEntry.TypeValue, 28)
    LEGACY_BALANCE_REFUND = typing___cast(LedgerEntry.TypeValue, 29)
    SUBSCRIPTION_FEE_REFUND = typing___cast(LedgerEntry.TypeValue, 30)
    SUBSCRIPTION_FEE_PAID_REFUND = typing___cast(LedgerEntry.TypeValue, 37)
    TAX_ON_FEE = typing___cast(LedgerEntry.TypeValue, 33)
    CAPITAL_FIXED_DEPOSIT = typing___cast(LedgerEntry.TypeValue, 34)
    CAPITAL_FIXED_PAYMENT = typing___cast(LedgerEntry.TypeValue, 35)
    UNDO_TAX_ON_FEE = typing___cast(LedgerEntry.TypeValue, 36)
    OPEN_DISPUTE = typing___cast(LedgerEntry.TypeValue, 38)
    DISPUTE_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 39)
    RESOLVED_DISPUTE = typing___cast(LedgerEntry.TypeValue, 40)
    FEE = typing___cast(LedgerEntry.TypeValue, 41)
    UNDO_FEE = typing___cast(LedgerEntry.TypeValue, 42)
    BALANCE_TENDER = typing___cast(LedgerEntry.TypeValue, 43)
    THIRD_PARTY_FEE = typing___cast(LedgerEntry.TypeValue, 44)
    THIRD_PARTY_FEE_REFUND = typing___cast(LedgerEntry.TypeValue, 47)
    MONEY_TRANSFER = typing___cast(LedgerEntry.TypeValue, 45)
    MONEY_TRANSFER_REVERSAL = typing___cast(LedgerEntry.TypeValue, 46)
    ESCHEATMENT = typing___cast(LedgerEntry.TypeValue, 48)
    CAPITAL_PROMOTION_BONUS = typing___cast(LedgerEntry.TypeValue, 49)
    BOOKKEEPER_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 50)
    APP_FEE_REVENUE = typing___cast(LedgerEntry.TypeValue, 51)
    APP_FEE_REFUND = typing___cast(LedgerEntry.TypeValue, 52)
    RISK_RESERVE_HOLD = typing___cast(LedgerEntry.TypeValue, 53)
    RISK_RESERVE_RELEASE = typing___cast(LedgerEntry.TypeValue, 54)
    RECOVERY_OFFSET_ADJUSTMENT = typing___cast(LedgerEntry.TypeValue, 55)
    type___Type = Type

    class ExternalLedgerType(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ExternalTypeValue = typing___NewType('ExternalTypeValue', builtin___int)
        type___ExternalTypeValue = ExternalTypeValue
        ExternalType: _ExternalType
        class _ExternalType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LedgerEntry.ExternalLedgerType.ExternalTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            OTHER = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 1)
            PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 2)
            REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 3)
            ADJUSTMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 4)
            REDEMPTION = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 5)
            HOLD = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 6)
            RELEASE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 7)
            CANCELED_HOLD = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 8)
            CANCELED_RELEASE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 9)
            PAYOUT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 10)
            INCENTED_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 11)
            SQUARE_CAPITAL_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 12)
            SQUARE_CAPITAL_REVERSE_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 13)
            SQUARE_CAPITAL_DEPOSIT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 14)
            SQUARE_275_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 15)
            RETURNED_SQUARE_275_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 16)
            RETURNED_PAYOUT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 17)
            SUBSCRIPTION_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 18)
            FREE_PROCESSING = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 19)
            SUBSCRIPTION_FEE_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 20)
            CANCELED = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 21)
            SUBSCRIPTION_FEE_PAID_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 22)
            GST_ON_FEES = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 23)
            SQUARE_CAPITAL_FIXED_DEPOSIT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 24)
            SQUARE_CAPITAL_FIXED_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 25)
            GST_ON_FEES_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 26)
            OPEN_DISPUTE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 27)
            DISPUTE_ADJUSTMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 28)
            RESOLVED_DISPUTE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 29)
            FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 30)
            CANCELED_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 31)
            THIRD_PARTY_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 32)
            THIRD_PARTY_FEE_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 33)
            MONEY_TRANSFER = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 34)
            MONEY_TRANSFER_REVERSAL = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 35)
            ESCHEATMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 36)
            SQUARE_CAPITAL_PROMOTION_BONUS = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 37)
            APP_FEE_REVENUE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 38)
            APP_FEE_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 39)
            HOLD_ADJUSTMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 40)
            PAID_SERVICES = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 41)
            PAID_SERVICES_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 42)
            INSTANT_DEPOSIT_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 43)
        OTHER = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 1)
        PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 2)
        REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 3)
        ADJUSTMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 4)
        REDEMPTION = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 5)
        HOLD = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 6)
        RELEASE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 7)
        CANCELED_HOLD = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 8)
        CANCELED_RELEASE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 9)
        PAYOUT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 10)
        INCENTED_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 11)
        SQUARE_CAPITAL_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 12)
        SQUARE_CAPITAL_REVERSE_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 13)
        SQUARE_CAPITAL_DEPOSIT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 14)
        SQUARE_275_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 15)
        RETURNED_SQUARE_275_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 16)
        RETURNED_PAYOUT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 17)
        SUBSCRIPTION_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 18)
        FREE_PROCESSING = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 19)
        SUBSCRIPTION_FEE_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 20)
        CANCELED = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 21)
        SUBSCRIPTION_FEE_PAID_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 22)
        GST_ON_FEES = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 23)
        SQUARE_CAPITAL_FIXED_DEPOSIT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 24)
        SQUARE_CAPITAL_FIXED_PAYMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 25)
        GST_ON_FEES_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 26)
        OPEN_DISPUTE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 27)
        DISPUTE_ADJUSTMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 28)
        RESOLVED_DISPUTE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 29)
        FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 30)
        CANCELED_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 31)
        THIRD_PARTY_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 32)
        THIRD_PARTY_FEE_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 33)
        MONEY_TRANSFER = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 34)
        MONEY_TRANSFER_REVERSAL = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 35)
        ESCHEATMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 36)
        SQUARE_CAPITAL_PROMOTION_BONUS = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 37)
        APP_FEE_REVENUE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 38)
        APP_FEE_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 39)
        HOLD_ADJUSTMENT = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 40)
        PAID_SERVICES = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 41)
        PAID_SERVICES_REFUND = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 42)
        INSTANT_DEPOSIT_FEE = typing___cast(LedgerEntry.ExternalLedgerType.ExternalTypeValue, 43)
        type___ExternalType = ExternalType


        def __init__(self,
            ) -> None: ...
    type___ExternalLedgerType = ExternalLedgerType

    token: typing___Text = ...
    merchant_token: typing___Text = ...
    payment_token: typing___Text = ...
    entry_type: type___LedgerEntry.TypeValue = ...
    transaction_fund_id: builtin___int = ...
    external_source_event_id: typing___Text = ...

    @property
    def to_user_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def to_fee_account_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def effective_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def external_source(self) -> squareup___ledger___external_sources_pb2___ExternalSource: ...

    @property
    def aggregate_fee_detail(self) -> squareup___common___fee_pb2___AggregateFeeDetail: ...

    @property
    def fee_detail(self) -> squareup___common___fee_pb2___FeeDetail: ...

    @property
    def detail(self) -> squareup___ledger___detail_pb2___LedgerEntryDetail: ...

    @property
    def root_ledger_entry(self) -> type___LedgerEntry: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        payment_token : typing___Optional[typing___Text] = None,
        entry_type : typing___Optional[type___LedgerEntry.TypeValue] = None,
        to_user_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        to_fee_account_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        effective_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        transaction_fund_id : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        external_source : typing___Optional[squareup___ledger___external_sources_pb2___ExternalSource] = None,
        aggregate_fee_detail : typing___Optional[squareup___common___fee_pb2___AggregateFeeDetail] = None,
        external_source_event_id : typing___Optional[typing___Text] = None,
        fee_detail : typing___Optional[squareup___common___fee_pb2___FeeDetail] = None,
        detail : typing___Optional[squareup___ledger___detail_pb2___LedgerEntryDetail] = None,
        root_ledger_entry : typing___Optional[type___LedgerEntry] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aggregate_fee_detail",b"aggregate_fee_detail",u"created_at",b"created_at",u"detail",b"detail",u"effective_at",b"effective_at",u"entry_type",b"entry_type",u"external_source",b"external_source",u"external_source_event_id",b"external_source_event_id",u"fee_detail",b"fee_detail",u"merchant_token",b"merchant_token",u"payment_token",b"payment_token",u"root_ledger_entry",b"root_ledger_entry",u"to_fee_account_amount",b"to_fee_account_amount",u"to_user_amount",b"to_user_amount",u"token",b"token",u"transaction_fund_id",b"transaction_fund_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aggregate_fee_detail",b"aggregate_fee_detail",u"created_at",b"created_at",u"detail",b"detail",u"effective_at",b"effective_at",u"entry_type",b"entry_type",u"external_source",b"external_source",u"external_source_event_id",b"external_source_event_id",u"fee_detail",b"fee_detail",u"merchant_token",b"merchant_token",u"payment_token",b"payment_token",u"root_ledger_entry",b"root_ledger_entry",u"to_fee_account_amount",b"to_fee_account_amount",u"to_user_amount",b"to_user_amount",u"token",b"token",u"transaction_fund_id",b"transaction_fund_id"]) -> None: ...
type___LedgerEntry = LedgerEntry

class BankSettlementEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BankSettlementEntry.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CREDIT = typing___cast(BankSettlementEntry.TypeValue, 1)
        DEBIT = typing___cast(BankSettlementEntry.TypeValue, 2)
    CREDIT = typing___cast(BankSettlementEntry.TypeValue, 1)
    DEBIT = typing___cast(BankSettlementEntry.TypeValue, 2)
    type___Type = Type

    SettlementTypeValue = typing___NewType('SettlementTypeValue', builtin___int)
    type___SettlementTypeValue = SettlementTypeValue
    SettlementType: _SettlementType
    class _SettlementType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BankSettlementEntry.SettlementTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ACH = typing___cast(BankSettlementEntry.SettlementTypeValue, 1)
        GFF = typing___cast(BankSettlementEntry.SettlementTypeValue, 2)
        SQUARE_CASH = typing___cast(BankSettlementEntry.SettlementTypeValue, 3)
    ACH = typing___cast(BankSettlementEntry.SettlementTypeValue, 1)
    GFF = typing___cast(BankSettlementEntry.SettlementTypeValue, 2)
    SQUARE_CASH = typing___cast(BankSettlementEntry.SettlementTypeValue, 3)
    type___SettlementType = SettlementType

    type: type___BankSettlementEntry.TypeValue = ...
    token: typing___Text = ...
    merchant_token: typing___Text = ...
    transaction_fund_id: builtin___int = ...
    external_token: typing___Text = ...
    settlement_type: type___BankSettlementEntry.SettlementTypeValue = ...
    square_web_bank_account_id: builtin___int = ...
    square_web_bank_account_token: typing___Text = ...
    file_transmission_token: typing___Text = ...
    verification_deposit: builtin___bool = ...
    customer_id: typing___Text = ...
    deposit_tag: typing___Text = ...
    bank_account_suffix: typing___Text = ...
    bank_account_routing_number: typing___Text = ...
    bank_account_name: typing___Text = ...
    trace_number: typing___Text = ...
    pan_suffix: typing___Text = ...
    card_brand: typing___Text = ...
    payout_frequency: type___PayoutFrequencyValue = ...
    synchronous_failure_reason: squareup___money_transfer___common_pb2___CardDetails.FailureReasonValue = ...
    push_tender_server_token: typing___Text = ...
    money_transfer_server_token: typing___Text = ...
    push_tender_count: builtin___int = ...
    instrument_token: typing___Text = ...
    settlement_frequency: type___SettlementFrequencyValue = ...
    deposit_token: typing___Text = ...
    synchronous_failure: builtin___bool = ...
    debit_token: typing___Text = ...
    already_journaled: builtin___bool = ...
    client_ip_address: typing___Text = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def transaction_interval(self) -> squareup___common___time_pb2___DateTimeInterval: ...

    @property
    def vaulted_data(self) -> squareup___privacyvault___annotations_pb2___VaultedData: ...

    @property
    def transmission_routing_key(self) -> squareup___settlements___banking_partners_pb2___TransmissionRoutingKey: ...

    def __init__(self,
        *,
        type : typing___Optional[type___BankSettlementEntry.TypeValue] = None,
        token : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        transaction_fund_id : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        external_token : typing___Optional[typing___Text] = None,
        transaction_interval : typing___Optional[squareup___common___time_pb2___DateTimeInterval] = None,
        settlement_type : typing___Optional[type___BankSettlementEntry.SettlementTypeValue] = None,
        square_web_bank_account_id : typing___Optional[builtin___int] = None,
        square_web_bank_account_token : typing___Optional[typing___Text] = None,
        file_transmission_token : typing___Optional[typing___Text] = None,
        verification_deposit : typing___Optional[builtin___bool] = None,
        customer_id : typing___Optional[typing___Text] = None,
        deposit_tag : typing___Optional[typing___Text] = None,
        bank_account_suffix : typing___Optional[typing___Text] = None,
        bank_account_routing_number : typing___Optional[typing___Text] = None,
        bank_account_name : typing___Optional[typing___Text] = None,
        trace_number : typing___Optional[typing___Text] = None,
        pan_suffix : typing___Optional[typing___Text] = None,
        card_brand : typing___Optional[typing___Text] = None,
        payout_frequency : typing___Optional[type___PayoutFrequencyValue] = None,
        synchronous_failure_reason : typing___Optional[squareup___money_transfer___common_pb2___CardDetails.FailureReasonValue] = None,
        push_tender_server_token : typing___Optional[typing___Text] = None,
        money_transfer_server_token : typing___Optional[typing___Text] = None,
        push_tender_count : typing___Optional[builtin___int] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        vaulted_data : typing___Optional[squareup___privacyvault___annotations_pb2___VaultedData] = None,
        transmission_routing_key : typing___Optional[squareup___settlements___banking_partners_pb2___TransmissionRoutingKey] = None,
        settlement_frequency : typing___Optional[type___SettlementFrequencyValue] = None,
        deposit_token : typing___Optional[typing___Text] = None,
        synchronous_failure : typing___Optional[builtin___bool] = None,
        debit_token : typing___Optional[typing___Text] = None,
        already_journaled : typing___Optional[builtin___bool] = None,
        client_ip_address : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"already_journaled",b"already_journaled",u"amount",b"amount",u"bank_account_name",b"bank_account_name",u"bank_account_routing_number",b"bank_account_routing_number",u"bank_account_suffix",b"bank_account_suffix",u"card_brand",b"card_brand",u"client_ip_address",b"client_ip_address",u"created_at",b"created_at",u"customer_id",b"customer_id",u"debit_token",b"debit_token",u"deposit_tag",b"deposit_tag",u"deposit_token",b"deposit_token",u"external_token",b"external_token",u"file_transmission_token",b"file_transmission_token",u"instrument_token",b"instrument_token",u"merchant_token",b"merchant_token",u"money_transfer_server_token",b"money_transfer_server_token",u"pan_suffix",b"pan_suffix",u"payout_frequency",b"payout_frequency",u"push_tender_count",b"push_tender_count",u"push_tender_server_token",b"push_tender_server_token",u"settlement_frequency",b"settlement_frequency",u"settlement_type",b"settlement_type",u"square_web_bank_account_id",b"square_web_bank_account_id",u"square_web_bank_account_token",b"square_web_bank_account_token",u"synchronous_failure",b"synchronous_failure",u"synchronous_failure_reason",b"synchronous_failure_reason",u"token",b"token",u"trace_number",b"trace_number",u"transaction_fund_id",b"transaction_fund_id",u"transaction_interval",b"transaction_interval",u"transmission_routing_key",b"transmission_routing_key",u"type",b"type",u"vaulted_data",b"vaulted_data",u"verification_deposit",b"verification_deposit"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"already_journaled",b"already_journaled",u"amount",b"amount",u"bank_account_name",b"bank_account_name",u"bank_account_routing_number",b"bank_account_routing_number",u"bank_account_suffix",b"bank_account_suffix",u"card_brand",b"card_brand",u"client_ip_address",b"client_ip_address",u"created_at",b"created_at",u"customer_id",b"customer_id",u"debit_token",b"debit_token",u"deposit_tag",b"deposit_tag",u"deposit_token",b"deposit_token",u"external_token",b"external_token",u"file_transmission_token",b"file_transmission_token",u"instrument_token",b"instrument_token",u"merchant_token",b"merchant_token",u"money_transfer_server_token",b"money_transfer_server_token",u"pan_suffix",b"pan_suffix",u"payout_frequency",b"payout_frequency",u"push_tender_count",b"push_tender_count",u"push_tender_server_token",b"push_tender_server_token",u"settlement_frequency",b"settlement_frequency",u"settlement_type",b"settlement_type",u"square_web_bank_account_id",b"square_web_bank_account_id",u"square_web_bank_account_token",b"square_web_bank_account_token",u"synchronous_failure",b"synchronous_failure",u"synchronous_failure_reason",b"synchronous_failure_reason",u"token",b"token",u"trace_number",b"trace_number",u"transaction_fund_id",b"transaction_fund_id",u"transaction_interval",b"transaction_interval",u"transmission_routing_key",b"transmission_routing_key",u"type",b"type",u"vaulted_data",b"vaulted_data",u"verification_deposit",b"verification_deposit"]) -> None: ...
type___BankSettlementEntry = BankSettlementEntry

class Payout(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___Payout = Payout

class SettledLedgerEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ledger_entry_token: typing___Text = ...
    bank_settlement_entry_token: typing___Text = ...
    merchant_token: typing___Text = ...
    external_bank_settlement_entry_token: typing___Text = ...
    entry_type: type___LedgerEntry.TypeValue = ...
    payment_token: typing___Text = ...
    deposit_token: typing___Text = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def external_source(self) -> squareup___ledger___external_sources_pb2___ExternalSource: ...

    def __init__(self,
        *,
        ledger_entry_token : typing___Optional[typing___Text] = None,
        bank_settlement_entry_token : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        external_source : typing___Optional[squareup___ledger___external_sources_pb2___ExternalSource] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        external_bank_settlement_entry_token : typing___Optional[typing___Text] = None,
        entry_type : typing___Optional[type___LedgerEntry.TypeValue] = None,
        payment_token : typing___Optional[typing___Text] = None,
        deposit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"created_at",b"created_at",u"deposit_token",b"deposit_token",u"entry_type",b"entry_type",u"external_bank_settlement_entry_token",b"external_bank_settlement_entry_token",u"external_source",b"external_source",u"ledger_entry_token",b"ledger_entry_token",u"merchant_token",b"merchant_token",u"payment_token",b"payment_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"created_at",b"created_at",u"deposit_token",b"deposit_token",u"entry_type",b"entry_type",u"external_bank_settlement_entry_token",b"external_bank_settlement_entry_token",u"external_source",b"external_source",u"ledger_entry_token",b"ledger_entry_token",u"merchant_token",b"merchant_token",u"payment_token",b"payment_token"]) -> None: ...
type___SettledLedgerEntry = SettledLedgerEntry

class UnsettledLedgerEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ledger_entry_token: typing___Text = ...
    force_settle: builtin___bool = ...

    def __init__(self,
        *,
        ledger_entry_token : typing___Optional[typing___Text] = None,
        force_settle : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"force_settle",b"force_settle",u"ledger_entry_token",b"ledger_entry_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"force_settle",b"force_settle",u"ledger_entry_token",b"ledger_entry_token"]) -> None: ...
type___UnsettledLedgerEntry = UnsettledLedgerEntry

class MerchantSettlementState(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ReasonValue = typing___NewType('ReasonValue', builtin___int)
    type___ReasonValue = ReasonValue
    Reason: _Reason
    class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[MerchantSettlementState.ReasonValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        FROZEN = typing___cast(MerchantSettlementState.ReasonValue, 1)
        NO_VERIFIED_BANK_ACCOUNT = typing___cast(MerchantSettlementState.ReasonValue, 2)
        TOO_MANY_DEBIT_RETURNS = typing___cast(MerchantSettlementState.ReasonValue, 3)
        PENDING_REFUND = typing___cast(MerchantSettlementState.ReasonValue, 4)
        DELETED = typing___cast(MerchantSettlementState.ReasonValue, 5)
        SUSPECTED = typing___cast(MerchantSettlementState.ReasonValue, 6)
        BLACKLISTED_BANK_ACCOUNT = typing___cast(MerchantSettlementState.ReasonValue, 7)
        JAPAN_ACQUIRER_FREEZE = typing___cast(MerchantSettlementState.ReasonValue, 8)
        TOO_MANY_CREDIT_RETURNS = typing___cast(MerchantSettlementState.ReasonValue, 9)
        NONCOMPLIANT_RETURN = typing___cast(MerchantSettlementState.ReasonValue, 10)
        DEBIT_BLOCK = typing___cast(MerchantSettlementState.ReasonValue, 11)
        BLOCKED_BY_ONBOARDING = typing___cast(MerchantSettlementState.ReasonValue, 12)
        MISSING_BRANCH_INFORMATION = typing___cast(MerchantSettlementState.ReasonValue, 13)
        BANK_ACCOUNT_NOT_DEBITABLE = typing___cast(MerchantSettlementState.ReasonValue, 14)
        BIZBANK_ACCOUNT = typing___cast(MerchantSettlementState.ReasonValue, 15)
        UNDER_INVESTIGATION = typing___cast(MerchantSettlementState.ReasonValue, 16)
        RECOVERY_OFFSET = typing___cast(MerchantSettlementState.ReasonValue, 17)
        CREDIT_RISK = typing___cast(MerchantSettlementState.ReasonValue, 18)
    FROZEN = typing___cast(MerchantSettlementState.ReasonValue, 1)
    NO_VERIFIED_BANK_ACCOUNT = typing___cast(MerchantSettlementState.ReasonValue, 2)
    TOO_MANY_DEBIT_RETURNS = typing___cast(MerchantSettlementState.ReasonValue, 3)
    PENDING_REFUND = typing___cast(MerchantSettlementState.ReasonValue, 4)
    DELETED = typing___cast(MerchantSettlementState.ReasonValue, 5)
    SUSPECTED = typing___cast(MerchantSettlementState.ReasonValue, 6)
    BLACKLISTED_BANK_ACCOUNT = typing___cast(MerchantSettlementState.ReasonValue, 7)
    JAPAN_ACQUIRER_FREEZE = typing___cast(MerchantSettlementState.ReasonValue, 8)
    TOO_MANY_CREDIT_RETURNS = typing___cast(MerchantSettlementState.ReasonValue, 9)
    NONCOMPLIANT_RETURN = typing___cast(MerchantSettlementState.ReasonValue, 10)
    DEBIT_BLOCK = typing___cast(MerchantSettlementState.ReasonValue, 11)
    BLOCKED_BY_ONBOARDING = typing___cast(MerchantSettlementState.ReasonValue, 12)
    MISSING_BRANCH_INFORMATION = typing___cast(MerchantSettlementState.ReasonValue, 13)
    BANK_ACCOUNT_NOT_DEBITABLE = typing___cast(MerchantSettlementState.ReasonValue, 14)
    BIZBANK_ACCOUNT = typing___cast(MerchantSettlementState.ReasonValue, 15)
    UNDER_INVESTIGATION = typing___cast(MerchantSettlementState.ReasonValue, 16)
    RECOVERY_OFFSET = typing___cast(MerchantSettlementState.ReasonValue, 17)
    CREDIT_RISK = typing___cast(MerchantSettlementState.ReasonValue, 18)
    type___Reason = Reason

    merchant_token: typing___Text = ...
    can_settle: builtin___bool = ...
    can_debit: builtin___bool = ...
    linked_bank_account: builtin___bool = ...
    reason: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___MerchantSettlementState.ReasonValue] = ...
    deposit_tag: typing___Text = ...
    can_automatically_approve_refunds: builtin___bool = ...
    transaction_fund_id: builtin___int = ...

    @property
    def start_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def end_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        can_settle : typing___Optional[builtin___bool] = None,
        can_debit : typing___Optional[builtin___bool] = None,
        linked_bank_account : typing___Optional[builtin___bool] = None,
        reason : typing___Optional[typing___Iterable[type___MerchantSettlementState.ReasonValue]] = None,
        start_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        end_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        deposit_tag : typing___Optional[typing___Text] = None,
        can_automatically_approve_refunds : typing___Optional[builtin___bool] = None,
        transaction_fund_id : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"can_automatically_approve_refunds",b"can_automatically_approve_refunds",u"can_debit",b"can_debit",u"can_settle",b"can_settle",u"deposit_tag",b"deposit_tag",u"end_at",b"end_at",u"linked_bank_account",b"linked_bank_account",u"merchant_token",b"merchant_token",u"start_at",b"start_at",u"transaction_fund_id",b"transaction_fund_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"can_automatically_approve_refunds",b"can_automatically_approve_refunds",u"can_debit",b"can_debit",u"can_settle",b"can_settle",u"deposit_tag",b"deposit_tag",u"end_at",b"end_at",u"linked_bank_account",b"linked_bank_account",u"merchant_token",b"merchant_token",u"reason",b"reason",u"start_at",b"start_at",u"transaction_fund_id",b"transaction_fund_id"]) -> None: ...
type___MerchantSettlementState = MerchantSettlementState

class ChangeRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    bank_settlement_entry_token: typing___Text = ...
    bank_settlement_entry_type: typing___Text = ...
    return_file_token: typing___Text = ...
    change_code: typing___Text = ...
    settlement_type: typing___Text = ...
    new_routing_number: typing___Text = ...
    new_account_suffix: typing___Text = ...
    new_transaction_code: typing___Text = ...
    new_fidelius_token: typing___Text = ...
    new_account_name: typing___Text = ...
    old_bank_account_id: builtin___int = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        bank_settlement_entry_token : typing___Optional[typing___Text] = None,
        bank_settlement_entry_type : typing___Optional[typing___Text] = None,
        return_file_token : typing___Optional[typing___Text] = None,
        change_code : typing___Optional[typing___Text] = None,
        settlement_type : typing___Optional[typing___Text] = None,
        new_routing_number : typing___Optional[typing___Text] = None,
        new_account_suffix : typing___Optional[typing___Text] = None,
        new_transaction_code : typing___Optional[typing___Text] = None,
        new_fidelius_token : typing___Optional[typing___Text] = None,
        new_account_name : typing___Optional[typing___Text] = None,
        old_bank_account_id : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"bank_settlement_entry_type",b"bank_settlement_entry_type",u"change_code",b"change_code",u"new_account_name",b"new_account_name",u"new_account_suffix",b"new_account_suffix",u"new_fidelius_token",b"new_fidelius_token",u"new_routing_number",b"new_routing_number",u"new_transaction_code",b"new_transaction_code",u"old_bank_account_id",b"old_bank_account_id",u"return_file_token",b"return_file_token",u"settlement_type",b"settlement_type",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"bank_settlement_entry_type",b"bank_settlement_entry_type",u"change_code",b"change_code",u"new_account_name",b"new_account_name",u"new_account_suffix",b"new_account_suffix",u"new_fidelius_token",b"new_fidelius_token",u"new_routing_number",b"new_routing_number",u"new_transaction_code",b"new_transaction_code",u"old_bank_account_id",b"old_bank_account_id",u"return_file_token",b"return_file_token",u"settlement_type",b"settlement_type",u"token",b"token"]) -> None: ...
type___ChangeRequest = ChangeRequest

class BankSettlementReturn(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    reason: typing___Text = ...
    bank_settlement_entry_token: typing___Text = ...
    return_file_token: typing___Text = ...
    reason_code: typing___Text = ...
    return_description: typing___Text = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def bank_settlement_entry(self) -> type___BankSettlementEntry: ...

    @property
    def vaulted_data(self) -> squareup___privacyvault___annotations_pb2___VaultedData: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        reason : typing___Optional[typing___Text] = None,
        bank_settlement_entry_token : typing___Optional[typing___Text] = None,
        return_file_token : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        reason_code : typing___Optional[typing___Text] = None,
        return_description : typing___Optional[typing___Text] = None,
        bank_settlement_entry : typing___Optional[type___BankSettlementEntry] = None,
        vaulted_data : typing___Optional[squareup___privacyvault___annotations_pb2___VaultedData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry",b"bank_settlement_entry",u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"created_at",b"created_at",u"reason",b"reason",u"reason_code",b"reason_code",u"return_description",b"return_description",u"return_file_token",b"return_file_token",u"token",b"token",u"vaulted_data",b"vaulted_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry",b"bank_settlement_entry",u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"created_at",b"created_at",u"reason",b"reason",u"reason_code",b"reason_code",u"return_description",b"return_description",u"return_file_token",b"return_file_token",u"token",b"token",u"vaulted_data",b"vaulted_data"]) -> None: ...
type___BankSettlementReturn = BankSettlementReturn

class PendingBalance(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...

    @property
    def next_deposit(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PendingDeposit]: ...

    @property
    def available_next_deposit(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PendingDeposit]: ...

    @property
    def future_next_deposit(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PendingDeposit]: ...

    @property
    def pending_deposit_scenario(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PendingDepositScenario]: ...

    @property
    def next_deposit_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def next_deposit_debit_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def outstanding_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def outstanding_debit_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def next_cutoff_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def calculated_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def next_deposit_ledger_entry(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LedgerEntry]: ...

    @property
    def all_other_future_deposit_ledger_entry(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LedgerEntry]: ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        next_deposit : typing___Optional[typing___Iterable[type___PendingDeposit]] = None,
        available_next_deposit : typing___Optional[typing___Iterable[type___PendingDeposit]] = None,
        future_next_deposit : typing___Optional[typing___Iterable[type___PendingDeposit]] = None,
        pending_deposit_scenario : typing___Optional[typing___Iterable[type___PendingDepositScenario]] = None,
        next_deposit_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        next_deposit_debit_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        outstanding_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        outstanding_debit_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        next_cutoff_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        calculated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        next_deposit_ledger_entry : typing___Optional[typing___Iterable[type___LedgerEntry]] = None,
        all_other_future_deposit_ledger_entry : typing___Optional[typing___Iterable[type___LedgerEntry]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"calculated_at",b"calculated_at",u"merchant_token",b"merchant_token",u"next_cutoff_at",b"next_cutoff_at",u"next_deposit_amount",b"next_deposit_amount",u"next_deposit_debit_amount",b"next_deposit_debit_amount",u"outstanding_amount",b"outstanding_amount",u"outstanding_debit_amount",b"outstanding_debit_amount"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"all_other_future_deposit_ledger_entry",b"all_other_future_deposit_ledger_entry",u"available_next_deposit",b"available_next_deposit",u"calculated_at",b"calculated_at",u"future_next_deposit",b"future_next_deposit",u"merchant_token",b"merchant_token",u"next_cutoff_at",b"next_cutoff_at",u"next_deposit",b"next_deposit",u"next_deposit_amount",b"next_deposit_amount",u"next_deposit_debit_amount",b"next_deposit_debit_amount",u"next_deposit_ledger_entry",b"next_deposit_ledger_entry",u"outstanding_amount",b"outstanding_amount",u"outstanding_debit_amount",b"outstanding_debit_amount",u"pending_deposit_scenario",b"pending_deposit_scenario"]) -> None: ...
type___PendingBalance = PendingBalance

class PendingDepositScenario(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ScenarioTypeValue = typing___NewType('ScenarioTypeValue', builtin___int)
    type___ScenarioTypeValue = ScenarioTypeValue
    ScenarioType: _ScenarioType
    class _ScenarioType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PendingDepositScenario.ScenarioTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CURRENT = typing___cast(PendingDepositScenario.ScenarioTypeValue, 1)
        SETTLEABLE = typing___cast(PendingDepositScenario.ScenarioTypeValue, 2)
        DEBITABLE = typing___cast(PendingDepositScenario.ScenarioTypeValue, 3)
    CURRENT = typing___cast(PendingDepositScenario.ScenarioTypeValue, 1)
    SETTLEABLE = typing___cast(PendingDepositScenario.ScenarioTypeValue, 2)
    DEBITABLE = typing___cast(PendingDepositScenario.ScenarioTypeValue, 3)
    type___ScenarioType = ScenarioType

    type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___PendingDepositScenario.ScenarioTypeValue] = ...

    @property
    def next_deposit(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PendingDeposit]: ...

    @property
    def future_deposit(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PendingDeposit]: ...

    def __init__(self,
        *,
        type : typing___Optional[typing___Iterable[type___PendingDepositScenario.ScenarioTypeValue]] = None,
        next_deposit : typing___Optional[typing___Iterable[type___PendingDeposit]] = None,
        future_deposit : typing___Optional[typing___Iterable[type___PendingDeposit]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"future_deposit",b"future_deposit",u"next_deposit",b"next_deposit",u"type",b"type"]) -> None: ...
type___PendingDepositScenario = PendingDepositScenario

class PendingDeposit(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    transaction_fund_id: builtin___int = ...
    active: builtin___bool = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def debit_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def settle_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def ledger_entry(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LedgerEntry]: ...

    @property
    def effective_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        debit_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        settle_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        transaction_fund_id : typing___Optional[builtin___int] = None,
        ledger_entry : typing___Optional[typing___Iterable[type___LedgerEntry]] = None,
        active : typing___Optional[builtin___bool] = None,
        effective_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"active",b"active",u"amount",b"amount",u"debit_amount",b"debit_amount",u"effective_at",b"effective_at",u"settle_at",b"settle_at",u"token",b"token",u"transaction_fund_id",b"transaction_fund_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"active",b"active",u"amount",b"amount",u"debit_amount",b"debit_amount",u"effective_at",b"effective_at",u"ledger_entry",b"ledger_entry",u"settle_at",b"settle_at",u"token",b"token",u"transaction_fund_id",b"transaction_fund_id"]) -> None: ...
type___PendingDeposit = PendingDeposit

class PotentialCutoffTime(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...
    timezone: typing___Text = ...

    @property
    def cutoff_at(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___common___time_pb2___LocalTime]: ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        cutoff_at : typing___Optional[typing___Iterable[squareup___common___time_pb2___LocalTime]] = None,
        timezone : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"merchant_token",b"merchant_token",u"timezone",b"timezone"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cutoff_at",b"cutoff_at",u"merchant_token",b"merchant_token",u"timezone",b"timezone"]) -> None: ...
type___PotentialCutoffTime = PotentialCutoffTime

class MerchantCurrentDepositSchedule(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...

    @property
    def current_deposit_schedules(self) -> type___CurrentDepositSchedules: ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        current_deposit_schedules : typing___Optional[type___CurrentDepositSchedules] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_deposit_schedules",b"current_deposit_schedules",u"merchant_token",b"merchant_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_deposit_schedules",b"current_deposit_schedules",u"merchant_token",b"merchant_token"]) -> None: ...
type___MerchantCurrentDepositSchedule = MerchantCurrentDepositSchedule

class MerchantPotentialDepositSchedule(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...

    @property
    def current_deposit_schedules(self) -> type___CurrentDepositSchedules: ...

    @property
    def potential_next_schedule(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PotentialDepositSchedule]: ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        current_deposit_schedules : typing___Optional[type___CurrentDepositSchedules] = None,
        potential_next_schedule : typing___Optional[typing___Iterable[type___PotentialDepositSchedule]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_deposit_schedules",b"current_deposit_schedules",u"merchant_token",b"merchant_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_deposit_schedules",b"current_deposit_schedules",u"merchant_token",b"merchant_token",u"potential_next_schedule",b"potential_next_schedule"]) -> None: ...
type___MerchantPotentialDepositSchedule = MerchantPotentialDepositSchedule

class PotentialDepositSchedule(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def requested_cutoff_at(self) -> squareup___common___time_pb2___LocalTime: ...

    @property
    def deposit_schedule(self) -> type___DepositSchedule: ...

    def __init__(self,
        *,
        requested_cutoff_at : typing___Optional[squareup___common___time_pb2___LocalTime] = None,
        deposit_schedule : typing___Optional[type___DepositSchedule] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"deposit_schedule",b"deposit_schedule",u"requested_cutoff_at",b"requested_cutoff_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"deposit_schedule",b"deposit_schedule",u"requested_cutoff_at",b"requested_cutoff_at"]) -> None: ...
type___PotentialDepositSchedule = PotentialDepositSchedule

class CurrentDepositSchedules(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    custom_deposit_schedule: builtin___bool = ...
    has_user_set_custom_schedule: builtin___bool = ...

    @property
    def current_schedule(self) -> type___DepositSchedule: ...

    @property
    def current_next_schedule(self) -> type___DepositSchedule: ...

    def __init__(self,
        *,
        custom_deposit_schedule : typing___Optional[builtin___bool] = None,
        has_user_set_custom_schedule : typing___Optional[builtin___bool] = None,
        current_schedule : typing___Optional[type___DepositSchedule] = None,
        current_next_schedule : typing___Optional[type___DepositSchedule] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_next_schedule",b"current_next_schedule",u"current_schedule",b"current_schedule",u"custom_deposit_schedule",b"custom_deposit_schedule",u"has_user_set_custom_schedule",b"has_user_set_custom_schedule"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_next_schedule",b"current_next_schedule",u"current_schedule",b"current_schedule",u"custom_deposit_schedule",b"custom_deposit_schedule",u"has_user_set_custom_schedule",b"has_user_set_custom_schedule"]) -> None: ...
type___CurrentDepositSchedules = CurrentDepositSchedules

class DepositSchedule(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    timezone: typing___Text = ...
    settle_if_optional: builtin___bool = ...

    @property
    def effective_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def interval(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___DepositInterval]: ...

    def __init__(self,
        *,
        effective_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        interval : typing___Optional[typing___Iterable[type___DepositInterval]] = None,
        timezone : typing___Optional[typing___Text] = None,
        settle_if_optional : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"effective_at",b"effective_at",u"settle_if_optional",b"settle_if_optional",u"timezone",b"timezone"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"effective_at",b"effective_at",u"interval",b"interval",u"settle_if_optional",b"settle_if_optional",u"timezone",b"timezone"]) -> None: ...
type___DepositSchedule = DepositSchedule

class DepositInterval(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    same_day_settlement_enabled: builtin___bool = ...

    @property
    def cutoff_at(self) -> squareup___common___time_pb2___DayTime: ...

    @property
    def initiate_at(self) -> squareup___common___time_pb2___DayTime: ...

    def __init__(self,
        *,
        cutoff_at : typing___Optional[squareup___common___time_pb2___DayTime] = None,
        initiate_at : typing___Optional[squareup___common___time_pb2___DayTime] = None,
        same_day_settlement_enabled : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cutoff_at",b"cutoff_at",u"initiate_at",b"initiate_at",u"same_day_settlement_enabled",b"same_day_settlement_enabled"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cutoff_at",b"cutoff_at",u"initiate_at",b"initiate_at",u"same_day_settlement_enabled",b"same_day_settlement_enabled"]) -> None: ...
type___DepositInterval = DepositInterval

class MerchantAndDepositTag(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...
    deposit_tag: typing___Text = ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        deposit_tag : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"deposit_tag",b"deposit_tag",u"merchant_token",b"merchant_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"deposit_tag",b"deposit_tag",u"merchant_token",b"merchant_token"]) -> None: ...
type___MerchantAndDepositTag = MerchantAndDepositTag

class LedgerEntrySettlementState(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SettlementStateValue = typing___NewType('SettlementStateValue', builtin___int)
    type___SettlementStateValue = SettlementStateValue
    SettlementState: _SettlementState
    class _SettlementState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LedgerEntrySettlementState.SettlementStateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 0)
        UNSETTLED = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 1)
        SENT = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 2)
        RETRYING = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 3)
        SETTLED = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 4)
    UNKNOWN = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 0)
    UNSETTLED = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 1)
    SENT = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 2)
    RETRYING = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 3)
    SETTLED = typing___cast(LedgerEntrySettlementState.SettlementStateValue, 4)
    type___SettlementState = SettlementState

    class SettlementAttempt(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        bank_settlement_entry_token: typing___Text = ...
        is_credit: builtin___bool = ...
        bank_settlement_return_token: typing___Text = ...

        def __init__(self,
            *,
            bank_settlement_entry_token : typing___Optional[typing___Text] = None,
            is_credit : typing___Optional[builtin___bool] = None,
            bank_settlement_return_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"bank_settlement_return_token",b"bank_settlement_return_token",u"is_credit",b"is_credit"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"bank_settlement_return_token",b"bank_settlement_return_token",u"is_credit",b"is_credit"]) -> None: ...
    type___SettlementAttempt = SettlementAttempt

    class SettlementStateEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        settlement_state: type___LedgerEntrySettlementState.SettlementStateValue = ...

        @property
        def settlement_attempt(self) -> type___LedgerEntrySettlementState.SettlementAttempt: ...

        def __init__(self,
            *,
            settlement_state : typing___Optional[type___LedgerEntrySettlementState.SettlementStateValue] = None,
            settlement_attempt : typing___Optional[type___LedgerEntrySettlementState.SettlementAttempt] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"settlement_attempt",b"settlement_attempt",u"settlement_state",b"settlement_state"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"settlement_attempt",b"settlement_attempt",u"settlement_state",b"settlement_state"]) -> None: ...
    type___SettlementStateEvent = SettlementStateEvent

    ledger_entry_token: typing___Text = ...

    @property
    def settlement_state_events(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LedgerEntrySettlementState.SettlementStateEvent]: ...

    def __init__(self,
        *,
        ledger_entry_token : typing___Optional[typing___Text] = None,
        settlement_state_events : typing___Optional[typing___Iterable[type___LedgerEntrySettlementState.SettlementStateEvent]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ledger_entry_token",b"ledger_entry_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ledger_entry_token",b"ledger_entry_token",u"settlement_state_events",b"settlement_state_events"]) -> None: ...
type___LedgerEntrySettlementState = LedgerEntrySettlementState

class LedgerEntrySettlementStateEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ledger_entry_token: typing___Text = ...
    version: builtin___int = ...
    settlement_state: type___LedgerEntrySettlementState.SettlementStateValue = ...

    def __init__(self,
        *,
        ledger_entry_token : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        settlement_state : typing___Optional[type___LedgerEntrySettlementState.SettlementStateValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ledger_entry_token",b"ledger_entry_token",u"settlement_state",b"settlement_state",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ledger_entry_token",b"ledger_entry_token",u"settlement_state",b"settlement_state",u"version",b"version"]) -> None: ...
type___LedgerEntrySettlementStateEvent = LedgerEntrySettlementStateEvent

class SumByEntryTypeAndExternalSourceName(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entry_type: type___LedgerEntry.TypeValue = ...
    external_source_name: squareup___ledger___external_sources_pb2___ExternalSource.NameValue = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        entry_type : typing___Optional[type___LedgerEntry.TypeValue] = None,
        external_source_name : typing___Optional[squareup___ledger___external_sources_pb2___ExternalSource.NameValue] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"entry_type",b"entry_type",u"external_source_name",b"external_source_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"entry_type",b"entry_type",u"external_source_name",b"external_source_name"]) -> None: ...
type___SumByEntryTypeAndExternalSourceName = SumByEntryTypeAndExternalSourceName

class AdjustmentFee(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def start_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        start_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"start_at",b"start_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"start_at",b"start_at"]) -> None: ...
type___AdjustmentFee = AdjustmentFee

class LedgerEntrySummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Payments(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class Payment(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            payment_token: typing___Text = ...

            @property
            def payment_taken_at(self) -> squareup___common___time_pb2___DateTime: ...

            def __init__(self,
                *,
                payment_token : typing___Optional[typing___Text] = None,
                payment_taken_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"payment_taken_at",b"payment_taken_at",u"payment_token",b"payment_token"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"payment_taken_at",b"payment_taken_at",u"payment_token",b"payment_token"]) -> None: ...
        type___Payment = Payment

        payment_token: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

        @property
        def payment(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LedgerEntrySummary.Payments.Payment]: ...

        def __init__(self,
            *,
            payment_token : typing___Optional[typing___Iterable[typing___Text]] = None,
            payment : typing___Optional[typing___Iterable[type___LedgerEntrySummary.Payments.Payment]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"payment",b"payment",u"payment_token",b"payment_token"]) -> None: ...
    type___Payments = Payments

    class Refunds(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        refund_uuid: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
        legacy_fully_refunded_payment_token: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

        def __init__(self,
            *,
            refund_uuid : typing___Optional[typing___Iterable[typing___Text]] = None,
            legacy_fully_refunded_payment_token : typing___Optional[typing___Iterable[typing___Text]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"legacy_fully_refunded_payment_token",b"legacy_fully_refunded_payment_token",u"refund_uuid",b"refund_uuid"]) -> None: ...
    type___Refunds = Refunds

    class ToUserAmountByEntryTypeAndExternalSourceName(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def to_user_amount(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SumByEntryTypeAndExternalSourceName]: ...

        def __init__(self,
            *,
            to_user_amount : typing___Optional[typing___Iterable[type___SumByEntryTypeAndExternalSourceName]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"to_user_amount",b"to_user_amount"]) -> None: ...
    type___ToUserAmountByEntryTypeAndExternalSourceName = ToUserAmountByEntryTypeAndExternalSourceName

    class ToFeeAccountAmountByEntryTypeAndExternalSourceName(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def to_fee_account_amount(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SumByEntryTypeAndExternalSourceName]: ...

        def __init__(self,
            *,
            to_fee_account_amount : typing___Optional[typing___Iterable[type___SumByEntryTypeAndExternalSourceName]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"to_fee_account_amount",b"to_fee_account_amount"]) -> None: ...
    type___ToFeeAccountAmountByEntryTypeAndExternalSourceName = ToFeeAccountAmountByEntryTypeAndExternalSourceName

    class CostPlusFees(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def adjustment_fee_total(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def adjustment_fees(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___AdjustmentFee]: ...

        @property
        def monthly_fee(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            adjustment_fee_total : typing___Optional[squareup___common___currency_pb2___Money] = None,
            adjustment_fees : typing___Optional[typing___Iterable[type___AdjustmentFee]] = None,
            monthly_fee : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"adjustment_fee_total",b"adjustment_fee_total",u"monthly_fee",b"monthly_fee"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"adjustment_fee_total",b"adjustment_fee_total",u"adjustment_fees",b"adjustment_fees",u"monthly_fee",b"monthly_fee"]) -> None: ...
    type___CostPlusFees = CostPlusFees

    class HeldAndReleasedAmounts(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def total_held_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def total_released_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            total_held_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            total_released_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"total_held_money",b"total_held_money",u"total_released_money",b"total_released_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"total_held_money",b"total_held_money",u"total_released_money",b"total_released_money"]) -> None: ...
    type___HeldAndReleasedAmounts = HeldAndReleasedAmounts

    class ThirdPartyFees(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def third_party_fee_amount_detail(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___bills___tender_pb2___Tender.Amounts.ReportingAmounts.ProcessingFeeAmounts.ThirdPartyFeeAmountDetail]: ...

        def __init__(self,
            *,
            third_party_fee_amount_detail : typing___Optional[typing___Iterable[squareup___bills___tender_pb2___Tender.Amounts.ReportingAmounts.ProcessingFeeAmounts.ThirdPartyFeeAmountDetail]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"third_party_fee_amount_detail",b"third_party_fee_amount_detail"]) -> None: ...
    type___ThirdPartyFees = ThirdPartyFees

    bank_settlement_entry_token: typing___Text = ...

    @property
    def to_user_amount_by_entry_type_and_external_source_name(self) -> type___LedgerEntrySummary.ToUserAmountByEntryTypeAndExternalSourceName: ...

    @property
    def to_fee_account_amount_by_entry_type_and_external_source_name(self) -> type___LedgerEntrySummary.ToFeeAccountAmountByEntryTypeAndExternalSourceName: ...

    @property
    def payments(self) -> type___LedgerEntrySummary.Payments: ...

    @property
    def refunds(self) -> type___LedgerEntrySummary.Refunds: ...

    @property
    def cost_plus_fees(self) -> type___LedgerEntrySummary.CostPlusFees: ...

    @property
    def held_and_released_amounts(self) -> type___LedgerEntrySummary.HeldAndReleasedAmounts: ...

    @property
    def refunded_payments(self) -> type___LedgerEntrySummary.Payments: ...

    @property
    def third_party_fees(self) -> type___LedgerEntrySummary.ThirdPartyFees: ...

    def __init__(self,
        *,
        bank_settlement_entry_token : typing___Optional[typing___Text] = None,
        to_user_amount_by_entry_type_and_external_source_name : typing___Optional[type___LedgerEntrySummary.ToUserAmountByEntryTypeAndExternalSourceName] = None,
        to_fee_account_amount_by_entry_type_and_external_source_name : typing___Optional[type___LedgerEntrySummary.ToFeeAccountAmountByEntryTypeAndExternalSourceName] = None,
        payments : typing___Optional[type___LedgerEntrySummary.Payments] = None,
        refunds : typing___Optional[type___LedgerEntrySummary.Refunds] = None,
        cost_plus_fees : typing___Optional[type___LedgerEntrySummary.CostPlusFees] = None,
        held_and_released_amounts : typing___Optional[type___LedgerEntrySummary.HeldAndReleasedAmounts] = None,
        refunded_payments : typing___Optional[type___LedgerEntrySummary.Payments] = None,
        third_party_fees : typing___Optional[type___LedgerEntrySummary.ThirdPartyFees] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"cost_plus_fees",b"cost_plus_fees",u"held_and_released_amounts",b"held_and_released_amounts",u"payments",b"payments",u"refunded_payments",b"refunded_payments",u"refunds",b"refunds",u"third_party_fees",b"third_party_fees",u"to_fee_account_amount_by_entry_type_and_external_source_name",b"to_fee_account_amount_by_entry_type_and_external_source_name",u"to_user_amount_by_entry_type_and_external_source_name",b"to_user_amount_by_entry_type_and_external_source_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_settlement_entry_token",b"bank_settlement_entry_token",u"cost_plus_fees",b"cost_plus_fees",u"held_and_released_amounts",b"held_and_released_amounts",u"payments",b"payments",u"refunded_payments",b"refunded_payments",u"refunds",b"refunds",u"third_party_fees",b"third_party_fees",u"to_fee_account_amount_by_entry_type_and_external_source_name",b"to_fee_account_amount_by_entry_type_and_external_source_name",u"to_user_amount_by_entry_type_and_external_source_name",b"to_user_amount_by_entry_type_and_external_source_name"]) -> None: ...
type___LedgerEntrySummary = LedgerEntrySummary
