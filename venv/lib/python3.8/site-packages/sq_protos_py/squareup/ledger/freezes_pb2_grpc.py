# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.ledger import freezes_pb2 as squareup_dot_ledger_dot_freezes__pb2


class FreezeServiceStub(object):
    """* API endpoints for the freeze service 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/CreateFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.CreateFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.CreateFreezeResponse.FromString,
                )
        self.DeleteFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/DeleteFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.DeleteFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.DeleteFreezeResponse.FromString,
                )
        self.SetRiskFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetRiskFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetRiskFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetRiskFreezeResponse.FromString,
                )
        self.SetComplianceFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetComplianceFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetComplianceFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetComplianceFreezeResponse.FromString,
                )
        self.SetCivilProcessFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetCivilProcessFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetCivilProcessFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetCivilProcessFreezeResponse.FromString,
                )
        self.SetUnderInvestigationFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetUnderInvestigationFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetUnderInvestigationFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetUnderInvestigationFreezeResponse.FromString,
                )
        self.SetDebitBlockFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetDebitBlockFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetDebitBlockFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetDebitBlockFreezeResponse.FromString,
                )
        self.SetRecoveryOffsetFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetRecoveryOffsetFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetRecoveryOffsetFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetRecoveryOffsetFreezeResponse.FromString,
                )
        self.SetCreditRiskFreeze = channel.unary_unary(
                '/squareup.ledger.service.FreezeService/SetCreditRiskFreeze',
                request_serializer=squareup_dot_ledger_dot_freezes__pb2.SetCreditRiskFreezeRequest.SerializeToString,
                response_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetCreditRiskFreezeResponse.FromString,
                )


class FreezeServiceServicer(object):
    """* API endpoints for the freeze service 
    """

    def CreateFreeze(self, request, context):
        """* Create a freeze for a merchant. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFreeze(self, request, context):
        """* Delete a freeze for a merchant 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRiskFreeze(self, request, context):
        """* Set a risk freeze for a balance. Only accessible by risk systems or operations. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetComplianceFreeze(self, request, context):
        """* Set a compliance freeze for a balance. Only accessible by compliance systems or operations. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCivilProcessFreeze(self, request, context):
        """* Set a civil process freeze for a balance. Only accessible by civil process systems or operations. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUnderInvestigationFreeze(self, request, context):
        """* Set a under investigation freeze for a balance. Only accessible by trust and safety systems or operations. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDebitBlockFreeze(self, request, context):
        """*
        Set a debit block freeze for a balance. Legacy freeze that is supported only for Ledger-linked
        units with bank accounts.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetRecoveryOffsetFreeze(self, request, context):
        """* Set a recovery offset freeze for a balance. Only accesible by recovery's automated offsets systems. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCreditRiskFreeze(self, request, context):
        """* Set a credit risk freeze for a balance. Generic freeze applied by Credit Risk team. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FreezeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.CreateFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.CreateFreezeResponse.SerializeToString,
            ),
            'DeleteFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.DeleteFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.DeleteFreezeResponse.SerializeToString,
            ),
            'SetRiskFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRiskFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetRiskFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetRiskFreezeResponse.SerializeToString,
            ),
            'SetComplianceFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetComplianceFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetComplianceFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetComplianceFreezeResponse.SerializeToString,
            ),
            'SetCivilProcessFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCivilProcessFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetCivilProcessFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetCivilProcessFreezeResponse.SerializeToString,
            ),
            'SetUnderInvestigationFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUnderInvestigationFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetUnderInvestigationFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetUnderInvestigationFreezeResponse.SerializeToString,
            ),
            'SetDebitBlockFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDebitBlockFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetDebitBlockFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetDebitBlockFreezeResponse.SerializeToString,
            ),
            'SetRecoveryOffsetFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetRecoveryOffsetFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetRecoveryOffsetFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetRecoveryOffsetFreezeResponse.SerializeToString,
            ),
            'SetCreditRiskFreeze': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCreditRiskFreeze,
                    request_deserializer=squareup_dot_ledger_dot_freezes__pb2.SetCreditRiskFreezeRequest.FromString,
                    response_serializer=squareup_dot_ledger_dot_freezes__pb2.SetCreditRiskFreezeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.ledger.service.FreezeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FreezeService(object):
    """* API endpoints for the freeze service 
    """

    @staticmethod
    def CreateFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/CreateFreeze',
            squareup_dot_ledger_dot_freezes__pb2.CreateFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.CreateFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/DeleteFreeze',
            squareup_dot_ledger_dot_freezes__pb2.DeleteFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.DeleteFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRiskFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetRiskFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetRiskFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetRiskFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetComplianceFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetComplianceFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetComplianceFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetComplianceFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCivilProcessFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetCivilProcessFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetCivilProcessFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetCivilProcessFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUnderInvestigationFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetUnderInvestigationFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetUnderInvestigationFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetUnderInvestigationFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDebitBlockFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetDebitBlockFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetDebitBlockFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetDebitBlockFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetRecoveryOffsetFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetRecoveryOffsetFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetRecoveryOffsetFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetRecoveryOffsetFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCreditRiskFreeze(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.service.FreezeService/SetCreditRiskFreeze',
            squareup_dot_ledger_dot_freezes__pb2.SetCreditRiskFreezeRequest.SerializeToString,
            squareup_dot_ledger_dot_freezes__pb2.SetCreditRiskFreezeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
