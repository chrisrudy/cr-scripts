# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cetriggers import jobs_pb2 as squareup_dot_cetriggers_dot_jobs__pb2
from sq_protos_py.squareup.jobqueue import options_pb2 as squareup_dot_jobqueue_dot_options__pb2


class JobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessNewEvents = channel.unary_unary(
                '/squareup.cetriggers.JobService/ProcessNewEvents',
                request_serializer=squareup_dot_cetriggers_dot_jobs__pb2.ProcessNewEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.CronJob = channel.unary_unary(
                '/squareup.cetriggers.JobService/CronJob',
                request_serializer=squareup_dot_cetriggers_dot_jobs__pb2.CronJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.HandleOneMerchant = channel.unary_unary(
                '/squareup.cetriggers.JobService/HandleOneMerchant',
                request_serializer=squareup_dot_cetriggers_dot_jobs__pb2.HandleOneMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.PublishTriggerInstanceLater = channel.unary_unary(
                '/squareup.cetriggers.JobService/PublishTriggerInstanceLater',
                request_serializer=squareup_dot_cetriggers_dot_jobs__pb2.PublishTriggerInstanceLaterRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.CalculateSummary = channel.unary_unary(
                '/squareup.cetriggers.JobService/CalculateSummary',
                request_serializer=squareup_dot_cetriggers_dot_jobs__pb2.CalculateSummaryRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class JobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ProcessNewEvents(self, request, context):
        """Process new events for a buyer and create triggers if necessary.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CronJob(self, request, context):
        """CronJob runs at very low frequency (e.g., once a day) for non-event based triggers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleOneMerchant(self, request, context):
        """HandleOneMerchant handles one merchant at a time, usually for non-event based trigger.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishTriggerInstanceLater(self, request, context):
        """PublishTriggerInstanceLater publishes a trigger instance later for rate limitting purpose.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateSummary(self, request, context):
        """CalculateSummary calculate trigger instance summary and send daily emails.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessNewEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessNewEvents,
                    request_deserializer=squareup_dot_cetriggers_dot_jobs__pb2.ProcessNewEventsRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'CronJob': grpc.unary_unary_rpc_method_handler(
                    servicer.CronJob,
                    request_deserializer=squareup_dot_cetriggers_dot_jobs__pb2.CronJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'HandleOneMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleOneMerchant,
                    request_deserializer=squareup_dot_cetriggers_dot_jobs__pb2.HandleOneMerchantRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'PublishTriggerInstanceLater': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishTriggerInstanceLater,
                    request_deserializer=squareup_dot_cetriggers_dot_jobs__pb2.PublishTriggerInstanceLaterRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'CalculateSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateSummary,
                    request_deserializer=squareup_dot_cetriggers_dot_jobs__pb2.CalculateSummaryRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cetriggers.JobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ProcessNewEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cetriggers.JobService/ProcessNewEvents',
            squareup_dot_cetriggers_dot_jobs__pb2.ProcessNewEventsRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CronJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cetriggers.JobService/CronJob',
            squareup_dot_cetriggers_dot_jobs__pb2.CronJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleOneMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cetriggers.JobService/HandleOneMerchant',
            squareup_dot_cetriggers_dot_jobs__pb2.HandleOneMerchantRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishTriggerInstanceLater(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cetriggers.JobService/PublishTriggerInstanceLater',
            squareup_dot_cetriggers_dot_jobs__pb2.PublishTriggerInstanceLaterRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalculateSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cetriggers.JobService/CalculateSummary',
            squareup_dot_cetriggers_dot_jobs__pb2.CalculateSummaryRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
