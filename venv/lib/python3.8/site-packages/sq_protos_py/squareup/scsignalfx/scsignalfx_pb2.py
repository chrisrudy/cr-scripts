# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/scsignalfx/scsignalfx.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.signalfx import signalfx_pb2 as squareup_dot_signalfx_dot_signalfx__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/scsignalfx/scsignalfx.proto',
  package='squareup.scsignalfx',
  syntax='proto2',
  serialized_options=_b('\n0com.squareup.monitoring.signalfx.consumer.protosZ$square/up/protos/squareup/scsignalfx\210\001\001'),
  serialized_pb=_b('\n$squareup/scsignalfx/scsignalfx.proto\x12\x13squareup.scsignalfx\x1a squareup/signalfx/signalfx.proto\"\'\n\x0e\x43onvertRequest\x12\x15\n\rgraphite_path\x18\x01 \x03(\t\"<\n\x0f\x43onvertResponse\x12)\n\x06metric\x18\x01 \x03(\x0b\x32\x19.squareup.signalfx.Metric2i\n\x11SCSignalFxService\x12T\n\x07\x43onvert\x12#.squareup.scsignalfx.ConvertRequest\x1a$.squareup.scsignalfx.ConvertResponseB[\n0com.squareup.monitoring.signalfx.consumer.protosZ$square/up/protos/squareup/scsignalfx\x88\x01\x01')
  ,
  dependencies=[squareup_dot_signalfx_dot_signalfx__pb2.DESCRIPTOR,])




_CONVERTREQUEST = _descriptor.Descriptor(
  name='ConvertRequest',
  full_name='squareup.scsignalfx.ConvertRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='graphite_path', full_name='squareup.scsignalfx.ConvertRequest.graphite_path', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=134,
)


_CONVERTRESPONSE = _descriptor.Descriptor(
  name='ConvertResponse',
  full_name='squareup.scsignalfx.ConvertResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='metric', full_name='squareup.scsignalfx.ConvertResponse.metric', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=136,
  serialized_end=196,
)

_CONVERTRESPONSE.fields_by_name['metric'].message_type = squareup_dot_signalfx_dot_signalfx__pb2._METRIC
DESCRIPTOR.message_types_by_name['ConvertRequest'] = _CONVERTREQUEST
DESCRIPTOR.message_types_by_name['ConvertResponse'] = _CONVERTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConvertRequest = _reflection.GeneratedProtocolMessageType('ConvertRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONVERTREQUEST,
  '__module__' : 'squareup.scsignalfx.scsignalfx_pb2'
  # @@protoc_insertion_point(class_scope:squareup.scsignalfx.ConvertRequest)
  })
_sym_db.RegisterMessage(ConvertRequest)

ConvertResponse = _reflection.GeneratedProtocolMessageType('ConvertResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONVERTRESPONSE,
  '__module__' : 'squareup.scsignalfx.scsignalfx_pb2'
  # @@protoc_insertion_point(class_scope:squareup.scsignalfx.ConvertResponse)
  })
_sym_db.RegisterMessage(ConvertResponse)


DESCRIPTOR._options = None

_SCSIGNALFXSERVICE = _descriptor.ServiceDescriptor(
  name='SCSignalFxService',
  full_name='squareup.scsignalfx.SCSignalFxService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=198,
  serialized_end=303,
  methods=[
  _descriptor.MethodDescriptor(
    name='Convert',
    full_name='squareup.scsignalfx.SCSignalFxService.Convert',
    index=0,
    containing_service=None,
    input_type=_CONVERTREQUEST,
    output_type=_CONVERTRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SCSIGNALFXSERVICE)

DESCRIPTOR.services_by_name['SCSignalFxService'] = _SCSIGNALFXSERVICE

# @@protoc_insertion_point(module_scope)
