# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.xp.v1.common_pb2 import (
    Error as squareup___xp___v1___common_pb2___Error,
)

from sq_protos_py.squareup.xp.v1.items.data.discount_pb2 import (
    Discount as squareup___xp___v1___items___data___discount_pb2___Discount,
)

from sq_protos_py.squareup.xp.v1.items.data.fees_pb2 import (
    Fee as squareup___xp___v1___items___data___fees_pb2___Fee,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class TotalAmounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def total_collected_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def additive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def inclusive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def discount_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tip_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        total_collected_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        additive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        inclusive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        discount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tip_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"additive_tax_money",b"additive_tax_money",u"discount_money",b"discount_money",u"inclusive_tax_money",b"inclusive_tax_money",u"tip_money",b"tip_money",u"total_collected_money",b"total_collected_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"additive_tax_money",b"additive_tax_money",u"discount_money",b"discount_money",u"inclusive_tax_money",b"inclusive_tax_money",u"tip_money",b"tip_money",u"total_collected_money",b"total_collected_money"]) -> None: ...
type___TotalAmounts = TotalAmounts

class Cart(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Itemization(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class ItemizationOption(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            id: typing___Text = ...
            exclude_item: builtin___bool = ...

            @property
            def applied_money(self) -> squareup___common___currency_pb2___Money: ...

            def __init__(self,
                *,
                id : typing___Optional[typing___Text] = None,
                exclude_item : typing___Optional[builtin___bool] = None,
                applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"exclude_item",b"exclude_item",u"id",b"id"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"exclude_item",b"exclude_item",u"id",b"id"]) -> None: ...
        type___ItemizationOption = ItemizationOption

        quantity: typing___Text = ...
        item_id: typing___Text = ...
        variation_id: typing___Text = ...
        note: typing___Text = ...

        @property
        def single_quantity_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def taxes(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Cart.Itemization.ItemizationOption]: ...

        @property
        def discounts(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Cart.Itemization.ItemizationOption]: ...

        @property
        def modifiers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Cart.Itemization.ItemizationOption]: ...

        @property
        def amounts(self) -> type___TotalAmounts: ...

        def __init__(self,
            *,
            quantity : typing___Optional[typing___Text] = None,
            single_quantity_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            item_id : typing___Optional[typing___Text] = None,
            variation_id : typing___Optional[typing___Text] = None,
            note : typing___Optional[typing___Text] = None,
            taxes : typing___Optional[typing___Iterable[type___Cart.Itemization.ItemizationOption]] = None,
            discounts : typing___Optional[typing___Iterable[type___Cart.Itemization.ItemizationOption]] = None,
            modifiers : typing___Optional[typing___Iterable[type___Cart.Itemization.ItemizationOption]] = None,
            amounts : typing___Optional[type___TotalAmounts] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"amounts",b"amounts",u"item_id",b"item_id",u"note",b"note",u"quantity",b"quantity",u"single_quantity_money",b"single_quantity_money",u"variation_id",b"variation_id"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"amounts",b"amounts",u"discounts",b"discounts",u"item_id",b"item_id",u"modifiers",b"modifiers",u"note",b"note",u"quantity",b"quantity",u"single_quantity_money",b"single_quantity_money",u"taxes",b"taxes",u"variation_id",b"variation_id"]) -> None: ...
    type___Itemization = Itemization

    id: typing___Text = ...
    created_at: typing___Text = ...
    reference_id: typing___Text = ...

    @property
    def total_amounts(self) -> type___TotalAmounts: ...

    @property
    def itemizations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Cart.Itemization]: ...

    @property
    def taxes(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___xp___v1___items___data___fees_pb2___Fee]: ...

    @property
    def discounts(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___xp___v1___items___data___discount_pb2___Discount]: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        total_amounts : typing___Optional[type___TotalAmounts] = None,
        created_at : typing___Optional[typing___Text] = None,
        reference_id : typing___Optional[typing___Text] = None,
        itemizations : typing___Optional[typing___Iterable[type___Cart.Itemization]] = None,
        taxes : typing___Optional[typing___Iterable[squareup___xp___v1___items___data___fees_pb2___Fee]] = None,
        discounts : typing___Optional[typing___Iterable[squareup___xp___v1___items___data___discount_pb2___Discount]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"id",b"id",u"reference_id",b"reference_id",u"total_amounts",b"total_amounts"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"discounts",b"discounts",u"id",b"id",u"itemizations",b"itemizations",u"reference_id",b"reference_id",u"taxes",b"taxes",u"total_amounts",b"total_amounts"]) -> None: ...
type___Cart = Cart

class CreateCartResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    success: builtin___bool = ...

    @property
    def total_amounts(self) -> type___TotalAmounts: ...

    @property
    def error(self) -> squareup___xp___v1___common_pb2___Error: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        total_amounts : typing___Optional[type___TotalAmounts] = None,
        success : typing___Optional[builtin___bool] = None,
        error : typing___Optional[squareup___xp___v1___common_pb2___Error] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"error",b"error",u"id",b"id",u"success",b"success",u"total_amounts",b"total_amounts"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"error",b"error",u"id",b"id",u"success",b"success",u"total_amounts",b"total_amounts"]) -> None: ...
type___CreateCartResponse = CreateCartResponse

class ShowCartRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___ShowCartRequest = ShowCartRequest

class ShowCartResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    success: builtin___bool = ...

    @property
    def cart(self) -> type___Cart: ...

    @property
    def error(self) -> squareup___xp___v1___common_pb2___Error: ...

    def __init__(self,
        *,
        cart : typing___Optional[type___Cart] = None,
        success : typing___Optional[builtin___bool] = None,
        error : typing___Optional[squareup___xp___v1___common_pb2___Error] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cart",b"cart",u"error",b"error",u"success",b"success"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cart",b"cart",u"error",b"error",u"success",b"success"]) -> None: ...
type___ShowCartResponse = ShowCartResponse
