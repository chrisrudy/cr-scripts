# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.colors_pb2 import (
    RGBAColor as squareup___common___colors_pb2___RGBAColor,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.tender_pb2 import (
    CardTenderTypeValue as squareup___common___tender_pb2___CardTenderTypeValue,
)

from sq_protos_py.squareup.items.items_pb2 import (
    Fee as squareup___items___items_pb2___Fee,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EntryMethodValue = typing___NewType('EntryMethodValue', builtin___int)
type___EntryMethodValue = EntryMethodValue
EntryMethod: _EntryMethod
class _EntryMethod(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EntryMethodValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    SCANNED = typing___cast(EntryMethodValue, 1)
    SWIPED = typing___cast(EntryMethodValue, 2)
    MANUAL = typing___cast(EntryMethodValue, 3)
    SQUARE_WALLET = typing___cast(EntryMethodValue, 4)
    SQUARE_CASH = typing___cast(EntryMethodValue, 5)
    WEB_FORM = typing___cast(EntryMethodValue, 6)
    OTHER = typing___cast(EntryMethodValue, 50)
SCANNED = typing___cast(EntryMethodValue, 1)
SWIPED = typing___cast(EntryMethodValue, 2)
MANUAL = typing___cast(EntryMethodValue, 3)
SQUARE_WALLET = typing___cast(EntryMethodValue, 4)
SQUARE_CASH = typing___cast(EntryMethodValue, 5)
WEB_FORM = typing___cast(EntryMethodValue, 6)
OTHER = typing___cast(EntryMethodValue, 50)
type___EntryMethod = EntryMethod

class Refund(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Refund.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        FULL = typing___cast(Refund.TypeValue, 1)
        PARTIAL = typing___cast(Refund.TypeValue, 2)
    FULL = typing___cast(Refund.TypeValue, 1)
    PARTIAL = typing___cast(Refund.TypeValue, 2)
    type___Type = Type

    type: type___Refund.TypeValue = ...
    created_at: typing___Text = ...
    processed_at: typing___Text = ...
    reason: typing___Text = ...
    payment_id: typing___Text = ...
    request_idempotence_key: typing___Text = ...
    merchant_id: typing___Text = ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_additive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_inclusive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_tip_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_discount_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        type : typing___Optional[type___Refund.TypeValue] = None,
        created_at : typing___Optional[typing___Text] = None,
        processed_at : typing___Optional[typing___Text] = None,
        reason : typing___Optional[typing___Text] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        payment_id : typing___Optional[typing___Text] = None,
        request_idempotence_key : typing___Optional[typing___Text] = None,
        merchant_id : typing___Optional[typing___Text] = None,
        refunded_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_additive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_inclusive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_tip_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_discount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"merchant_id",b"merchant_id",u"payment_id",b"payment_id",u"processed_at",b"processed_at",u"reason",b"reason",u"refunded_additive_tax_money",b"refunded_additive_tax_money",u"refunded_discount_money",b"refunded_discount_money",u"refunded_inclusive_tax_money",b"refunded_inclusive_tax_money",u"refunded_money",b"refunded_money",u"refunded_processing_fee_money",b"refunded_processing_fee_money",u"refunded_tip_money",b"refunded_tip_money",u"request_idempotence_key",b"request_idempotence_key",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"merchant_id",b"merchant_id",u"payment_id",b"payment_id",u"processed_at",b"processed_at",u"reason",b"reason",u"refunded_additive_tax_money",b"refunded_additive_tax_money",u"refunded_discount_money",b"refunded_discount_money",u"refunded_inclusive_tax_money",b"refunded_inclusive_tax_money",u"refunded_money",b"refunded_money",u"refunded_processing_fee_money",b"refunded_processing_fee_money",u"refunded_tip_money",b"refunded_tip_money",u"request_idempotence_key",b"request_idempotence_key",u"type",b"type"]) -> None: ...
type___Refund = Refund

class TaxSummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    rate: typing___Text = ...
    inclusion_type: squareup___items___items_pb2___Fee.InclusionTypeValue = ...
    fee_id: typing___Text = ...

    @property
    def applied_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        rate : typing___Optional[typing___Text] = None,
        inclusion_type : typing___Optional[squareup___items___items_pb2___Fee.InclusionTypeValue] = None,
        applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        fee_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"fee_id",b"fee_id",u"inclusion_type",b"inclusion_type",u"name",b"name",u"rate",b"rate"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"fee_id",b"fee_id",u"inclusion_type",b"inclusion_type",u"name",b"name",u"rate",b"rate"]) -> None: ...
type___TaxSummary = TaxSummary

class Discount(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    discount_id: typing___Text = ...

    @property
    def applied_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        discount_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"discount_id",b"discount_id",u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"discount_id",b"discount_id",u"name",b"name"]) -> None: ...
type___Discount = Discount

class Modifier(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    modifier_option_id: typing___Text = ...

    @property
    def applied_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        modifier_option_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"modifier_option_id",b"modifier_option_id",u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"applied_money",b"applied_money",u"modifier_option_id",b"modifier_option_id",u"name",b"name"]) -> None: ...
type___Modifier = Modifier

class ItemDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    category_name: typing___Text = ...
    sku: typing___Text = ...
    item_id: typing___Text = ...
    item_variation_id: typing___Text = ...

    @property
    def icon_color(self) -> squareup___common___colors_pb2___RGBAColor: ...

    def __init__(self,
        *,
        category_name : typing___Optional[typing___Text] = None,
        sku : typing___Optional[typing___Text] = None,
        icon_color : typing___Optional[squareup___common___colors_pb2___RGBAColor] = None,
        item_id : typing___Optional[typing___Text] = None,
        item_variation_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"category_name",b"category_name",u"icon_color",b"icon_color",u"item_id",b"item_id",u"item_variation_id",b"item_variation_id",u"sku",b"sku"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"category_name",b"category_name",u"icon_color",b"icon_color",u"item_id",b"item_id",u"item_variation_id",b"item_variation_id",u"sku",b"sku"]) -> None: ...
type___ItemDetail = ItemDetail

class Device(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    name: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name"]) -> None: ...
type___Device = Device

class Extension(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Metadata(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        key: typing___Text = ...
        value: typing___Text = ...

        def __init__(self,
            *,
            key : typing___Optional[typing___Text] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___Metadata = Metadata


    @property
    def metadata(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Extension.Metadata]: ...

    def __init__(self,
        *,
        metadata : typing___Optional[typing___Iterable[type___Extension.Metadata]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata"]) -> None: ...
type___Extension = Extension

class Tender(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Tender.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CREDIT_CARD = typing___cast(Tender.TypeValue, 1)
        SQUARE_WALLET = typing___cast(Tender.TypeValue, 2)
        SQUARE_GIFT_CARD = typing___cast(Tender.TypeValue, 3)
        CASH = typing___cast(Tender.TypeValue, 4)
        THIRD_PARTY_CARD = typing___cast(Tender.TypeValue, 5)
        OTHER = typing___cast(Tender.TypeValue, 100)
        NO_SALE = typing___cast(Tender.TypeValue, 102)
        UNKNOWN = typing___cast(Tender.TypeValue, 103)
    CREDIT_CARD = typing___cast(Tender.TypeValue, 1)
    SQUARE_WALLET = typing___cast(Tender.TypeValue, 2)
    SQUARE_GIFT_CARD = typing___cast(Tender.TypeValue, 3)
    CASH = typing___cast(Tender.TypeValue, 4)
    THIRD_PARTY_CARD = typing___cast(Tender.TypeValue, 5)
    OTHER = typing___cast(Tender.TypeValue, 100)
    NO_SALE = typing___cast(Tender.TypeValue, 102)
    UNKNOWN = typing___cast(Tender.TypeValue, 103)
    type___Type = Type

    type: type___Tender.TypeValue = ...
    payment_note: typing___Text = ...
    name: typing___Text = ...
    cardholder_name: typing___Text = ...
    id: typing___Text = ...
    card_brand: squareup___common___tender_pb2___CardTenderTypeValue = ...
    pan_suffix: typing___Text = ...
    entry_method: type___EntryMethodValue = ...
    receipt_url: typing___Text = ...
    employee_id: typing___Text = ...

    @property
    def total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tendered_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def change_back_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        type : typing___Optional[type___Tender.TypeValue] = None,
        payment_note : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        cardholder_name : typing___Optional[typing___Text] = None,
        id : typing___Optional[typing___Text] = None,
        total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tendered_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        change_back_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        card_brand : typing___Optional[squareup___common___tender_pb2___CardTenderTypeValue] = None,
        pan_suffix : typing___Optional[typing___Text] = None,
        entry_method : typing___Optional[type___EntryMethodValue] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        receipt_url : typing___Optional[typing___Text] = None,
        employee_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_brand",b"card_brand",u"cardholder_name",b"cardholder_name",u"change_back_money",b"change_back_money",u"employee_id",b"employee_id",u"entry_method",b"entry_method",u"id",b"id",u"name",b"name",u"pan_suffix",b"pan_suffix",u"payment_note",b"payment_note",u"receipt_url",b"receipt_url",u"refunded_money",b"refunded_money",u"tendered_money",b"tendered_money",u"total_money",b"total_money",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_brand",b"card_brand",u"cardholder_name",b"cardholder_name",u"change_back_money",b"change_back_money",u"employee_id",b"employee_id",u"entry_method",b"entry_method",u"id",b"id",u"name",b"name",u"pan_suffix",b"pan_suffix",u"payment_note",b"payment_note",u"receipt_url",b"receipt_url",u"refunded_money",b"refunded_money",u"tendered_money",b"tendered_money",u"total_money",b"total_money",u"type",b"type"]) -> None: ...
type___Tender = Tender

class Itemization(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Itemization.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ITEM = typing___cast(Itemization.TypeValue, 1)
        CUSTOM_AMOUNT = typing___cast(Itemization.TypeValue, 2)
        GIFT_CARD_ACTIVATION = typing___cast(Itemization.TypeValue, 3)
        GIFT_CARD_RELOAD = typing___cast(Itemization.TypeValue, 4)
        GIFT_CARD_UNKNOWN = typing___cast(Itemization.TypeValue, 5)
        OTHER = typing___cast(Itemization.TypeValue, 100)
    ITEM = typing___cast(Itemization.TypeValue, 1)
    CUSTOM_AMOUNT = typing___cast(Itemization.TypeValue, 2)
    GIFT_CARD_ACTIVATION = typing___cast(Itemization.TypeValue, 3)
    GIFT_CARD_RELOAD = typing___cast(Itemization.TypeValue, 4)
    GIFT_CARD_UNKNOWN = typing___cast(Itemization.TypeValue, 5)
    OTHER = typing___cast(Itemization.TypeValue, 100)
    type___Type = Type

    name: typing___Text = ...
    quantity: typing___Text = ...
    notes: typing___Text = ...
    item_variation_name: typing___Text = ...
    itemization_type: type___Itemization.TypeValue = ...

    @property
    def item_detail(self) -> type___ItemDetail: ...

    @property
    def total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def single_quantity_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def discount_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def taxes(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TaxSummary]: ...

    @property
    def discounts(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Discount]: ...

    @property
    def modifiers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Modifier]: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[typing___Text] = None,
        notes : typing___Optional[typing___Text] = None,
        item_variation_name : typing___Optional[typing___Text] = None,
        item_detail : typing___Optional[type___ItemDetail] = None,
        itemization_type : typing___Optional[type___Itemization.TypeValue] = None,
        total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        single_quantity_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        discount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        taxes : typing___Optional[typing___Iterable[type___TaxSummary]] = None,
        discounts : typing___Optional[typing___Iterable[type___Discount]] = None,
        modifiers : typing___Optional[typing___Iterable[type___Modifier]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"discount_money",b"discount_money",u"gross_sales_money",b"gross_sales_money",u"item_detail",b"item_detail",u"item_variation_name",b"item_variation_name",u"itemization_type",b"itemization_type",u"name",b"name",u"net_sales_money",b"net_sales_money",u"notes",b"notes",u"quantity",b"quantity",u"refunded_money",b"refunded_money",u"single_quantity_money",b"single_quantity_money",u"total_money",b"total_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"discount_money",b"discount_money",u"discounts",b"discounts",u"gross_sales_money",b"gross_sales_money",u"item_detail",b"item_detail",u"item_variation_name",b"item_variation_name",u"itemization_type",b"itemization_type",u"modifiers",b"modifiers",u"name",b"name",u"net_sales_money",b"net_sales_money",u"notes",b"notes",u"quantity",b"quantity",u"refunded_money",b"refunded_money",u"single_quantity_money",b"single_quantity_money",u"taxes",b"taxes",u"total_money",b"total_money"]) -> None: ...
type___Itemization = Itemization

class Payment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    merchant_id: typing___Text = ...
    creator_id: typing___Text = ...
    created_at: typing___Text = ...
    description: typing___Text = ...
    payment_url: typing___Text = ...
    receipt_url: typing___Text = ...
    reference_id: typing___Text = ...

    @property
    def device(self) -> type___Device: ...

    @property
    def inclusive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def additive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tip_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def discount_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def total_collected_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def net_total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def return_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def swedish_rounding_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def inclusive_tax(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TaxSummary]: ...

    @property
    def additive_tax(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TaxSummary]: ...

    @property
    def tender(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Tender]: ...

    @property
    def refunds(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Refund]: ...

    @property
    def itemizations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Itemization]: ...

    @property
    def extensions(self) -> type___Extension: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        merchant_id : typing___Optional[typing___Text] = None,
        creator_id : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        device : typing___Optional[type___Device] = None,
        payment_url : typing___Optional[typing___Text] = None,
        receipt_url : typing___Optional[typing___Text] = None,
        inclusive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        additive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tip_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        discount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        total_collected_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        net_total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        return_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        swedish_rounding_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        inclusive_tax : typing___Optional[typing___Iterable[type___TaxSummary]] = None,
        additive_tax : typing___Optional[typing___Iterable[type___TaxSummary]] = None,
        tender : typing___Optional[typing___Iterable[type___Tender]] = None,
        refunds : typing___Optional[typing___Iterable[type___Refund]] = None,
        itemizations : typing___Optional[typing___Iterable[type___Itemization]] = None,
        extensions : typing___Optional[type___Extension] = None,
        reference_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"additive_tax_money",b"additive_tax_money",u"created_at",b"created_at",u"creator_id",b"creator_id",u"description",b"description",u"device",b"device",u"discount_money",b"discount_money",u"extensions",b"extensions",u"gross_sales_money",b"gross_sales_money",u"id",b"id",u"inclusive_tax_money",b"inclusive_tax_money",u"merchant_id",b"merchant_id",u"net_sales_money",b"net_sales_money",u"net_total_money",b"net_total_money",u"payment_url",b"payment_url",u"processing_fee_money",b"processing_fee_money",u"receipt_url",b"receipt_url",u"reference_id",b"reference_id",u"refunded_money",b"refunded_money",u"return_money",b"return_money",u"swedish_rounding_money",b"swedish_rounding_money",u"tax_money",b"tax_money",u"tip_money",b"tip_money",u"total_collected_money",b"total_collected_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"additive_tax",b"additive_tax",u"additive_tax_money",b"additive_tax_money",u"created_at",b"created_at",u"creator_id",b"creator_id",u"description",b"description",u"device",b"device",u"discount_money",b"discount_money",u"extensions",b"extensions",u"gross_sales_money",b"gross_sales_money",u"id",b"id",u"inclusive_tax",b"inclusive_tax",u"inclusive_tax_money",b"inclusive_tax_money",u"itemizations",b"itemizations",u"merchant_id",b"merchant_id",u"net_sales_money",b"net_sales_money",u"net_total_money",b"net_total_money",u"payment_url",b"payment_url",u"processing_fee_money",b"processing_fee_money",u"receipt_url",b"receipt_url",u"reference_id",b"reference_id",u"refunded_money",b"refunded_money",u"refunds",b"refunds",u"return_money",b"return_money",u"swedish_rounding_money",b"swedish_rounding_money",u"tax_money",b"tax_money",u"tender",b"tender",u"tip_money",b"tip_money",u"total_collected_money",b"total_collected_money"]) -> None: ...
type___Payment = Payment
