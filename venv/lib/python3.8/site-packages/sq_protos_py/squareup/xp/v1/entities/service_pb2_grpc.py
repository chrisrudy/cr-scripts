# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.xp.v1.entities import businesses_pb2 as squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2
from sq_protos_py.squareup.xp.v1.entities import locations_pb2 as squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2


class XpEntitiesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListLocations = channel.unary_unary(
                '/squareup.xp.v1.entities.XpEntitiesService/ListLocations',
                request_serializer=squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2.ListLocationsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2.ListLocationsResponse.FromString,
                )
        self.ShowBusiness = channel.unary_unary(
                '/squareup.xp.v1.entities.XpEntitiesService/ShowBusiness',
                request_serializer=squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2.ShowBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2.ShowBusinessResponse.FromString,
                )


class XpEntitiesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListLocations(self, request, context):
        """* Lists all the units associated with a provided business (i.e. multiunit master account). 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowBusiness(self, request, context):
        """* Returns the multiunit master account for the unit specified in the request. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XpEntitiesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListLocations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLocations,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2.ListLocationsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2.ListLocationsResponse.SerializeToString,
            ),
            'ShowBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowBusiness,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2.ShowBusinessRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2.ShowBusinessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.xp.v1.entities.XpEntitiesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XpEntitiesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListLocations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.entities.XpEntitiesService/ListLocations',
            squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2.ListLocationsRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_entities_dot_locations__pb2.ListLocationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.entities.XpEntitiesService/ShowBusiness',
            squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2.ShowBusinessRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_entities_dot_businesses__pb2.ShowBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
