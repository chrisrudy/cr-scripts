# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.xp.v1.employees import timecards_pb2 as squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2


class XpTimecardServiceStub(object):
    """
    THE SERVICE


    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTimecards = channel.unary_unary(
                '/squareup.xp.v1.employees.XpTimecardService/ListTimecards',
                request_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardsResponse.FromString,
                )
        self.CreateTimecard = channel.unary_unary(
                '/squareup.xp.v1.employees.XpTimecardService/CreateTimecard',
                request_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.CreateTimecardRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.CreateTimecardResponse.FromString,
                )
        self.ShowTimecard = channel.unary_unary(
                '/squareup.xp.v1.employees.XpTimecardService/ShowTimecard',
                request_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ShowTimecardRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ShowTimecardResponse.FromString,
                )
        self.UpdateTimecard = channel.unary_unary(
                '/squareup.xp.v1.employees.XpTimecardService/UpdateTimecard',
                request_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.UpdateTimecardRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.UpdateTimecardResponse.FromString,
                )
        self.DeleteTimecard = channel.unary_unary(
                '/squareup.xp.v1.employees.XpTimecardService/DeleteTimecard',
                request_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.DeleteTimecardRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.DeleteTimecardResponse.FromString,
                )
        self.ListTimecardEvents = channel.unary_unary(
                '/squareup.xp.v1.employees.XpTimecardService/ListTimecardEvents',
                request_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardEventsResponse.FromString,
                )


class XpTimecardServiceServicer(object):
    """
    THE SERVICE


    """

    def ListTimecards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTimecard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShowTimecard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTimecard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTimecard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTimecardEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XpTimecardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTimecards': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTimecards,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardsResponse.SerializeToString,
            ),
            'CreateTimecard': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTimecard,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.CreateTimecardRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.CreateTimecardResponse.SerializeToString,
            ),
            'ShowTimecard': grpc.unary_unary_rpc_method_handler(
                    servicer.ShowTimecard,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ShowTimecardRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ShowTimecardResponse.SerializeToString,
            ),
            'UpdateTimecard': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTimecard,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.UpdateTimecardRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.UpdateTimecardResponse.SerializeToString,
            ),
            'DeleteTimecard': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTimecard,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.DeleteTimecardRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.DeleteTimecardResponse.SerializeToString,
            ),
            'ListTimecardEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTimecardEvents,
                    request_deserializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardEventsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardEventsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.xp.v1.employees.XpTimecardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XpTimecardService(object):
    """
    THE SERVICE


    """

    @staticmethod
    def ListTimecards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.employees.XpTimecardService/ListTimecards',
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardsRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTimecard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.employees.XpTimecardService/CreateTimecard',
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.CreateTimecardRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.CreateTimecardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShowTimecard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.employees.XpTimecardService/ShowTimecard',
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ShowTimecardRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ShowTimecardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTimecard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.employees.XpTimecardService/UpdateTimecard',
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.UpdateTimecardRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.UpdateTimecardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTimecard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.employees.XpTimecardService/DeleteTimecard',
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.DeleteTimecardRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.DeleteTimecardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTimecardEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.v1.employees.XpTimecardService/ListTimecardEvents',
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardEventsRequest.SerializeToString,
            squareup_dot_xp_dot_v1_dot_employees_dot_timecards__pb2.ListTimecardEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
