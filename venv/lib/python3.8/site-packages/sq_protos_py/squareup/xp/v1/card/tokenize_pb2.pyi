# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.bills.tender_pb2 import (
    CardTender as squareup___bills___tender_pb2___CardTender,
)

from sq_protos_py.squareup.xp.v1.common_pb2 import (
    Error as squareup___xp___v1___common_pb2___Error,
    GlobalAddress as squareup___xp___v1___common_pb2___GlobalAddress,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CardData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    number: typing___Text = ...
    exp_month: typing___Text = ...
    exp_year: typing___Text = ...
    security_code: typing___Text = ...
    encrypted_card: typing___Text = ...
    name: typing___Text = ...
    client_id: typing___Text = ...
    verify_card: builtin___bool = ...
    sandbox: builtin___bool = ...

    @property
    def address(self) -> squareup___xp___v1___common_pb2___GlobalAddress: ...

    def __init__(self,
        *,
        number : typing___Optional[typing___Text] = None,
        exp_month : typing___Optional[typing___Text] = None,
        exp_year : typing___Optional[typing___Text] = None,
        security_code : typing___Optional[typing___Text] = None,
        encrypted_card : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        address : typing___Optional[squareup___xp___v1___common_pb2___GlobalAddress] = None,
        client_id : typing___Optional[typing___Text] = None,
        verify_card : typing___Optional[builtin___bool] = None,
        sandbox : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"client_id",b"client_id",u"encrypted_card",b"encrypted_card",u"exp_month",b"exp_month",u"exp_year",b"exp_year",u"name",b"name",u"number",b"number",u"sandbox",b"sandbox",u"security_code",b"security_code",u"verify_card",b"verify_card"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"client_id",b"client_id",u"encrypted_card",b"encrypted_card",u"exp_month",b"exp_month",u"exp_year",b"exp_year",u"name",b"name",u"number",b"number",u"sandbox",b"sandbox",u"security_code",b"security_code",u"verify_card",b"verify_card"]) -> None: ...
type___CardData = CardData

class TokenizeCardResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    card_token: typing___Text = ...
    card_type: squareup___bills___tender_pb2___CardTender.Card.BrandValue = ...
    pan_suffix: typing___Text = ...
    expires_at: typing___Text = ...
    success: builtin___bool = ...

    @property
    def error(self) -> squareup___xp___v1___common_pb2___Error: ...

    def __init__(self,
        *,
        card_token : typing___Optional[typing___Text] = None,
        card_type : typing___Optional[squareup___bills___tender_pb2___CardTender.Card.BrandValue] = None,
        pan_suffix : typing___Optional[typing___Text] = None,
        expires_at : typing___Optional[typing___Text] = None,
        success : typing___Optional[builtin___bool] = None,
        error : typing___Optional[squareup___xp___v1___common_pb2___Error] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_token",b"card_token",u"card_type",b"card_type",u"error",b"error",u"expires_at",b"expires_at",u"pan_suffix",b"pan_suffix",u"success",b"success"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_token",b"card_token",u"card_type",b"card_type",u"error",b"error",u"expires_at",b"expires_at",u"pan_suffix",b"pan_suffix",u"success",b"success"]) -> None: ...
type___TokenizeCardResponse = TokenizeCardResponse
