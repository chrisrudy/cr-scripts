# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Timecard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    clockin_time: typing___Text = ...
    clockout_time: typing___Text = ...
    employee_id: typing___Text = ...
    clockin_location_id: typing___Text = ...
    clockout_location_id: typing___Text = ...
    regular_seconds_worked: builtin___int = ...
    overtime_seconds_worked: builtin___int = ...
    doubletime_seconds_worked: builtin___int = ...
    deleted: builtin___bool = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        clockin_time : typing___Optional[typing___Text] = None,
        clockout_time : typing___Optional[typing___Text] = None,
        employee_id : typing___Optional[typing___Text] = None,
        clockin_location_id : typing___Optional[typing___Text] = None,
        clockout_location_id : typing___Optional[typing___Text] = None,
        regular_seconds_worked : typing___Optional[builtin___int] = None,
        overtime_seconds_worked : typing___Optional[builtin___int] = None,
        doubletime_seconds_worked : typing___Optional[builtin___int] = None,
        deleted : typing___Optional[builtin___bool] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"clockin_location_id",b"clockin_location_id",u"clockin_time",b"clockin_time",u"clockout_location_id",b"clockout_location_id",u"clockout_time",b"clockout_time",u"created_at",b"created_at",u"deleted",b"deleted",u"doubletime_seconds_worked",b"doubletime_seconds_worked",u"employee_id",b"employee_id",u"id",b"id",u"overtime_seconds_worked",b"overtime_seconds_worked",u"regular_seconds_worked",b"regular_seconds_worked",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"clockin_location_id",b"clockin_location_id",u"clockin_time",b"clockin_time",u"clockout_location_id",b"clockout_location_id",u"clockout_time",b"clockout_time",u"created_at",b"created_at",u"deleted",b"deleted",u"doubletime_seconds_worked",b"doubletime_seconds_worked",u"employee_id",b"employee_id",u"id",b"id",u"overtime_seconds_worked",b"overtime_seconds_worked",u"regular_seconds_worked",b"regular_seconds_worked",u"updated_at",b"updated_at"]) -> None: ...
type___Timecard = Timecard

class TimecardEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TimecardEvent.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        REGISTER_CLOCKIN = typing___cast(TimecardEvent.EventTypeValue, 1)
        REGISTER_CLOCKOUT = typing___cast(TimecardEvent.EventTypeValue, 2)
        DASHBOARD_SUPERVISOR_CLOSE = typing___cast(TimecardEvent.EventTypeValue, 3)
        DASHBOARD_EDIT = typing___cast(TimecardEvent.EventTypeValue, 4)
        API_CREATE = typing___cast(TimecardEvent.EventTypeValue, 5)
        API_EDIT = typing___cast(TimecardEvent.EventTypeValue, 6)
        DASHBOARD_DELETE = typing___cast(TimecardEvent.EventTypeValue, 7)
        API_DELETE = typing___cast(TimecardEvent.EventTypeValue, 8)
        OTHER = typing___cast(TimecardEvent.EventTypeValue, 100)
    REGISTER_CLOCKIN = typing___cast(TimecardEvent.EventTypeValue, 1)
    REGISTER_CLOCKOUT = typing___cast(TimecardEvent.EventTypeValue, 2)
    DASHBOARD_SUPERVISOR_CLOSE = typing___cast(TimecardEvent.EventTypeValue, 3)
    DASHBOARD_EDIT = typing___cast(TimecardEvent.EventTypeValue, 4)
    API_CREATE = typing___cast(TimecardEvent.EventTypeValue, 5)
    API_EDIT = typing___cast(TimecardEvent.EventTypeValue, 6)
    DASHBOARD_DELETE = typing___cast(TimecardEvent.EventTypeValue, 7)
    API_DELETE = typing___cast(TimecardEvent.EventTypeValue, 8)
    OTHER = typing___cast(TimecardEvent.EventTypeValue, 100)
    type___EventType = EventType

    id: typing___Text = ...
    clockin_time: typing___Text = ...
    clockout_time: typing___Text = ...
    event_type: type___TimecardEvent.EventTypeValue = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        clockin_time : typing___Optional[typing___Text] = None,
        clockout_time : typing___Optional[typing___Text] = None,
        event_type : typing___Optional[type___TimecardEvent.EventTypeValue] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"clockin_time",b"clockin_time",u"clockout_time",b"clockout_time",u"created_at",b"created_at",u"event_type",b"event_type",u"id",b"id",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"clockin_time",b"clockin_time",u"clockout_time",b"clockout_time",u"created_at",b"created_at",u"event_type",b"event_type",u"id",b"id",u"updated_at",b"updated_at"]) -> None: ...
type___TimecardEvent = TimecardEvent
