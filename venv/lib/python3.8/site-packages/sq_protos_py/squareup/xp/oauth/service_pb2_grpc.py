# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.xp.oauth import service_pb2 as squareup_dot_xp_dot_oauth_dot_service__pb2


class XpOauthAuthorizationServiceStub(object):
    """*
    A service that implements any writable service endpoints
    For operating on Oauth Authorizations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAuthorization = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthAuthorizationService/CreateAuthorization',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationResponse.FromString,
                )
        self.CreateNonExpiringAuthorization = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthAuthorizationService/CreateNonExpiringAuthorization',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateNonExpiringAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationResponse.FromString,
                )
        self.RevokeAuthorization = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthAuthorizationService/RevokeAuthorization',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.RevokeAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.RevokeAuthorizationResponse.FromString,
                )


class XpOauthAuthorizationServiceServicer(object):
    """*
    A service that implements any writable service endpoints
    For operating on Oauth Authorizations
    """

    def CreateAuthorization(self, request, context):
        """* Limited authorization creation 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNonExpiringAuthorization(self, request, context):
        """* Authorization creation that doesn't expire 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeAuthorization(self, request, context):
        """* Revoke authorization 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XpOauthAuthorizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAuthorization,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationResponse.SerializeToString,
            ),
            'CreateNonExpiringAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNonExpiringAuthorization,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateNonExpiringAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationResponse.SerializeToString,
            ),
            'RevokeAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeAuthorization,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.RevokeAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.RevokeAuthorizationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.xp.oauth.XpOauthAuthorizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XpOauthAuthorizationService(object):
    """*
    A service that implements any writable service endpoints
    For operating on Oauth Authorizations
    """

    @staticmethod
    def CreateAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthAuthorizationService/CreateAuthorization',
            squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateNonExpiringAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthAuthorizationService/CreateNonExpiringAuthorization',
            squareup_dot_xp_dot_oauth_dot_service__pb2.CreateNonExpiringAuthorizationRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.CreateAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthAuthorizationService/RevokeAuthorization',
            squareup_dot_xp_dot_oauth_dot_service__pb2.RevokeAuthorizationRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.RevokeAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class XpOauthServiceStub(object):
    """*
    A lookup and verification service for OAuth accounts
    These are READ ONLY endpoints
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LookupClients = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupClients',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientsResponse.FromString,
                )
        self.LookupClient = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupClient',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientResponse.FromString,
                )
        self.VerifyClientMessage = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/VerifyClientMessage',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.VerifyClientMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.VerifyClientMessageResponse.FromString,
                )
        self.Validate = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/Validate',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidationRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidationResponse.FromString,
                )
        self.ValidateByApplicationAndUserToken = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/ValidateByApplicationAndUserToken',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByApplicationAndUserTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByApplicationAndUserTokenResponse.FromString,
                )
        self.ValidateByAuthorizationToken = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/ValidateByAuthorizationToken',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByAuthorizationTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByAuthorizationTokenResponse.FromString,
                )
        self.AuthenticateClient = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/AuthenticateClient',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.AuthenticateClientRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.AuthenticateClientResponse.FromString,
                )
        self.LookupMerchantAuthorizations = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupMerchantAuthorizations',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupMerchantAuthorizationsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupMerchantAuthorizationsResponse.FromString,
                )
        self.LookupAuthorization = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupAuthorization',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizationResponse.FromString,
                )
        self.LookupRegisterApiAuthorizedClients = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupRegisterApiAuthorizedClients',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupRegisterApiAuthorizedClientsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupRegisterApiAuthorizedClientsResponse.FromString,
                )
        self.ValidateVersion = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/ValidateVersion',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateVersionRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateVersionResponse.FromString,
                )
        self.LookupAuthorizedClients = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupAuthorizedClients',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizedClientsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizedClientsResponse.FromString,
                )
        self.LookupSandboxClientAuthorizations = channel.unary_unary(
                '/squareup.xp.oauth.XpOauthService/LookupSandboxClientAuthorizations',
                request_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupSandboxClientAuthorizationsRequest.SerializeToString,
                response_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupSandboxClientAuthorizationsResponse.FromString,
                )


class XpOauthServiceServicer(object):
    """*
    A lookup and verification service for OAuth accounts
    These are READ ONLY endpoints
    """

    def LookupClients(self, request, context):
        """* Lookup OAuth Clients by owner user token 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupClient(self, request, context):
        """* Lookup OAuth Clients by client id 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyClientMessage(self, request, context):
        """* Verify HMAC message and signature for a client with its secret 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Validate(self, request, context):
        """* Validate access token and return authorization information 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateByApplicationAndUserToken(self, request, context):
        """* Validate application and user tokens and return authorization information 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateByAuthorizationToken(self, request, context):
        """* Validate authorization token and return authorization information 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateClient(self, request, context):
        """* Authenticates the client via an id and secret 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupMerchantAuthorizations(self, request, context):
        """* Lookup authorizations belonging to a merchant by merchant user token 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupAuthorization(self, request, context):
        """* Lookup authorization by id or token 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupRegisterApiAuthorizedClients(self, request, context):
        """* Lookup clients that are authorized to use Register API for the provided user 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateVersion(self, request, context):
        """* Validate version value and return error if the version does not exist 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupAuthorizedClients(self, request, context):
        """* Lookup client ids by accounts that are authorized with the provided scope 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupSandboxClientAuthorizations(self, request, context):
        """*
        Lookup information about authorizations by client id
        WARNING: this can only be used in sandbox.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XpOauthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LookupClients': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupClients,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientsResponse.SerializeToString,
            ),
            'LookupClient': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupClient,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientResponse.SerializeToString,
            ),
            'VerifyClientMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyClientMessage,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.VerifyClientMessageRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.VerifyClientMessageResponse.SerializeToString,
            ),
            'Validate': grpc.unary_unary_rpc_method_handler(
                    servicer.Validate,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidationRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidationResponse.SerializeToString,
            ),
            'ValidateByApplicationAndUserToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateByApplicationAndUserToken,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByApplicationAndUserTokenRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByApplicationAndUserTokenResponse.SerializeToString,
            ),
            'ValidateByAuthorizationToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateByAuthorizationToken,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByAuthorizationTokenRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByAuthorizationTokenResponse.SerializeToString,
            ),
            'AuthenticateClient': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateClient,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.AuthenticateClientRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.AuthenticateClientResponse.SerializeToString,
            ),
            'LookupMerchantAuthorizations': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupMerchantAuthorizations,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupMerchantAuthorizationsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupMerchantAuthorizationsResponse.SerializeToString,
            ),
            'LookupAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupAuthorization,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizationResponse.SerializeToString,
            ),
            'LookupRegisterApiAuthorizedClients': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupRegisterApiAuthorizedClients,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupRegisterApiAuthorizedClientsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupRegisterApiAuthorizedClientsResponse.SerializeToString,
            ),
            'ValidateVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateVersion,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateVersionRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateVersionResponse.SerializeToString,
            ),
            'LookupAuthorizedClients': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupAuthorizedClients,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizedClientsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizedClientsResponse.SerializeToString,
            ),
            'LookupSandboxClientAuthorizations': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupSandboxClientAuthorizations,
                    request_deserializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupSandboxClientAuthorizationsRequest.FromString,
                    response_serializer=squareup_dot_xp_dot_oauth_dot_service__pb2.LookupSandboxClientAuthorizationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.xp.oauth.XpOauthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XpOauthService(object):
    """*
    A lookup and verification service for OAuth accounts
    These are READ ONLY endpoints
    """

    @staticmethod
    def LookupClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupClients',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientsRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupClient',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyClientMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/VerifyClientMessage',
            squareup_dot_xp_dot_oauth_dot_service__pb2.VerifyClientMessageRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.VerifyClientMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Validate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/Validate',
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidationRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateByApplicationAndUserToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/ValidateByApplicationAndUserToken',
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByApplicationAndUserTokenRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByApplicationAndUserTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateByAuthorizationToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/ValidateByAuthorizationToken',
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByAuthorizationTokenRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateByAuthorizationTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AuthenticateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/AuthenticateClient',
            squareup_dot_xp_dot_oauth_dot_service__pb2.AuthenticateClientRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.AuthenticateClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupMerchantAuthorizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupMerchantAuthorizations',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupMerchantAuthorizationsRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupMerchantAuthorizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupAuthorization',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizationRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupRegisterApiAuthorizedClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupRegisterApiAuthorizedClients',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupRegisterApiAuthorizedClientsRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupRegisterApiAuthorizedClientsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/ValidateVersion',
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateVersionRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.ValidateVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupAuthorizedClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupAuthorizedClients',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizedClientsRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupAuthorizedClientsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupSandboxClientAuthorizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.xp.oauth.XpOauthService/LookupSandboxClientAuthorizations',
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupSandboxClientAuthorizationsRequest.SerializeToString,
            squareup_dot_xp_dot_oauth_dot_service__pb2.LookupSandboxClientAuthorizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
