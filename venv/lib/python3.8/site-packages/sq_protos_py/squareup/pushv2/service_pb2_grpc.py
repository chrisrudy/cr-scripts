# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.pushv2 import service_pb2 as squareup_dot_pushv2_dot_service__pb2


class Pushv2ServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NotifyDevice = channel.unary_unary(
                '/squareup.pushv2.service.Pushv2Service/NotifyDevice',
                request_serializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceRequest.SerializeToString,
                response_deserializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceResponse.FromString,
                )
        self.NotifyDeviceSynchronous = channel.unary_unary(
                '/squareup.pushv2.service.Pushv2Service/NotifyDeviceSynchronous',
                request_serializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceRequest.SerializeToString,
                response_deserializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceResponse.FromString,
                )


class Pushv2ServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NotifyDevice(self, request, context):
        """*
        Send notification to a device, giving a specific push token and payload.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyDeviceSynchronous(self, request, context):
        """*
        Send notification to a device, giving a specific push token and payload.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Pushv2ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NotifyDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyDevice,
                    request_deserializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceRequest.FromString,
                    response_serializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceResponse.SerializeToString,
            ),
            'NotifyDeviceSynchronous': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyDeviceSynchronous,
                    request_deserializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceRequest.FromString,
                    response_serializer=squareup_dot_pushv2_dot_service__pb2.NotifyDeviceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.pushv2.service.Pushv2Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Pushv2Service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NotifyDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.pushv2.service.Pushv2Service/NotifyDevice',
            squareup_dot_pushv2_dot_service__pb2.NotifyDeviceRequest.SerializeToString,
            squareup_dot_pushv2_dot_service__pb2.NotifyDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyDeviceSynchronous(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.pushv2.service.Pushv2Service/NotifyDeviceSynchronous',
            squareup_dot_pushv2_dot_service__pb2.NotifyDeviceRequest.SerializeToString,
            squareup_dot_pushv2_dot_service__pb2.NotifyDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class Pushv2AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ForceRunNotification = channel.unary_unary(
                '/squareup.pushv2.service.Pushv2AdminService/ForceRunNotification',
                request_serializer=squareup_dot_pushv2_dot_service__pb2.ForceRunNotificationRequest.SerializeToString,
                response_deserializer=squareup_dot_pushv2_dot_service__pb2.ForceRunNotificationResponse.FromString,
                )
        self.GetDeadJobs = channel.unary_unary(
                '/squareup.pushv2.service.Pushv2AdminService/GetDeadJobs',
                request_serializer=squareup_dot_pushv2_dot_service__pb2.GetDeadJobsRequest.SerializeToString,
                response_deserializer=squareup_dot_pushv2_dot_service__pb2.GetDeadJobsResponse.FromString,
                )
        self.ReEnqueueAllOrphanJobs = channel.unary_unary(
                '/squareup.pushv2.service.Pushv2AdminService/ReEnqueueAllOrphanJobs',
                request_serializer=squareup_dot_pushv2_dot_service__pb2.ReEnqueueAllOrphanJobsRequest.SerializeToString,
                response_deserializer=squareup_dot_pushv2_dot_service__pb2.ReEnqueueAllOrphanJobsResponse.FromString,
                )
        self.GetPushRecord = channel.unary_unary(
                '/squareup.pushv2.service.Pushv2AdminService/GetPushRecord',
                request_serializer=squareup_dot_pushv2_dot_service__pb2.GetPushRecordRequest.SerializeToString,
                response_deserializer=squareup_dot_pushv2_dot_service__pb2.GetPushRecordResponse.FromString,
                )


class Pushv2AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ForceRunNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeadJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReEnqueueAllOrphanJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPushRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Pushv2AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ForceRunNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceRunNotification,
                    request_deserializer=squareup_dot_pushv2_dot_service__pb2.ForceRunNotificationRequest.FromString,
                    response_serializer=squareup_dot_pushv2_dot_service__pb2.ForceRunNotificationResponse.SerializeToString,
            ),
            'GetDeadJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeadJobs,
                    request_deserializer=squareup_dot_pushv2_dot_service__pb2.GetDeadJobsRequest.FromString,
                    response_serializer=squareup_dot_pushv2_dot_service__pb2.GetDeadJobsResponse.SerializeToString,
            ),
            'ReEnqueueAllOrphanJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ReEnqueueAllOrphanJobs,
                    request_deserializer=squareup_dot_pushv2_dot_service__pb2.ReEnqueueAllOrphanJobsRequest.FromString,
                    response_serializer=squareup_dot_pushv2_dot_service__pb2.ReEnqueueAllOrphanJobsResponse.SerializeToString,
            ),
            'GetPushRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPushRecord,
                    request_deserializer=squareup_dot_pushv2_dot_service__pb2.GetPushRecordRequest.FromString,
                    response_serializer=squareup_dot_pushv2_dot_service__pb2.GetPushRecordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.pushv2.service.Pushv2AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Pushv2AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ForceRunNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.pushv2.service.Pushv2AdminService/ForceRunNotification',
            squareup_dot_pushv2_dot_service__pb2.ForceRunNotificationRequest.SerializeToString,
            squareup_dot_pushv2_dot_service__pb2.ForceRunNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeadJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.pushv2.service.Pushv2AdminService/GetDeadJobs',
            squareup_dot_pushv2_dot_service__pb2.GetDeadJobsRequest.SerializeToString,
            squareup_dot_pushv2_dot_service__pb2.GetDeadJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReEnqueueAllOrphanJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.pushv2.service.Pushv2AdminService/ReEnqueueAllOrphanJobs',
            squareup_dot_pushv2_dot_service__pb2.ReEnqueueAllOrphanJobsRequest.SerializeToString,
            squareup_dot_pushv2_dot_service__pb2.ReEnqueueAllOrphanJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPushRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.pushv2.service.Pushv2AdminService/GetPushRecord',
            squareup_dot_pushv2_dot_service__pb2.GetPushRecordRequest.SerializeToString,
            squareup_dot_pushv2_dot_service__pb2.GetPushRecordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
