# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.common import messages_pb2 as squareup_dot_common_dot_messages__pb2
from sq_protos_py.squareup.precog.v2.events import common_pb2 as squareup_dot_precog_dot_v2_dot_events_dot_common__pb2
from sq_protos_py.squareup.precog.v2.events import external_pb2 as squareup_dot_precog_dot_v2_dot_events_dot_external__pb2


class PrecogEventExternalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Fetch = channel.unary_unary(
                '/squareup.precog.api.v2.events.external.PrecogEventExternalService/Fetch',
                request_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
                response_deserializer=squareup_dot_precog_dot_v2_dot_events_dot_common__pb2.FetchResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/squareup.precog.api.v2.events.external.PrecogEventExternalService/Create',
                request_serializer=squareup_dot_precog_dot_v2_dot_events_dot_external__pb2.CreateRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )


class PrecogEventExternalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Fetch(self, request, context):
        """Returns the events associated with the current logged-in merchant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Persists the event associated with the current logged-in merchant.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrecogEventExternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Fetch': grpc.unary_unary_rpc_method_handler(
                    servicer.Fetch,
                    request_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                    response_serializer=squareup_dot_precog_dot_v2_dot_events_dot_common__pb2.FetchResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=squareup_dot_precog_dot_v2_dot_events_dot_external__pb2.CreateRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.precog.api.v2.events.external.PrecogEventExternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrecogEventExternalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.precog.api.v2.events.external.PrecogEventExternalService/Fetch',
            squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            squareup_dot_precog_dot_v2_dot_events_dot_common__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.precog.api.v2.events.external.PrecogEventExternalService/Create',
            squareup_dot_precog_dot_v2_dot_events_dot_external__pb2.CreateRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
