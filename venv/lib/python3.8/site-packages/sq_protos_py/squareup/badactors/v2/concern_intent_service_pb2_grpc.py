# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.badactors.v2 import concern_intent_service_pb2 as squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2


class BadactorsConcernIntentServiceStub(object):
    """
    Service for manipulating Product Intents and linking to Compliance Concerns.
    This service is intended for use only by Compliance Leads, as it will change how products are screened.

    A Product Intent is something a product does that requires screening, e.g., Capital Signup.
    A Compliance Concern is decided by Compliance Leads as what the Product needs to check for,
    e.g., Transaction Laundering.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProductIntent = channel.unary_unary(
                '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/CreateProductIntent',
                request_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.CreateProductIntentRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.CreateProductIntentResponse.FromString,
                )
        self.LinkConcernIntent = channel.unary_unary(
                '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/LinkConcernIntent',
                request_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.LinkConcernIntentRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.LinkConcernIntentResponse.FromString,
                )
        self.UnlinkConcernIntent = channel.unary_unary(
                '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/UnlinkConcernIntent',
                request_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.UnlinkConcernIntentRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.UnlinkConcernIntentResponse.FromString,
                )
        self.FindComplianceConcernsByIntent = channel.unary_unary(
                '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/FindComplianceConcernsByIntent',
                request_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindComplianceConcernsByIntentRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindComplianceConcernsByIntentResponse.FromString,
                )
        self.FindProductIntentsByConcern = channel.unary_unary(
                '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/FindProductIntentsByConcern',
                request_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindProductIntentsByConcernRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindProductIntentsByConcernResponse.FromString,
                )


class BadactorsConcernIntentServiceServicer(object):
    """
    Service for manipulating Product Intents and linking to Compliance Concerns.
    This service is intended for use only by Compliance Leads, as it will change how products are screened.

    A Product Intent is something a product does that requires screening, e.g., Capital Signup.
    A Compliance Concern is decided by Compliance Leads as what the Product needs to check for,
    e.g., Transaction Laundering.
    """

    def CreateProductIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkConcernIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlinkConcernIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindComplianceConcernsByIntent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindProductIntentsByConcern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BadactorsConcernIntentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProductIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProductIntent,
                    request_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.CreateProductIntentRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.CreateProductIntentResponse.SerializeToString,
            ),
            'LinkConcernIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkConcernIntent,
                    request_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.LinkConcernIntentRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.LinkConcernIntentResponse.SerializeToString,
            ),
            'UnlinkConcernIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlinkConcernIntent,
                    request_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.UnlinkConcernIntentRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.UnlinkConcernIntentResponse.SerializeToString,
            ),
            'FindComplianceConcernsByIntent': grpc.unary_unary_rpc_method_handler(
                    servicer.FindComplianceConcernsByIntent,
                    request_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindComplianceConcernsByIntentRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindComplianceConcernsByIntentResponse.SerializeToString,
            ),
            'FindProductIntentsByConcern': grpc.unary_unary_rpc_method_handler(
                    servicer.FindProductIntentsByConcern,
                    request_deserializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindProductIntentsByConcernRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindProductIntentsByConcernResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BadactorsConcernIntentService(object):
    """
    Service for manipulating Product Intents and linking to Compliance Concerns.
    This service is intended for use only by Compliance Leads, as it will change how products are screened.

    A Product Intent is something a product does that requires screening, e.g., Capital Signup.
    A Compliance Concern is decided by Compliance Leads as what the Product needs to check for,
    e.g., Transaction Laundering.
    """

    @staticmethod
    def CreateProductIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/CreateProductIntent',
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.CreateProductIntentRequest.SerializeToString,
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.CreateProductIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkConcernIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/LinkConcernIntent',
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.LinkConcernIntentRequest.SerializeToString,
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.LinkConcernIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlinkConcernIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/UnlinkConcernIntent',
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.UnlinkConcernIntentRequest.SerializeToString,
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.UnlinkConcernIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindComplianceConcernsByIntent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/FindComplianceConcernsByIntent',
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindComplianceConcernsByIntentRequest.SerializeToString,
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindComplianceConcernsByIntentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindProductIntentsByConcern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.v2.service.concernintentservice.BadactorsConcernIntentService/FindProductIntentsByConcern',
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindProductIntentsByConcernRequest.SerializeToString,
            squareup_dot_badactors_dot_v2_dot_concern__intent__service__pb2.FindProductIntentsByConcernResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
