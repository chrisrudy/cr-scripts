# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.badactors import service_pb2 as squareup_dot_badactors_dot_service__pb2


class BadactorsServiceStub(object):
    """(DEPRECATED) BadActors v1 will be shut off Aug 1, 2020. Please contact #finceng for assistance migrating to v2. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LexisNexisLookup = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LexisNexisLookup',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisLookupRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisLookupResponse.FromString,
                )
        self.LexisNexisShowRawResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LexisNexisShowRawResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowRawResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowRawResultResponse.FromString,
                )
        self.LexisNexisShowResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LexisNexisShowResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowResultResponse.FromString,
                )
        self.LexisNexisUpdateResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LexisNexisUpdateResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisUpdateResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisUpdateResultResponse.FromString,
                )
        self.LexisNexisWhitelistResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LexisNexisWhitelistResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisWhitelistResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisWhitelistResultResponse.FromString,
                )
        self.LegitScriptReportAction = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LegitScriptReportAction',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LegitScriptReportActionRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LegitScriptReportActionResponse.FromString,
                )
        self.LegitScriptShowRawResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LegitScriptShowRawResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowRawResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowRawResultResponse.FromString,
                )
        self.LegitScriptShowResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/LegitScriptShowResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowResultResponse.FromString,
                )
        self.MastercardMatchShowRawResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/MastercardMatchShowRawResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowRawResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowRawResultResponse.FromString,
                )
        self.MastercardMatchShowResult = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/MastercardMatchShowResult',
                request_serializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowResultRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowResultResponse.FromString,
                )
        self.ScreenEntities = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/ScreenEntities',
                request_serializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesResponse.FromString,
                )
        self.ScreenEntitiesUnsafe = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/ScreenEntitiesUnsafe',
                request_serializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesResponse.FromString,
                )
        self.FindScreenResults = channel.unary_unary(
                '/squareup.badactors.service.BadactorsService/FindScreenResults',
                request_serializer=squareup_dot_badactors_dot_service__pb2.FindScreenResultsRequest.SerializeToString,
                response_deserializer=squareup_dot_badactors_dot_service__pb2.ScreenResultsResponse.FromString,
                )


class BadactorsServiceServicer(object):
    """(DEPRECATED) BadActors v1 will be shut off Aug 1, 2020. Please contact #finceng for assistance migrating to v2. 
    """

    def LexisNexisLookup(self, request, context):
        """(DEPRECATED) Submits N or more entities' information for watchlist matching with Lexis Nexis. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LexisNexisShowRawResult(self, request, context):
        """(DEPRECATED) Fetches watchlist hit results by the Bad Actors owned uniquely identifying token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LexisNexisShowResult(self, request, context):
        """(DEPRECATED) Fetches watchlist hit results by the Bad Actors owned uniquely identifying token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LexisNexisUpdateResult(self, request, context):
        """(DEPRECATED) Updates remote watchlist hit result state. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LexisNexisWhitelistResult(self, request, context):
        """(DEPRECATED) Clears a remote watchlist hit result and whitelists future screenings. Closes alert and marks false positive. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LegitScriptReportAction(self, request, context):
        """(DEPRECATED) Reports an action that Compliance Ops take on a merchant back to LegitScript. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LegitScriptShowRawResult(self, request, context):
        """(DEPRECATED) Fetches legitscript hit results by the Bad Actors owned uniquely identifying token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LegitScriptShowResult(self, request, context):
        """(DEPRECATED) Fetches legitscript hit results by the Bad Actors owned uniquely identifying token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MastercardMatchShowRawResult(self, request, context):
        """(DEPRECATED) Fetches Mastercard Match hit results by the Bad Actors owned uniquely identifying token.  
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MastercardMatchShowResult(self, request, context):
        """(DEPRECATED) Fetches Mastercard Match hit results by the Bad Actors owned uniquely identifying token.  
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScreenEntities(self, request, context):
        """(DEPRECATED) Submit N or more entities' information for screening on all Bad Actors managed vendors. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScreenEntitiesUnsafe(self, request, context):
        """Is to be reserved for compatibility with certain services. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindScreenResults(self, request, context):
        """(DEPRECATED) Fetches all Screen Results against a customer 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BadactorsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LexisNexisLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.LexisNexisLookup,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisLookupRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisLookupResponse.SerializeToString,
            ),
            'LexisNexisShowRawResult': grpc.unary_unary_rpc_method_handler(
                    servicer.LexisNexisShowRawResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowRawResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowRawResultResponse.SerializeToString,
            ),
            'LexisNexisShowResult': grpc.unary_unary_rpc_method_handler(
                    servicer.LexisNexisShowResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisShowResultResponse.SerializeToString,
            ),
            'LexisNexisUpdateResult': grpc.unary_unary_rpc_method_handler(
                    servicer.LexisNexisUpdateResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisUpdateResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisUpdateResultResponse.SerializeToString,
            ),
            'LexisNexisWhitelistResult': grpc.unary_unary_rpc_method_handler(
                    servicer.LexisNexisWhitelistResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LexisNexisWhitelistResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LexisNexisWhitelistResultResponse.SerializeToString,
            ),
            'LegitScriptReportAction': grpc.unary_unary_rpc_method_handler(
                    servicer.LegitScriptReportAction,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LegitScriptReportActionRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LegitScriptReportActionResponse.SerializeToString,
            ),
            'LegitScriptShowRawResult': grpc.unary_unary_rpc_method_handler(
                    servicer.LegitScriptShowRawResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowRawResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowRawResultResponse.SerializeToString,
            ),
            'LegitScriptShowResult': grpc.unary_unary_rpc_method_handler(
                    servicer.LegitScriptShowResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.LegitScriptShowResultResponse.SerializeToString,
            ),
            'MastercardMatchShowRawResult': grpc.unary_unary_rpc_method_handler(
                    servicer.MastercardMatchShowRawResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowRawResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowRawResultResponse.SerializeToString,
            ),
            'MastercardMatchShowResult': grpc.unary_unary_rpc_method_handler(
                    servicer.MastercardMatchShowResult,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowResultRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.MastercardMatchShowResultResponse.SerializeToString,
            ),
            'ScreenEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.ScreenEntities,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesResponse.SerializeToString,
            ),
            'ScreenEntitiesUnsafe': grpc.unary_unary_rpc_method_handler(
                    servicer.ScreenEntitiesUnsafe,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.ScreenEntitiesResponse.SerializeToString,
            ),
            'FindScreenResults': grpc.unary_unary_rpc_method_handler(
                    servicer.FindScreenResults,
                    request_deserializer=squareup_dot_badactors_dot_service__pb2.FindScreenResultsRequest.FromString,
                    response_serializer=squareup_dot_badactors_dot_service__pb2.ScreenResultsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.badactors.service.BadactorsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BadactorsService(object):
    """(DEPRECATED) BadActors v1 will be shut off Aug 1, 2020. Please contact #finceng for assistance migrating to v2. 
    """

    @staticmethod
    def LexisNexisLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LexisNexisLookup',
            squareup_dot_badactors_dot_service__pb2.LexisNexisLookupRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LexisNexisLookupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LexisNexisShowRawResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LexisNexisShowRawResult',
            squareup_dot_badactors_dot_service__pb2.LexisNexisShowRawResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LexisNexisShowRawResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LexisNexisShowResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LexisNexisShowResult',
            squareup_dot_badactors_dot_service__pb2.LexisNexisShowResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LexisNexisShowResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LexisNexisUpdateResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LexisNexisUpdateResult',
            squareup_dot_badactors_dot_service__pb2.LexisNexisUpdateResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LexisNexisUpdateResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LexisNexisWhitelistResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LexisNexisWhitelistResult',
            squareup_dot_badactors_dot_service__pb2.LexisNexisWhitelistResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LexisNexisWhitelistResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LegitScriptReportAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LegitScriptReportAction',
            squareup_dot_badactors_dot_service__pb2.LegitScriptReportActionRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LegitScriptReportActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LegitScriptShowRawResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LegitScriptShowRawResult',
            squareup_dot_badactors_dot_service__pb2.LegitScriptShowRawResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LegitScriptShowRawResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LegitScriptShowResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/LegitScriptShowResult',
            squareup_dot_badactors_dot_service__pb2.LegitScriptShowResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.LegitScriptShowResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MastercardMatchShowRawResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/MastercardMatchShowRawResult',
            squareup_dot_badactors_dot_service__pb2.MastercardMatchShowRawResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.MastercardMatchShowRawResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MastercardMatchShowResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/MastercardMatchShowResult',
            squareup_dot_badactors_dot_service__pb2.MastercardMatchShowResultRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.MastercardMatchShowResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScreenEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/ScreenEntities',
            squareup_dot_badactors_dot_service__pb2.ScreenEntitiesRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.ScreenEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScreenEntitiesUnsafe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/ScreenEntitiesUnsafe',
            squareup_dot_badactors_dot_service__pb2.ScreenEntitiesRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.ScreenEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindScreenResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.badactors.service.BadactorsService/FindScreenResults',
            squareup_dot_badactors_dot_service__pb2.FindScreenResultsRequest.SerializeToString,
            squareup_dot_badactors_dot_service__pb2.ScreenResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
