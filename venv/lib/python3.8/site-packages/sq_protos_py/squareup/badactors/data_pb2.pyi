# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.location_pb2 import (
    Address as squareup___common___location_pb2___Address,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EntityTypeValue = typing___NewType('EntityTypeValue', builtin___int)
type___EntityTypeValue = EntityTypeValue
EntityType: _EntityType
class _EntityType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EntityTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INDIVIDUAL = typing___cast(EntityTypeValue, 0)
    BUSINESS = typing___cast(EntityTypeValue, 1)
INDIVIDUAL = typing___cast(EntityTypeValue, 0)
BUSINESS = typing___cast(EntityTypeValue, 1)
type___EntityType = EntityType

CustomerTokenTypeValue = typing___NewType('CustomerTokenTypeValue', builtin___int)
type___CustomerTokenTypeValue = CustomerTokenTypeValue
CustomerTokenType: _CustomerTokenType
class _CustomerTokenType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CustomerTokenTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    REGISTER = typing___cast(CustomerTokenTypeValue, 0)
    FRANKLIN = typing___cast(CustomerTokenTypeValue, 1)
    CASH = typing___cast(CustomerTokenTypeValue, 2)
    CAPITAL = typing___cast(CustomerTokenTypeValue, 3)
    PAYROLL_EMPLOYEE = typing___cast(CustomerTokenTypeValue, 4)
    DEVELOPERS_API = typing___cast(CustomerTokenTypeValue, 5)
    LEGAL_ENTITY = typing___cast(CustomerTokenTypeValue, 6)
    CAPITAL_LEGAL_ENTITY = typing___cast(CustomerTokenTypeValue, 7)
REGISTER = typing___cast(CustomerTokenTypeValue, 0)
FRANKLIN = typing___cast(CustomerTokenTypeValue, 1)
CASH = typing___cast(CustomerTokenTypeValue, 2)
CAPITAL = typing___cast(CustomerTokenTypeValue, 3)
PAYROLL_EMPLOYEE = typing___cast(CustomerTokenTypeValue, 4)
DEVELOPERS_API = typing___cast(CustomerTokenTypeValue, 5)
LEGAL_ENTITY = typing___cast(CustomerTokenTypeValue, 6)
CAPITAL_LEGAL_ENTITY = typing___cast(CustomerTokenTypeValue, 7)
type___CustomerTokenType = CustomerTokenType

LexisNexisAlertStateValue = typing___NewType('LexisNexisAlertStateValue', builtin___int)
type___LexisNexisAlertStateValue = LexisNexisAlertStateValue
LexisNexisAlertState: _LexisNexisAlertState
class _LexisNexisAlertState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LexisNexisAlertStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ALERT_STATE_DEFAULT_DO_NOT_USE = typing___cast(LexisNexisAlertStateValue, 0)
    CLOSED = typing___cast(LexisNexisAlertStateValue, 1)
    OPEN = typing___cast(LexisNexisAlertStateValue, 2)
    UNASSIGNED = typing___cast(LexisNexisAlertStateValue, 3)
ALERT_STATE_DEFAULT_DO_NOT_USE = typing___cast(LexisNexisAlertStateValue, 0)
CLOSED = typing___cast(LexisNexisAlertStateValue, 1)
OPEN = typing___cast(LexisNexisAlertStateValue, 2)
UNASSIGNED = typing___cast(LexisNexisAlertStateValue, 3)
type___LexisNexisAlertState = LexisNexisAlertState

LexisNexisResultStatusValue = typing___NewType('LexisNexisResultStatusValue', builtin___int)
type___LexisNexisResultStatusValue = LexisNexisResultStatusValue
LexisNexisResultStatus: _LexisNexisResultStatus
class _LexisNexisResultStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LexisNexisResultStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    RESULT_STATUS_DEFAULT_DO_NOT_USE = typing___cast(LexisNexisResultStatusValue, 0)
    ACCOUNT_DEACTIVATED = typing___cast(LexisNexisResultStatusValue, 1)
    FALSE_POSITIVE = typing___cast(LexisNexisResultStatusValue, 2)
    UNDETERMINED = typing___cast(LexisNexisResultStatusValue, 3)
    UNDETERMINED_GREEN = typing___cast(LexisNexisResultStatusValue, 4)
    TRUE_POSITIVE = typing___cast(LexisNexisResultStatusValue, 5)
RESULT_STATUS_DEFAULT_DO_NOT_USE = typing___cast(LexisNexisResultStatusValue, 0)
ACCOUNT_DEACTIVATED = typing___cast(LexisNexisResultStatusValue, 1)
FALSE_POSITIVE = typing___cast(LexisNexisResultStatusValue, 2)
UNDETERMINED = typing___cast(LexisNexisResultStatusValue, 3)
UNDETERMINED_GREEN = typing___cast(LexisNexisResultStatusValue, 4)
TRUE_POSITIVE = typing___cast(LexisNexisResultStatusValue, 5)
type___LexisNexisResultStatus = LexisNexisResultStatus

ScreeningVendorValue = typing___NewType('ScreeningVendorValue', builtin___int)
type___ScreeningVendorValue = ScreeningVendorValue
ScreeningVendor: _ScreeningVendor
class _ScreeningVendor(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ScreeningVendorValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    SCREENING_VENDOR_DEFAULT_DO_NOT_USE = typing___cast(ScreeningVendorValue, 0)
    LEXIS_NEXIS = typing___cast(ScreeningVendorValue, 1)
    MASTERCARD = typing___cast(ScreeningVendorValue, 2)
    LEGIT_SCRIPT = typing___cast(ScreeningVendorValue, 3)
SCREENING_VENDOR_DEFAULT_DO_NOT_USE = typing___cast(ScreeningVendorValue, 0)
LEXIS_NEXIS = typing___cast(ScreeningVendorValue, 1)
MASTERCARD = typing___cast(ScreeningVendorValue, 2)
LEGIT_SCRIPT = typing___cast(ScreeningVendorValue, 3)
type___ScreeningVendor = ScreeningVendor

AccountRelationshipValue = typing___NewType('AccountRelationshipValue', builtin___int)
type___AccountRelationshipValue = AccountRelationshipValue
AccountRelationship: _AccountRelationship
class _AccountRelationship(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AccountRelationshipValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ACCOUNT_RELATIONSHIP_DEFAULT_DO_NOT_USE = typing___cast(AccountRelationshipValue, 0)
    ACCOUNT_HOLDER = typing___cast(AccountRelationshipValue, 1)
    BENEFICIAL_OWNER = typing___cast(AccountRelationshipValue, 2)
    PARTNER = typing___cast(AccountRelationshipValue, 3)
    DIRECTOR = typing___cast(AccountRelationshipValue, 4)
    EMPLOYEE = typing___cast(AccountRelationshipValue, 5)
ACCOUNT_RELATIONSHIP_DEFAULT_DO_NOT_USE = typing___cast(AccountRelationshipValue, 0)
ACCOUNT_HOLDER = typing___cast(AccountRelationshipValue, 1)
BENEFICIAL_OWNER = typing___cast(AccountRelationshipValue, 2)
PARTNER = typing___cast(AccountRelationshipValue, 3)
DIRECTOR = typing___cast(AccountRelationshipValue, 4)
EMPLOYEE = typing___cast(AccountRelationshipValue, 5)
type___AccountRelationship = AccountRelationship

class LexisNexisRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    customer_token_type: type___CustomerTokenTypeValue = ...
    entity_type: type___EntityTypeValue = ...
    first_name: typing___Text = ...
    middle_name: typing___Text = ...
    last_name: typing___Text = ...
    business_name: typing___Text = ...
    tin_token: typing___Text = ...
    current_phone: typing___Text = ...
    previous_phone: typing___Text = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    search_profile: typing___Text = ...
    first_appearance: builtin___bool = ...

    @property
    def current_address(self) -> squareup___common___location_pb2___Address: ...

    @property
    def previous_address(self) -> squareup___common___location_pb2___Address: ...

    @property
    def birth_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        customer_token_type : typing___Optional[type___CustomerTokenTypeValue] = None,
        entity_type : typing___Optional[type___EntityTypeValue] = None,
        first_name : typing___Optional[typing___Text] = None,
        middle_name : typing___Optional[typing___Text] = None,
        last_name : typing___Optional[typing___Text] = None,
        business_name : typing___Optional[typing___Text] = None,
        tin_token : typing___Optional[typing___Text] = None,
        current_phone : typing___Optional[typing___Text] = None,
        previous_phone : typing___Optional[typing___Text] = None,
        current_address : typing___Optional[squareup___common___location_pb2___Address] = None,
        previous_address : typing___Optional[squareup___common___location_pb2___Address] = None,
        birth_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        search_profile : typing___Optional[typing___Text] = None,
        first_appearance : typing___Optional[builtin___bool] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"birth_date",b"birth_date",u"business_name",b"business_name",u"country",b"country",u"created_at",b"created_at",u"current_address",b"current_address",u"current_phone",b"current_phone",u"customer_token",b"customer_token",u"customer_token_type",b"customer_token_type",u"entity_type",b"entity_type",u"first_appearance",b"first_appearance",u"first_name",b"first_name",u"last_name",b"last_name",u"middle_name",b"middle_name",u"previous_address",b"previous_address",u"previous_phone",b"previous_phone",u"search_profile",b"search_profile",u"tin_token",b"tin_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"birth_date",b"birth_date",u"business_name",b"business_name",u"country",b"country",u"created_at",b"created_at",u"current_address",b"current_address",u"current_phone",b"current_phone",u"customer_token",b"customer_token",u"customer_token_type",b"customer_token_type",u"entity_type",b"entity_type",u"first_appearance",b"first_appearance",u"first_name",b"first_name",u"last_name",b"last_name",u"middle_name",b"middle_name",u"previous_address",b"previous_address",u"previous_phone",b"previous_phone",u"search_profile",b"search_profile",u"tin_token",b"tin_token"]) -> None: ...
type___LexisNexisRequest = LexisNexisRequest

class LexisNexisResponseRecordDetails(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class MatchData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class MatchDatum(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            input_value: typing___Text = ...
            match_value: typing___Text = ...
            score: builtin___int = ...

            def __init__(self,
                *,
                input_value : typing___Optional[typing___Text] = None,
                match_value : typing___Optional[typing___Text] = None,
                score : typing___Optional[builtin___int] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"input_value",b"input_value",u"match_value",b"match_value",u"score",b"score"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"input_value",b"input_value",u"match_value",b"match_value",u"score",b"score"]) -> None: ...
        type___MatchDatum = MatchDatum


        @property
        def birth_date(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LexisNexisResponseRecordDetails.MatchData.MatchDatum]: ...

        @property
        def phone(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LexisNexisResponseRecordDetails.MatchData.MatchDatum]: ...

        @property
        def address(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LexisNexisResponseRecordDetails.MatchData.MatchDatum]: ...

        def __init__(self,
            *,
            birth_date : typing___Optional[typing___Iterable[type___LexisNexisResponseRecordDetails.MatchData.MatchDatum]] = None,
            phone : typing___Optional[typing___Iterable[type___LexisNexisResponseRecordDetails.MatchData.MatchDatum]] = None,
            address : typing___Optional[typing___Iterable[type___LexisNexisResponseRecordDetails.MatchData.MatchDatum]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"birth_date",b"birth_date",u"phone",b"phone"]) -> None: ...
    type___MatchData = MatchData

    class AdditionalData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class Alias(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            AliasTypeValue = typing___NewType('AliasTypeValue', builtin___int)
            type___AliasTypeValue = AliasTypeValue
            AliasType: _AliasType
            class _AliasType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                FORMERLY_KNOWN_AS = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue, 1)
                ALSO_KNOWN_AS = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue, 2)
                NOW_KNOWN_AS = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue, 3)
            FORMERLY_KNOWN_AS = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue, 1)
            ALSO_KNOWN_AS = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue, 2)
            NOW_KNOWN_AS = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue, 3)
            type___AliasType = AliasType

            AliasCategoryValue = typing___NewType('AliasCategoryValue', builtin___int)
            type___AliasCategoryValue = AliasCategoryValue
            AliasCategory: _AliasCategory
            class _AliasCategory(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                NONE = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue, 1)
                STRONG = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue, 2)
                WEAK = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue, 3)
            NONE = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue, 1)
            STRONG = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue, 2)
            WEAK = typing___cast(LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue, 3)
            type___AliasCategory = AliasCategory

            class Name(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
                first: typing___Text = ...
                middle: typing___Text = ...
                last: typing___Text = ...
                full: typing___Text = ...

                def __init__(self,
                    *,
                    first : typing___Optional[typing___Text] = None,
                    middle : typing___Optional[typing___Text] = None,
                    last : typing___Optional[typing___Text] = None,
                    full : typing___Optional[typing___Text] = None,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions___Literal[u"first",b"first",u"full",b"full",u"last",b"last",u"middle",b"middle"]) -> builtin___bool: ...
                def ClearField(self, field_name: typing_extensions___Literal[u"first",b"first",u"full",b"full",u"last",b"last",u"middle",b"middle"]) -> None: ...
            type___Name = Name

            type: type___LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue = ...
            category: type___LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue = ...

            @property
            def name(self) -> type___LexisNexisResponseRecordDetails.AdditionalData.Alias.Name: ...

            def __init__(self,
                *,
                type : typing___Optional[type___LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasTypeValue] = None,
                category : typing___Optional[type___LexisNexisResponseRecordDetails.AdditionalData.Alias.AliasCategoryValue] = None,
                name : typing___Optional[type___LexisNexisResponseRecordDetails.AdditionalData.Alias.Name] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"category",b"category",u"name",b"name",u"type",b"type"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"category",b"category",u"name",b"name",u"type",b"type"]) -> None: ...
        type___Alias = Alias

        phone: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

        @property
        def alias(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LexisNexisResponseRecordDetails.AdditionalData.Alias]: ...

        @property
        def dob(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___common___time_pb2___YearMonthDay]: ...

        @property
        def address(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___common___location_pb2___Address]: ...

        def __init__(self,
            *,
            alias : typing___Optional[typing___Iterable[type___LexisNexisResponseRecordDetails.AdditionalData.Alias]] = None,
            dob : typing___Optional[typing___Iterable[squareup___common___time_pb2___YearMonthDay]] = None,
            address : typing___Optional[typing___Iterable[squareup___common___location_pb2___Address]] = None,
            phone : typing___Optional[typing___Iterable[typing___Text]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"alias",b"alias",u"dob",b"dob",u"phone",b"phone"]) -> None: ...
    type___AdditionalData = AdditionalData


    @property
    def match_data(self) -> type___LexisNexisResponseRecordDetails.MatchData: ...

    @property
    def additional_data(self) -> type___LexisNexisResponseRecordDetails.AdditionalData: ...

    def __init__(self,
        *,
        match_data : typing___Optional[type___LexisNexisResponseRecordDetails.MatchData] = None,
        additional_data : typing___Optional[type___LexisNexisResponseRecordDetails.AdditionalData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"additional_data",b"additional_data",u"match_data",b"match_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"additional_data",b"additional_data",u"match_data",b"match_data"]) -> None: ...
type___LexisNexisResponseRecordDetails = LexisNexisResponseRecordDetails

class LexisNexisResponseRecord(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entity_name: typing___Text = ...
    entity_score: builtin___int = ...
    watchlist_name: typing___Text = ...
    reason_listed: typing___Text = ...
    address_conflict: builtin___bool = ...
    dob_conflict: builtin___bool = ...
    phone_conflict: builtin___bool = ...

    @property
    def details(self) -> type___LexisNexisResponseRecordDetails: ...

    def __init__(self,
        *,
        entity_name : typing___Optional[typing___Text] = None,
        entity_score : typing___Optional[builtin___int] = None,
        watchlist_name : typing___Optional[typing___Text] = None,
        reason_listed : typing___Optional[typing___Text] = None,
        address_conflict : typing___Optional[builtin___bool] = None,
        dob_conflict : typing___Optional[builtin___bool] = None,
        phone_conflict : typing___Optional[builtin___bool] = None,
        details : typing___Optional[type___LexisNexisResponseRecordDetails] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address_conflict",b"address_conflict",u"details",b"details",u"dob_conflict",b"dob_conflict",u"entity_name",b"entity_name",u"entity_score",b"entity_score",u"phone_conflict",b"phone_conflict",u"reason_listed",b"reason_listed",u"watchlist_name",b"watchlist_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address_conflict",b"address_conflict",u"details",b"details",u"dob_conflict",b"dob_conflict",u"entity_name",b"entity_name",u"entity_score",b"entity_score",u"phone_conflict",b"phone_conflict",u"reason_listed",b"reason_listed",u"watchlist_name",b"watchlist_name"]) -> None: ...
type___LexisNexisResponseRecord = LexisNexisResponseRecord

class LexisNexisResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    added_to_accept_list: builtin___bool = ...
    alert_state: type___LexisNexisAlertStateValue = ...
    result_status: type___LexisNexisResultStatusValue = ...
    search_profile: typing___Text = ...
    upload_filename: typing___Text = ...
    success: builtin___bool = ...

    @property
    def request(self) -> type___LexisNexisRequest: ...

    @property
    def response_record(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LexisNexisResponseRecord]: ...

    @property
    def entity(self) -> type___Entity: ...

    @property
    def update(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LexisNexisResponseUpdate]: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        request : typing___Optional[type___LexisNexisRequest] = None,
        response_record : typing___Optional[typing___Iterable[type___LexisNexisResponseRecord]] = None,
        added_to_accept_list : typing___Optional[builtin___bool] = None,
        alert_state : typing___Optional[type___LexisNexisAlertStateValue] = None,
        result_status : typing___Optional[type___LexisNexisResultStatusValue] = None,
        entity : typing___Optional[type___Entity] = None,
        search_profile : typing___Optional[typing___Text] = None,
        upload_filename : typing___Optional[typing___Text] = None,
        success : typing___Optional[builtin___bool] = None,
        update : typing___Optional[typing___Iterable[type___LexisNexisResponseUpdate]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"added_to_accept_list",b"added_to_accept_list",u"alert_state",b"alert_state",u"entity",b"entity",u"request",b"request",u"result_status",b"result_status",u"search_profile",b"search_profile",u"success",b"success",u"token",b"token",u"upload_filename",b"upload_filename"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"added_to_accept_list",b"added_to_accept_list",u"alert_state",b"alert_state",u"entity",b"entity",u"request",b"request",u"response_record",b"response_record",u"result_status",b"result_status",u"search_profile",b"search_profile",u"success",b"success",u"token",b"token",u"update",b"update",u"upload_filename",b"upload_filename"]) -> None: ...
type___LexisNexisResponse = LexisNexisResponse

class LexisNexisResponseUpdate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    response_token: typing___Text = ...
    added_to_accept_list: builtin___bool = ...
    alert_state: type___LexisNexisAlertStateValue = ...
    record_status: type___LexisNexisResultStatusValue = ...
    token: typing___Text = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        response_token : typing___Optional[typing___Text] = None,
        added_to_accept_list : typing___Optional[builtin___bool] = None,
        alert_state : typing___Optional[type___LexisNexisAlertStateValue] = None,
        record_status : typing___Optional[type___LexisNexisResultStatusValue] = None,
        token : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"added_to_accept_list",b"added_to_accept_list",u"alert_state",b"alert_state",u"created_at",b"created_at",u"record_status",b"record_status",u"response_token",b"response_token",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"added_to_accept_list",b"added_to_accept_list",u"alert_state",b"alert_state",u"created_at",b"created_at",u"record_status",b"record_status",u"response_token",b"response_token",u"token",b"token"]) -> None: ...
type___LexisNexisResponseUpdate = LexisNexisResponseUpdate

class BusinessInformation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    business_name: typing___Text = ...
    tin_token: typing___Text = ...
    phone_number: typing___Text = ...
    url: typing___Text = ...
    mcc: typing___Text = ...
    additional_urls: typing___Text = ...
    ica: typing___Text = ...
    merchant_descriptor: typing___Text = ...
    emails: typing___Text = ...

    @property
    def address(self) -> squareup___common___location_pb2___Address: ...

    def __init__(self,
        *,
        business_name : typing___Optional[typing___Text] = None,
        tin_token : typing___Optional[typing___Text] = None,
        phone_number : typing___Optional[typing___Text] = None,
        address : typing___Optional[squareup___common___location_pb2___Address] = None,
        url : typing___Optional[typing___Text] = None,
        mcc : typing___Optional[typing___Text] = None,
        additional_urls : typing___Optional[typing___Text] = None,
        ica : typing___Optional[typing___Text] = None,
        merchant_descriptor : typing___Optional[typing___Text] = None,
        emails : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"additional_urls",b"additional_urls",u"address",b"address",u"business_name",b"business_name",u"emails",b"emails",u"ica",b"ica",u"mcc",b"mcc",u"merchant_descriptor",b"merchant_descriptor",u"phone_number",b"phone_number",u"tin_token",b"tin_token",u"url",b"url"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"additional_urls",b"additional_urls",u"address",b"address",u"business_name",b"business_name",u"emails",b"emails",u"ica",b"ica",u"mcc",b"mcc",u"merchant_descriptor",b"merchant_descriptor",u"phone_number",b"phone_number",u"tin_token",b"tin_token",u"url",b"url"]) -> None: ...
type___BusinessInformation = BusinessInformation

class PersonalInformation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    first_name: typing___Text = ...
    middle_name: typing___Text = ...
    last_name: typing___Text = ...
    tin_token: typing___Text = ...
    phone_number: typing___Text = ...

    @property
    def birth_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

    @property
    def address(self) -> squareup___common___location_pb2___Address: ...

    def __init__(self,
        *,
        first_name : typing___Optional[typing___Text] = None,
        middle_name : typing___Optional[typing___Text] = None,
        last_name : typing___Optional[typing___Text] = None,
        tin_token : typing___Optional[typing___Text] = None,
        birth_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
        phone_number : typing___Optional[typing___Text] = None,
        address : typing___Optional[squareup___common___location_pb2___Address] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"birth_date",b"birth_date",u"first_name",b"first_name",u"last_name",b"last_name",u"middle_name",b"middle_name",u"phone_number",b"phone_number",u"tin_token",b"tin_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"birth_date",b"birth_date",u"first_name",b"first_name",u"last_name",b"last_name",u"middle_name",b"middle_name",u"phone_number",b"phone_number",u"tin_token",b"tin_token"]) -> None: ...
type___PersonalInformation = PersonalInformation

class Entity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    customer_token_type: type___CustomerTokenTypeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    first_submission: builtin___bool = ...
    audit_token: typing___Text = ...
    relationship: type___AccountRelationshipValue = ...

    @property
    def business_information(self) -> type___BusinessInformation: ...

    @property
    def personal_information(self) -> type___PersonalInformation: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        customer_token_type : typing___Optional[type___CustomerTokenTypeValue] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        first_submission : typing___Optional[builtin___bool] = None,
        business_information : typing___Optional[type___BusinessInformation] = None,
        personal_information : typing___Optional[type___PersonalInformation] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        audit_token : typing___Optional[typing___Text] = None,
        relationship : typing___Optional[type___AccountRelationshipValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_token",b"audit_token",u"business_information",b"business_information",u"country",b"country",u"created_at",b"created_at",u"customer_token",b"customer_token",u"customer_token_type",b"customer_token_type",u"first_submission",b"first_submission",u"personal_information",b"personal_information",u"relationship",b"relationship"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_token",b"audit_token",u"business_information",b"business_information",u"country",b"country",u"created_at",b"created_at",u"customer_token",b"customer_token",u"customer_token_type",b"customer_token_type",u"first_submission",b"first_submission",u"personal_information",b"personal_information",u"relationship",b"relationship"]) -> None: ...
type___Entity = Entity

class VendorContext(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    vendor: type___ScreeningVendorValue = ...
    lexis_nexis_search_profile: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        vendor : typing___Optional[type___ScreeningVendorValue] = None,
        lexis_nexis_search_profile : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"vendor",b"vendor"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"lexis_nexis_search_profile",b"lexis_nexis_search_profile",u"vendor",b"vendor"]) -> None: ...
type___VendorContext = VendorContext

class EntityAndScreeningIntent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    customer_token_type: type___CustomerTokenTypeValue = ...
    audit_token: typing___Text = ...
    screening_vendor: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___ScreeningVendorValue] = ...

    @property
    def vendor_context(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___VendorContext]: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        customer_token_type : typing___Optional[type___CustomerTokenTypeValue] = None,
        audit_token : typing___Optional[typing___Text] = None,
        screening_vendor : typing___Optional[typing___Iterable[type___ScreeningVendorValue]] = None,
        vendor_context : typing___Optional[typing___Iterable[type___VendorContext]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_token",b"audit_token",u"customer_token",b"customer_token",u"customer_token_type",b"customer_token_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_token",b"audit_token",u"customer_token",b"customer_token",u"customer_token_type",b"customer_token_type",u"screening_vendor",b"screening_vendor",u"vendor_context",b"vendor_context"]) -> None: ...
type___EntityAndScreeningIntent = EntityAndScreeningIntent
