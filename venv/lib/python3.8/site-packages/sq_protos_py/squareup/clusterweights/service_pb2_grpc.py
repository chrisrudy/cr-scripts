# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.clusterweights import service_pb2 as squareup_dot_clusterweights_dot_service__pb2


class ClusterWeightsStub(object):
    """ClusterWeights service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClusterWeight = channel.unary_unary(
                '/squareup.cluster_weights.service.ClusterWeights/GetClusterWeight',
                request_serializer=squareup_dot_clusterweights_dot_service__pb2.GetClusterWeightRequest.SerializeToString,
                response_deserializer=squareup_dot_clusterweights_dot_service__pb2.GetClusterWeightResponse.FromString,
                )
        self.GetAllRegionsClusterWeights = channel.unary_unary(
                '/squareup.cluster_weights.service.ClusterWeights/GetAllRegionsClusterWeights',
                request_serializer=squareup_dot_clusterweights_dot_service__pb2.GetAllRegionsClusterWeightsRequest.SerializeToString,
                response_deserializer=squareup_dot_clusterweights_dot_service__pb2.GetAllRegionsClusterWeightsResponse.FromString,
                )
        self.ListClusterWeights = channel.stream_stream(
                '/squareup.cluster_weights.service.ClusterWeights/ListClusterWeights',
                request_serializer=squareup_dot_clusterweights_dot_service__pb2.ListClusterWeightsRequest.SerializeToString,
                response_deserializer=squareup_dot_clusterweights_dot_service__pb2.ListClusterWeightsResponse.FromString,
                )


class ClusterWeightsServicer(object):
    """ClusterWeights service.
    """

    def GetClusterWeight(self, request, context):
        """Say Hello to the ClusterWeights service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllRegionsClusterWeights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClusterWeights(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterWeightsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClusterWeight': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterWeight,
                    request_deserializer=squareup_dot_clusterweights_dot_service__pb2.GetClusterWeightRequest.FromString,
                    response_serializer=squareup_dot_clusterweights_dot_service__pb2.GetClusterWeightResponse.SerializeToString,
            ),
            'GetAllRegionsClusterWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllRegionsClusterWeights,
                    request_deserializer=squareup_dot_clusterweights_dot_service__pb2.GetAllRegionsClusterWeightsRequest.FromString,
                    response_serializer=squareup_dot_clusterweights_dot_service__pb2.GetAllRegionsClusterWeightsResponse.SerializeToString,
            ),
            'ListClusterWeights': grpc.stream_stream_rpc_method_handler(
                    servicer.ListClusterWeights,
                    request_deserializer=squareup_dot_clusterweights_dot_service__pb2.ListClusterWeightsRequest.FromString,
                    response_serializer=squareup_dot_clusterweights_dot_service__pb2.ListClusterWeightsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cluster_weights.service.ClusterWeights', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClusterWeights(object):
    """ClusterWeights service.
    """

    @staticmethod
    def GetClusterWeight(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cluster_weights.service.ClusterWeights/GetClusterWeight',
            squareup_dot_clusterweights_dot_service__pb2.GetClusterWeightRequest.SerializeToString,
            squareup_dot_clusterweights_dot_service__pb2.GetClusterWeightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllRegionsClusterWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cluster_weights.service.ClusterWeights/GetAllRegionsClusterWeights',
            squareup_dot_clusterweights_dot_service__pb2.GetAllRegionsClusterWeightsRequest.SerializeToString,
            squareup_dot_clusterweights_dot_service__pb2.GetAllRegionsClusterWeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListClusterWeights(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/squareup.cluster_weights.service.ClusterWeights/ListClusterWeights',
            squareup_dot_clusterweights_dot_service__pb2.ListClusterWeightsRequest.SerializeToString,
            squareup_dot_clusterweights_dot_service__pb2.ListClusterWeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
