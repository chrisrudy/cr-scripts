# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

CRSEMVNotificationCodeValue = typing___NewType('CRSEMVNotificationCodeValue', builtin___int)
type___CRSEMVNotificationCodeValue = CRSEMVNotificationCodeValue
CRSEMVNotificationCode: _CRSEMVNotificationCode
class _CRSEMVNotificationCode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CRSEMVNotificationCodeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CRS_EMV_NOTIFICATION_CARD_ERROR = typing___cast(CRSEMVNotificationCodeValue, 0)
    CRS_EMV_NOTIFICATION_PROCESSING_ERR = typing___cast(CRSEMVNotificationCodeValue, 1)
    CRS_EMV_NOTIFICATION_PLS_USE_MSR = typing___cast(CRSEMVNotificationCodeValue, 2)
    CRS_EMV_NOTIFICATION_PLS_INSERT_CARD = typing___cast(CRSEMVNotificationCodeValue, 3)
    CRS_EMV_NOTIFICATION_PLS_INSERT_OR_SWIPE_CARD = typing___cast(CRSEMVNotificationCodeValue, 4)
    CRS_EMV_NOTIFICATION_PLEASE_PRESENT_ONE_CARD = typing___cast(CRSEMVNotificationCodeValue, 5)
    CRS_EMV_NOTIFICATION_SEE_YOUR_PHONE = typing___cast(CRSEMVNotificationCodeValue, 6)
    CRS_EMV_NOTIFICATION_PRESENT_CARD_AGAIN = typing___cast(CRSEMVNotificationCodeValue, 7)
    CRS_EMV_NOTIFICATION_CONTACT_PAYMENT = typing___cast(CRSEMVNotificationCodeValue, 8)
    CRS_EMV_NOTIFICATION_CONTACTLESS_PAYMENT = typing___cast(CRSEMVNotificationCodeValue, 9)
    CRS_EMV_NOTIFICATION_TAP_AGAIN = typing___cast(CRSEMVNotificationCodeValue, 10)
    CRS_EMV_NOTIFICATION_UNLOCK_PHONE = typing___cast(CRSEMVNotificationCodeValue, 11)
    CRS_EMV_NOTIFICATION_ODCVM = typing___cast(CRSEMVNotificationCodeValue, 12)
    CRS_EMV_NOTIFICATION_LIMIT_EXCEEDED_TRY_ANOTHER_CARD = typing___cast(CRSEMVNotificationCodeValue, 13)
    CRS_EMV_NOTIFICATION_LIMIT_EXCEEDED_INSERT_CARD = typing___cast(CRSEMVNotificationCodeValue, 14)
    CRS_EMV_NOTIFICATION_PLS_TAP_CARD = typing___cast(CRSEMVNotificationCodeValue, 15)
    CRS_EMV_NOTIFICATION_VAS_URL_PUSH_SUCCEEDED = typing___cast(CRSEMVNotificationCodeValue, 16)
    CRS_EMV_NOTIFICATION_VAS_URL_PUSH_FAILED = typing___cast(CRSEMVNotificationCodeValue, 17)
CRS_EMV_NOTIFICATION_CARD_ERROR = typing___cast(CRSEMVNotificationCodeValue, 0)
CRS_EMV_NOTIFICATION_PROCESSING_ERR = typing___cast(CRSEMVNotificationCodeValue, 1)
CRS_EMV_NOTIFICATION_PLS_USE_MSR = typing___cast(CRSEMVNotificationCodeValue, 2)
CRS_EMV_NOTIFICATION_PLS_INSERT_CARD = typing___cast(CRSEMVNotificationCodeValue, 3)
CRS_EMV_NOTIFICATION_PLS_INSERT_OR_SWIPE_CARD = typing___cast(CRSEMVNotificationCodeValue, 4)
CRS_EMV_NOTIFICATION_PLEASE_PRESENT_ONE_CARD = typing___cast(CRSEMVNotificationCodeValue, 5)
CRS_EMV_NOTIFICATION_SEE_YOUR_PHONE = typing___cast(CRSEMVNotificationCodeValue, 6)
CRS_EMV_NOTIFICATION_PRESENT_CARD_AGAIN = typing___cast(CRSEMVNotificationCodeValue, 7)
CRS_EMV_NOTIFICATION_CONTACT_PAYMENT = typing___cast(CRSEMVNotificationCodeValue, 8)
CRS_EMV_NOTIFICATION_CONTACTLESS_PAYMENT = typing___cast(CRSEMVNotificationCodeValue, 9)
CRS_EMV_NOTIFICATION_TAP_AGAIN = typing___cast(CRSEMVNotificationCodeValue, 10)
CRS_EMV_NOTIFICATION_UNLOCK_PHONE = typing___cast(CRSEMVNotificationCodeValue, 11)
CRS_EMV_NOTIFICATION_ODCVM = typing___cast(CRSEMVNotificationCodeValue, 12)
CRS_EMV_NOTIFICATION_LIMIT_EXCEEDED_TRY_ANOTHER_CARD = typing___cast(CRSEMVNotificationCodeValue, 13)
CRS_EMV_NOTIFICATION_LIMIT_EXCEEDED_INSERT_CARD = typing___cast(CRSEMVNotificationCodeValue, 14)
CRS_EMV_NOTIFICATION_PLS_TAP_CARD = typing___cast(CRSEMVNotificationCodeValue, 15)
CRS_EMV_NOTIFICATION_VAS_URL_PUSH_SUCCEEDED = typing___cast(CRSEMVNotificationCodeValue, 16)
CRS_EMV_NOTIFICATION_VAS_URL_PUSH_FAILED = typing___cast(CRSEMVNotificationCodeValue, 17)
type___CRSEMVNotificationCode = CRSEMVNotificationCode

CRSEMVErrorValue = typing___NewType('CRSEMVErrorValue', builtin___int)
type___CRSEMVErrorValue = CRSEMVErrorValue
CRSEMVError: _CRSEMVError
class _CRSEMVError(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CRSEMVErrorValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CRS_EMV_OK = typing___cast(CRSEMVErrorValue, 0)
    CRS_EMV_L1_ERROR_CWI = typing___cast(CRSEMVErrorValue, 1)
    CRS_EMV_L1_ERROR_BWI = typing___cast(CRSEMVErrorValue, 2)
    CRS_EMV_L1_ERROR_GT = typing___cast(CRSEMVErrorValue, 3)
    CRS_EMV_L1_ERROR_WT = typing___cast(CRSEMVErrorValue, 4)
    CRS_EMV_L1_ERROR_PARITY = typing___cast(CRSEMVErrorValue, 5)
    CRS_EMV_L1_ERROR_EPILOGUE = typing___cast(CRSEMVErrorValue, 6)
    CRS_EMV_L1_ERROR_UNEXPECTED_BLOCK = typing___cast(CRSEMVErrorValue, 7)
    CRS_EMV_L1_ERROR_BAD_BLOCK = typing___cast(CRSEMVErrorValue, 8)
    CRS_EMV_L1_ERROR_OUT_OF_SEQUENCE = typing___cast(CRSEMVErrorValue, 9)
    CRS_EMV_L1_ERROR_TOO_MANY_NACKS = typing___cast(CRSEMVErrorValue, 10)
    CRS_EMV_L1_ERROR_RECEIVED_NACK = typing___cast(CRSEMVErrorValue, 11)
    CRS_EMV_L1_ERROR_SHOULD_ABORT = typing___cast(CRSEMVErrorValue, 12)
    CRS_EMV_L1_ERROR_RECEIVED_ABORT = typing___cast(CRSEMVErrorValue, 13)
    CRS_EMV_L1_ERROR_SHOULD_DEACTIVATE = typing___cast(CRSEMVErrorValue, 14)
    CRS_EMV_L1_ERROR_SHOULD_TRANSMIT = typing___cast(CRSEMVErrorValue, 15)
    CRS_EMV_L1_ERROR_BAD_ATR = typing___cast(CRSEMVErrorValue, 16)
    CRS_EMV_L1_ERROR_BAD_PPS = typing___cast(CRSEMVErrorValue, 17)
    CRS_EMV_L1_ERROR_DECLINED_PPS = typing___cast(CRSEMVErrorValue, 18)
    CRS_EMV_L1_ERROR_CARD_REMOVED = typing___cast(CRSEMVErrorValue, 19)
    CRS_EMV_L1_ERROR_OVERFLOW = typing___cast(CRSEMVErrorValue, 20)
    CRS_EMV_L1_ERROR_GOT_STATUS_BYTES = typing___cast(CRSEMVErrorValue, 21)
    CRS_EMV_L1_ERROR_UNEXPECTED_PROC_BYTE = typing___cast(CRSEMVErrorValue, 22)
    CRS_EMV_L1_ERROR_REGISTER_RECONNECTED = typing___cast(CRSEMVErrorValue, 23)
    CRS_EMV_L1_ERROR_POWER_UP_FAILED = typing___cast(CRSEMVErrorValue, 24)
    CRS_EMV_L1_ERROR_MASK = typing___cast(CRSEMVErrorValue, 255)
    CRS_EMV_L2_ERROR_TERMINATE = typing___cast(CRSEMVErrorValue, 256)
    CRS_EMV_L2_ERROR_CANCEL = typing___cast(CRSEMVErrorValue, 257)
    CRS_EMV_L2_ERROR_NO_AID = typing___cast(CRSEMVErrorValue, 258)
    CRS_EMV_L2_ERROR_BAD_DATA = typing___cast(CRSEMVErrorValue, 259)
    CRS_EMV_L2_ERROR_CONFIGURATION = typing___cast(CRSEMVErrorValue, 260)
    CRS_EMV_L2_ERROR_BAD_PIN = typing___cast(CRSEMVErrorValue, 261)
    CRS_EMV_L2_ERROR_DECLINE = typing___cast(CRSEMVErrorValue, 262)
    CRS_EMV_L2_ERROR_TLV = typing___cast(CRSEMVErrorValue, 263)
    CRS_EMV_L2_ERROR_TLV_TAG_TOO_BIG = typing___cast(CRSEMVErrorValue, 264)
    CRS_EMV_L2_ERROR_TLV_LENGTH_TOO_BIG = typing___cast(CRSEMVErrorValue, 265)
    CRS_EMV_L2_ERROR_TLV_OVERFLOW = typing___cast(CRSEMVErrorValue, 266)
    CRS_EMV_L2_ERROR_CMDBUF_OVERFLOW = typing___cast(CRSEMVErrorValue, 267)
    CRS_EMV_L2_ERROR_TAG_NOT_FOUND = typing___cast(CRSEMVErrorValue, 268)
    CRS_EMV_L2_ERROR_MISSING_TEMPLATE = typing___cast(CRSEMVErrorValue, 269)
    CRS_EMV_L2_ERROR_TAG_BAD_FORMAT = typing___cast(CRSEMVErrorValue, 270)
    CRS_EMV_L2_ERROR_TLV_BAD_LENGTH = typing___cast(CRSEMVErrorValue, 271)
    CRS_EMV_L2_ERROR_TOO_MANY_APPS = typing___cast(CRSEMVErrorValue, 272)
    CRS_EMV_L2_ERROR_MISSING_AMOUNT = typing___cast(CRSEMVErrorValue, 273)
    CRS_EMV_L2_ERROR_EXTRA_TLV_T_IN = typing___cast(CRSEMVErrorValue, 274)
    CRS_EMV_L2_ERROR_MISSING_TLV_T_IN = typing___cast(CRSEMVErrorValue, 275)
    CRS_EMV_L2_ERROR_EXTRA_TLV_TERM_IN = typing___cast(CRSEMVErrorValue, 276)
    CRS_EMV_L2_ERROR_MISSING_TLV_TERM_IN = typing___cast(CRSEMVErrorValue, 277)
    CRS_EMV_L2_ERROR_BAD_KEY = typing___cast(CRSEMVErrorValue, 278)
    CRS_EMV_L2_ERROR_SELECT_NEXT = typing___cast(CRSEMVErrorValue, 279)
    CRS_EMV_L2_ERROR_CARD_REMOVED = typing___cast(CRSEMVErrorValue, 280)
    CRS_EMV_L2_ERROR_PIN_BYPASS = typing___cast(CRSEMVErrorValue, 281)
    CRS_EMV_L2_ERROR_PIN_PAD_NOT_WORKING = typing___cast(CRSEMVErrorValue, 282)
    CRS_EMV_L2_ERROR_PIN_TRY_EXCEEDED = typing___cast(CRSEMVErrorValue, 283)
    CRS_EMV_L2_ERROR_INTERCHANGE_BUF_SZ = typing___cast(CRSEMVErrorValue, 284)
    CRS_EMV_L2_ERROR_UNRECOGNIZED_CVM = typing___cast(CRSEMVErrorValue, 285)
    CRS_EMV_L2_ERROR_PDOL_TOO_BIG = typing___cast(CRSEMVErrorValue, 286)
    CRS_EMV_L2_ERROR_MISSING_ICC_DATA = typing___cast(CRSEMVErrorValue, 287)
    CRS_EMV_L2_ERROR_DUPLICATE_ICC_DATA = typing___cast(CRSEMVErrorValue, 288)
    CRS_EMV_L2_ERROR_MISSING_DOL = typing___cast(CRSEMVErrorValue, 289)
    CRS_EMV_L2_ERROR_ICC_FAILURE = typing___cast(CRSEMVErrorValue, 290)
    CRS_EMV_L2_ERROR_AUTH_FAILURE = typing___cast(CRSEMVErrorValue, 291)
    CRS_EMV_L2_ERROR_AUTH_UNSUPPORTED = typing___cast(CRSEMVErrorValue, 292)
    CRS_EMV_L2_ERROR_FCI_TEMPLATE_WRONG = typing___cast(CRSEMVErrorValue, 293)
    CRS_EMV_L2_ERROR_GPO_R_TAG_WRONG = typing___cast(CRSEMVErrorValue, 294)
    CRS_EMV_L2_ERROR_SFI_TOO_SMALL = typing___cast(CRSEMVErrorValue, 295)
    CRS_EMV_L2_ERROR_MISSING_SFI = typing___cast(CRSEMVErrorValue, 296)
    CRS_EMV_L2_ERROR_ADF_TOO_BIG = typing___cast(CRSEMVErrorValue, 297)
    CRS_EMV_L2_ERROR_NO_FCI_TEMPLATE = typing___cast(CRSEMVErrorValue, 298)
    CRS_EMV_L2_ERROR_NOT_PINTRY = typing___cast(CRSEMVErrorValue, 299)
    CRS_EMV_L2_ERROR_MISSING_EXPIRATION = typing___cast(CRSEMVErrorValue, 300)
    CRS_EMV_L2_ERROR_CID_MISMATCH = typing___cast(CRSEMVErrorValue, 301)
    CRS_EMV_L2_ERROR_TLV_UNDERFLOW = typing___cast(CRSEMVErrorValue, 302)
    CRS_EMV_L2_ERROR_BAD_ARGUMENT = typing___cast(CRSEMVErrorValue, 303)
    CRS_EMV_L2_ERROR_CDA_FAILURE = typing___cast(CRSEMVErrorValue, 304)
    CRS_EMV_L2_ERROR_ISSUER_UNREACHABLE = typing___cast(CRSEMVErrorValue, 305)
    CRS_EMV_L2_ERROR_UNKNOWN_DISPOSITION = typing___cast(CRSEMVErrorValue, 306)
    CRS_EMV_L2_ERROR_SCHEME_FALLBACK = typing___cast(CRSEMVErrorValue, 307)
    CRS_EMV_L2_ERROR_UNEXPECTED_K400_OUTCOME_STATUS = typing___cast(CRSEMVErrorValue, 308)
    CRS_EMV_L2_ERROR_END_APPLICATION = typing___cast(CRSEMVErrorValue, 309)
    CRS_EMV_L2_ERROR_CALL_YOUR_BANK = typing___cast(CRSEMVErrorValue, 310)
    CRS_EMV_L2_ERROR_CARD_WAIT_TIMED_OUT = typing___cast(CRSEMVErrorValue, 311)
    CRS_EMV_L2_ERROR_PRESENT_CARD_AGAIN = typing___cast(CRSEMVErrorValue, 312)
    CRS_EMV_L2_ERROR_K400_RESET = typing___cast(CRSEMVErrorValue, 313)
    CRS_EMV_L2_ERROR_LIMIT_EXCEEDED = typing___cast(CRSEMVErrorValue, 314)
    CRS_EMV_L2_ERROR_PLS_TAP = typing___cast(CRSEMVErrorValue, 315)
    CRS_EMV_L2_ERROR_TOO_MANY_ACCOUNTS = typing___cast(CRSEMVErrorValue, 316)
    CRS_EMV_L2_ERROR_NO_ACCOUNT = typing___cast(CRSEMVErrorValue, 317)
    CRS_EMV_L2_ERROR_AID_TOO_LONG = typing___cast(CRSEMVErrorValue, 318)
    CRS_EMV_L2_ERROR_TOO_MANY_TAP = typing___cast(CRSEMVErrorValue, 319)
    CRS_EMV_L2_ERROR_TOUCH_TAMPER_SENSOR_REMOVED = typing___cast(CRSEMVErrorValue, 320)
    CRS_EMV_L2_ERROR_TOUCH_TAMPER_ELECTRODE_BUG = typing___cast(CRSEMVErrorValue, 321)
    CRS_EMV_L2_ERROR_TOUCH_TAMPER_OVERLAY = typing___cast(CRSEMVErrorValue, 322)
    CRS_EMV_L2_ERROR_CMD_NOT_SUPPORTED = typing___cast(CRSEMVErrorValue, 27265)
    CRS_EMV_L2_ERROR_FILE_NOT_FOUND = typing___cast(CRSEMVErrorValue, 27266)
    CRS_EMV_L2_ERROR_REFERENCE_DATA_NOT_FOUND = typing___cast(CRSEMVErrorValue, 27272)
    CRS_EMV_L2_ERROR_APP_BLOCKED = typing___cast(CRSEMVErrorValue, 25219)
    CRS_EMV_L2_ERROR_AUTH_BLOCKED = typing___cast(CRSEMVErrorValue, 27011)
    CRS_EMV_L2_ERROR_REF_DATA_UNUSABLE = typing___cast(CRSEMVErrorValue, 27012)
    CRS_EMV_L2_ERROR_TRY_ANOTHER = typing___cast(CRSEMVErrorValue, 27013)
    CRS_EMV_L2_ERROR_RECORD_DNE = typing___cast(CRSEMVErrorValue, 27267)
    CRS_EMV_L2_ERROR_PIN_TRY_COUNT_ZERO = typing___cast(CRSEMVErrorValue, 25536)
    CRS_EMV_L2_ERROR_SUCCESS = typing___cast(CRSEMVErrorValue, 36864)
    CRS_EMV_L2_ERROR_MASK = typing___cast(CRSEMVErrorValue, 65280)
    CRS_EMV_L3_ERROR_A = typing___cast(CRSEMVErrorValue, 65281)
    CRS_EMV_L3_ERROR_B = typing___cast(CRSEMVErrorValue, 65282)
    CRS_EMV_L3_ERROR_C = typing___cast(CRSEMVErrorValue, 65283)
    CRS_EMV_L3_ERROR_D = typing___cast(CRSEMVErrorValue, 65284)
    CRS_EMV_L3_ERROR_SERVER_TIMEOUT = typing___cast(CRSEMVErrorValue, 65285)
    CRS_EMV_L3_ERROR_MASK = typing___cast(CRSEMVErrorValue, 16711680)
CRS_EMV_OK = typing___cast(CRSEMVErrorValue, 0)
CRS_EMV_L1_ERROR_CWI = typing___cast(CRSEMVErrorValue, 1)
CRS_EMV_L1_ERROR_BWI = typing___cast(CRSEMVErrorValue, 2)
CRS_EMV_L1_ERROR_GT = typing___cast(CRSEMVErrorValue, 3)
CRS_EMV_L1_ERROR_WT = typing___cast(CRSEMVErrorValue, 4)
CRS_EMV_L1_ERROR_PARITY = typing___cast(CRSEMVErrorValue, 5)
CRS_EMV_L1_ERROR_EPILOGUE = typing___cast(CRSEMVErrorValue, 6)
CRS_EMV_L1_ERROR_UNEXPECTED_BLOCK = typing___cast(CRSEMVErrorValue, 7)
CRS_EMV_L1_ERROR_BAD_BLOCK = typing___cast(CRSEMVErrorValue, 8)
CRS_EMV_L1_ERROR_OUT_OF_SEQUENCE = typing___cast(CRSEMVErrorValue, 9)
CRS_EMV_L1_ERROR_TOO_MANY_NACKS = typing___cast(CRSEMVErrorValue, 10)
CRS_EMV_L1_ERROR_RECEIVED_NACK = typing___cast(CRSEMVErrorValue, 11)
CRS_EMV_L1_ERROR_SHOULD_ABORT = typing___cast(CRSEMVErrorValue, 12)
CRS_EMV_L1_ERROR_RECEIVED_ABORT = typing___cast(CRSEMVErrorValue, 13)
CRS_EMV_L1_ERROR_SHOULD_DEACTIVATE = typing___cast(CRSEMVErrorValue, 14)
CRS_EMV_L1_ERROR_SHOULD_TRANSMIT = typing___cast(CRSEMVErrorValue, 15)
CRS_EMV_L1_ERROR_BAD_ATR = typing___cast(CRSEMVErrorValue, 16)
CRS_EMV_L1_ERROR_BAD_PPS = typing___cast(CRSEMVErrorValue, 17)
CRS_EMV_L1_ERROR_DECLINED_PPS = typing___cast(CRSEMVErrorValue, 18)
CRS_EMV_L1_ERROR_CARD_REMOVED = typing___cast(CRSEMVErrorValue, 19)
CRS_EMV_L1_ERROR_OVERFLOW = typing___cast(CRSEMVErrorValue, 20)
CRS_EMV_L1_ERROR_GOT_STATUS_BYTES = typing___cast(CRSEMVErrorValue, 21)
CRS_EMV_L1_ERROR_UNEXPECTED_PROC_BYTE = typing___cast(CRSEMVErrorValue, 22)
CRS_EMV_L1_ERROR_REGISTER_RECONNECTED = typing___cast(CRSEMVErrorValue, 23)
CRS_EMV_L1_ERROR_POWER_UP_FAILED = typing___cast(CRSEMVErrorValue, 24)
CRS_EMV_L1_ERROR_MASK = typing___cast(CRSEMVErrorValue, 255)
CRS_EMV_L2_ERROR_TERMINATE = typing___cast(CRSEMVErrorValue, 256)
CRS_EMV_L2_ERROR_CANCEL = typing___cast(CRSEMVErrorValue, 257)
CRS_EMV_L2_ERROR_NO_AID = typing___cast(CRSEMVErrorValue, 258)
CRS_EMV_L2_ERROR_BAD_DATA = typing___cast(CRSEMVErrorValue, 259)
CRS_EMV_L2_ERROR_CONFIGURATION = typing___cast(CRSEMVErrorValue, 260)
CRS_EMV_L2_ERROR_BAD_PIN = typing___cast(CRSEMVErrorValue, 261)
CRS_EMV_L2_ERROR_DECLINE = typing___cast(CRSEMVErrorValue, 262)
CRS_EMV_L2_ERROR_TLV = typing___cast(CRSEMVErrorValue, 263)
CRS_EMV_L2_ERROR_TLV_TAG_TOO_BIG = typing___cast(CRSEMVErrorValue, 264)
CRS_EMV_L2_ERROR_TLV_LENGTH_TOO_BIG = typing___cast(CRSEMVErrorValue, 265)
CRS_EMV_L2_ERROR_TLV_OVERFLOW = typing___cast(CRSEMVErrorValue, 266)
CRS_EMV_L2_ERROR_CMDBUF_OVERFLOW = typing___cast(CRSEMVErrorValue, 267)
CRS_EMV_L2_ERROR_TAG_NOT_FOUND = typing___cast(CRSEMVErrorValue, 268)
CRS_EMV_L2_ERROR_MISSING_TEMPLATE = typing___cast(CRSEMVErrorValue, 269)
CRS_EMV_L2_ERROR_TAG_BAD_FORMAT = typing___cast(CRSEMVErrorValue, 270)
CRS_EMV_L2_ERROR_TLV_BAD_LENGTH = typing___cast(CRSEMVErrorValue, 271)
CRS_EMV_L2_ERROR_TOO_MANY_APPS = typing___cast(CRSEMVErrorValue, 272)
CRS_EMV_L2_ERROR_MISSING_AMOUNT = typing___cast(CRSEMVErrorValue, 273)
CRS_EMV_L2_ERROR_EXTRA_TLV_T_IN = typing___cast(CRSEMVErrorValue, 274)
CRS_EMV_L2_ERROR_MISSING_TLV_T_IN = typing___cast(CRSEMVErrorValue, 275)
CRS_EMV_L2_ERROR_EXTRA_TLV_TERM_IN = typing___cast(CRSEMVErrorValue, 276)
CRS_EMV_L2_ERROR_MISSING_TLV_TERM_IN = typing___cast(CRSEMVErrorValue, 277)
CRS_EMV_L2_ERROR_BAD_KEY = typing___cast(CRSEMVErrorValue, 278)
CRS_EMV_L2_ERROR_SELECT_NEXT = typing___cast(CRSEMVErrorValue, 279)
CRS_EMV_L2_ERROR_CARD_REMOVED = typing___cast(CRSEMVErrorValue, 280)
CRS_EMV_L2_ERROR_PIN_BYPASS = typing___cast(CRSEMVErrorValue, 281)
CRS_EMV_L2_ERROR_PIN_PAD_NOT_WORKING = typing___cast(CRSEMVErrorValue, 282)
CRS_EMV_L2_ERROR_PIN_TRY_EXCEEDED = typing___cast(CRSEMVErrorValue, 283)
CRS_EMV_L2_ERROR_INTERCHANGE_BUF_SZ = typing___cast(CRSEMVErrorValue, 284)
CRS_EMV_L2_ERROR_UNRECOGNIZED_CVM = typing___cast(CRSEMVErrorValue, 285)
CRS_EMV_L2_ERROR_PDOL_TOO_BIG = typing___cast(CRSEMVErrorValue, 286)
CRS_EMV_L2_ERROR_MISSING_ICC_DATA = typing___cast(CRSEMVErrorValue, 287)
CRS_EMV_L2_ERROR_DUPLICATE_ICC_DATA = typing___cast(CRSEMVErrorValue, 288)
CRS_EMV_L2_ERROR_MISSING_DOL = typing___cast(CRSEMVErrorValue, 289)
CRS_EMV_L2_ERROR_ICC_FAILURE = typing___cast(CRSEMVErrorValue, 290)
CRS_EMV_L2_ERROR_AUTH_FAILURE = typing___cast(CRSEMVErrorValue, 291)
CRS_EMV_L2_ERROR_AUTH_UNSUPPORTED = typing___cast(CRSEMVErrorValue, 292)
CRS_EMV_L2_ERROR_FCI_TEMPLATE_WRONG = typing___cast(CRSEMVErrorValue, 293)
CRS_EMV_L2_ERROR_GPO_R_TAG_WRONG = typing___cast(CRSEMVErrorValue, 294)
CRS_EMV_L2_ERROR_SFI_TOO_SMALL = typing___cast(CRSEMVErrorValue, 295)
CRS_EMV_L2_ERROR_MISSING_SFI = typing___cast(CRSEMVErrorValue, 296)
CRS_EMV_L2_ERROR_ADF_TOO_BIG = typing___cast(CRSEMVErrorValue, 297)
CRS_EMV_L2_ERROR_NO_FCI_TEMPLATE = typing___cast(CRSEMVErrorValue, 298)
CRS_EMV_L2_ERROR_NOT_PINTRY = typing___cast(CRSEMVErrorValue, 299)
CRS_EMV_L2_ERROR_MISSING_EXPIRATION = typing___cast(CRSEMVErrorValue, 300)
CRS_EMV_L2_ERROR_CID_MISMATCH = typing___cast(CRSEMVErrorValue, 301)
CRS_EMV_L2_ERROR_TLV_UNDERFLOW = typing___cast(CRSEMVErrorValue, 302)
CRS_EMV_L2_ERROR_BAD_ARGUMENT = typing___cast(CRSEMVErrorValue, 303)
CRS_EMV_L2_ERROR_CDA_FAILURE = typing___cast(CRSEMVErrorValue, 304)
CRS_EMV_L2_ERROR_ISSUER_UNREACHABLE = typing___cast(CRSEMVErrorValue, 305)
CRS_EMV_L2_ERROR_UNKNOWN_DISPOSITION = typing___cast(CRSEMVErrorValue, 306)
CRS_EMV_L2_ERROR_SCHEME_FALLBACK = typing___cast(CRSEMVErrorValue, 307)
CRS_EMV_L2_ERROR_UNEXPECTED_K400_OUTCOME_STATUS = typing___cast(CRSEMVErrorValue, 308)
CRS_EMV_L2_ERROR_END_APPLICATION = typing___cast(CRSEMVErrorValue, 309)
CRS_EMV_L2_ERROR_CALL_YOUR_BANK = typing___cast(CRSEMVErrorValue, 310)
CRS_EMV_L2_ERROR_CARD_WAIT_TIMED_OUT = typing___cast(CRSEMVErrorValue, 311)
CRS_EMV_L2_ERROR_PRESENT_CARD_AGAIN = typing___cast(CRSEMVErrorValue, 312)
CRS_EMV_L2_ERROR_K400_RESET = typing___cast(CRSEMVErrorValue, 313)
CRS_EMV_L2_ERROR_LIMIT_EXCEEDED = typing___cast(CRSEMVErrorValue, 314)
CRS_EMV_L2_ERROR_PLS_TAP = typing___cast(CRSEMVErrorValue, 315)
CRS_EMV_L2_ERROR_TOO_MANY_ACCOUNTS = typing___cast(CRSEMVErrorValue, 316)
CRS_EMV_L2_ERROR_NO_ACCOUNT = typing___cast(CRSEMVErrorValue, 317)
CRS_EMV_L2_ERROR_AID_TOO_LONG = typing___cast(CRSEMVErrorValue, 318)
CRS_EMV_L2_ERROR_TOO_MANY_TAP = typing___cast(CRSEMVErrorValue, 319)
CRS_EMV_L2_ERROR_TOUCH_TAMPER_SENSOR_REMOVED = typing___cast(CRSEMVErrorValue, 320)
CRS_EMV_L2_ERROR_TOUCH_TAMPER_ELECTRODE_BUG = typing___cast(CRSEMVErrorValue, 321)
CRS_EMV_L2_ERROR_TOUCH_TAMPER_OVERLAY = typing___cast(CRSEMVErrorValue, 322)
CRS_EMV_L2_ERROR_CMD_NOT_SUPPORTED = typing___cast(CRSEMVErrorValue, 27265)
CRS_EMV_L2_ERROR_FILE_NOT_FOUND = typing___cast(CRSEMVErrorValue, 27266)
CRS_EMV_L2_ERROR_REFERENCE_DATA_NOT_FOUND = typing___cast(CRSEMVErrorValue, 27272)
CRS_EMV_L2_ERROR_APP_BLOCKED = typing___cast(CRSEMVErrorValue, 25219)
CRS_EMV_L2_ERROR_AUTH_BLOCKED = typing___cast(CRSEMVErrorValue, 27011)
CRS_EMV_L2_ERROR_REF_DATA_UNUSABLE = typing___cast(CRSEMVErrorValue, 27012)
CRS_EMV_L2_ERROR_TRY_ANOTHER = typing___cast(CRSEMVErrorValue, 27013)
CRS_EMV_L2_ERROR_RECORD_DNE = typing___cast(CRSEMVErrorValue, 27267)
CRS_EMV_L2_ERROR_PIN_TRY_COUNT_ZERO = typing___cast(CRSEMVErrorValue, 25536)
CRS_EMV_L2_ERROR_SUCCESS = typing___cast(CRSEMVErrorValue, 36864)
CRS_EMV_L2_ERROR_MASK = typing___cast(CRSEMVErrorValue, 65280)
CRS_EMV_L3_ERROR_A = typing___cast(CRSEMVErrorValue, 65281)
CRS_EMV_L3_ERROR_B = typing___cast(CRSEMVErrorValue, 65282)
CRS_EMV_L3_ERROR_C = typing___cast(CRSEMVErrorValue, 65283)
CRS_EMV_L3_ERROR_D = typing___cast(CRSEMVErrorValue, 65284)
CRS_EMV_L3_ERROR_SERVER_TIMEOUT = typing___cast(CRSEMVErrorValue, 65285)
CRS_EMV_L3_ERROR_MASK = typing___cast(CRSEMVErrorValue, 16711680)
type___CRSEMVError = CRSEMVError

CRSEMVTransactionDispositionValue = typing___NewType('CRSEMVTransactionDispositionValue', builtin___int)
type___CRSEMVTransactionDispositionValue = CRSEMVTransactionDispositionValue
CRSEMVTransactionDisposition: _CRSEMVTransactionDisposition
class _CRSEMVTransactionDisposition(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CRSEMVTransactionDispositionValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CRS_EMV_TD_UNKNOWN = typing___cast(CRSEMVTransactionDispositionValue, 0)
    CRS_EMV_TD_OFFLINE = typing___cast(CRSEMVTransactionDispositionValue, 1)
    CRS_EMV_TD_OFFLINE_APPROVED = typing___cast(CRSEMVTransactionDispositionValue, 2)
    CRS_EMV_TD_OFFLINE_DECLINE = typing___cast(CRSEMVTransactionDispositionValue, 3)
    CRS_EMV_TD_ONLINE = typing___cast(CRSEMVTransactionDispositionValue, 4)
    CRS_EMV_TD_DECLINE = typing___cast(CRSEMVTransactionDispositionValue, 5)
    CRS_EMV_TD_APPROVED = typing___cast(CRSEMVTransactionDispositionValue, 6)
CRS_EMV_TD_UNKNOWN = typing___cast(CRSEMVTransactionDispositionValue, 0)
CRS_EMV_TD_OFFLINE = typing___cast(CRSEMVTransactionDispositionValue, 1)
CRS_EMV_TD_OFFLINE_APPROVED = typing___cast(CRSEMVTransactionDispositionValue, 2)
CRS_EMV_TD_OFFLINE_DECLINE = typing___cast(CRSEMVTransactionDispositionValue, 3)
CRS_EMV_TD_ONLINE = typing___cast(CRSEMVTransactionDispositionValue, 4)
CRS_EMV_TD_DECLINE = typing___cast(CRSEMVTransactionDispositionValue, 5)
CRS_EMV_TD_APPROVED = typing___cast(CRSEMVTransactionDispositionValue, 6)
type___CRSEMVTransactionDisposition = CRSEMVTransactionDisposition

L2IOTypeValue = typing___NewType('L2IOTypeValue', builtin___int)
type___L2IOTypeValue = L2IOTypeValue
L2IOType: _L2IOType
class _L2IOType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[L2IOTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    L2IO_AUTH = typing___cast(L2IOTypeValue, 1)
    L2IO_CLEAR = typing___cast(L2IOTypeValue, 2)
    L2IO_REVERSE = typing___cast(L2IOTypeValue, 3)
L2IO_AUTH = typing___cast(L2IOTypeValue, 1)
L2IO_CLEAR = typing___cast(L2IOTypeValue, 2)
L2IO_REVERSE = typing___cast(L2IOTypeValue, 3)
type___L2IOType = L2IOType

FallBackTypeValue = typing___NewType('FallBackTypeValue', builtin___int)
type___FallBackTypeValue = FallBackTypeValue
FallBackType: _FallBackType
class _FallBackType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FallBackTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    FALLBACK_TYPE_TECHNICAL = typing___cast(FallBackTypeValue, 1)
    FALLBACK_TYPE_SCHEME = typing___cast(FallBackTypeValue, 2)
FALLBACK_TYPE_TECHNICAL = typing___cast(FallBackTypeValue, 1)
FALLBACK_TYPE_SCHEME = typing___cast(FallBackTypeValue, 2)
type___FallBackType = FallBackType

CRSPaymentIssuerIDValue = typing___NewType('CRSPaymentIssuerIDValue', builtin___int)
type___CRSPaymentIssuerIDValue = CRSPaymentIssuerIDValue
CRSPaymentIssuerID: _CRSPaymentIssuerID
class _CRSPaymentIssuerID(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CRSPaymentIssuerIDValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CRS_PAYMENT_ISSUER_ID_VISA = typing___cast(CRSPaymentIssuerIDValue, 0)
    CRS_PAYMENT_ISSUER_ID_MASTERCARD = typing___cast(CRSPaymentIssuerIDValue, 1)
    CRS_PAYMENT_ISSUER_ID_DISCOVER = typing___cast(CRSPaymentIssuerIDValue, 2)
    CRS_PAYMENT_ISSUER_ID_AMERICAN_EXPRESS = typing___cast(CRSPaymentIssuerIDValue, 3)
    CRS_PAYMENT_ISSUER_ID_JCB = typing___cast(CRSPaymentIssuerIDValue, 4)
    CRS_PAYMENT_ISSUER_ID_OTHER = typing___cast(CRSPaymentIssuerIDValue, 5)
    CRS_PAYMENT_ISSUER_ID_DINERS = typing___cast(CRSPaymentIssuerIDValue, 6)
    CRS_PAYMENT_ISSUER_ID_CHINA_UNIONPAY = typing___cast(CRSPaymentIssuerIDValue, 7)
    CRS_PAYMENT_ISSUER_ID_SQUARE_GIFTCARD = typing___cast(CRSPaymentIssuerIDValue, 8)
    CRS_PAYMENT_ISSUER_ID_INTERAC = typing___cast(CRSPaymentIssuerIDValue, 9)
    CRS_PAYMENT_ISSUER_ID_EFTPOS = typing___cast(CRSPaymentIssuerIDValue, 10)
CRS_PAYMENT_ISSUER_ID_VISA = typing___cast(CRSPaymentIssuerIDValue, 0)
CRS_PAYMENT_ISSUER_ID_MASTERCARD = typing___cast(CRSPaymentIssuerIDValue, 1)
CRS_PAYMENT_ISSUER_ID_DISCOVER = typing___cast(CRSPaymentIssuerIDValue, 2)
CRS_PAYMENT_ISSUER_ID_AMERICAN_EXPRESS = typing___cast(CRSPaymentIssuerIDValue, 3)
CRS_PAYMENT_ISSUER_ID_JCB = typing___cast(CRSPaymentIssuerIDValue, 4)
CRS_PAYMENT_ISSUER_ID_OTHER = typing___cast(CRSPaymentIssuerIDValue, 5)
CRS_PAYMENT_ISSUER_ID_DINERS = typing___cast(CRSPaymentIssuerIDValue, 6)
CRS_PAYMENT_ISSUER_ID_CHINA_UNIONPAY = typing___cast(CRSPaymentIssuerIDValue, 7)
CRS_PAYMENT_ISSUER_ID_SQUARE_GIFTCARD = typing___cast(CRSPaymentIssuerIDValue, 8)
CRS_PAYMENT_ISSUER_ID_INTERAC = typing___cast(CRSPaymentIssuerIDValue, 9)
CRS_PAYMENT_ISSUER_ID_EFTPOS = typing___cast(CRSPaymentIssuerIDValue, 10)
type___CRSPaymentIssuerID = CRSPaymentIssuerID

class L2CtlNotification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    code: type___CRSEMVNotificationCodeValue = ...

    def __init__(self,
        *,
        code : typing___Optional[type___CRSEMVNotificationCodeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"code",b"code"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"code",b"code"]) -> None: ...
type___L2CtlNotification = L2CtlNotification

class CRSCardInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    issuer_id: builtin___int = ...
    last4: builtin___bytes = ...
    name: typing___Text = ...

    def __init__(self,
        *,
        issuer_id : typing___Optional[builtin___int] = None,
        last4 : typing___Optional[builtin___bytes] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"issuer_id",b"issuer_id",u"last4",b"last4",u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"issuer_id",b"issuer_id",u"last4",b"last4",u"name",b"name"]) -> None: ...
type___CRSCardInfo = CRSCardInfo

class L2CtlResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    code: type___CRSEMVErrorValue = ...
    disposition: type___CRSEMVTransactionDispositionValue = ...
    signature_requested: builtin___bool = ...

    @property
    def card_info(self) -> type___CRSCardInfo: ...

    def __init__(self,
        *,
        code : typing___Optional[type___CRSEMVErrorValue] = None,
        disposition : typing___Optional[type___CRSEMVTransactionDispositionValue] = None,
        signature_requested : typing___Optional[builtin___bool] = None,
        card_info : typing___Optional[type___CRSCardInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_info",b"card_info",u"code",b"code",u"disposition",b"disposition",u"signature_requested",b"signature_requested"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_info",b"card_info",u"code",b"code",u"disposition",b"disposition",u"signature_requested",b"signature_requested"]) -> None: ...
type___L2CtlResult = L2CtlResult

class L2IO(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: type___L2IOTypeValue = ...
    online_pin_present: builtin___bool = ...
    plaintext: builtin___bytes = ...
    emv_data_tlvs: builtin___bytes = ...

    def __init__(self,
        *,
        type : typing___Optional[type___L2IOTypeValue] = None,
        online_pin_present : typing___Optional[builtin___bool] = None,
        plaintext : typing___Optional[builtin___bytes] = None,
        emv_data_tlvs : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"emv_data_tlvs",b"emv_data_tlvs",u"online_pin_present",b"online_pin_present",u"plaintext",b"plaintext",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"emv_data_tlvs",b"emv_data_tlvs",u"online_pin_present",b"online_pin_present",u"plaintext",b"plaintext",u"type",b"type"]) -> None: ...
type___L2IO = L2IO

class L2AppNotify(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    langprefs: builtin___bytes = ...
    icodetableidx: builtin___int = ...
    adf_name: builtin___bytes = ...
    label: typing___Text = ...
    prefname: typing___Text = ...
    priority: builtin___int = ...
    explicit_selection_required: builtin___int = ...

    def __init__(self,
        *,
        langprefs : typing___Optional[builtin___bytes] = None,
        icodetableidx : typing___Optional[builtin___int] = None,
        adf_name : typing___Optional[builtin___bytes] = None,
        label : typing___Optional[typing___Text] = None,
        prefname : typing___Optional[typing___Text] = None,
        priority : typing___Optional[builtin___int] = None,
        explicit_selection_required : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"adf_name",b"adf_name",u"explicit_selection_required",b"explicit_selection_required",u"icodetableidx",b"icodetableidx",u"label",b"label",u"langprefs",b"langprefs",u"prefname",b"prefname",u"priority",b"priority"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"adf_name",b"adf_name",u"explicit_selection_required",b"explicit_selection_required",u"icodetableidx",b"icodetableidx",u"label",b"label",u"langprefs",b"langprefs",u"prefname",b"prefname",u"priority",b"priority"]) -> None: ...
type___L2AppNotify = L2AppNotify

class TransactionResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    error_led_buzzer_sequence: builtin___bool = ...
    fallback: type___FallBackTypeValue = ...
    profile_supported: builtin___bool = ...

    @property
    def app_notify(self) -> type___L2AppNotify: ...

    @property
    def notification(self) -> type___L2CtlNotification: ...

    @property
    def pos_entry_mode_notification(self) -> type___L2CtlNotification: ...

    @property
    def interchange_data(self) -> type___L2IO: ...

    @property
    def result(self) -> type___L2CtlResult: ...

    def __init__(self,
        *,
        app_notify : typing___Optional[type___L2AppNotify] = None,
        notification : typing___Optional[type___L2CtlNotification] = None,
        pos_entry_mode_notification : typing___Optional[type___L2CtlNotification] = None,
        interchange_data : typing___Optional[type___L2IO] = None,
        error_led_buzzer_sequence : typing___Optional[builtin___bool] = None,
        fallback : typing___Optional[type___FallBackTypeValue] = None,
        result : typing___Optional[type___L2CtlResult] = None,
        profile_supported : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"app_notify",b"app_notify",u"error_led_buzzer_sequence",b"error_led_buzzer_sequence",u"fallback",b"fallback",u"interchange_data",b"interchange_data",u"notification",b"notification",u"pos_entry_mode_notification",b"pos_entry_mode_notification",u"profile_supported",b"profile_supported",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"app_notify",b"app_notify",u"error_led_buzzer_sequence",b"error_led_buzzer_sequence",u"fallback",b"fallback",u"interchange_data",b"interchange_data",u"notification",b"notification",u"pos_entry_mode_notification",b"pos_entry_mode_notification",u"profile_supported",b"profile_supported",u"result",b"result"]) -> None: ...
type___TransactionResponse = TransactionResponse
