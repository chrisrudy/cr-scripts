# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.spe.k400.common_pb2 import (
    EmptyMessage as squareup___spe___k400___common_pb2___EmptyMessage,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

CardInterfaceMaskValue = typing___NewType('CardInterfaceMaskValue', builtin___int)
type___CardInterfaceMaskValue = CardInterfaceMaskValue
CardInterfaceMask: _CardInterfaceMask
class _CardInterfaceMask(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardInterfaceMaskValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CARD_INTERFACE_MASK_NO_CARD = typing___cast(CardInterfaceMaskValue, 0)
    CARD_INTERFACE_MASK_CxLESS = typing___cast(CardInterfaceMaskValue, 1)
    CARD_INTERFACE_MASK_CONTACT = typing___cast(CardInterfaceMaskValue, 2)
    CARD_INTERFACE_MASK_ANY = typing___cast(CardInterfaceMaskValue, 3)
CARD_INTERFACE_MASK_NO_CARD = typing___cast(CardInterfaceMaskValue, 0)
CARD_INTERFACE_MASK_CxLESS = typing___cast(CardInterfaceMaskValue, 1)
CARD_INTERFACE_MASK_CONTACT = typing___cast(CardInterfaceMaskValue, 2)
CARD_INTERFACE_MASK_ANY = typing___cast(CardInterfaceMaskValue, 3)
type___CardInterfaceMask = CardInterfaceMask

CardInterfaceNFCCardTypeValue = typing___NewType('CardInterfaceNFCCardTypeValue', builtin___int)
type___CardInterfaceNFCCardTypeValue = CardInterfaceNFCCardTypeValue
CardInterfaceNFCCardType: _CardInterfaceNFCCardType
class _CardInterfaceNFCCardType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardInterfaceNFCCardTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CARD_INTERFACE_NFC_CARD_TYPE_A = typing___cast(CardInterfaceNFCCardTypeValue, 0)
    CARD_INTERFACE_NFC_CARD_TYPE_B = typing___cast(CardInterfaceNFCCardTypeValue, 1)
    CARD_INTERFACE_NFC_CARD_TYPE_F_424 = typing___cast(CardInterfaceNFCCardTypeValue, 2)
    CARD_INTERFACE_NFC_CARD_TYPE_F_212 = typing___cast(CardInterfaceNFCCardTypeValue, 3)
CARD_INTERFACE_NFC_CARD_TYPE_A = typing___cast(CardInterfaceNFCCardTypeValue, 0)
CARD_INTERFACE_NFC_CARD_TYPE_B = typing___cast(CardInterfaceNFCCardTypeValue, 1)
CARD_INTERFACE_NFC_CARD_TYPE_F_424 = typing___cast(CardInterfaceNFCCardTypeValue, 2)
CARD_INTERFACE_NFC_CARD_TYPE_F_212 = typing___cast(CardInterfaceNFCCardTypeValue, 3)
type___CardInterfaceNFCCardType = CardInterfaceNFCCardType

CINFCCardTypePollValue = typing___NewType('CINFCCardTypePollValue', builtin___int)
type___CINFCCardTypePollValue = CINFCCardTypePollValue
CINFCCardTypePoll: _CINFCCardTypePoll
class _CINFCCardTypePoll(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINFCCardTypePollValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_NFC_CARD_TYPE_POLL_NONE = typing___cast(CINFCCardTypePollValue, 0)
    CI_NFC_CARD_TYPE_POLL_A = typing___cast(CINFCCardTypePollValue, 1)
    CI_NFC_CARD_TYPE_POLL_B = typing___cast(CINFCCardTypePollValue, 2)
    CI_NFC_CARD_TYPE_POLL_F_424 = typing___cast(CINFCCardTypePollValue, 4)
    CI_NFC_CARD_TYPE_POLL_F_212 = typing___cast(CINFCCardTypePollValue, 8)
CI_NFC_CARD_TYPE_POLL_NONE = typing___cast(CINFCCardTypePollValue, 0)
CI_NFC_CARD_TYPE_POLL_A = typing___cast(CINFCCardTypePollValue, 1)
CI_NFC_CARD_TYPE_POLL_B = typing___cast(CINFCCardTypePollValue, 2)
CI_NFC_CARD_TYPE_POLL_F_424 = typing___cast(CINFCCardTypePollValue, 4)
CI_NFC_CARD_TYPE_POLL_F_212 = typing___cast(CINFCCardTypePollValue, 8)
type___CINFCCardTypePoll = CINFCCardTypePoll

CICardDetectedStatusValue = typing___NewType('CICardDetectedStatusValue', builtin___int)
type___CICardDetectedStatusValue = CICardDetectedStatusValue
CICardDetectedStatus: _CICardDetectedStatus
class _CICardDetectedStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CICardDetectedStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_CARD_DETECTED_TIMEOUT = typing___cast(CICardDetectedStatusValue, 0)
    CI_CARD_DETECTED_IO_ERROR = typing___cast(CICardDetectedStatusValue, 1)
    CI_CARD_DETECTED_COLLISION = typing___cast(CICardDetectedStatusValue, 2)
    CI_CARD_DETECTED_ESTABLISHED = typing___cast(CICardDetectedStatusValue, 3)
    CI_CARD_DETECTED_NOT_SUPPORTED = typing___cast(CICardDetectedStatusValue, 4)
    CI_CARD_DETECTED_FELICA = typing___cast(CICardDetectedStatusValue, 5)
CI_CARD_DETECTED_TIMEOUT = typing___cast(CICardDetectedStatusValue, 0)
CI_CARD_DETECTED_IO_ERROR = typing___cast(CICardDetectedStatusValue, 1)
CI_CARD_DETECTED_COLLISION = typing___cast(CICardDetectedStatusValue, 2)
CI_CARD_DETECTED_ESTABLISHED = typing___cast(CICardDetectedStatusValue, 3)
CI_CARD_DETECTED_NOT_SUPPORTED = typing___cast(CICardDetectedStatusValue, 4)
CI_CARD_DETECTED_FELICA = typing___cast(CICardDetectedStatusValue, 5)
type___CICardDetectedStatus = CICardDetectedStatus

CIL1ConfigParamValue = typing___NewType('CIL1ConfigParamValue', builtin___int)
type___CIL1ConfigParamValue = CIL1ConfigParamValue
CIL1ConfigParam: _CIL1ConfigParam
class _CIL1ConfigParam(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CIL1ConfigParamValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_NFC_POLLING_CARD_TYPES_MASK = typing___cast(CIL1ConfigParamValue, 0)
    CI_NFC_RF_OFF_TIME_AFTER_STOP_POLLING_USEC = typing___cast(CIL1ConfigParamValue, 1)
    CI_NFC_RF_ON_TIME_BEFORE_START_POLLING_USEC = typing___cast(CIL1ConfigParamValue, 2)
    CI_NFC_DISABLE_OR_ENABLE_POWER_SAVE_MODE = typing___cast(CIL1ConfigParamValue, 3)
    CI_NFC_FACTORY_TEST_MODE = typing___cast(CIL1ConfigParamValue, 4)
    CI_NFC_L1_TEST_MODE = typing___cast(CIL1ConfigParamValue, 5)
    CI_NFC_USE_CNT_ATTEMPTS_OF_EXTRA_WAITING_APDU = typing___cast(CIL1ConfigParamValue, 6)
    CI_NFC_NUM_ATTEMPTS_OF_EXTRA_WAITING_APDU = typing___cast(CIL1ConfigParamValue, 7)
    CI_NFC_BOOST_VOLTAGE_MV = typing___cast(CIL1ConfigParamValue, 8)
    CI_NFC_LOG_MODE = typing___cast(CIL1ConfigParamValue, 9)
    CI_NFC_SET_BOOST_VOLTAGE_CARD_OUT_OF_FIELD_MV = typing___cast(CIL1ConfigParamValue, 12)
    CI_NFC_SET_BOOST_VOLTAGE_CARD_IN_FIELD_MV = typing___cast(CIL1ConfigParamValue, 13)
    CI_NFC_DISABLE_OR_ENABLE_BOOST_VOLTAGE_CONTROL = typing___cast(CIL1ConfigParamValue, 16)
    CI_NFC_L1_PRODUCTION_MODE_EMV = typing___cast(CIL1ConfigParamValue, 18)
    CI_NFC_L1_PRODUCTION_MODE_FELICA = typing___cast(CIL1ConfigParamValue, 19)
    CI_NFC_PWR_STATE = typing___cast(CIL1ConfigParamValue, 20)
    CI_NFC_EMV_RRR_FEATURE_FLAG = typing___cast(CIL1ConfigParamValue, 21)
CI_NFC_POLLING_CARD_TYPES_MASK = typing___cast(CIL1ConfigParamValue, 0)
CI_NFC_RF_OFF_TIME_AFTER_STOP_POLLING_USEC = typing___cast(CIL1ConfigParamValue, 1)
CI_NFC_RF_ON_TIME_BEFORE_START_POLLING_USEC = typing___cast(CIL1ConfigParamValue, 2)
CI_NFC_DISABLE_OR_ENABLE_POWER_SAVE_MODE = typing___cast(CIL1ConfigParamValue, 3)
CI_NFC_FACTORY_TEST_MODE = typing___cast(CIL1ConfigParamValue, 4)
CI_NFC_L1_TEST_MODE = typing___cast(CIL1ConfigParamValue, 5)
CI_NFC_USE_CNT_ATTEMPTS_OF_EXTRA_WAITING_APDU = typing___cast(CIL1ConfigParamValue, 6)
CI_NFC_NUM_ATTEMPTS_OF_EXTRA_WAITING_APDU = typing___cast(CIL1ConfigParamValue, 7)
CI_NFC_BOOST_VOLTAGE_MV = typing___cast(CIL1ConfigParamValue, 8)
CI_NFC_LOG_MODE = typing___cast(CIL1ConfigParamValue, 9)
CI_NFC_SET_BOOST_VOLTAGE_CARD_OUT_OF_FIELD_MV = typing___cast(CIL1ConfigParamValue, 12)
CI_NFC_SET_BOOST_VOLTAGE_CARD_IN_FIELD_MV = typing___cast(CIL1ConfigParamValue, 13)
CI_NFC_DISABLE_OR_ENABLE_BOOST_VOLTAGE_CONTROL = typing___cast(CIL1ConfigParamValue, 16)
CI_NFC_L1_PRODUCTION_MODE_EMV = typing___cast(CIL1ConfigParamValue, 18)
CI_NFC_L1_PRODUCTION_MODE_FELICA = typing___cast(CIL1ConfigParamValue, 19)
CI_NFC_PWR_STATE = typing___cast(CIL1ConfigParamValue, 20)
CI_NFC_EMV_RRR_FEATURE_FLAG = typing___cast(CIL1ConfigParamValue, 21)
type___CIL1ConfigParam = CIL1ConfigParam

CINfcEcpModeValue = typing___NewType('CINfcEcpModeValue', builtin___int)
type___CINfcEcpModeValue = CINfcEcpModeValue
CINfcEcpMode: _CINfcEcpMode
class _CINfcEcpMode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINfcEcpModeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_NFC_L1_ECP_MODE_VAS_OR_PAYMENT = typing___cast(CINfcEcpModeValue, 0)
    CI_NFC_L1_ECP_MODE_VAS_AND_PAYMENT = typing___cast(CINfcEcpModeValue, 1)
    CI_NFC_L1_ECP_MODE_VAS_ONLY = typing___cast(CINfcEcpModeValue, 2)
    CI_NFC_L1_ECP_MODE_PAYMENT_ONLY = typing___cast(CINfcEcpModeValue, 3)
    CI_NFC_L1_ECP_MODE_NONE = typing___cast(CINfcEcpModeValue, 4)
CI_NFC_L1_ECP_MODE_VAS_OR_PAYMENT = typing___cast(CINfcEcpModeValue, 0)
CI_NFC_L1_ECP_MODE_VAS_AND_PAYMENT = typing___cast(CINfcEcpModeValue, 1)
CI_NFC_L1_ECP_MODE_VAS_ONLY = typing___cast(CINfcEcpModeValue, 2)
CI_NFC_L1_ECP_MODE_PAYMENT_ONLY = typing___cast(CINfcEcpModeValue, 3)
CI_NFC_L1_ECP_MODE_NONE = typing___cast(CINfcEcpModeValue, 4)
type___CINfcEcpMode = CINfcEcpMode

CINfcFelicaExchangeStatusValue = typing___NewType('CINfcFelicaExchangeStatusValue', builtin___int)
type___CINfcFelicaExchangeStatusValue = CINfcFelicaExchangeStatusValue
CINfcFelicaExchangeStatus: _CINfcFelicaExchangeStatus
class _CINfcFelicaExchangeStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINfcFelicaExchangeStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_NFC_FELICA_ST_SUCCESS = typing___cast(CINfcFelicaExchangeStatusValue, 0)
    CI_NFC_FELICA_ST_ERROR = typing___cast(CINfcFelicaExchangeStatusValue, 1)
    CI_NFC_FELICA_ST_TIMEOUT = typing___cast(CINfcFelicaExchangeStatusValue, 2)
    CI_NFC_FELICA_ST_CANCELED = typing___cast(CINfcFelicaExchangeStatusValue, 3)
CI_NFC_FELICA_ST_SUCCESS = typing___cast(CINfcFelicaExchangeStatusValue, 0)
CI_NFC_FELICA_ST_ERROR = typing___cast(CINfcFelicaExchangeStatusValue, 1)
CI_NFC_FELICA_ST_TIMEOUT = typing___cast(CINfcFelicaExchangeStatusValue, 2)
CI_NFC_FELICA_ST_CANCELED = typing___cast(CINfcFelicaExchangeStatusValue, 3)
type___CINfcFelicaExchangeStatus = CINfcFelicaExchangeStatus

CIRequestErrorValue = typing___NewType('CIRequestErrorValue', builtin___int)
type___CIRequestErrorValue = CIRequestErrorValue
CIRequestError: _CIRequestError
class _CIRequestError(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CIRequestErrorValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_ERR_INVALID_STATE = typing___cast(CIRequestErrorValue, 0)
    CI_ERR_REQUEST_IN_PROCESS_ALREADY = typing___cast(CIRequestErrorValue, 1)
    CI_ERR_INVALID_DATA = typing___cast(CIRequestErrorValue, 2)
    CI_ERR_INVALID_MODE = typing___cast(CIRequestErrorValue, 3)
CI_ERR_INVALID_STATE = typing___cast(CIRequestErrorValue, 0)
CI_ERR_REQUEST_IN_PROCESS_ALREADY = typing___cast(CIRequestErrorValue, 1)
CI_ERR_INVALID_DATA = typing___cast(CIRequestErrorValue, 2)
CI_ERR_INVALID_MODE = typing___cast(CIRequestErrorValue, 3)
type___CIRequestError = CIRequestError

CINfcConfigIdValue = typing___NewType('CINfcConfigIdValue', builtin___int)
type___CINfcConfigIdValue = CINfcConfigIdValue
CINfcConfigId: _CINfcConfigId
class _CINfcConfigId(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINfcConfigIdValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_NFC_CONFIG_ID_ALL = typing___cast(CINfcConfigIdValue, 0)
    CI_NFC_CONFIG_ID_TUNING_SETTING_A = typing___cast(CINfcConfigIdValue, 1)
    CI_NFC_CONFIG_ID_TUNING_SETTING_B = typing___cast(CINfcConfigIdValue, 2)
    CI_NFC_CONFIG_ID_TUNING_SETTING_F = typing___cast(CINfcConfigIdValue, 3)
    CI_NFC_CONFIG_ID_WAVE_SHAPE_A = typing___cast(CINfcConfigIdValue, 4)
    CI_NFC_CONFIG_ID_WAVE_SHAPE_B = typing___cast(CINfcConfigIdValue, 5)
    CI_NFC_CONFIG_ID_WAVE_SHAPE_F = typing___cast(CINfcConfigIdValue, 6)
    CI_NFC_CONFIG_HW_MODE_A = typing___cast(CINfcConfigIdValue, 7)
    CI_NFC_CONFIG_HW_MODE_B = typing___cast(CINfcConfigIdValue, 8)
    CI_NFC_CONFIG_HW_MODE_F = typing___cast(CINfcConfigIdValue, 9)
    CI_NFC_CONFIG_POWER_SAVE = typing___cast(CINfcConfigIdValue, 10)
    CI_NFC_CONFIG_EMV_BOOST_VOLTAGE = typing___cast(CINfcConfigIdValue, 11)
    CI_NFC_CONFIG_FELICA_BOOST_VOLTAGE = typing___cast(CINfcConfigIdValue, 12)
    CI_NFC_CONFIG_DAC_CONVERTOR = typing___cast(CINfcConfigIdValue, 13)
    CI_NFC_CONFIG_INIT_REGISTER = typing___cast(CINfcConfigIdValue, 14)
CI_NFC_CONFIG_ID_ALL = typing___cast(CINfcConfigIdValue, 0)
CI_NFC_CONFIG_ID_TUNING_SETTING_A = typing___cast(CINfcConfigIdValue, 1)
CI_NFC_CONFIG_ID_TUNING_SETTING_B = typing___cast(CINfcConfigIdValue, 2)
CI_NFC_CONFIG_ID_TUNING_SETTING_F = typing___cast(CINfcConfigIdValue, 3)
CI_NFC_CONFIG_ID_WAVE_SHAPE_A = typing___cast(CINfcConfigIdValue, 4)
CI_NFC_CONFIG_ID_WAVE_SHAPE_B = typing___cast(CINfcConfigIdValue, 5)
CI_NFC_CONFIG_ID_WAVE_SHAPE_F = typing___cast(CINfcConfigIdValue, 6)
CI_NFC_CONFIG_HW_MODE_A = typing___cast(CINfcConfigIdValue, 7)
CI_NFC_CONFIG_HW_MODE_B = typing___cast(CINfcConfigIdValue, 8)
CI_NFC_CONFIG_HW_MODE_F = typing___cast(CINfcConfigIdValue, 9)
CI_NFC_CONFIG_POWER_SAVE = typing___cast(CINfcConfigIdValue, 10)
CI_NFC_CONFIG_EMV_BOOST_VOLTAGE = typing___cast(CINfcConfigIdValue, 11)
CI_NFC_CONFIG_FELICA_BOOST_VOLTAGE = typing___cast(CINfcConfigIdValue, 12)
CI_NFC_CONFIG_DAC_CONVERTOR = typing___cast(CINfcConfigIdValue, 13)
CI_NFC_CONFIG_INIT_REGISTER = typing___cast(CINfcConfigIdValue, 14)
type___CINfcConfigId = CINfcConfigId

CINfcConfigWriteResultValue = typing___NewType('CINfcConfigWriteResultValue', builtin___int)
type___CINfcConfigWriteResultValue = CINfcConfigWriteResultValue
CINfcConfigWriteResult: _CINfcConfigWriteResult
class _CINfcConfigWriteResult(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINfcConfigWriteResultValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_RESULT_NFC_CONFIG_WRITE_SUCCESS = typing___cast(CINfcConfigWriteResultValue, 0)
    CI_RESULT_NFC_CONFIG_WRITE_FAIL = typing___cast(CINfcConfigWriteResultValue, 1)
    CI_RESULT_NFC_CONFIG_WRITE_NOT_SUPPORT_FEATURE = typing___cast(CINfcConfigWriteResultValue, 255)
CI_RESULT_NFC_CONFIG_WRITE_SUCCESS = typing___cast(CINfcConfigWriteResultValue, 0)
CI_RESULT_NFC_CONFIG_WRITE_FAIL = typing___cast(CINfcConfigWriteResultValue, 1)
CI_RESULT_NFC_CONFIG_WRITE_NOT_SUPPORT_FEATURE = typing___cast(CINfcConfigWriteResultValue, 255)
type___CINfcConfigWriteResult = CINfcConfigWriteResult

CINfcConfigReadResultValue = typing___NewType('CINfcConfigReadResultValue', builtin___int)
type___CINfcConfigReadResultValue = CINfcConfigReadResultValue
CINfcConfigReadResult: _CINfcConfigReadResult
class _CINfcConfigReadResult(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINfcConfigReadResultValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_RESULT_NFC_CONFIG_READ_SUCCESS = typing___cast(CINfcConfigReadResultValue, 0)
    CI_RESULT_NFC_CONFIG_READ_FAIL = typing___cast(CINfcConfigReadResultValue, 1)
    CI_RESULT_NFC_CONFIG_READ_NOT_SUPPORT_FEATURE = typing___cast(CINfcConfigReadResultValue, 255)
CI_RESULT_NFC_CONFIG_READ_SUCCESS = typing___cast(CINfcConfigReadResultValue, 0)
CI_RESULT_NFC_CONFIG_READ_FAIL = typing___cast(CINfcConfigReadResultValue, 1)
CI_RESULT_NFC_CONFIG_READ_NOT_SUPPORT_FEATURE = typing___cast(CINfcConfigReadResultValue, 255)
type___CINfcConfigReadResult = CINfcConfigReadResult

CINfcCalibrationIdValue = typing___NewType('CINfcCalibrationIdValue', builtin___int)
type___CINfcCalibrationIdValue = CINfcCalibrationIdValue
CINfcCalibrationId: _CINfcCalibrationId
class _CINfcCalibrationId(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CINfcCalibrationIdValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CI_NFC_CALIBRATION_AFE_CTRL_9_REGISTER = typing___cast(CINfcCalibrationIdValue, 1)
CI_NFC_CALIBRATION_AFE_CTRL_9_REGISTER = typing___cast(CINfcCalibrationIdValue, 1)
type___CINfcCalibrationId = CINfcCalibrationId

class CardInterfaceRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    data: builtin___bytes = ...

    @property
    def ci_req(self) -> type___CIReq: ...

    def __init__(self,
        *,
        ci_req : typing___Optional[type___CIReq] = None,
        data : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ci_req",b"ci_req",u"data",b"data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ci_req",b"ci_req",u"data",b"data"]) -> None: ...
type___CardInterfaceRequest = CardInterfaceRequest

class CardInterfaceResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    data: builtin___bytes = ...

    @property
    def ci_msg(self) -> type___CIMsg: ...

    def __init__(self,
        *,
        ci_msg : typing___Optional[type___CIMsg] = None,
        data : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ci_msg",b"ci_msg",u"data",b"data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ci_msg",b"ci_msg",u"data",b"data"]) -> None: ...
type___CardInterfaceResponse = CardInterfaceResponse

class CIReq(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    recipientMask: type___CardInterfaceMaskValue = ...

    @property
    def wait_for_card(self) -> type___CIReqWaitForCard: ...

    @property
    def accept_detected_card(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def apdu_to_card(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def deactivate_card(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def deactivate_card_wait_removal(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def special(self) -> type___CIReqSpecial: ...

    @property
    def l1_config(self) -> type___CIReqL1Config: ...

    @property
    def start_loopback(self) -> type___CIReqStartLoopback: ...

    @property
    def stop_loopback(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def start_automode(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def crc_req(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def l1_config_v2(self) -> type___CIReqL1ConfigV2: ...

    @property
    def err_mode_loopback(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_tuning(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_t3_sys_code(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_t3_start_data_exchange(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_t3_send_data(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_adc(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_felica_send_data(self) -> type___CIMsgReqNfcFelicaSendData: ...

    @property
    def nfc_felica_cancel_exchange(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def hw_tuning_config(self) -> type___CIReqHwTuningConfig: ...

    @property
    def nfc_ecp_mode(self) -> type___CIReqNfcEcpMode: ...

    @property
    def nfc_config_write(self) -> type___CIReqNfcConfigWrite: ...

    @property
    def nfc_config_read(self) -> type___CIReqNfcConfigRead: ...

    @property
    def nfc_calibration_read(self) -> type___CIReqNfcCalibrationRead: ...

    def __init__(self,
        *,
        recipientMask : typing___Optional[type___CardInterfaceMaskValue] = None,
        wait_for_card : typing___Optional[type___CIReqWaitForCard] = None,
        accept_detected_card : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        apdu_to_card : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        deactivate_card : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        deactivate_card_wait_removal : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        special : typing___Optional[type___CIReqSpecial] = None,
        l1_config : typing___Optional[type___CIReqL1Config] = None,
        start_loopback : typing___Optional[type___CIReqStartLoopback] = None,
        stop_loopback : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        start_automode : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        crc_req : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        l1_config_v2 : typing___Optional[type___CIReqL1ConfigV2] = None,
        err_mode_loopback : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_tuning : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_t3_sys_code : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_t3_start_data_exchange : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_t3_send_data : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_adc : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_felica_send_data : typing___Optional[type___CIMsgReqNfcFelicaSendData] = None,
        nfc_felica_cancel_exchange : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        hw_tuning_config : typing___Optional[type___CIReqHwTuningConfig] = None,
        nfc_ecp_mode : typing___Optional[type___CIReqNfcEcpMode] = None,
        nfc_config_write : typing___Optional[type___CIReqNfcConfigWrite] = None,
        nfc_config_read : typing___Optional[type___CIReqNfcConfigRead] = None,
        nfc_calibration_read : typing___Optional[type___CIReqNfcCalibrationRead] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accept_detected_card",b"accept_detected_card",u"apdu_to_card",b"apdu_to_card",u"crc_req",b"crc_req",u"deactivate_card",b"deactivate_card",u"deactivate_card_wait_removal",b"deactivate_card_wait_removal",u"err_mode_loopback",b"err_mode_loopback",u"hw_tuning_config",b"hw_tuning_config",u"l1_config",b"l1_config",u"l1_config_v2",b"l1_config_v2",u"nfc_adc",b"nfc_adc",u"nfc_calibration_read",b"nfc_calibration_read",u"nfc_config_read",b"nfc_config_read",u"nfc_config_write",b"nfc_config_write",u"nfc_ecp_mode",b"nfc_ecp_mode",u"nfc_felica_cancel_exchange",b"nfc_felica_cancel_exchange",u"nfc_felica_send_data",b"nfc_felica_send_data",u"nfc_t3_send_data",b"nfc_t3_send_data",u"nfc_t3_start_data_exchange",b"nfc_t3_start_data_exchange",u"nfc_t3_sys_code",b"nfc_t3_sys_code",u"nfc_tuning",b"nfc_tuning",u"recipientMask",b"recipientMask",u"req",b"req",u"special",b"special",u"start_automode",b"start_automode",u"start_loopback",b"start_loopback",u"stop_loopback",b"stop_loopback",u"wait_for_card",b"wait_for_card"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accept_detected_card",b"accept_detected_card",u"apdu_to_card",b"apdu_to_card",u"crc_req",b"crc_req",u"deactivate_card",b"deactivate_card",u"deactivate_card_wait_removal",b"deactivate_card_wait_removal",u"err_mode_loopback",b"err_mode_loopback",u"hw_tuning_config",b"hw_tuning_config",u"l1_config",b"l1_config",u"l1_config_v2",b"l1_config_v2",u"nfc_adc",b"nfc_adc",u"nfc_calibration_read",b"nfc_calibration_read",u"nfc_config_read",b"nfc_config_read",u"nfc_config_write",b"nfc_config_write",u"nfc_ecp_mode",b"nfc_ecp_mode",u"nfc_felica_cancel_exchange",b"nfc_felica_cancel_exchange",u"nfc_felica_send_data",b"nfc_felica_send_data",u"nfc_t3_send_data",b"nfc_t3_send_data",u"nfc_t3_start_data_exchange",b"nfc_t3_start_data_exchange",u"nfc_t3_sys_code",b"nfc_t3_sys_code",u"nfc_tuning",b"nfc_tuning",u"recipientMask",b"recipientMask",u"req",b"req",u"special",b"special",u"start_automode",b"start_automode",u"start_loopback",b"start_loopback",u"stop_loopback",b"stop_loopback",u"wait_for_card",b"wait_for_card"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"req",b"req"]) -> typing_extensions___Literal["wait_for_card","accept_detected_card","apdu_to_card","deactivate_card","deactivate_card_wait_removal","special","l1_config","start_loopback","stop_loopback","start_automode","crc_req","l1_config_v2","err_mode_loopback","nfc_tuning","nfc_t3_sys_code","nfc_t3_start_data_exchange","nfc_t3_send_data","nfc_adc","nfc_felica_send_data","nfc_felica_cancel_exchange","hw_tuning_config","nfc_ecp_mode","nfc_config_write","nfc_config_read","nfc_calibration_read"]: ...
type___CIReq = CIReq

class CIMsg(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    issuer: type___CardInterfaceMaskValue = ...

    @property
    def card_detected(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def card_ready(self) -> type___CIRespNfcCardDetectedType: ...

    @property
    def collision(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def rapdu(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def waiting_removal(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def card_removed(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def card_not_responding(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def resp_special(self) -> type___CIMsgSpecial: ...

    @property
    def crc_resp(self) -> type___CRCRespType: ...

    @property
    def end_of_one_loopback_test(self) -> type___LoopbackResult: ...

    @property
    def card_detected_v2(self) -> type___CIRespCardDetected: ...

    @property
    def start_loopback(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def stop_loopback(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def l1_config_v2(self) -> type___CIMsgL1ConfigV2: ...

    @property
    def request_error(self) -> type___CIMsgRequestError: ...

    @property
    def log(self) -> type___CIMsgLog: ...

    @property
    def err_mode_loopback(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_t3_data_received(self) -> type___CIMsgNfcT3: ...

    @property
    def nfc_adc(self) -> type___CIMsgNfcAdc: ...

    @property
    def card_deactivated(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def nfc_felica_data_received(self) -> type___CIMsgRespNfcFelicaDataReceived: ...

    @property
    def nfc_ecp_mode(self) -> type___CIMsgEcpMode: ...

    @property
    def nfc_config_write_response(self) -> type___CIMsgNfcConfigWriteResponse: ...

    @property
    def nfc_config_read_response(self) -> type___CIMsgNfcConfigReadResponse: ...

    @property
    def nfc_calibration_read_response(self) -> type___CIMsgNfcCalibrationReadResponse: ...

    def __init__(self,
        *,
        issuer : typing___Optional[type___CardInterfaceMaskValue] = None,
        card_detected : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        card_ready : typing___Optional[type___CIRespNfcCardDetectedType] = None,
        collision : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        rapdu : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        waiting_removal : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        card_removed : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        card_not_responding : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        resp_special : typing___Optional[type___CIMsgSpecial] = None,
        crc_resp : typing___Optional[type___CRCRespType] = None,
        end_of_one_loopback_test : typing___Optional[type___LoopbackResult] = None,
        card_detected_v2 : typing___Optional[type___CIRespCardDetected] = None,
        start_loopback : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        stop_loopback : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        l1_config_v2 : typing___Optional[type___CIMsgL1ConfigV2] = None,
        request_error : typing___Optional[type___CIMsgRequestError] = None,
        log : typing___Optional[type___CIMsgLog] = None,
        err_mode_loopback : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_t3_data_received : typing___Optional[type___CIMsgNfcT3] = None,
        nfc_adc : typing___Optional[type___CIMsgNfcAdc] = None,
        card_deactivated : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        nfc_felica_data_received : typing___Optional[type___CIMsgRespNfcFelicaDataReceived] = None,
        nfc_ecp_mode : typing___Optional[type___CIMsgEcpMode] = None,
        nfc_config_write_response : typing___Optional[type___CIMsgNfcConfigWriteResponse] = None,
        nfc_config_read_response : typing___Optional[type___CIMsgNfcConfigReadResponse] = None,
        nfc_calibration_read_response : typing___Optional[type___CIMsgNfcCalibrationReadResponse] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_deactivated",b"card_deactivated",u"card_detected",b"card_detected",u"card_detected_v2",b"card_detected_v2",u"card_not_responding",b"card_not_responding",u"card_ready",b"card_ready",u"card_removed",b"card_removed",u"collision",b"collision",u"crc_resp",b"crc_resp",u"end_of_one_loopback_test",b"end_of_one_loopback_test",u"err_mode_loopback",b"err_mode_loopback",u"issuer",b"issuer",u"l1_config_v2",b"l1_config_v2",u"log",b"log",u"msg",b"msg",u"nfc_adc",b"nfc_adc",u"nfc_calibration_read_response",b"nfc_calibration_read_response",u"nfc_config_read_response",b"nfc_config_read_response",u"nfc_config_write_response",b"nfc_config_write_response",u"nfc_ecp_mode",b"nfc_ecp_mode",u"nfc_felica_data_received",b"nfc_felica_data_received",u"nfc_t3_data_received",b"nfc_t3_data_received",u"rapdu",b"rapdu",u"request_error",b"request_error",u"resp_special",b"resp_special",u"start_loopback",b"start_loopback",u"stop_loopback",b"stop_loopback",u"waiting_removal",b"waiting_removal"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_deactivated",b"card_deactivated",u"card_detected",b"card_detected",u"card_detected_v2",b"card_detected_v2",u"card_not_responding",b"card_not_responding",u"card_ready",b"card_ready",u"card_removed",b"card_removed",u"collision",b"collision",u"crc_resp",b"crc_resp",u"end_of_one_loopback_test",b"end_of_one_loopback_test",u"err_mode_loopback",b"err_mode_loopback",u"issuer",b"issuer",u"l1_config_v2",b"l1_config_v2",u"log",b"log",u"msg",b"msg",u"nfc_adc",b"nfc_adc",u"nfc_calibration_read_response",b"nfc_calibration_read_response",u"nfc_config_read_response",b"nfc_config_read_response",u"nfc_config_write_response",b"nfc_config_write_response",u"nfc_ecp_mode",b"nfc_ecp_mode",u"nfc_felica_data_received",b"nfc_felica_data_received",u"nfc_t3_data_received",b"nfc_t3_data_received",u"rapdu",b"rapdu",u"request_error",b"request_error",u"resp_special",b"resp_special",u"start_loopback",b"start_loopback",u"stop_loopback",b"stop_loopback",u"waiting_removal",b"waiting_removal"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"msg",b"msg"]) -> typing_extensions___Literal["card_detected","card_ready","collision","rapdu","waiting_removal","card_removed","card_not_responding","resp_special","crc_resp","end_of_one_loopback_test","card_detected_v2","start_loopback","stop_loopback","l1_config_v2","request_error","log","err_mode_loopback","nfc_t3_data_received","nfc_adc","card_deactivated","nfc_felica_data_received","nfc_ecp_mode","nfc_config_write_response","nfc_config_read_response","nfc_calibration_read_response"]: ...
type___CIMsg = CIMsg

class LoopbackResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    success: builtin___bool = ...
    test_number: builtin___int = ...

    def __init__(self,
        *,
        success : typing___Optional[builtin___bool] = None,
        test_number : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"success",b"success",u"test_number",b"test_number"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"success",b"success",u"test_number",b"test_number"]) -> None: ...
type___LoopbackResult = LoopbackResult

class CIReqWaitForCard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    card_wait_timeout_in_seconds: builtin___int = ...
    poll_period_ms: builtin___int = ...
    disable_power_save: builtin___bool = ...
    factory_test_mode: builtin___bool = ...
    nfc_card_type: type___CardInterfaceNFCCardTypeValue = ...

    def __init__(self,
        *,
        card_wait_timeout_in_seconds : typing___Optional[builtin___int] = None,
        poll_period_ms : typing___Optional[builtin___int] = None,
        disable_power_save : typing___Optional[builtin___bool] = None,
        factory_test_mode : typing___Optional[builtin___bool] = None,
        nfc_card_type : typing___Optional[type___CardInterfaceNFCCardTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_wait_timeout_in_seconds",b"card_wait_timeout_in_seconds",u"disable_power_save",b"disable_power_save",u"factory_test_mode",b"factory_test_mode",u"nfc_card_type",b"nfc_card_type",u"poll_period_ms",b"poll_period_ms"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_wait_timeout_in_seconds",b"card_wait_timeout_in_seconds",u"disable_power_save",b"disable_power_save",u"factory_test_mode",b"factory_test_mode",u"nfc_card_type",b"nfc_card_type",u"poll_period_ms",b"poll_period_ms"]) -> None: ...
type___CIReqWaitForCard = CIReqWaitForCard

class CIRespCardDetected(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    status: type___CICardDetectedStatusValue = ...

    def __init__(self,
        *,
        status : typing___Optional[type___CICardDetectedStatusValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> None: ...
type___CIRespCardDetected = CIRespCardDetected

class CIRespNfcCardDetectedType(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    nfc_card_type: type___CardInterfaceNFCCardTypeValue = ...

    def __init__(self,
        *,
        nfc_card_type : typing___Optional[type___CardInterfaceNFCCardTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"nfc_card_type",b"nfc_card_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"nfc_card_type",b"nfc_card_type"]) -> None: ...
type___CIRespNfcCardDetectedType = CIRespNfcCardDetectedType

class CIReqSpecial(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def carrier_on(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def carrier_off(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def polling(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def reset(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def wupa(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def wupb(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def wupa_rats(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def wupb_attrib(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def power_off(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def trans_stop(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def trans_a(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    @property
    def trans_b(self) -> squareup___spe___k400___common_pb2___EmptyMessage: ...

    def __init__(self,
        *,
        carrier_on : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        carrier_off : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        polling : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        reset : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        wupa : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        wupb : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        wupa_rats : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        wupb_attrib : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        power_off : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        trans_stop : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        trans_a : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        trans_b : typing___Optional[squareup___spe___k400___common_pb2___EmptyMessage] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"carrier_off",b"carrier_off",u"carrier_on",b"carrier_on",u"polling",b"polling",u"power_off",b"power_off",u"reset",b"reset",u"spec",b"spec",u"trans_a",b"trans_a",u"trans_b",b"trans_b",u"trans_stop",b"trans_stop",u"wupa",b"wupa",u"wupa_rats",b"wupa_rats",u"wupb",b"wupb",u"wupb_attrib",b"wupb_attrib"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"carrier_off",b"carrier_off",u"carrier_on",b"carrier_on",u"polling",b"polling",u"power_off",b"power_off",u"reset",b"reset",u"spec",b"spec",u"trans_a",b"trans_a",u"trans_b",b"trans_b",u"trans_stop",b"trans_stop",u"wupa",b"wupa",u"wupa_rats",b"wupa_rats",u"wupb",b"wupb",u"wupb_attrib",b"wupb_attrib"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"spec",b"spec"]) -> typing_extensions___Literal["carrier_on","carrier_off","polling","reset","wupa","wupb","wupa_rats","wupb_attrib","power_off","trans_stop","trans_a","trans_b"]: ...
type___CIReqSpecial = CIReqSpecial

class CIReqL1Config(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    rf_off_time_after_polling_in_ms: builtin___int = ...

    def __init__(self,
        *,
        rf_off_time_after_polling_in_ms : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"rf_off_time_after_polling_in_ms",b"rf_off_time_after_polling_in_ms"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"rf_off_time_after_polling_in_ms",b"rf_off_time_after_polling_in_ms"]) -> None: ...
type___CIReqL1Config = CIReqL1Config

class CIReqHwTuningConfig(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    hw_tuning_config: builtin___int = ...

    def __init__(self,
        *,
        hw_tuning_config : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"hw_tuning_config",b"hw_tuning_config"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"hw_tuning_config",b"hw_tuning_config"]) -> None: ...
type___CIReqHwTuningConfig = CIReqHwTuningConfig

class CIReqL1ConfigV2(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    param: type___CIL1ConfigParamValue = ...
    val: builtin___int = ...

    def __init__(self,
        *,
        param : typing___Optional[type___CIL1ConfigParamValue] = None,
        val : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"param",b"param",u"val",b"val"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"param",b"param",u"val",b"val"]) -> None: ...
type___CIReqL1ConfigV2 = CIReqL1ConfigV2

class CIReqStartLoopback(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    number_of_reps: builtin___int = ...

    def __init__(self,
        *,
        number_of_reps : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"number_of_reps",b"number_of_reps"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"number_of_reps",b"number_of_reps"]) -> None: ...
type___CIReqStartLoopback = CIReqStartLoopback

class CRCRespType(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    crc_val: builtin___int = ...

    def __init__(self,
        *,
        crc_val : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"crc_val",b"crc_val"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"crc_val",b"crc_val"]) -> None: ...
type___CRCRespType = CRCRespType

class CIReqNfcEcpMode(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ecp_mode: type___CINfcEcpModeValue = ...

    def __init__(self,
        *,
        ecp_mode : typing___Optional[type___CINfcEcpModeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ecp_mode",b"ecp_mode"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ecp_mode",b"ecp_mode"]) -> None: ...
type___CIReqNfcEcpMode = CIReqNfcEcpMode

class CIMsgSpecial(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    card_type: type___CardInterfaceNFCCardTypeValue = ...
    collision: builtin___bool = ...
    cmd: builtin___int = ...
    is_card: builtin___bool = ...

    def __init__(self,
        *,
        card_type : typing___Optional[type___CardInterfaceNFCCardTypeValue] = None,
        collision : typing___Optional[builtin___bool] = None,
        cmd : typing___Optional[builtin___int] = None,
        is_card : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_type",b"card_type",u"cmd",b"cmd",u"collision",b"collision",u"is_card",b"is_card"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_type",b"card_type",u"cmd",b"cmd",u"collision",b"collision",u"is_card",b"is_card"]) -> None: ...
type___CIMsgSpecial = CIMsgSpecial

class CIMsgL1ConfigV2(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    param: type___CIL1ConfigParamValue = ...
    val: builtin___int = ...

    def __init__(self,
        *,
        param : typing___Optional[type___CIL1ConfigParamValue] = None,
        val : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"param",b"param",u"val",b"val"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"param",b"param",u"val",b"val"]) -> None: ...
type___CIMsgL1ConfigV2 = CIMsgL1ConfigV2

class CIMsgLog(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    log_msg: builtin___int = ...
    is_tx: builtin___bool = ...
    is_error: builtin___bool = ...
    is_crc_bypass: builtin___bool = ...

    def __init__(self,
        *,
        log_msg : typing___Optional[builtin___int] = None,
        is_tx : typing___Optional[builtin___bool] = None,
        is_error : typing___Optional[builtin___bool] = None,
        is_crc_bypass : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"is_crc_bypass",b"is_crc_bypass",u"is_error",b"is_error",u"is_tx",b"is_tx",u"log_msg",b"log_msg"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"is_crc_bypass",b"is_crc_bypass",u"is_error",b"is_error",u"is_tx",b"is_tx",u"log_msg",b"log_msg"]) -> None: ...
type___CIMsgLog = CIMsgLog

class CIMsgNfcAdc(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    adc: builtin___int = ...

    def __init__(self,
        *,
        adc : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"adc",b"adc"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"adc",b"adc"]) -> None: ...
type___CIMsgNfcAdc = CIMsgNfcAdc

class CIMsgNfcT3(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    is_success: builtin___bool = ...

    def __init__(self,
        *,
        is_success : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"is_success",b"is_success"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"is_success",b"is_success"]) -> None: ...
type___CIMsgNfcT3 = CIMsgNfcT3

class CIMsgRequestError(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    error_code: type___CIRequestErrorValue = ...
    current_state: builtin___int = ...
    current_request_id: builtin___int = ...

    def __init__(self,
        *,
        error_code : typing___Optional[type___CIRequestErrorValue] = None,
        current_state : typing___Optional[builtin___int] = None,
        current_request_id : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_request_id",b"current_request_id",u"current_state",b"current_state",u"error_code",b"error_code"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_request_id",b"current_request_id",u"current_state",b"current_state",u"error_code",b"error_code"]) -> None: ...
type___CIMsgRequestError = CIMsgRequestError

class CIMsgCurrentState(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    current_state: builtin___int = ...

    def __init__(self,
        *,
        current_state : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_state",b"current_state"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_state",b"current_state"]) -> None: ...
type___CIMsgCurrentState = CIMsgCurrentState

class CIMsgReqNfcFelicaSendData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    fdt_msec: builtin___int = ...
    fwt_msec: builtin___int = ...
    is_wait_val_in_msec: builtin___bool = ...
    wait_val: builtin___int = ...

    def __init__(self,
        *,
        fdt_msec : typing___Optional[builtin___int] = None,
        fwt_msec : typing___Optional[builtin___int] = None,
        is_wait_val_in_msec : typing___Optional[builtin___bool] = None,
        wait_val : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"fdt_msec",b"fdt_msec",u"fwt_msec",b"fwt_msec",u"is_wait_val_in_msec",b"is_wait_val_in_msec",u"wait_val",b"wait_val"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"fdt_msec",b"fdt_msec",u"fwt_msec",b"fwt_msec",u"is_wait_val_in_msec",b"is_wait_val_in_msec",u"wait_val",b"wait_val"]) -> None: ...
type___CIMsgReqNfcFelicaSendData = CIMsgReqNfcFelicaSendData

class CIMsgRespNfcFelicaDataReceived(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    exchange_status: type___CINfcFelicaExchangeStatusValue = ...

    def __init__(self,
        *,
        exchange_status : typing___Optional[type___CINfcFelicaExchangeStatusValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"exchange_status",b"exchange_status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"exchange_status",b"exchange_status"]) -> None: ...
type___CIMsgRespNfcFelicaDataReceived = CIMsgRespNfcFelicaDataReceived

class CIMsgEcpMode(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ecp_mode: type___CINfcEcpModeValue = ...

    def __init__(self,
        *,
        ecp_mode : typing___Optional[type___CINfcEcpModeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ecp_mode",b"ecp_mode"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ecp_mode",b"ecp_mode"]) -> None: ...
type___CIMsgEcpMode = CIMsgEcpMode

class CIReqNfcConfigWrite(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: type___CINfcConfigIdValue = ...
    length: builtin___int = ...

    def __init__(self,
        *,
        id : typing___Optional[type___CINfcConfigIdValue] = None,
        length : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"length",b"length"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"length",b"length"]) -> None: ...
type___CIReqNfcConfigWrite = CIReqNfcConfigWrite

class CIReqNfcConfigRead(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: type___CINfcConfigIdValue = ...

    def __init__(self,
        *,
        id : typing___Optional[type___CINfcConfigIdValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> None: ...
type___CIReqNfcConfigRead = CIReqNfcConfigRead

class CIMsgNfcConfigWriteResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    result: type___CINfcConfigWriteResultValue = ...

    def __init__(self,
        *,
        result : typing___Optional[type___CINfcConfigWriteResultValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"result",b"result"]) -> None: ...
type___CIMsgNfcConfigWriteResponse = CIMsgNfcConfigWriteResponse

class CIMsgNfcConfigReadResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    result: type___CINfcConfigReadResultValue = ...
    id: type___CINfcConfigIdValue = ...
    length: builtin___int = ...

    def __init__(self,
        *,
        result : typing___Optional[type___CINfcConfigReadResultValue] = None,
        id : typing___Optional[type___CINfcConfigIdValue] = None,
        length : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"length",b"length",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"length",b"length",u"result",b"result"]) -> None: ...
type___CIMsgNfcConfigReadResponse = CIMsgNfcConfigReadResponse

class CIReqNfcCalibrationRead(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: type___CINfcCalibrationIdValue = ...

    def __init__(self,
        *,
        id : typing___Optional[type___CINfcCalibrationIdValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> None: ...
type___CIReqNfcCalibrationRead = CIReqNfcCalibrationRead

class CIMsgNfcCalibrationReadResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: type___CINfcCalibrationIdValue = ...
    success: builtin___bool = ...
    value: builtin___int = ...

    def __init__(self,
        *,
        id : typing___Optional[type___CINfcCalibrationIdValue] = None,
        success : typing___Optional[builtin___bool] = None,
        value : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"success",b"success",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"success",b"success",u"value",b"value"]) -> None: ...
type___CIMsgNfcCalibrationReadResponse = CIMsgNfcCalibrationReadResponse
