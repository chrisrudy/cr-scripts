# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.bazaar import online_store_pb2 as squareup_dot_bazaar_dot_online__store__pb2


class LabelServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllLabels = channel.unary_unary(
                '/squareup.bazaar.LabelService/GetAllLabels',
                request_serializer=squareup_dot_bazaar_dot_online__store__pb2.GetAllLabelsRequest.SerializeToString,
                response_deserializer=squareup_dot_bazaar_dot_online__store__pb2.GetAllLabelsResponse.FromString,
                )
        self.CreateLabel = channel.unary_unary(
                '/squareup.bazaar.LabelService/CreateLabel',
                request_serializer=squareup_dot_bazaar_dot_online__store__pb2.CreateLabelRequest.SerializeToString,
                response_deserializer=squareup_dot_bazaar_dot_online__store__pb2.CreateLabelResponse.FromString,
                )
        self.UpdateLabel = channel.unary_unary(
                '/squareup.bazaar.LabelService/UpdateLabel',
                request_serializer=squareup_dot_bazaar_dot_online__store__pb2.UpdateLabelRequest.SerializeToString,
                response_deserializer=squareup_dot_bazaar_dot_online__store__pb2.UpdateLabelResponse.FromString,
                )
        self.DeleteLabel = channel.unary_unary(
                '/squareup.bazaar.LabelService/DeleteLabel',
                request_serializer=squareup_dot_bazaar_dot_online__store__pb2.DeleteLabelRequest.SerializeToString,
                response_deserializer=squareup_dot_bazaar_dot_online__store__pb2.DeleteLabelResponse.FromString,
                )


class LabelServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllLabels(self, request, context):
        """*
        Gets all label and associated items for a merchant. The labels are returned in ascending order
        by ordinals. There are no guarantees for order of labels with the same ordinal. Item tokens on
        labels are returned in order that they were created/updated with.

        URL: https://api.squareup.com/1.0/shop/squareup.bazaar.LabelService/GetAllLabels
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateLabel(self, request, context):
        """*
        Creates a label with the given title, description, and item memberships.

        URL: https://api.squareup.com/1.0/shop/squareup.bazaar.LabelService/CreateLabel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLabel(self, request, context):
        """*
        Updates the given label with the given title, description, and item memberships.

        URL: https://api.squareup.com/1.0/shop/squareup.bazaar.LabelService/UpdateLabel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteLabel(self, request, context):
        """*
        Deletes the given label and its associated item memberships.

        URL: https://api.squareup.com/1.0/shop/squareup.bazaar.LabelService/DeleteLabel
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LabelServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllLabels,
                    request_deserializer=squareup_dot_bazaar_dot_online__store__pb2.GetAllLabelsRequest.FromString,
                    response_serializer=squareup_dot_bazaar_dot_online__store__pb2.GetAllLabelsResponse.SerializeToString,
            ),
            'CreateLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLabel,
                    request_deserializer=squareup_dot_bazaar_dot_online__store__pb2.CreateLabelRequest.FromString,
                    response_serializer=squareup_dot_bazaar_dot_online__store__pb2.CreateLabelResponse.SerializeToString,
            ),
            'UpdateLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLabel,
                    request_deserializer=squareup_dot_bazaar_dot_online__store__pb2.UpdateLabelRequest.FromString,
                    response_serializer=squareup_dot_bazaar_dot_online__store__pb2.UpdateLabelResponse.SerializeToString,
            ),
            'DeleteLabel': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteLabel,
                    request_deserializer=squareup_dot_bazaar_dot_online__store__pb2.DeleteLabelRequest.FromString,
                    response_serializer=squareup_dot_bazaar_dot_online__store__pb2.DeleteLabelResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.bazaar.LabelService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LabelService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bazaar.LabelService/GetAllLabels',
            squareup_dot_bazaar_dot_online__store__pb2.GetAllLabelsRequest.SerializeToString,
            squareup_dot_bazaar_dot_online__store__pb2.GetAllLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bazaar.LabelService/CreateLabel',
            squareup_dot_bazaar_dot_online__store__pb2.CreateLabelRequest.SerializeToString,
            squareup_dot_bazaar_dot_online__store__pb2.CreateLabelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bazaar.LabelService/UpdateLabel',
            squareup_dot_bazaar_dot_online__store__pb2.UpdateLabelRequest.SerializeToString,
            squareup_dot_bazaar_dot_online__store__pb2.UpdateLabelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteLabel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bazaar.LabelService/DeleteLabel',
            squareup_dot_bazaar_dot_online__store__pb2.DeleteLabelRequest.SerializeToString,
            squareup_dot_bazaar_dot_online__store__pb2.DeleteLabelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RiskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRiskExposure = channel.unary_unary(
                '/squareup.bazaar.RiskService/GetRiskExposure',
                request_serializer=squareup_dot_bazaar_dot_online__store__pb2.GetRiskExposureRequest.SerializeToString,
                response_deserializer=squareup_dot_bazaar_dot_online__store__pb2.GetRiskExposureResponse.FromString,
                )


class RiskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRiskExposure(self, request, context):
        """*
        Gets risk exposure for a merchant.

        URL: https://api.squareup.com/1.0/shop/squareup.bazaar.RiskService/GetRiskExposure
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RiskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRiskExposure': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRiskExposure,
                    request_deserializer=squareup_dot_bazaar_dot_online__store__pb2.GetRiskExposureRequest.FromString,
                    response_serializer=squareup_dot_bazaar_dot_online__store__pb2.GetRiskExposureResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.bazaar.RiskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RiskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRiskExposure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bazaar.RiskService/GetRiskExposure',
            squareup_dot_bazaar_dot_online__store__pb2.GetRiskExposureRequest.SerializeToString,
            squareup_dot_bazaar_dot_online__store__pb2.GetRiskExposureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
