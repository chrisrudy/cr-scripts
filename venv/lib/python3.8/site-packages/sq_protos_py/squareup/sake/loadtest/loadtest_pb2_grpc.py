# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.sake.loadtest import loadtest_pb2 as squareup_dot_sake_dot_loadtest_dot_loadtest__pb2


class SakeLoadTestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/squareup.sake.loadtest.SakeLoadTestService/Ping',
                request_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.PingRequest.SerializeToString,
                response_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
                )
        self.Configure = channel.unary_unary(
                '/squareup.sake.loadtest.SakeLoadTestService/Configure',
                request_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.ConfigureRequest.SerializeToString,
                response_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
                )
        self.Start = channel.unary_unary(
                '/squareup.sake.loadtest.SakeLoadTestService/Start',
                request_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.StartRequest.SerializeToString,
                response_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
                )
        self.Stop = channel.unary_unary(
                '/squareup.sake.loadtest.SakeLoadTestService/Stop',
                request_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.StopRequest.SerializeToString,
                response_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
                )


class SakeLoadTestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Configure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SakeLoadTestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.PingRequest.FromString,
                    response_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.SerializeToString,
            ),
            'Configure': grpc.unary_unary_rpc_method_handler(
                    servicer.Configure,
                    request_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.ConfigureRequest.FromString,
                    response_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.StartRequest.FromString,
                    response_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.StopRequest.FromString,
                    response_serializer=squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.sake.loadtest.SakeLoadTestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SakeLoadTestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sake.loadtest.SakeLoadTestService/Ping',
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.PingRequest.SerializeToString,
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Configure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sake.loadtest.SakeLoadTestService/Configure',
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.ConfigureRequest.SerializeToString,
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sake.loadtest.SakeLoadTestService/Start',
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.StartRequest.SerializeToString,
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sake.loadtest.SakeLoadTestService/Stop',
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.StopRequest.SerializeToString,
            squareup_dot_sake_dot_loadtest_dot_loadtest__pb2.EmptyMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
