# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PbsBatchStateLog(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    batch_id: builtin___int = ...
    new_state: typing___Text = ...
    speleo_trace_id: typing___Text = ...

    @property
    def state_updated_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        batch_id : typing___Optional[builtin___int] = None,
        new_state : typing___Optional[typing___Text] = None,
        state_updated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        speleo_trace_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"batch_id",b"batch_id",u"new_state",b"new_state",u"speleo_trace_id",b"speleo_trace_id",u"state_updated_at",b"state_updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"batch_id",b"batch_id",u"new_state",b"new_state",u"speleo_trace_id",b"speleo_trace_id",u"state_updated_at",b"state_updated_at"]) -> None: ...
type___PbsBatchStateLog = PbsBatchStateLog

class PbsBatch(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: builtin___int = ...
    shard: typing___Text = ...
    gateway_batch_id: typing___Text = ...
    external_batch_id: typing___Text = ...
    settlement_gateway_id: typing___Text = ...
    sequence_number: builtin___int = ...
    created_at: builtin___int = ...
    submitted_at: builtin___int = ...
    closed_at: builtin___int = ...
    pending: builtin___bool = ...
    state: typing___Text = ...
    success: builtin___bool = ...
    error_code: typing___Text = ...
    error_message: typing___Text = ...
    deprecated_lock_expires_at: builtin___int = ...
    capture_count: builtin___int = ...
    capture_amount: builtin___int = ...
    refund_count: builtin___int = ...
    refund_amount: builtin___int = ...
    state_updated_at: builtin___int = ...
    approximate_batch_size: builtin___int = ...
    vault_only_flag: builtin___bool = ...

    def __init__(self,
        *,
        id : typing___Optional[builtin___int] = None,
        shard : typing___Optional[typing___Text] = None,
        gateway_batch_id : typing___Optional[typing___Text] = None,
        external_batch_id : typing___Optional[typing___Text] = None,
        settlement_gateway_id : typing___Optional[typing___Text] = None,
        sequence_number : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[builtin___int] = None,
        submitted_at : typing___Optional[builtin___int] = None,
        closed_at : typing___Optional[builtin___int] = None,
        pending : typing___Optional[builtin___bool] = None,
        state : typing___Optional[typing___Text] = None,
        success : typing___Optional[builtin___bool] = None,
        error_code : typing___Optional[typing___Text] = None,
        error_message : typing___Optional[typing___Text] = None,
        deprecated_lock_expires_at : typing___Optional[builtin___int] = None,
        capture_count : typing___Optional[builtin___int] = None,
        capture_amount : typing___Optional[builtin___int] = None,
        refund_count : typing___Optional[builtin___int] = None,
        refund_amount : typing___Optional[builtin___int] = None,
        state_updated_at : typing___Optional[builtin___int] = None,
        approximate_batch_size : typing___Optional[builtin___int] = None,
        vault_only_flag : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"approximate_batch_size",b"approximate_batch_size",u"capture_amount",b"capture_amount",u"capture_count",b"capture_count",u"closed_at",b"closed_at",u"created_at",b"created_at",u"deprecated_lock_expires_at",b"deprecated_lock_expires_at",u"error_code",b"error_code",u"error_message",b"error_message",u"external_batch_id",b"external_batch_id",u"gateway_batch_id",b"gateway_batch_id",u"id",b"id",u"pending",b"pending",u"refund_amount",b"refund_amount",u"refund_count",b"refund_count",u"sequence_number",b"sequence_number",u"settlement_gateway_id",b"settlement_gateway_id",u"shard",b"shard",u"state",b"state",u"state_updated_at",b"state_updated_at",u"submitted_at",b"submitted_at",u"success",b"success",u"vault_only_flag",b"vault_only_flag"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"approximate_batch_size",b"approximate_batch_size",u"capture_amount",b"capture_amount",u"capture_count",b"capture_count",u"closed_at",b"closed_at",u"created_at",b"created_at",u"deprecated_lock_expires_at",b"deprecated_lock_expires_at",u"error_code",b"error_code",u"error_message",b"error_message",u"external_batch_id",b"external_batch_id",u"gateway_batch_id",b"gateway_batch_id",u"id",b"id",u"pending",b"pending",u"refund_amount",b"refund_amount",u"refund_count",b"refund_count",u"sequence_number",b"sequence_number",u"settlement_gateway_id",b"settlement_gateway_id",u"shard",b"shard",u"state",b"state",u"state_updated_at",b"state_updated_at",u"submitted_at",b"submitted_at",u"success",b"success",u"vault_only_flag",b"vault_only_flag"]) -> None: ...
type___PbsBatch = PbsBatch
