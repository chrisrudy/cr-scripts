# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.aliases.AliasProto_pb2 import (
    Alias as squareup___cash___aliases___AliasProto_pb2___Alias,
)

from sq_protos_py.squareup.cash.clients.AppInstallProto_pb2 import (
    AppInstall as squareup___cash___clients___AppInstallProto_pb2___AppInstall,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class AliasLinkedEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    display_alias: typing___Text = ...
    international_phone_number: typing___Text = ...

    @property
    def alias(self) -> squareup___cash___aliases___AliasProto_pb2___Alias: ...

    @property
    def app_install(self) -> squareup___cash___clients___AppInstallProto_pb2___AppInstall: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        alias : typing___Optional[squareup___cash___aliases___AliasProto_pb2___Alias] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        app_install : typing___Optional[squareup___cash___clients___AppInstallProto_pb2___AppInstall] = None,
        display_alias : typing___Optional[typing___Text] = None,
        international_phone_number : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"alias_information",b"alias_information",u"app_install",b"app_install",u"country",b"country",u"customer_token",b"customer_token",u"display_alias",b"display_alias",u"international_phone_number",b"international_phone_number"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"alias_information",b"alias_information",u"app_install",b"app_install",u"country",b"country",u"customer_token",b"customer_token",u"display_alias",b"display_alias",u"international_phone_number",b"international_phone_number"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"alias_information",b"alias_information"]) -> typing_extensions___Literal["app_install","display_alias","international_phone_number"]: ...
type___AliasLinkedEvent = AliasLinkedEvent
