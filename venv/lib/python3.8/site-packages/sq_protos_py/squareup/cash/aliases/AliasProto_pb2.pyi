# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Alias(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Alias.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        APP = typing___cast(Alias.TypeValue, 1)
        EMAIL = typing___cast(Alias.TypeValue, 2)
        SMS = typing___cast(Alias.TypeValue, 3)
        CASHTAG = typing___cast(Alias.TypeValue, 4)
        CUSTOMER_TOKEN = typing___cast(Alias.TypeValue, 5)
        PLATFORM = typing___cast(Alias.TypeValue, 6)
    APP = typing___cast(Alias.TypeValue, 1)
    EMAIL = typing___cast(Alias.TypeValue, 2)
    SMS = typing___cast(Alias.TypeValue, 3)
    CASHTAG = typing___cast(Alias.TypeValue, 4)
    CUSTOMER_TOKEN = typing___cast(Alias.TypeValue, 5)
    PLATFORM = typing___cast(Alias.TypeValue, 6)
    type___Type = Type

    type: type___Alias.TypeValue = ...
    value: typing___Text = ...
    platform_id: typing___Text = ...

    def __init__(self,
        *,
        type : typing___Optional[type___Alias.TypeValue] = None,
        value : typing___Optional[typing___Text] = None,
        platform_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"platform_id",b"platform_id",u"type",b"type",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"platform_id",b"platform_id",u"type",b"type",u"value",b"value"]) -> None: ...
type___Alias = Alias
