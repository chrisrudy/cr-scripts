# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.franklin.UiAliasProto_pb2 import (
    UiAlias as squareup___franklin___UiAliasProto_pb2___UiAlias,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ChallengeEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    expires_at: builtin___int = ...
    version: builtin___int = ...
    occurred_at: builtin___int = ...
    display_date: builtin___int = ...

    @property
    def alias(self) -> squareup___franklin___UiAliasProto_pb2___UiAlias: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        alias : typing___Optional[squareup___franklin___UiAliasProto_pb2___UiAlias] = None,
        expires_at : typing___Optional[builtin___int] = None,
        version : typing___Optional[builtin___int] = None,
        occurred_at : typing___Optional[builtin___int] = None,
        display_date : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"customer_token",b"customer_token",u"display_date",b"display_date",u"expires_at",b"expires_at",u"occurred_at",b"occurred_at",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"customer_token",b"customer_token",u"display_date",b"display_date",u"expires_at",b"expires_at",u"occurred_at",b"occurred_at",u"version",b"version"]) -> None: ...
type___ChallengeEvent = ChallengeEvent
