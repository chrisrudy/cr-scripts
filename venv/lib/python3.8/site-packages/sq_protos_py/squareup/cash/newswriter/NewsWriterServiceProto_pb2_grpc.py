# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cash.newswriter import backfill_pb2 as squareup_dot_cash_dot_newswriter_dot_backfill__pb2
from sq_protos_py.squareup.cash.newswriter import events_pb2 as squareup_dot_cash_dot_newswriter_dot_events__pb2
from sq_protos_py.squareup.cash.newswriter import migration_pb2 as squareup_dot_cash_dot_newswriter_dot_migration__pb2


class NewsWriterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BackfillCustomer = channel.unary_unary(
                '/squareup.cash.newswriter.NewsWriterService/BackfillCustomer',
                request_serializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillCustomerRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillCustomerResponse.FromString,
                )
        self.BackfillMerchant = channel.unary_unary(
                '/squareup.cash.newswriter.NewsWriterService/BackfillMerchant',
                request_serializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillMerchantResponse.FromString,
                )
        self.BackfillTransaction = channel.unary_unary(
                '/squareup.cash.newswriter.NewsWriterService/BackfillTransaction',
                request_serializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillTransactionResponse.FromString,
                )
        self.CompareSyncEntities = channel.unary_unary(
                '/squareup.cash.newswriter.NewsWriterService/CompareSyncEntities',
                request_serializer=squareup_dot_cash_dot_newswriter_dot_migration__pb2.CompareSyncEntitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_newswriter_dot_migration__pb2.CompareSyncEntitiesResponse.FromString,
                )
        self.ProcessEvents = channel.unary_unary(
                '/squareup.cash.newswriter.NewsWriterService/ProcessEvents',
                request_serializer=squareup_dot_cash_dot_newswriter_dot_events__pb2.ProcessEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_newswriter_dot_events__pb2.ProcessEventsResponse.FromString,
                )


class NewsWriterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BackfillCustomer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BackfillMerchant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BackfillTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareSyncEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NewsWriterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BackfillCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillCustomer,
                    request_deserializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillCustomerRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillCustomerResponse.SerializeToString,
            ),
            'BackfillMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillMerchant,
                    request_deserializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillMerchantRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillMerchantResponse.SerializeToString,
            ),
            'BackfillTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillTransaction,
                    request_deserializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillTransactionRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillTransactionResponse.SerializeToString,
            ),
            'CompareSyncEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareSyncEntities,
                    request_deserializer=squareup_dot_cash_dot_newswriter_dot_migration__pb2.CompareSyncEntitiesRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_newswriter_dot_migration__pb2.CompareSyncEntitiesResponse.SerializeToString,
            ),
            'ProcessEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessEvents,
                    request_deserializer=squareup_dot_cash_dot_newswriter_dot_events__pb2.ProcessEventsRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_newswriter_dot_events__pb2.ProcessEventsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.newswriter.NewsWriterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NewsWriterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BackfillCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.newswriter.NewsWriterService/BackfillCustomer',
            squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillCustomerRequest.SerializeToString,
            squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BackfillMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.newswriter.NewsWriterService/BackfillMerchant',
            squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillMerchantRequest.SerializeToString,
            squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BackfillTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.newswriter.NewsWriterService/BackfillTransaction',
            squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillTransactionRequest.SerializeToString,
            squareup_dot_cash_dot_newswriter_dot_backfill__pb2.BackfillTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareSyncEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.newswriter.NewsWriterService/CompareSyncEntities',
            squareup_dot_cash_dot_newswriter_dot_migration__pb2.CompareSyncEntitiesRequest.SerializeToString,
            squareup_dot_cash_dot_newswriter_dot_migration__pb2.CompareSyncEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.newswriter.NewsWriterService/ProcessEvents',
            squareup_dot_cash_dot_newswriter_dot_events__pb2.ProcessEventsRequest.SerializeToString,
            squareup_dot_cash_dot_newswriter_dot_events__pb2.ProcessEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
