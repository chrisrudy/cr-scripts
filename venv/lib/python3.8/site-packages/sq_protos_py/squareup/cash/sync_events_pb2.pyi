# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EntityTypeValue = typing___NewType('EntityTypeValue', builtin___int)
type___EntityTypeValue = EntityTypeValue
EntityType: _EntityType
class _EntityType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EntityTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    TEST_PERSON = typing___cast(EntityTypeValue, 1)
    EXPERIMENT = typing___cast(EntityTypeValue, 2)
    EXPERIMENT_OVERRIDE = typing___cast(EntityTypeValue, 3)
    SQUARE_EMPLOYEE = typing___cast(EntityTypeValue, 4)
    TRANSACTION = typing___cast(EntityTypeValue, 5)
    MERCHANT = typing___cast(EntityTypeValue, 6)
    CUSTOMER = typing___cast(EntityTypeValue, 7)
    PAYMENT = typing___cast(EntityTypeValue, 8)
    REWARD = typing___cast(EntityTypeValue, 9)
    CUSTOMER_ACTIVE_REWARDS = typing___cast(EntityTypeValue, 10)
    TRANSACTION_REWARD_EXECUTION_RULE = typing___cast(EntityTypeValue, 11)
    TRANSFER = typing___cast(EntityTypeValue, 12)
TEST_PERSON = typing___cast(EntityTypeValue, 1)
EXPERIMENT = typing___cast(EntityTypeValue, 2)
EXPERIMENT_OVERRIDE = typing___cast(EntityTypeValue, 3)
SQUARE_EMPLOYEE = typing___cast(EntityTypeValue, 4)
TRANSACTION = typing___cast(EntityTypeValue, 5)
MERCHANT = typing___cast(EntityTypeValue, 6)
CUSTOMER = typing___cast(EntityTypeValue, 7)
PAYMENT = typing___cast(EntityTypeValue, 8)
REWARD = typing___cast(EntityTypeValue, 9)
CUSTOMER_ACTIVE_REWARDS = typing___cast(EntityTypeValue, 10)
TRANSACTION_REWARD_EXECUTION_RULE = typing___cast(EntityTypeValue, 11)
TRANSFER = typing___cast(EntityTypeValue, 12)
type___EntityType = EntityType

class EntitySync(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: type___EntityTypeValue = ...
    entity: builtin___bytes = ...

    def __init__(self,
        *,
        type : typing___Optional[type___EntityTypeValue] = None,
        entity : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"entity",b"entity",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"entity",b"entity",u"type",b"type"]) -> None: ...
type___EntitySync = EntitySync

class EntityDelete(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: type___EntityTypeValue = ...

    def __init__(self,
        *,
        type : typing___Optional[type___EntityTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> None: ...
type___EntityDelete = EntityDelete

class Experiment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    buckets: typing___Text = ...
    measured: builtin___bool = ...
    created_at: builtin___int = ...
    updated_at: builtin___int = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        buckets : typing___Optional[typing___Text] = None,
        measured : typing___Optional[builtin___bool] = None,
        created_at : typing___Optional[builtin___int] = None,
        updated_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"buckets",b"buckets",u"created_at",b"created_at",u"measured",b"measured",u"name",b"name",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"buckets",b"buckets",u"created_at",b"created_at",u"measured",b"measured",u"name",b"name",u"updated_at",b"updated_at"]) -> None: ...
type___Experiment = Experiment

class ExperimentOverride(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    identifier: typing___Text = ...
    experiment_name: typing___Text = ...
    bucket: typing___Text = ...
    created_at: builtin___int = ...
    updated_at: builtin___int = ...

    def __init__(self,
        *,
        identifier : typing___Optional[typing___Text] = None,
        experiment_name : typing___Optional[typing___Text] = None,
        bucket : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[builtin___int] = None,
        updated_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bucket",b"bucket",u"created_at",b"created_at",u"experiment_name",b"experiment_name",u"identifier",b"identifier",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bucket",b"bucket",u"created_at",b"created_at",u"experiment_name",b"experiment_name",u"identifier",b"identifier",u"updated_at",b"updated_at"]) -> None: ...
type___ExperimentOverride = ExperimentOverride

class TestPerson(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    first_name: typing___Text = ...
    last_name: typing___Text = ...

    def __init__(self,
        *,
        first_name : typing___Optional[typing___Text] = None,
        last_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"first_name",b"first_name",u"last_name",b"last_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"first_name",b"first_name",u"last_name",b"last_name"]) -> None: ...
type___TestPerson = TestPerson
