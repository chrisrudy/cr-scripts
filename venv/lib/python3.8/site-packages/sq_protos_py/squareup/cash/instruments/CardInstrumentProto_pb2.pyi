# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.expiration_pb2 import (
    Expiration as squareup___cash___expiration_pb2___Expiration,
)

from sq_protos_py.squareup.cash.instruments.PanamaInstrumentProto_pb2 import (
    PanamaInstrument as squareup___cash___instruments___PanamaInstrumentProto_pb2___PanamaInstrument,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.instrument_pb2 import (
    InstrumentTypeValue as squareup___common___instrument_pb2___InstrumentTypeValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CardInstrument(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CardTypeValue = typing___NewType('CardTypeValue', builtin___int)
    type___CardTypeValue = CardTypeValue
    CardType: _CardType
    class _CardType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardInstrument.CardTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DEBIT = typing___cast(CardInstrument.CardTypeValue, 1)
        CREDIT = typing___cast(CardInstrument.CardTypeValue, 2)
    DEBIT = typing___cast(CardInstrument.CardTypeValue, 1)
    CREDIT = typing___cast(CardInstrument.CardTypeValue, 2)
    type___CardType = CardType

    fidelius_token: typing___Text = ...
    bin: typing___Text = ...
    last_four: typing___Text = ...
    zip: typing___Text = ...
    card_type: type___CardInstrument.CardTypeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    issued_card_token: typing___Text = ...
    postal_code: typing___Text = ...
    bank_name: typing___Text = ...
    card_brand: squareup___common___instrument_pb2___InstrumentTypeValue = ...
    preferred_currency: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...

    @property
    def expiration(self) -> squareup___cash___expiration_pb2___Expiration: ...

    @property
    def panama_instrument(self) -> squareup___cash___instruments___PanamaInstrumentProto_pb2___PanamaInstrument: ...

    def __init__(self,
        *,
        fidelius_token : typing___Optional[typing___Text] = None,
        expiration : typing___Optional[squareup___cash___expiration_pb2___Expiration] = None,
        bin : typing___Optional[typing___Text] = None,
        last_four : typing___Optional[typing___Text] = None,
        zip : typing___Optional[typing___Text] = None,
        card_type : typing___Optional[type___CardInstrument.CardTypeValue] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        issued_card_token : typing___Optional[typing___Text] = None,
        postal_code : typing___Optional[typing___Text] = None,
        bank_name : typing___Optional[typing___Text] = None,
        card_brand : typing___Optional[squareup___common___instrument_pb2___InstrumentTypeValue] = None,
        preferred_currency : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        panama_instrument : typing___Optional[squareup___cash___instruments___PanamaInstrumentProto_pb2___PanamaInstrument] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bank_name",b"bank_name",u"bin",b"bin",u"card_brand",b"card_brand",u"card_type",b"card_type",u"country",b"country",u"expiration",b"expiration",u"fidelius_token",b"fidelius_token",u"issued_card_token",b"issued_card_token",u"last_four",b"last_four",u"panama_instrument",b"panama_instrument",u"postal_code",b"postal_code",u"preferred_currency",b"preferred_currency",u"zip",b"zip"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_name",b"bank_name",u"bin",b"bin",u"card_brand",b"card_brand",u"card_type",b"card_type",u"country",b"country",u"expiration",b"expiration",u"fidelius_token",b"fidelius_token",u"issued_card_token",b"issued_card_token",u"last_four",b"last_four",u"panama_instrument",b"panama_instrument",u"postal_code",b"postal_code",u"preferred_currency",b"preferred_currency",u"zip",b"zip"]) -> None: ...
type___CardInstrument = CardInstrument
