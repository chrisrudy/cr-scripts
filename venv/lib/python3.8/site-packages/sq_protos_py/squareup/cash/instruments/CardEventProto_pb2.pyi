# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.banklin.issued_card_pb2 import (
    CardTypeValue as squareup___banklin___issued_card_pb2___CardTypeValue,
    IssuedCard as squareup___banklin___issued_card_pb2___IssuedCard,
)

from sq_protos_py.squareup.cash.instruments.CardInstrumentProto_pb2 import (
    CardInstrument as squareup___cash___instruments___CardInstrumentProto_pb2___CardInstrument,
)

from sq_protos_py.squareup.cash.instruments.StoredValueInstrumentProto_pb2 import (
    StoredValueInstrument as squareup___cash___instruments___StoredValueInstrumentProto_pb2___StoredValueInstrument,
)

from sq_protos_py.squareup.marqeta.data_pb2 import (
    MarqetaUserData as squareup___marqeta___data_pb2___MarqetaUserData,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CardEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        COURIER_FIRST_SCANNED = typing___cast(CardEvent.TypeValue, 1)
        COURIER_IN_HOME_FORECAST = typing___cast(CardEvent.TypeValue, 2)
        COURIER_UNDELIVERABLE = typing___cast(CardEvent.TypeValue, 3)
        ACTIVATED = typing___cast(CardEvent.TypeValue, 5)
        DISABLED = typing___cast(CardEvent.TypeValue, 6)
        ENABLED = typing___cast(CardEvent.TypeValue, 7)
        SUSPENDED = typing___cast(CardEvent.TypeValue, 8)
        REINSTATED = typing___cast(CardEvent.TypeValue, 9)
        ISSUED = typing___cast(CardEvent.TypeValue, 10)
        TERMINATED = typing___cast(CardEvent.TypeValue, 11)
        VERIFIED = typing___cast(CardEvent.TypeValue, 12)
        SHIPPED = typing___cast(CardEvent.TypeValue, 13)
        CANCELLED = typing___cast(CardEvent.TypeValue, 14)
        REJECTED = typing___cast(CardEvent.TypeValue, 4)
        DESTROYED = typing___cast(CardEvent.TypeValue, 15)
        SET_PIN = typing___cast(CardEvent.TypeValue, 16)
        REISSUED_LOST_OR_STOLEN = typing___cast(CardEvent.TypeValue, 17)
        REISSUED_DAMAGED = typing___cast(CardEvent.TypeValue, 18)
        UPDATED_IDV = typing___cast(CardEvent.TypeValue, 19)
        UPDATED_ADDRESS = typing___cast(CardEvent.TypeValue, 20)
        UPDATED_EMAIL = typing___cast(CardEvent.TypeValue, 21)
        ENABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 22)
        DISABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 23)
    COURIER_FIRST_SCANNED = typing___cast(CardEvent.TypeValue, 1)
    COURIER_IN_HOME_FORECAST = typing___cast(CardEvent.TypeValue, 2)
    COURIER_UNDELIVERABLE = typing___cast(CardEvent.TypeValue, 3)
    ACTIVATED = typing___cast(CardEvent.TypeValue, 5)
    DISABLED = typing___cast(CardEvent.TypeValue, 6)
    ENABLED = typing___cast(CardEvent.TypeValue, 7)
    SUSPENDED = typing___cast(CardEvent.TypeValue, 8)
    REINSTATED = typing___cast(CardEvent.TypeValue, 9)
    ISSUED = typing___cast(CardEvent.TypeValue, 10)
    TERMINATED = typing___cast(CardEvent.TypeValue, 11)
    VERIFIED = typing___cast(CardEvent.TypeValue, 12)
    SHIPPED = typing___cast(CardEvent.TypeValue, 13)
    CANCELLED = typing___cast(CardEvent.TypeValue, 14)
    REJECTED = typing___cast(CardEvent.TypeValue, 4)
    DESTROYED = typing___cast(CardEvent.TypeValue, 15)
    SET_PIN = typing___cast(CardEvent.TypeValue, 16)
    REISSUED_LOST_OR_STOLEN = typing___cast(CardEvent.TypeValue, 17)
    REISSUED_DAMAGED = typing___cast(CardEvent.TypeValue, 18)
    UPDATED_IDV = typing___cast(CardEvent.TypeValue, 19)
    UPDATED_ADDRESS = typing___cast(CardEvent.TypeValue, 20)
    UPDATED_EMAIL = typing___cast(CardEvent.TypeValue, 21)
    ENABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 22)
    DISABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 23)
    type___Type = Type

    cardState: squareup___banklin___issued_card_pb2___IssuedCard.CardStateValue = ...
    type: type___CardEvent.TypeValue = ...
    occurred_at: builtin___int = ...
    created_at: builtin___int = ...
    stored_value_token: typing___Text = ...
    card_type: squareup___banklin___issued_card_pb2___CardTypeValue = ...
    customer_token: typing___Text = ...
    card_product_token: typing___Text = ...
    primary: builtin___bool = ...
    customization_token: typing___Text = ...
    card_issuer: squareup___banklin___issued_card_pb2___IssuedCard.CardIssuerValue = ...
    version: builtin___int = ...
    enabled: builtin___bool = ...
    monitored: builtin___bool = ...

    @property
    def cardInstrument(self) -> squareup___cash___instruments___CardInstrumentProto_pb2___CardInstrument: ...

    @property
    def storedValueInstrument(self) -> squareup___cash___instruments___StoredValueInstrumentProto_pb2___StoredValueInstrument: ...

    @property
    def marqeta_user_data(self) -> squareup___marqeta___data_pb2___MarqetaUserData: ...

    def __init__(self,
        *,
        cardInstrument : typing___Optional[squareup___cash___instruments___CardInstrumentProto_pb2___CardInstrument] = None,
        storedValueInstrument : typing___Optional[squareup___cash___instruments___StoredValueInstrumentProto_pb2___StoredValueInstrument] = None,
        cardState : typing___Optional[squareup___banklin___issued_card_pb2___IssuedCard.CardStateValue] = None,
        type : typing___Optional[type___CardEvent.TypeValue] = None,
        occurred_at : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[builtin___int] = None,
        stored_value_token : typing___Optional[typing___Text] = None,
        card_type : typing___Optional[squareup___banklin___issued_card_pb2___CardTypeValue] = None,
        customer_token : typing___Optional[typing___Text] = None,
        card_product_token : typing___Optional[typing___Text] = None,
        primary : typing___Optional[builtin___bool] = None,
        customization_token : typing___Optional[typing___Text] = None,
        card_issuer : typing___Optional[squareup___banklin___issued_card_pb2___IssuedCard.CardIssuerValue] = None,
        version : typing___Optional[builtin___int] = None,
        enabled : typing___Optional[builtin___bool] = None,
        monitored : typing___Optional[builtin___bool] = None,
        marqeta_user_data : typing___Optional[squareup___marqeta___data_pb2___MarqetaUserData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cardInstrument",b"cardInstrument",u"cardState",b"cardState",u"card_issuer",b"card_issuer",u"card_product_token",b"card_product_token",u"card_type",b"card_type",u"created_at",b"created_at",u"customer_token",b"customer_token",u"customization_token",b"customization_token",u"enabled",b"enabled",u"external_system_data",b"external_system_data",u"marqeta_user_data",b"marqeta_user_data",u"monitored",b"monitored",u"occurred_at",b"occurred_at",u"primary",b"primary",u"storedValueInstrument",b"storedValueInstrument",u"stored_value_token",b"stored_value_token",u"type",b"type",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cardInstrument",b"cardInstrument",u"cardState",b"cardState",u"card_issuer",b"card_issuer",u"card_product_token",b"card_product_token",u"card_type",b"card_type",u"created_at",b"created_at",u"customer_token",b"customer_token",u"customization_token",b"customization_token",u"enabled",b"enabled",u"external_system_data",b"external_system_data",u"marqeta_user_data",b"marqeta_user_data",u"monitored",b"monitored",u"occurred_at",b"occurred_at",u"primary",b"primary",u"storedValueInstrument",b"storedValueInstrument",u"stored_value_token",b"stored_value_token",u"type",b"type",u"version",b"version"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"external_system_data",b"external_system_data"]) -> typing_extensions___Literal["marqeta_user_data"]: ...
type___CardEvent = CardEvent
