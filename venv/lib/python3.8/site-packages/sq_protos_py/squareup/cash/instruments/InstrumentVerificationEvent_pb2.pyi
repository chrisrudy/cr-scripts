# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.instruments.CustomerInstrumentEvent_pb2 import (
    BankAccount as squareup___cash___instruments___CustomerInstrumentEvent_pb2___BankAccount,
    Card as squareup___cash___instruments___CustomerInstrumentEvent_pb2___Card,
    StoredValue as squareup___cash___instruments___CustomerInstrumentEvent_pb2___StoredValue,
)

from sq_protos_py.squareup.franklin.cash_instrument_type_pb2 import (
    CashInstrumentTypeValue as squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue,
)

from sq_protos_py.squareup.franklin.data_pb2 import (
    InstrumentVerification as squareup___franklin___data_pb2___InstrumentVerification,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class InstrumentVerificationEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    instrument_link_id: typing___Text = ...
    instrument_token: typing___Text = ...
    customer_token: typing___Text = ...
    source: squareup___franklin___data_pb2___InstrumentVerification.SourceValue = ...
    status: squareup___franklin___data_pb2___InstrumentVerification.StatusValue = ...
    instrument_type: squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue = ...
    occurred_at: builtin___int = ...

    @property
    def card(self) -> squareup___cash___instruments___CustomerInstrumentEvent_pb2___Card: ...

    @property
    def bank_account(self) -> squareup___cash___instruments___CustomerInstrumentEvent_pb2___BankAccount: ...

    @property
    def stored_value(self) -> squareup___cash___instruments___CustomerInstrumentEvent_pb2___StoredValue: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        instrument_link_id : typing___Optional[typing___Text] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        customer_token : typing___Optional[typing___Text] = None,
        source : typing___Optional[squareup___franklin___data_pb2___InstrumentVerification.SourceValue] = None,
        status : typing___Optional[squareup___franklin___data_pb2___InstrumentVerification.StatusValue] = None,
        instrument_type : typing___Optional[squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue] = None,
        occurred_at : typing___Optional[builtin___int] = None,
        card : typing___Optional[squareup___cash___instruments___CustomerInstrumentEvent_pb2___Card] = None,
        bank_account : typing___Optional[squareup___cash___instruments___CustomerInstrumentEvent_pb2___BankAccount] = None,
        stored_value : typing___Optional[squareup___cash___instruments___CustomerInstrumentEvent_pb2___StoredValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bank_account",b"bank_account",u"card",b"card",u"customer_token",b"customer_token",u"instrument",b"instrument",u"instrument_link_id",b"instrument_link_id",u"instrument_token",b"instrument_token",u"instrument_type",b"instrument_type",u"occurred_at",b"occurred_at",u"source",b"source",u"status",b"status",u"stored_value",b"stored_value",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bank_account",b"bank_account",u"card",b"card",u"customer_token",b"customer_token",u"instrument",b"instrument",u"instrument_link_id",b"instrument_link_id",u"instrument_token",b"instrument_token",u"instrument_type",b"instrument_type",u"occurred_at",b"occurred_at",u"source",b"source",u"status",b"status",u"stored_value",b"stored_value",u"token",b"token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"instrument",b"instrument"]) -> typing_extensions___Literal["card","bank_account","stored_value"]: ...
type___InstrumentVerificationEvent = InstrumentVerificationEvent
