# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cash.plasma.server import PlasmaServiceProto_pb2 as squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2


class FlowServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BackfilaFlow = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/BackfilaFlow',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.BackfilaFlowRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.BackfilaFlowResponse.FromString,
                )
        self.ChangeActiveFlowOwner = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/ChangeActiveFlowOwner',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeActiveFlowOwnerRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeActiveFlowOwnerResponse.FromString,
                )
        self.ChangeRequirementOwner = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/ChangeRequirementOwner',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeRequirementOwnerRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeRequirementOwnerResponse.FromString,
                )
        self.CreateFlow = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/CreateFlow',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.CreateFlowRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.CreateFlowResponse.FromString,
                )
        self.GetFlow = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/GetFlow',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.GetFlowRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.GetFlowResponse.FromString,
                )
        self.RegisterProvidedFlows = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/RegisterProvidedFlows',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedFlowsRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedFlowsResponse.FromString,
                )
        self.RegisterProvidedRequirements = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/RegisterProvidedRequirements',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedRequirementsRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedRequirementsResponse.FromString,
                )
        self.ResolveRequirement = channel.unary_unary(
                '/squareup.cash.plasma.server.FlowService/ResolveRequirement',
                request_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ResolveRequirementRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ResolveRequirementResponse.FromString,
                )


class FlowServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BackfilaFlow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeActiveFlowOwner(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeRequirementOwner(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFlow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFlow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterProvidedFlows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterProvidedRequirements(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveRequirement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BackfilaFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfilaFlow,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.BackfilaFlowRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.BackfilaFlowResponse.SerializeToString,
            ),
            'ChangeActiveFlowOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeActiveFlowOwner,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeActiveFlowOwnerRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeActiveFlowOwnerResponse.SerializeToString,
            ),
            'ChangeRequirementOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeRequirementOwner,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeRequirementOwnerRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeRequirementOwnerResponse.SerializeToString,
            ),
            'CreateFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFlow,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.CreateFlowRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.CreateFlowResponse.SerializeToString,
            ),
            'GetFlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFlow,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.GetFlowRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.GetFlowResponse.SerializeToString,
            ),
            'RegisterProvidedFlows': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterProvidedFlows,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedFlowsRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedFlowsResponse.SerializeToString,
            ),
            'RegisterProvidedRequirements': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterProvidedRequirements,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedRequirementsRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedRequirementsResponse.SerializeToString,
            ),
            'ResolveRequirement': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveRequirement,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ResolveRequirementRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ResolveRequirementResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.plasma.server.FlowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FlowService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BackfilaFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/BackfilaFlow',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.BackfilaFlowRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.BackfilaFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeActiveFlowOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/ChangeActiveFlowOwner',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeActiveFlowOwnerRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeActiveFlowOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeRequirementOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/ChangeRequirementOwner',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeRequirementOwnerRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ChangeRequirementOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/CreateFlow',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.CreateFlowRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.CreateFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/GetFlow',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.GetFlowRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.GetFlowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterProvidedFlows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/RegisterProvidedFlows',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedFlowsRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedFlowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterProvidedRequirements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/RegisterProvidedRequirements',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedRequirementsRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.RegisterProvidedRequirementsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveRequirement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.server.FlowService/ResolveRequirement',
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ResolveRequirementRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_server_dot_PlasmaServiceProto__pb2.ResolveRequirementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
