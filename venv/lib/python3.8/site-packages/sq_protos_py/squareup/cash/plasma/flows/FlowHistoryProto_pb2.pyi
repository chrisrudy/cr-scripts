# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.plasma.flows.FlowProto_pb2 import (
    Flow as squareup___cash___plasma___flows___FlowProto_pb2___Flow,
)

from sq_protos_py.squareup.cash.plasma.flows.FlowResultProto_pb2 import (
    FlowResult as squareup___cash___plasma___flows___FlowResultProto_pb2___FlowResult,
)

from sq_protos_py.squareup.cash.plasma.requirements.RequirementProto_pb2 import (
    Requirement as squareup___cash___plasma___requirements___RequirementProto_pb2___Requirement,
)

from sq_protos_py.squareup.cash.plasma.requirements.RequirementResultProto_pb2 import (
    RequirementResult as squareup___cash___plasma___requirements___RequirementResultProto_pb2___RequirementResult,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class FlowHistory(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    flow_token: typing___Text = ...
    customer_token: typing___Text = ...
    flow_type: typing___Text = ...
    flow_intent: squareup___cash___plasma___flows___FlowProto_pb2___Flow.FlowIntentValue = ...

    @property
    def flow_events(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___FlowEvent]: ...

    def __init__(self,
        *,
        flow_token : typing___Optional[typing___Text] = None,
        customer_token : typing___Optional[typing___Text] = None,
        flow_type : typing___Optional[typing___Text] = None,
        flow_events : typing___Optional[typing___Iterable[type___FlowEvent]] = None,
        flow_intent : typing___Optional[squareup___cash___plasma___flows___FlowProto_pb2___Flow.FlowIntentValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"flow_intent",b"flow_intent",u"flow_token",b"flow_token",u"flow_type",b"flow_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"flow_events",b"flow_events",u"flow_intent",b"flow_intent",u"flow_token",b"flow_token",u"flow_type",b"flow_type"]) -> None: ...
type___FlowHistory = FlowHistory

class FlowEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FlowEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        FLOW_INITIATED = typing___cast(FlowEvent.TypeValue, 1)
        FLOW_ENDED = typing___cast(FlowEvent.TypeValue, 2)
        REQUIREMENT_INITIATED = typing___cast(FlowEvent.TypeValue, 3)
        REQUIREMENT_ENDED = typing___cast(FlowEvent.TypeValue, 4)
    FLOW_INITIATED = typing___cast(FlowEvent.TypeValue, 1)
    FLOW_ENDED = typing___cast(FlowEvent.TypeValue, 2)
    REQUIREMENT_INITIATED = typing___cast(FlowEvent.TypeValue, 3)
    REQUIREMENT_ENDED = typing___cast(FlowEvent.TypeValue, 4)
    type___Type = Type

    class Data(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class FlowInitiated(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            @property
            def flow(self) -> squareup___cash___plasma___flows___FlowProto_pb2___Flow: ...

            def __init__(self,
                *,
                flow : typing___Optional[squareup___cash___plasma___flows___FlowProto_pb2___Flow] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"flow",b"flow"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"flow",b"flow"]) -> None: ...
        type___FlowInitiated = FlowInitiated

        class FlowEnded(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            @property
            def flow_end_result(self) -> squareup___cash___plasma___flows___FlowResultProto_pb2___FlowResult: ...

            def __init__(self,
                *,
                flow_end_result : typing___Optional[squareup___cash___plasma___flows___FlowResultProto_pb2___FlowResult] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"flow_end_result",b"flow_end_result"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"flow_end_result",b"flow_end_result"]) -> None: ...
        type___FlowEnded = FlowEnded

        class RequirementInitiated(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            @property
            def requirement(self) -> squareup___cash___plasma___requirements___RequirementProto_pb2___Requirement: ...

            def __init__(self,
                *,
                requirement : typing___Optional[squareup___cash___plasma___requirements___RequirementProto_pb2___Requirement] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"requirement",b"requirement"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"requirement",b"requirement"]) -> None: ...
        type___RequirementInitiated = RequirementInitiated

        class RequirementEnded(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            @property
            def requirement_result(self) -> squareup___cash___plasma___requirements___RequirementResultProto_pb2___RequirementResult: ...

            def __init__(self,
                *,
                requirement_result : typing___Optional[squareup___cash___plasma___requirements___RequirementResultProto_pb2___RequirementResult] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"requirement_result",b"requirement_result"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"requirement_result",b"requirement_result"]) -> None: ...
        type___RequirementEnded = RequirementEnded


        @property
        def flow_initiated(self) -> type___FlowEvent.Data.FlowInitiated: ...

        @property
        def requirement_initiated(self) -> type___FlowEvent.Data.RequirementInitiated: ...

        @property
        def requirement_ended(self) -> type___FlowEvent.Data.RequirementEnded: ...

        @property
        def flow_ended(self) -> type___FlowEvent.Data.FlowEnded: ...

        def __init__(self,
            *,
            flow_initiated : typing___Optional[type___FlowEvent.Data.FlowInitiated] = None,
            requirement_initiated : typing___Optional[type___FlowEvent.Data.RequirementInitiated] = None,
            requirement_ended : typing___Optional[type___FlowEvent.Data.RequirementEnded] = None,
            flow_ended : typing___Optional[type___FlowEvent.Data.FlowEnded] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"event",b"event",u"flow_ended",b"flow_ended",u"flow_initiated",b"flow_initiated",u"requirement_ended",b"requirement_ended",u"requirement_initiated",b"requirement_initiated"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"event",b"event",u"flow_ended",b"flow_ended",u"flow_initiated",b"flow_initiated",u"requirement_ended",b"requirement_ended",u"requirement_initiated",b"requirement_initiated"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"event",b"event"]) -> typing_extensions___Literal["flow_initiated","requirement_initiated","requirement_ended","flow_ended"]: ...
    type___Data = Data

    token: typing___Text = ...
    type: type___FlowEvent.TypeValue = ...
    sequence: builtin___int = ...

    @property
    def data(self) -> type___FlowEvent.Data: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___FlowEvent.TypeValue] = None,
        data : typing___Optional[type___FlowEvent.Data] = None,
        sequence : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"data",b"data",u"sequence",b"sequence",u"token",b"token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"sequence",b"sequence",u"token",b"token",u"type",b"type"]) -> None: ...
type___FlowEvent = FlowEvent
