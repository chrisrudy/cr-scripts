# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cash.plasma.requirementowner import RequirementOwnerServiceProto_pb2 as squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2


class RequirementOwnerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Plan = channel.unary_unary(
                '/squareup.cash.plasma.requirementowner.RequirementOwnerService/Plan',
                request_serializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.PlanRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.PlanResponse.FromString,
                )
        self.HandleFormInput = channel.unary_unary(
                '/squareup.cash.plasma.requirementowner.RequirementOwnerService/HandleFormInput',
                request_serializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleFormInputRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleFormInputResponse.FromString,
                )
        self.HandleSubflowOutput = channel.unary_unary(
                '/squareup.cash.plasma.requirementowner.RequirementOwnerService/HandleSubflowOutput',
                request_serializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleSubflowOutputRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleSubflowOutputResponse.FromString,
                )


class RequirementOwnerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Plan(self, request, context):
        """Plan is called to initiate the processing of a requirement with the owning service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleFormInput(self, request, context):
        """HandleFormInput is called when input is provided for a given requirement
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleSubflowOutput(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RequirementOwnerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Plan': grpc.unary_unary_rpc_method_handler(
                    servicer.Plan,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.PlanRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.PlanResponse.SerializeToString,
            ),
            'HandleFormInput': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleFormInput,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleFormInputRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleFormInputResponse.SerializeToString,
            ),
            'HandleSubflowOutput': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleSubflowOutput,
                    request_deserializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleSubflowOutputRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleSubflowOutputResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.plasma.requirementowner.RequirementOwnerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RequirementOwnerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Plan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.requirementowner.RequirementOwnerService/Plan',
            squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.PlanRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.PlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleFormInput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.requirementowner.RequirementOwnerService/HandleFormInput',
            squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleFormInputRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleFormInputResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleSubflowOutput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.plasma.requirementowner.RequirementOwnerService/HandleSubflowOutput',
            squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleSubflowOutputRequest.SerializeToString,
            squareup_dot_cash_dot_plasma_dot_requirementowner_dot_RequirementOwnerServiceProto__pb2.HandleSubflowOutputResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
