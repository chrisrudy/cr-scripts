# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cash.marketprices import service_pb2 as squareup_dot_cash_dot_marketprices_dot_service__pb2


class MarketPricesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCompositePrice = channel.unary_unary(
                '/squareup.cash.marketprices.service.MarketPricesService/GetCompositePrice',
                request_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCompositePriceRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCompositePriceResponse.FromString,
                )
        self.GetMarketHistory = channel.unary_unary(
                '/squareup.cash.marketprices.service.MarketPricesService/GetMarketHistory',
                request_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetMarketHistoryRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetMarketHistoryResponse.FromString,
                )
        self.GetHealthStatus = channel.unary_unary(
                '/squareup.cash.marketprices.service.MarketPricesService/GetHealthStatus',
                request_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetHealthStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetHealthStatusResponse.FromString,
                )


class MarketPricesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCompositePrice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarketHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHealthStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketPricesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCompositePrice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCompositePrice,
                    request_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCompositePriceRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCompositePriceResponse.SerializeToString,
            ),
            'GetMarketHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarketHistory,
                    request_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetMarketHistoryRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetMarketHistoryResponse.SerializeToString,
            ),
            'GetHealthStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHealthStatus,
                    request_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetHealthStatusRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetHealthStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.marketprices.service.MarketPricesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketPricesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCompositePrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketprices.service.MarketPricesService/GetCompositePrice',
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCompositePriceRequest.SerializeToString,
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCompositePriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarketHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketprices.service.MarketPricesService/GetMarketHistory',
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetMarketHistoryRequest.SerializeToString,
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetMarketHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHealthStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketprices.service.MarketPricesService/GetHealthStatus',
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetHealthStatusRequest.SerializeToString,
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetHealthStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MarketPricesAppServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCurrentPrices = channel.unary_unary(
                '/squareup.cash.marketprices.service.MarketPricesAppService/GetCurrentPrices',
                request_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesResponse.FromString,
                )
        self.GetInvestmentEntityHistoricalData = channel.unary_unary(
                '/squareup.cash.marketprices.service.MarketPricesAppService/GetInvestmentEntityHistoricalData',
                request_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetInvestmentEntityHistoricalDataRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetInvestmentEntityHistoricalDataResponse.FromString,
                )


class MarketPricesAppServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCurrentPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInvestmentEntityHistoricalData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketPricesAppServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCurrentPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentPrices,
                    request_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesResponse.SerializeToString,
            ),
            'GetInvestmentEntityHistoricalData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvestmentEntityHistoricalData,
                    request_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetInvestmentEntityHistoricalDataRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetInvestmentEntityHistoricalDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.marketprices.service.MarketPricesAppService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketPricesAppService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCurrentPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketprices.service.MarketPricesAppService/GetCurrentPrices',
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesRequest.SerializeToString,
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInvestmentEntityHistoricalData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketprices.service.MarketPricesAppService/GetInvestmentEntityHistoricalData',
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetInvestmentEntityHistoricalDataRequest.SerializeToString,
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetInvestmentEntityHistoricalDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RealtimeMarketPricesAppServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Subscribe = channel.unary_stream(
                '/squareup.cash.marketprices.service.RealtimeMarketPricesAppService/Subscribe',
                request_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetRealtimePricesResponse.FromString,
                )


class RealtimeMarketPricesAppServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Subscribe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RealtimeMarketPricesAppServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Subscribe': grpc.unary_stream_rpc_method_handler(
                    servicer.Subscribe,
                    request_deserializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketprices_dot_service__pb2.GetRealtimePricesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.marketprices.service.RealtimeMarketPricesAppService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RealtimeMarketPricesAppService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Subscribe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squareup.cash.marketprices.service.RealtimeMarketPricesAppService/Subscribe',
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetCurrentPricesRequest.SerializeToString,
            squareup_dot_cash_dot_marketprices_dot_service__pb2.GetRealtimePricesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
