# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/cash/customers/denylist/Reason.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/cash/customers/denylist/Reason.proto',
  package='squareup.cash.customers.denylist',
  syntax='proto2',
  serialized_options=_b('\n+com.squareup.protos.cash.customers.denylist'),
  serialized_pb=_b('\n-squareup/cash/customers/denylist/Reason.proto\x12 squareup.cash.customers.denylist*D\n\x06Reason\x12\x12\n\x0e\x41UTOMATIC_RISK\x10\x01\x12\x0f\n\x0bMANUAL_RISK\x10\x02\x12\x15\n\x11MANUAL_COMPLIANCE\x10\x03\x42-\n+com.squareup.protos.cash.customers.denylist')
)

_REASON = _descriptor.EnumDescriptor(
  name='Reason',
  full_name='squareup.cash.customers.denylist.Reason',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUTOMATIC_RISK', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MANUAL_RISK', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MANUAL_COMPLIANCE', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=83,
  serialized_end=151,
)
_sym_db.RegisterEnumDescriptor(_REASON)

Reason = enum_type_wrapper.EnumTypeWrapper(_REASON)
AUTOMATIC_RISK = 1
MANUAL_RISK = 2
MANUAL_COMPLIANCE = 3


DESCRIPTOR.enum_types_by_name['Reason'] = _REASON
_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
