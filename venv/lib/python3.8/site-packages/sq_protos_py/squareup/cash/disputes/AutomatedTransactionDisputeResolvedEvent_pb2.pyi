# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.disputes.DisputedTransaction_pb2 import (
    DisputedTransaction as squareup___cash___disputes___DisputedTransaction_pb2___DisputedTransaction,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class AutomatedTransactionDisputeResolvedEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class InternalRefundOutcome(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        refund_event_token: typing___Text = ...
        refund_occurred_at: builtin___int = ...

        @property
        def refunded_amount(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            refund_event_token : typing___Optional[typing___Text] = None,
            refund_occurred_at : typing___Optional[builtin___int] = None,
            refunded_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"refund_event_token",b"refund_event_token",u"refund_occurred_at",b"refund_occurred_at",u"refunded_amount",b"refunded_amount"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"refund_event_token",b"refund_event_token",u"refund_occurred_at",b"refund_occurred_at",u"refunded_amount",b"refunded_amount"]) -> None: ...
    type___InternalRefundOutcome = InternalRefundOutcome

    customer_token: typing___Text = ...

    @property
    def transaction(self) -> squareup___cash___disputes___DisputedTransaction_pb2___DisputedTransaction: ...

    @property
    def refunded(self) -> type___AutomatedTransactionDisputeResolvedEvent.InternalRefundOutcome: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        transaction : typing___Optional[squareup___cash___disputes___DisputedTransaction_pb2___DisputedTransaction] = None,
        refunded : typing___Optional[type___AutomatedTransactionDisputeResolvedEvent.InternalRefundOutcome] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"outcome",b"outcome",u"refunded",b"refunded",u"transaction",b"transaction"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"outcome",b"outcome",u"refunded",b"refunded",u"transaction",b"transaction"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"outcome",b"outcome"]) -> typing_extensions___Literal["refunded"]: ...
type___AutomatedTransactionDisputeResolvedEvent = AutomatedTransactionDisputeResolvedEvent
