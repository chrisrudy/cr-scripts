# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cash.marketdata.model import investment_entities_pb2 as squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2
from sq_protos_py.squareup.cash.marketdata.server import market_data_service_pb2 as squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2


class InvestmentEntityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllInvestmentEntities = channel.unary_unary(
                '/squareup.cash.marketdata.server.InvestmentEntityService/GetAllInvestmentEntities',
                request_serializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetAllInvestmentEntitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetAllInvestmentEntitiesResponse.FromString,
                )
        self.GetDiscovery = channel.unary_unary(
                '/squareup.cash.marketdata.server.InvestmentEntityService/GetDiscovery',
                request_serializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetDiscoveryRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetDiscoveryResponse.FromString,
                )
        self.GetInvestmentEntity = channel.unary_unary(
                '/squareup.cash.marketdata.server.InvestmentEntityService/GetInvestmentEntity',
                request_serializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetInvestmentEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetInvestmentEntityResponse.FromString,
                )


class InvestmentEntityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllInvestmentEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDiscovery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInvestmentEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InvestmentEntityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllInvestmentEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllInvestmentEntities,
                    request_deserializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetAllInvestmentEntitiesRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetAllInvestmentEntitiesResponse.SerializeToString,
            ),
            'GetDiscovery': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDiscovery,
                    request_deserializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetDiscoveryRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetDiscoveryResponse.SerializeToString,
            ),
            'GetInvestmentEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInvestmentEntity,
                    request_deserializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetInvestmentEntityRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetInvestmentEntityResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.marketdata.server.InvestmentEntityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InvestmentEntityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllInvestmentEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketdata.server.InvestmentEntityService/GetAllInvestmentEntities',
            squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetAllInvestmentEntitiesRequest.SerializeToString,
            squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetAllInvestmentEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDiscovery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketdata.server.InvestmentEntityService/GetDiscovery',
            squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetDiscoveryRequest.SerializeToString,
            squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetDiscoveryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInvestmentEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketdata.server.InvestmentEntityService/GetInvestmentEntity',
            squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetInvestmentEntityRequest.SerializeToString,
            squareup_dot_cash_dot_marketdata_dot_server_dot_market__data__service__pb2.GetInvestmentEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InternalInvestmentEntityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.update = channel.unary_unary(
                '/squareup.cash.marketdata.server.InternalInvestmentEntityService/update',
                request_serializer=squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2.InvestmentEntity.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2.InvestmentEntity.FromString,
                )


class InternalInvestmentEntityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalInvestmentEntityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2.InvestmentEntity.FromString,
                    response_serializer=squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2.InvestmentEntity.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cash.marketdata.server.InternalInvestmentEntityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalInvestmentEntityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cash.marketdata.server.InternalInvestmentEntityService/update',
            squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2.InvestmentEntity.SerializeToString,
            squareup_dot_cash_dot_marketdata_dot_model_dot_investment__entities__pb2.InvestmentEntity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
