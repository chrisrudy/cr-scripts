# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

CheckStateValue = typing___NewType('CheckStateValue', builtin___int)
type___CheckStateValue = CheckStateValue
CheckState: _CheckState
class _CheckState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CheckStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INITIATED = typing___cast(CheckStateValue, 1)
    REVIEWING = typing___cast(CheckStateValue, 2)
    PROCESSING = typing___cast(CheckStateValue, 3)
    FAILED = typing___cast(CheckStateValue, 4)
    COMPLETED = typing___cast(CheckStateValue, 5)
    RETURNED = typing___cast(CheckStateValue, 6)
    INGESTING = typing___cast(CheckStateValue, 7)
    FUNDS_HOLD = typing___cast(CheckStateValue, 8)
INITIATED = typing___cast(CheckStateValue, 1)
REVIEWING = typing___cast(CheckStateValue, 2)
PROCESSING = typing___cast(CheckStateValue, 3)
FAILED = typing___cast(CheckStateValue, 4)
COMPLETED = typing___cast(CheckStateValue, 5)
RETURNED = typing___cast(CheckStateValue, 6)
INGESTING = typing___cast(CheckStateValue, 7)
FUNDS_HOLD = typing___cast(CheckStateValue, 8)
type___CheckState = CheckState

StateReasonValue = typing___NewType('StateReasonValue', builtin___int)
type___StateReasonValue = StateReasonValue
StateReason: _StateReason
class _StateReason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[StateReasonValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INGEST_SUCCEEDED = typing___cast(StateReasonValue, 1)
    INGEST_UNEXPECTED_ERROR = typing___cast(StateReasonValue, 2)
    INGEST_POOR_IMAGE_QUALITY = typing___cast(StateReasonValue, 3)
    REVIEW_APPROVED = typing___cast(StateReasonValue, 4)
    REVIEW_NAME_MISMATCH = typing___cast(StateReasonValue, 5)
    REVIEW_AUTO = typing___cast(StateReasonValue, 6)
    FUNDS_AVAILABLE = typing___cast(StateReasonValue, 7)
    RETURNED_CHECK_BOUNCED = typing___cast(StateReasonValue, 8)
    REVIEW_CHECK_TYPE = typing___cast(StateReasonValue, 9)
    REVIEW_ENDORSEMENT = typing___cast(StateReasonValue, 10)
    REVIEW_AMOUNT_MISMATCH = typing___cast(StateReasonValue, 11)
    REVIEW_DATE_INVALID = typing___cast(StateReasonValue, 12)
    REVIEW_OTHER = typing___cast(StateReasonValue, 13)
    ADJUSTED_CHECK_AMOUNT = typing___cast(StateReasonValue, 14)
    INGEST_DUPLICATE = typing___cast(StateReasonValue, 15)
    FUNDS_HOLD_RELEASED = typing___cast(StateReasonValue, 16)
    INITIATE_SUCCEEDED = typing___cast(StateReasonValue, 17)
    REVIEW_APPROVED_WITH_FUNDS_HOLD = typing___cast(StateReasonValue, 18)
    FUNDS_ON_HOLD = typing___cast(StateReasonValue, 19)
    SETTLED_BY_WELLS = typing___cast(StateReasonValue, 20)
    INGEST_TIMEOUT = typing___cast(StateReasonValue, 21)
    PROCESSING_TIMEOUT = typing___cast(StateReasonValue, 22)
INGEST_SUCCEEDED = typing___cast(StateReasonValue, 1)
INGEST_UNEXPECTED_ERROR = typing___cast(StateReasonValue, 2)
INGEST_POOR_IMAGE_QUALITY = typing___cast(StateReasonValue, 3)
REVIEW_APPROVED = typing___cast(StateReasonValue, 4)
REVIEW_NAME_MISMATCH = typing___cast(StateReasonValue, 5)
REVIEW_AUTO = typing___cast(StateReasonValue, 6)
FUNDS_AVAILABLE = typing___cast(StateReasonValue, 7)
RETURNED_CHECK_BOUNCED = typing___cast(StateReasonValue, 8)
REVIEW_CHECK_TYPE = typing___cast(StateReasonValue, 9)
REVIEW_ENDORSEMENT = typing___cast(StateReasonValue, 10)
REVIEW_AMOUNT_MISMATCH = typing___cast(StateReasonValue, 11)
REVIEW_DATE_INVALID = typing___cast(StateReasonValue, 12)
REVIEW_OTHER = typing___cast(StateReasonValue, 13)
ADJUSTED_CHECK_AMOUNT = typing___cast(StateReasonValue, 14)
INGEST_DUPLICATE = typing___cast(StateReasonValue, 15)
FUNDS_HOLD_RELEASED = typing___cast(StateReasonValue, 16)
INITIATE_SUCCEEDED = typing___cast(StateReasonValue, 17)
REVIEW_APPROVED_WITH_FUNDS_HOLD = typing___cast(StateReasonValue, 18)
FUNDS_ON_HOLD = typing___cast(StateReasonValue, 19)
SETTLED_BY_WELLS = typing___cast(StateReasonValue, 20)
INGEST_TIMEOUT = typing___cast(StateReasonValue, 21)
PROCESSING_TIMEOUT = typing___cast(StateReasonValue, 22)
type___StateReason = StateReason

class CheckDeposit(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    original_check_front_trunk_token: typing___Text = ...
    original_check_back_trunk_token: typing___Text = ...
    processed_check_front_trunk_token: typing___Text = ...
    processed_check_back_trunk_token: typing___Text = ...
    mitek_transaction_reference_token: typing___Text = ...
    amount_cents: builtin___int = ...
    state: type___CheckStateValue = ...
    micr_fidelius_token: typing___Text = ...
    state_reason: type___StateReasonValue = ...
    token: typing___Text = ...
    reference_token: typing___Text = ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        original_check_front_trunk_token : typing___Optional[typing___Text] = None,
        original_check_back_trunk_token : typing___Optional[typing___Text] = None,
        processed_check_front_trunk_token : typing___Optional[typing___Text] = None,
        processed_check_back_trunk_token : typing___Optional[typing___Text] = None,
        mitek_transaction_reference_token : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        state : typing___Optional[type___CheckStateValue] = None,
        micr_fidelius_token : typing___Optional[typing___Text] = None,
        state_reason : typing___Optional[type___StateReasonValue] = None,
        token : typing___Optional[typing___Text] = None,
        reference_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"customer_token",b"customer_token",u"micr_fidelius_token",b"micr_fidelius_token",u"mitek_transaction_reference_token",b"mitek_transaction_reference_token",u"original_check_back_trunk_token",b"original_check_back_trunk_token",u"original_check_front_trunk_token",b"original_check_front_trunk_token",u"processed_check_back_trunk_token",b"processed_check_back_trunk_token",u"processed_check_front_trunk_token",b"processed_check_front_trunk_token",u"reference_token",b"reference_token",u"state",b"state",u"state_reason",b"state_reason",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"customer_token",b"customer_token",u"micr_fidelius_token",b"micr_fidelius_token",u"mitek_transaction_reference_token",b"mitek_transaction_reference_token",u"original_check_back_trunk_token",b"original_check_back_trunk_token",u"original_check_front_trunk_token",b"original_check_front_trunk_token",u"processed_check_back_trunk_token",b"processed_check_back_trunk_token",u"processed_check_front_trunk_token",b"processed_check_front_trunk_token",u"reference_token",b"reference_token",u"state",b"state",u"state_reason",b"state_reason",u"token",b"token"]) -> None: ...
type___CheckDeposit = CheckDeposit
