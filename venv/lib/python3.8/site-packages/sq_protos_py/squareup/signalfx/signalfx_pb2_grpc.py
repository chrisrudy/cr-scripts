# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.signalfx import signalfx_pb2 as squareup_dot_signalfx_dot_signalfx__pb2


class SignalFxServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LookupPagerDuty = channel.unary_unary(
                '/squareup.signalfx.SignalFxService/LookupPagerDuty',
                request_serializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupPagerDutyRequest.SerializeToString,
                response_deserializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupPagerDutyResponse.FromString,
                )
        self.GetSimpleMetrics = channel.unary_unary(
                '/squareup.signalfx.SignalFxService/GetSimpleMetrics',
                request_serializer=squareup_dot_signalfx_dot_signalfx__pb2.GetSimpleMetricsRequest.SerializeToString,
                response_deserializer=squareup_dot_signalfx_dot_signalfx__pb2.GetSimpleMetricsResponse.FromString,
                )
        self.LookupAPITokenForApp = channel.unary_unary(
                '/squareup.signalfx.SignalFxService/LookupAPITokenForApp',
                request_serializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupAPITokenForAppRequest.SerializeToString,
                response_deserializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupAPITokenForAppResponse.FromString,
                )


class SignalFxServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LookupPagerDuty(self, request, context):
        """Lookup or create a SignalFx integration that points to the service
        specified by the given PagerDuty service API key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimpleMetrics(self, request, context):
        """Given a list of Graphite formulas, returns a list of SignalFx metrics with
        dimensional filters that describe a superset of all path expressions in all
        Graphite formulas. The output is designed to be compatible with SignalFx's
        new chart v1 endpoint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupAPITokenForApp(self, request, context):
        """Given an app name, return the contents of the SignalFX token it should use
        and its expiration date. This endpoint will be called by secrets-authority
        to save the token into keywhiz when the app is deployed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SignalFxServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LookupPagerDuty': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupPagerDuty,
                    request_deserializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupPagerDutyRequest.FromString,
                    response_serializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupPagerDutyResponse.SerializeToString,
            ),
            'GetSimpleMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimpleMetrics,
                    request_deserializer=squareup_dot_signalfx_dot_signalfx__pb2.GetSimpleMetricsRequest.FromString,
                    response_serializer=squareup_dot_signalfx_dot_signalfx__pb2.GetSimpleMetricsResponse.SerializeToString,
            ),
            'LookupAPITokenForApp': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupAPITokenForApp,
                    request_deserializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupAPITokenForAppRequest.FromString,
                    response_serializer=squareup_dot_signalfx_dot_signalfx__pb2.LookupAPITokenForAppResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.signalfx.SignalFxService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SignalFxService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LookupPagerDuty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.signalfx.SignalFxService/LookupPagerDuty',
            squareup_dot_signalfx_dot_signalfx__pb2.LookupPagerDutyRequest.SerializeToString,
            squareup_dot_signalfx_dot_signalfx__pb2.LookupPagerDutyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSimpleMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.signalfx.SignalFxService/GetSimpleMetrics',
            squareup_dot_signalfx_dot_signalfx__pb2.GetSimpleMetricsRequest.SerializeToString,
            squareup_dot_signalfx_dot_signalfx__pb2.GetSimpleMetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupAPITokenForApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.signalfx.SignalFxService/LookupAPITokenForApp',
            squareup_dot_signalfx_dot_signalfx__pb2.LookupAPITokenForAppRequest.SerializeToString,
            squareup_dot_signalfx_dot_signalfx__pb2.LookupAPITokenForAppResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
