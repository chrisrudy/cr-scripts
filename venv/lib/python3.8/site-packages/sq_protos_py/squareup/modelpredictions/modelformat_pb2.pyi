# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ModelTypeValue = typing___NewType('ModelTypeValue', builtin___int)
type___ModelTypeValue = ModelTypeValue
ModelType: _ModelType
class _ModelType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ModelTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    RANDOM_FOREST = typing___cast(ModelTypeValue, 1)
    BOOSTED_TREE = typing___cast(ModelTypeValue, 2)
RANDOM_FOREST = typing___cast(ModelTypeValue, 1)
BOOSTED_TREE = typing___cast(ModelTypeValue, 2)
type___ModelType = ModelType

class Feature(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name"]) -> None: ...
type___Feature = Feature

class BinaryDecisionTree(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    description: typing___Text = ...
    num_nodes: builtin___int = ...
    num_classes: builtin___int = ...
    left_index: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...
    right_index: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...
    feature_id: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...
    threshold: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...
    score: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...
    count: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...
    feature_importance: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...

    def __init__(self,
        *,
        description : typing___Optional[typing___Text] = None,
        num_nodes : typing___Optional[builtin___int] = None,
        num_classes : typing___Optional[builtin___int] = None,
        left_index : typing___Optional[typing___Iterable[builtin___int]] = None,
        right_index : typing___Optional[typing___Iterable[builtin___int]] = None,
        feature_id : typing___Optional[typing___Iterable[builtin___int]] = None,
        threshold : typing___Optional[typing___Iterable[builtin___float]] = None,
        score : typing___Optional[typing___Iterable[builtin___float]] = None,
        count : typing___Optional[typing___Iterable[builtin___int]] = None,
        feature_importance : typing___Optional[typing___Iterable[builtin___float]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"description",b"description",u"num_classes",b"num_classes",u"num_nodes",b"num_nodes"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"count",b"count",u"description",b"description",u"feature_id",b"feature_id",u"feature_importance",b"feature_importance",u"left_index",b"left_index",u"num_classes",b"num_classes",u"num_nodes",b"num_nodes",u"right_index",b"right_index",u"score",b"score",u"threshold",b"threshold"]) -> None: ...
type___BinaryDecisionTree = BinaryDecisionTree

class DecisionForest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    description: typing___Text = ...
    type: type___ModelTypeValue = ...
    num_trees: builtin___int = ...
    feature_importance: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...

    @property
    def feature(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Feature]: ...

    @property
    def label(self) -> type___Feature: ...

    @property
    def trees(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___BinaryDecisionTree]: ...

    def __init__(self,
        *,
        description : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___ModelTypeValue] = None,
        feature : typing___Optional[typing___Iterable[type___Feature]] = None,
        label : typing___Optional[type___Feature] = None,
        num_trees : typing___Optional[builtin___int] = None,
        trees : typing___Optional[typing___Iterable[type___BinaryDecisionTree]] = None,
        feature_importance : typing___Optional[typing___Iterable[builtin___float]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"description",b"description",u"label",b"label",u"num_trees",b"num_trees",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"description",b"description",u"feature",b"feature",u"feature_importance",b"feature_importance",u"label",b"label",u"num_trees",b"num_trees",u"trees",b"trees",u"type",b"type"]) -> None: ...
type___DecisionForest = DecisionForest

class ProbabilityDistribution(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def target_probability(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TargetProbability]: ...

    def __init__(self,
        *,
        target_probability : typing___Optional[typing___Iterable[type___TargetProbability]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"target_probability",b"target_probability"]) -> None: ...
type___ProbabilityDistribution = ProbabilityDistribution

class TargetProbability(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    target_name: typing___Text = ...
    probability: builtin___float = ...

    def __init__(self,
        *,
        target_name : typing___Optional[typing___Text] = None,
        probability : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"probability",b"probability",u"target_name",b"target_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"probability",b"probability",u"target_name",b"target_name"]) -> None: ...
type___TargetProbability = TargetProbability
