# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payapi.analytics import service_pb2 as squareup_dot_payapi_dot_analytics_dot_service__pb2


class AnalyticsServiceStub(object):
    """*
    Service to deal with analytic tokens generated by the Data Analytics Library
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateToken = channel.unary_unary(
                '/squareup.payapi.analytics.AnalyticsService/CreateToken',
                request_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateTokenResponse.FromString,
                )
        self.CreateVerification = channel.unary_unary(
                '/squareup.payapi.analytics.AnalyticsService/CreateVerification',
                request_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationResponse.FromString,
                )
        self.RetrieveVerification = channel.unary_unary(
                '/squareup.payapi.analytics.AnalyticsService/RetrieveVerification',
                request_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RetrieveVerificationRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RetrieveVerificationResponse.FromString,
                )
        self.UpdateVerification = channel.unary_unary(
                '/squareup.payapi.analytics.AnalyticsService/UpdateVerification',
                request_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.UpdateVerificationRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationResponse.FromString,
                )
        self.CaptureData = channel.unary_unary(
                '/squareup.payapi.analytics.AnalyticsService/CaptureData',
                request_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CaptureDataRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CaptureDataResponse.FromString,
                )
        self.RedeemToken = channel.unary_unary(
                '/squareup.payapi.analytics.AnalyticsService/RedeemToken',
                request_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RedeemTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RedeemTokenResponse.FromString,
                )


class AnalyticsServiceServicer(object):
    """*
    Service to deal with analytic tokens generated by the Data Analytics Library
    """

    def CreateToken(self, request, context):
        """Store Analytics Data and return a token that can be redeemed later. HTTP only
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateVerification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveVerification(self, request, context):
        """Retrieves verification data based on a verification token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateVerification(self, request, context):
        """Updates verification with challenge data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CaptureData(self, request, context):
        """Capture a set of squareup.bills.ClientDetails.ConnectDetails data and
        return a token that can be later redeemed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedeemToken(self, request, context):
        """Redeem a token for a set of squareup.bills.ClientDetails.ConnectDetails data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AnalyticsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateToken,
                    request_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateTokenRequest.FromString,
                    response_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateTokenResponse.SerializeToString,
            ),
            'CreateVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateVerification,
                    request_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationRequest.FromString,
                    response_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationResponse.SerializeToString,
            ),
            'RetrieveVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveVerification,
                    request_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RetrieveVerificationRequest.FromString,
                    response_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RetrieveVerificationResponse.SerializeToString,
            ),
            'UpdateVerification': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateVerification,
                    request_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.UpdateVerificationRequest.FromString,
                    response_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationResponse.SerializeToString,
            ),
            'CaptureData': grpc.unary_unary_rpc_method_handler(
                    servicer.CaptureData,
                    request_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CaptureDataRequest.FromString,
                    response_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.CaptureDataResponse.SerializeToString,
            ),
            'RedeemToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RedeemToken,
                    request_deserializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RedeemTokenRequest.FromString,
                    response_serializer=squareup_dot_payapi_dot_analytics_dot_service__pb2.RedeemTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payapi.analytics.AnalyticsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AnalyticsService(object):
    """*
    Service to deal with analytic tokens generated by the Data Analytics Library
    """

    @staticmethod
    def CreateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi.analytics.AnalyticsService/CreateToken',
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateTokenRequest.SerializeToString,
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi.analytics.AnalyticsService/CreateVerification',
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationRequest.SerializeToString,
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi.analytics.AnalyticsService/RetrieveVerification',
            squareup_dot_payapi_dot_analytics_dot_service__pb2.RetrieveVerificationRequest.SerializeToString,
            squareup_dot_payapi_dot_analytics_dot_service__pb2.RetrieveVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateVerification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi.analytics.AnalyticsService/UpdateVerification',
            squareup_dot_payapi_dot_analytics_dot_service__pb2.UpdateVerificationRequest.SerializeToString,
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CreateVerificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CaptureData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi.analytics.AnalyticsService/CaptureData',
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CaptureDataRequest.SerializeToString,
            squareup_dot_payapi_dot_analytics_dot_service__pb2.CaptureDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedeemToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi.analytics.AnalyticsService/RedeemToken',
            squareup_dot_payapi_dot_analytics_dot_service__pb2.RedeemTokenRequest.SerializeToString,
            squareup_dot_payapi_dot_analytics_dot_service__pb2.RedeemTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
