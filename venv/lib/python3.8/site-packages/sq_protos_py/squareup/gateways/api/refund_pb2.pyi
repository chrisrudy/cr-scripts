# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.bills.bill_pb2 import (
    Bill as squareup___bills___bill_pb2___Bill,
)

from sq_protos_py.squareup.bills.tender_pb2 import (
    CardTender as squareup___bills___tender_pb2___CardTender,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.emv_pb2 import (
    EmvTags as squareup___common___emv_pb2___EmvTags,
)

from sq_protos_py.squareup.common.entry_method_pb2 import (
    PayWithSquareEntryMethodValue as squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue,
)

from sq_protos_py.squareup.common.instrument_pb2 import (
    InstrumentTypeValue as squareup___common___instrument_pb2___InstrumentTypeValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.esperanto.api.common_pb2 import (
    Merchant as squareup___esperanto___api___common_pb2___Merchant,
    ProductSubcategoryValue as squareup___esperanto___api___common_pb2___ProductSubcategoryValue,
    Tender as squareup___esperanto___api___common_pb2___Tender,
)

from sq_protos_py.squareup.esperanto.api.itemization_pb2 import (
    ItemizationData as squareup___esperanto___api___itemization_pb2___ItemizationData,
)

from sq_protos_py.squareup.esperanto.common.common_pb2 import (
    CustomerPresenceValue as squareup___esperanto___common___common_pb2___CustomerPresenceValue,
    RequestedStatementInfo as squareup___esperanto___common___common_pb2___RequestedStatementInfo,
)

from sq_protos_py.squareup.esperanto.model.payments_pb2 import (
    PaymentRecord as squareup___esperanto___model___payments_pb2___PaymentRecord,
)

from sq_protos_py.squareup.gateways.api.common_pb2 import (
    BasicGatewayResponse as squareup___gateways___api___common_pb2___BasicGatewayResponse,
)

from sq_protos_py.squareup.payments.common_pb2 import (
    MessageTypeValue as squareup___payments___common_pb2___MessageTypeValue,
)

from sq_protos_py.squareup.payments.push_money_pb2 import (
    SenderInfo as squareup___payments___push_money_pb2___SenderInfo,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class RefundRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_id: typing___Text = ...
    original_gateway_transaction_id: typing___Text = ...
    retrieval_reference_number: typing___Text = ...
    gateway_state: typing___Text = ...
    amount: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    refund_request_uuid: typing___Text = ...
    customer_presence: squareup___esperanto___common___common_pb2___CustomerPresenceValue = ...
    previousAttemptCount: builtin___int = ...
    fallback_json: typing___Text = ...
    pay_with_square_entry_method: squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue = ...
    chip_card_fallback_indicator: squareup___bills___tender_pb2___CardTender.Card.ChipCardFallbackIndicatorValue = ...
    authorization_code: typing___Text = ...
    auth_approved_amount: builtin___int = ...
    auth_reason_code: typing___Text = ...
    message_type: squareup___payments___common_pb2___MessageTypeValue = ...
    reader_id: typing___Text = ...
    capture_result_gateway_state: typing___Text = ...
    refund_gateway_transaction_id: typing___Text = ...
    refund_retrieval_reference_number: typing___Text = ...
    product_subcategory: squareup___esperanto___api___common_pb2___ProductSubcategoryValue = ...
    reader_type: typing___Text = ...
    account_number: typing___Text = ...
    input_type: typing___Text = ...
    service_code: typing___Text = ...
    instrument_type: squareup___common___instrument_pb2___InstrumentTypeValue = ...
    refund_gateway_state: typing___Text = ...
    refund_completion_gateway_transaction_id: typing___Text = ...

    @property
    def tender(self) -> squareup___esperanto___api___common_pb2___Tender: ...

    @property
    def merchant(self) -> squareup___esperanto___api___common_pb2___Merchant: ...

    @property
    def sender_info(self) -> squareup___payments___push_money_pb2___SenderInfo: ...

    @property
    def batch_requested_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def auth_intent_created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def partial_payment_record(self) -> squareup___esperanto___model___payments_pb2___PaymentRecord: ...

    @property
    def refund_requested_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def emv_tags(self) -> squareup___common___emv_pb2___EmvTags: ...

    @property
    def itemization_data(self) -> squareup___bills___bill_pb2___Bill: ...

    @property
    def item_data(self) -> squareup___esperanto___api___itemization_pb2___ItemizationData: ...

    @property
    def requested_statement_info(self) -> squareup___esperanto___common___common_pb2___RequestedStatementInfo: ...

    def __init__(self,
        *,
        payment_id : typing___Optional[typing___Text] = None,
        original_gateway_transaction_id : typing___Optional[typing___Text] = None,
        retrieval_reference_number : typing___Optional[typing___Text] = None,
        gateway_state : typing___Optional[typing___Text] = None,
        amount : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        tender : typing___Optional[squareup___esperanto___api___common_pb2___Tender] = None,
        merchant : typing___Optional[squareup___esperanto___api___common_pb2___Merchant] = None,
        refund_request_uuid : typing___Optional[typing___Text] = None,
        customer_presence : typing___Optional[squareup___esperanto___common___common_pb2___CustomerPresenceValue] = None,
        previousAttemptCount : typing___Optional[builtin___int] = None,
        fallback_json : typing___Optional[typing___Text] = None,
        sender_info : typing___Optional[squareup___payments___push_money_pb2___SenderInfo] = None,
        pay_with_square_entry_method : typing___Optional[squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue] = None,
        batch_requested_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        chip_card_fallback_indicator : typing___Optional[squareup___bills___tender_pb2___CardTender.Card.ChipCardFallbackIndicatorValue] = None,
        authorization_code : typing___Optional[typing___Text] = None,
        auth_approved_amount : typing___Optional[builtin___int] = None,
        auth_reason_code : typing___Optional[typing___Text] = None,
        auth_intent_created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        message_type : typing___Optional[squareup___payments___common_pb2___MessageTypeValue] = None,
        reader_id : typing___Optional[typing___Text] = None,
        partial_payment_record : typing___Optional[squareup___esperanto___model___payments_pb2___PaymentRecord] = None,
        capture_result_gateway_state : typing___Optional[typing___Text] = None,
        refund_gateway_transaction_id : typing___Optional[typing___Text] = None,
        refund_retrieval_reference_number : typing___Optional[typing___Text] = None,
        refund_requested_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        product_subcategory : typing___Optional[squareup___esperanto___api___common_pb2___ProductSubcategoryValue] = None,
        emv_tags : typing___Optional[squareup___common___emv_pb2___EmvTags] = None,
        reader_type : typing___Optional[typing___Text] = None,
        itemization_data : typing___Optional[squareup___bills___bill_pb2___Bill] = None,
        account_number : typing___Optional[typing___Text] = None,
        input_type : typing___Optional[typing___Text] = None,
        service_code : typing___Optional[typing___Text] = None,
        instrument_type : typing___Optional[squareup___common___instrument_pb2___InstrumentTypeValue] = None,
        item_data : typing___Optional[squareup___esperanto___api___itemization_pb2___ItemizationData] = None,
        requested_statement_info : typing___Optional[squareup___esperanto___common___common_pb2___RequestedStatementInfo] = None,
        refund_gateway_state : typing___Optional[typing___Text] = None,
        refund_completion_gateway_transaction_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_number",b"account_number",u"amount",b"amount",u"auth_approved_amount",b"auth_approved_amount",u"auth_intent_created_at",b"auth_intent_created_at",u"auth_reason_code",b"auth_reason_code",u"authorization_code",b"authorization_code",u"batch_requested_at",b"batch_requested_at",u"capture_result_gateway_state",b"capture_result_gateway_state",u"chip_card_fallback_indicator",b"chip_card_fallback_indicator",u"currency_code",b"currency_code",u"customer_presence",b"customer_presence",u"emv_tags",b"emv_tags",u"fallback_json",b"fallback_json",u"gateway_state",b"gateway_state",u"input_type",b"input_type",u"instrument_type",b"instrument_type",u"item_data",b"item_data",u"itemization_data",b"itemization_data",u"merchant",b"merchant",u"message_type",b"message_type",u"original_gateway_transaction_id",b"original_gateway_transaction_id",u"partial_payment_record",b"partial_payment_record",u"pay_with_square_entry_method",b"pay_with_square_entry_method",u"payment_id",b"payment_id",u"previousAttemptCount",b"previousAttemptCount",u"product_subcategory",b"product_subcategory",u"reader_id",b"reader_id",u"reader_type",b"reader_type",u"refund_completion_gateway_transaction_id",b"refund_completion_gateway_transaction_id",u"refund_gateway_state",b"refund_gateway_state",u"refund_gateway_transaction_id",b"refund_gateway_transaction_id",u"refund_request_uuid",b"refund_request_uuid",u"refund_requested_at",b"refund_requested_at",u"refund_retrieval_reference_number",b"refund_retrieval_reference_number",u"requested_statement_info",b"requested_statement_info",u"retrieval_reference_number",b"retrieval_reference_number",u"sender_info",b"sender_info",u"service_code",b"service_code",u"tender",b"tender"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_number",b"account_number",u"amount",b"amount",u"auth_approved_amount",b"auth_approved_amount",u"auth_intent_created_at",b"auth_intent_created_at",u"auth_reason_code",b"auth_reason_code",u"authorization_code",b"authorization_code",u"batch_requested_at",b"batch_requested_at",u"capture_result_gateway_state",b"capture_result_gateway_state",u"chip_card_fallback_indicator",b"chip_card_fallback_indicator",u"currency_code",b"currency_code",u"customer_presence",b"customer_presence",u"emv_tags",b"emv_tags",u"fallback_json",b"fallback_json",u"gateway_state",b"gateway_state",u"input_type",b"input_type",u"instrument_type",b"instrument_type",u"item_data",b"item_data",u"itemization_data",b"itemization_data",u"merchant",b"merchant",u"message_type",b"message_type",u"original_gateway_transaction_id",b"original_gateway_transaction_id",u"partial_payment_record",b"partial_payment_record",u"pay_with_square_entry_method",b"pay_with_square_entry_method",u"payment_id",b"payment_id",u"previousAttemptCount",b"previousAttemptCount",u"product_subcategory",b"product_subcategory",u"reader_id",b"reader_id",u"reader_type",b"reader_type",u"refund_completion_gateway_transaction_id",b"refund_completion_gateway_transaction_id",u"refund_gateway_state",b"refund_gateway_state",u"refund_gateway_transaction_id",b"refund_gateway_transaction_id",u"refund_request_uuid",b"refund_request_uuid",u"refund_requested_at",b"refund_requested_at",u"refund_retrieval_reference_number",b"refund_retrieval_reference_number",u"requested_statement_info",b"requested_statement_info",u"retrieval_reference_number",b"retrieval_reference_number",u"sender_info",b"sender_info",u"service_code",b"service_code",u"tender",b"tender"]) -> None: ...
type___RefundRequest = RefundRequest

class RefundResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    auto_void: builtin___bool = ...

    @property
    def basic_response(self) -> squareup___gateways___api___common_pb2___BasicGatewayResponse: ...

    def __init__(self,
        *,
        basic_response : typing___Optional[squareup___gateways___api___common_pb2___BasicGatewayResponse] = None,
        auto_void : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"auto_void",b"auto_void",u"basic_response",b"basic_response"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"auto_void",b"auto_void",u"basic_response",b"basic_response"]) -> None: ...
type___RefundResponse = RefundResponse
