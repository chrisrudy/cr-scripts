# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.gateways.api import auth_pb2 as squareup_dot_gateways_dot_api_dot_auth__pb2
from sq_protos_py.squareup.gateways.api import authorize_refund_pb2 as squareup_dot_gateways_dot_api_dot_authorize__refund__pb2
from sq_protos_py.squareup.gateways.api import batch_pb2 as squareup_dot_gateways_dot_api_dot_batch__pb2
from sq_protos_py.squareup.gateways.api import capture_pb2 as squareup_dot_gateways_dot_api_dot_capture__pb2
from sq_protos_py.squareup.gateways.api import purchase_pb2 as squareup_dot_gateways_dot_api_dot_purchase__pb2
from sq_protos_py.squareup.gateways.api import push_money_pb2 as squareup_dot_gateways_dot_api_dot_push__money__pb2
from sq_protos_py.squareup.gateways.api import refund_pb2 as squareup_dot_gateways_dot_api_dot_refund__pb2
from sq_protos_py.squareup.gateways.api import verify_pb2 as squareup_dot_gateways_dot_api_dot_verify__pb2
from sq_protos_py.squareup.gateways.api import void_pb2 as squareup_dot_gateways_dot_api_dot_void__pb2


class AuthorizeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthorizePayment = channel.unary_unary(
                '/squareup.gateways.api.AuthorizeService/AuthorizePayment',
                request_serializer=squareup_dot_gateways_dot_api_dot_auth__pb2.AuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_auth__pb2.AuthorizationResponse.FromString,
                )


class AuthorizeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthorizePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthorizeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthorizePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizePayment,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_auth__pb2.AuthorizationRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_auth__pb2.AuthorizationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.AuthorizeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthorizeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthorizePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.AuthorizeService/AuthorizePayment',
            squareup_dot_gateways_dot_api_dot_auth__pb2.AuthorizationRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_auth__pb2.AuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VerifyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VerifyCard = channel.unary_unary(
                '/squareup.gateways.api.VerifyService/VerifyCard',
                request_serializer=squareup_dot_gateways_dot_api_dot_verify__pb2.VerifyRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_verify__pb2.VerifyResponse.FromString,
                )


class VerifyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def VerifyCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VerifyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VerifyCard': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCard,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_verify__pb2.VerifyRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_verify__pb2.VerifyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.VerifyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VerifyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def VerifyCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.VerifyService/VerifyCard',
            squareup_dot_gateways_dot_api_dot_verify__pb2.VerifyRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_verify__pb2.VerifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VoidServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VoidPayment = channel.unary_unary(
                '/squareup.gateways.api.VoidService/VoidPayment',
                request_serializer=squareup_dot_gateways_dot_api_dot_void__pb2.VoidRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_void__pb2.VoidResponse.FromString,
                )


class VoidServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def VoidPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VoidServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VoidPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.VoidPayment,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_void__pb2.VoidRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_void__pb2.VoidResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.VoidService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VoidService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def VoidPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.VoidService/VoidPayment',
            squareup_dot_gateways_dot_api_dot_void__pb2.VoidRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_void__pb2.VoidResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CaptureServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CapturePayment = channel.unary_unary(
                '/squareup.gateways.api.CaptureService/CapturePayment',
                request_serializer=squareup_dot_gateways_dot_api_dot_capture__pb2.CaptureRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_capture__pb2.CaptureResponse.FromString,
                )


class CaptureServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CapturePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CaptureServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CapturePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CapturePayment,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_capture__pb2.CaptureRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_capture__pb2.CaptureResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.CaptureService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CaptureService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CapturePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.CaptureService/CapturePayment',
            squareup_dot_gateways_dot_api_dot_capture__pb2.CaptureRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_capture__pb2.CaptureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AuthorizeRefundServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AuthorizeRefund = channel.unary_unary(
                '/squareup.gateways.api.AuthorizeRefundService/AuthorizeRefund',
                request_serializer=squareup_dot_gateways_dot_api_dot_authorize__refund__pb2.AuthorizeRefundRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_authorize__refund__pb2.AuthorizeRefundResponse.FromString,
                )


class AuthorizeRefundServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AuthorizeRefund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthorizeRefundServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AuthorizeRefund': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeRefund,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_authorize__refund__pb2.AuthorizeRefundRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_authorize__refund__pb2.AuthorizeRefundResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.AuthorizeRefundService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthorizeRefundService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AuthorizeRefund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.AuthorizeRefundService/AuthorizeRefund',
            squareup_dot_gateways_dot_api_dot_authorize__refund__pb2.AuthorizeRefundRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_authorize__refund__pb2.AuthorizeRefundResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RefundServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RefundPayment = channel.unary_unary(
                '/squareup.gateways.api.RefundService/RefundPayment',
                request_serializer=squareup_dot_gateways_dot_api_dot_refund__pb2.RefundRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_refund__pb2.RefundResponse.FromString,
                )


class RefundServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RefundPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RefundServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RefundPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.RefundPayment,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_refund__pb2.RefundRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_refund__pb2.RefundResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.RefundService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RefundService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RefundPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.RefundService/RefundPayment',
            squareup_dot_gateways_dot_api_dot_refund__pb2.RefundRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_refund__pb2.RefundResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PurchaseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PurchasePayment = channel.unary_unary(
                '/squareup.gateways.api.PurchaseService/PurchasePayment',
                request_serializer=squareup_dot_gateways_dot_api_dot_purchase__pb2.PurchaseRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_purchase__pb2.PurchaseResponse.FromString,
                )


class PurchaseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PurchasePayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PurchaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PurchasePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.PurchasePayment,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_purchase__pb2.PurchaseRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_purchase__pb2.PurchaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.PurchaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PurchaseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PurchasePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.PurchaseService/PurchasePayment',
            squareup_dot_gateways_dot_api_dot_purchase__pb2.PurchaseRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_purchase__pb2.PurchaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PushMoneyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PushMoneyPayment = channel.unary_unary(
                '/squareup.gateways.api.PushMoneyService/PushMoneyPayment',
                request_serializer=squareup_dot_gateways_dot_api_dot_push__money__pb2.PushMoneyRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_push__money__pb2.PushMoneyResponse.FromString,
                )


class PushMoneyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PushMoneyPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PushMoneyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PushMoneyPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.PushMoneyPayment,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_push__money__pb2.PushMoneyRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_push__money__pb2.PushMoneyResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.PushMoneyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PushMoneyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PushMoneyPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.PushMoneyService/PushMoneyPayment',
            squareup_dot_gateways_dot_api_dot_push__money__pb2.PushMoneyRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_push__money__pb2.PushMoneyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BatchSettlementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateGatewayBatchId = channel.unary_unary(
                '/squareup.gateways.api.BatchSettlementService/GenerateGatewayBatchId',
                request_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.GenerateGatewayBatchIdRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.GenerateGatewayBatchIdResponse.FromString,
                )
        self.PerformSettlement = channel.unary_unary(
                '/squareup.gateways.api.BatchSettlementService/PerformSettlement',
                request_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.PerformSettlementRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.PerformSettlementResponse.FromString,
                )
        self.FetchSettlementResult = channel.unary_unary(
                '/squareup.gateways.api.BatchSettlementService/FetchSettlementResult',
                request_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.FetchSettlementResultRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.FetchSettlementResultResponse.FromString,
                )
        self.AckSettlementResult = channel.unary_unary(
                '/squareup.gateways.api.BatchSettlementService/AckSettlementResult',
                request_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.AckSettlementResultRequest.SerializeToString,
                response_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.AckSettlementResultResponse.FromString,
                )


class BatchSettlementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GenerateGatewayBatchId(self, request, context):
        """Send a batch of captures and refunds to generate GatewayBatchId before performSettlement.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformSettlement(self, request, context):
        """Send a batch of captures and refunds to the processor.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchSettlementResult(self, request, context):
        """Fetch the results of one batch.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AckSettlementResult(self, request, context):
        """Ack the settlement result file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BatchSettlementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateGatewayBatchId': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateGatewayBatchId,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.GenerateGatewayBatchIdRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.GenerateGatewayBatchIdResponse.SerializeToString,
            ),
            'PerformSettlement': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformSettlement,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.PerformSettlementRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.PerformSettlementResponse.SerializeToString,
            ),
            'FetchSettlementResult': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchSettlementResult,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.FetchSettlementResultRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.FetchSettlementResultResponse.SerializeToString,
            ),
            'AckSettlementResult': grpc.unary_unary_rpc_method_handler(
                    servicer.AckSettlementResult,
                    request_deserializer=squareup_dot_gateways_dot_api_dot_batch__pb2.AckSettlementResultRequest.FromString,
                    response_serializer=squareup_dot_gateways_dot_api_dot_batch__pb2.AckSettlementResultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gateways.api.BatchSettlementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BatchSettlementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GenerateGatewayBatchId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.BatchSettlementService/GenerateGatewayBatchId',
            squareup_dot_gateways_dot_api_dot_batch__pb2.GenerateGatewayBatchIdRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_batch__pb2.GenerateGatewayBatchIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PerformSettlement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.BatchSettlementService/PerformSettlement',
            squareup_dot_gateways_dot_api_dot_batch__pb2.PerformSettlementRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_batch__pb2.PerformSettlementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchSettlementResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.BatchSettlementService/FetchSettlementResult',
            squareup_dot_gateways_dot_api_dot_batch__pb2.FetchSettlementResultRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_batch__pb2.FetchSettlementResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AckSettlementResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gateways.api.BatchSettlementService/AckSettlementResult',
            squareup_dot_gateways_dot_api_dot_batch__pb2.AckSettlementResultRequest.SerializeToString,
            squareup_dot_gateways_dot_api_dot_batch__pb2.AckSettlementResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
