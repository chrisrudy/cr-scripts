# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.mobile.abtesting.experiments.message import activate_experiment_pb2 as squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2
from sq_protos_py.squareup.mobile.abtesting.experiments.message import get_experiments_pb2 as squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2
from sq_protos_py.squareup.mobile.abtesting.experiments.message import record_exclusion_pb2 as squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2
from sq_protos_py.squareup.mobile.abtesting.experiments.message import track_event_pb2 as squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2


class ExperimentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ActivateExperiment = channel.unary_unary(
                '/squareup.mobile.abtesting.experiments.ExperimentsService/ActivateExperiment',
                request_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2.ActivateExperimentRequest.SerializeToString,
                response_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2.ActivateExperimentResponse.FromString,
                )
        self.GetExperiments = channel.unary_unary(
                '/squareup.mobile.abtesting.experiments.ExperimentsService/GetExperiments',
                request_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2.GetExperimentsRequest.SerializeToString,
                response_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2.GetExperimentsResponse.FromString,
                )
        self.TrackEvent = channel.unary_unary(
                '/squareup.mobile.abtesting.experiments.ExperimentsService/TrackEvent',
                request_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2.TrackEventRequest.SerializeToString,
                response_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2.TrackEventResponse.FromString,
                )
        self.RecordExclusion = channel.unary_unary(
                '/squareup.mobile.abtesting.experiments.ExperimentsService/RecordExclusion',
                request_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2.RecordExclusionRequest.SerializeToString,
                response_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2.RecordExclusionResponse.FromString,
                )


class ExperimentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ActivateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrackEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordExclusion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ActivateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateExperiment,
                    request_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2.ActivateExperimentRequest.FromString,
                    response_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2.ActivateExperimentResponse.SerializeToString,
            ),
            'GetExperiments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiments,
                    request_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2.GetExperimentsRequest.FromString,
                    response_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2.GetExperimentsResponse.SerializeToString,
            ),
            'TrackEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.TrackEvent,
                    request_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2.TrackEventRequest.FromString,
                    response_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2.TrackEventResponse.SerializeToString,
            ),
            'RecordExclusion': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordExclusion,
                    request_deserializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2.RecordExclusionRequest.FromString,
                    response_serializer=squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2.RecordExclusionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.mobile.abtesting.experiments.ExperimentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ActivateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mobile.abtesting.experiments.ExperimentsService/ActivateExperiment',
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2.ActivateExperimentRequest.SerializeToString,
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_activate__experiment__pb2.ActivateExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperiments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mobile.abtesting.experiments.ExperimentsService/GetExperiments',
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2.GetExperimentsRequest.SerializeToString,
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_get__experiments__pb2.GetExperimentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrackEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mobile.abtesting.experiments.ExperimentsService/TrackEvent',
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2.TrackEventRequest.SerializeToString,
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_track__event__pb2.TrackEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordExclusion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mobile.abtesting.experiments.ExperimentsService/RecordExclusion',
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2.RecordExclusionRequest.SerializeToString,
            squareup_dot_mobile_dot_abtesting_dot_experiments_dot_message_dot_record__exclusion__pb2.RecordExclusionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
