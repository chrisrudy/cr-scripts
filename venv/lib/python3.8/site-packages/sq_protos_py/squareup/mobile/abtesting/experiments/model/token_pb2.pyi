# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Token(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Token.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(Token.TypeValue, 0)
        UNIT = typing___cast(Token.TypeValue, 1)
        MERCHANT = typing___cast(Token.TypeValue, 2)
        DEVICE_ID = typing___cast(Token.TypeValue, 3)
    UNKNOWN = typing___cast(Token.TypeValue, 0)
    UNIT = typing___cast(Token.TypeValue, 1)
    MERCHANT = typing___cast(Token.TypeValue, 2)
    DEVICE_ID = typing___cast(Token.TypeValue, 3)
    type___Type = Type

    token: typing___Text = ...
    type: type___Token.TypeValue = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___Token.TypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"token",b"token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"token",b"token",u"type",b"type"]) -> None: ...
type___Token = Token
