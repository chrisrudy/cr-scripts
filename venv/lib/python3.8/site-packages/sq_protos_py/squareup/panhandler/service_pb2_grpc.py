# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.panhandler import service_pb2 as squareup_dot_panhandler_dot_service__pb2


class PanhandlerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DecryptTender = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/DecryptTender',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.DecryptTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.DecryptTenderResponse.FromString,
                )
        self.TranslateTender = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/TranslateTender',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.TranslateTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.TranslateTenderResponse.FromString,
                )
        self.TokenizeTender = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/TokenizeTender',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.TokenizeTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.TokenizeTenderResponse.FromString,
                )
        self.CreateTender = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/CreateTender',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.CreateTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.CreateTenderResponse.FromString,
                )
        self.DecryptEmvTags = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/DecryptEmvTags',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.DecryptEmvTagsRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.DecryptEmvTagsResponse.FromString,
                )
        self.FideliusTokenizeCard = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/FideliusTokenizeCard',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.FideliusTokenizeCardRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.FideliusTokenizeCardResponse.FromString,
                )
        self.GetPanMetadata = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/GetPanMetadata',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.GetPanMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.GetPanMetadataResponse.FromString,
                )
        self.GetRawPanMetadata = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/GetRawPanMetadata',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.GetRawPanMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.GetRawPanMetadataResponse.FromString,
                )
        self.ValidateGooglePayPayload = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/ValidateGooglePayPayload',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.ValidateGooglePayPayloadRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.ValidateGooglePayPayloadResponse.FromString,
                )
        self.UpdateServerEncryptedTender = channel.unary_unary(
                '/squareup.panhandler.service.PanhandlerService/UpdateServerEncryptedTender',
                request_serializer=squareup_dot_panhandler_dot_service__pb2.UpdateServerEncryptedTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_panhandler_dot_service__pb2.UpdateServerEncryptedTenderResponse.FromString,
                )


class PanhandlerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DecryptTender(self, request, context):
        """* Decrypt an encrypted tender (returns plaintext) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TranslateTender(self, request, context):
        """* Translate/tokenize an encrypted tender (does not return plaintext) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokenizeTender(self, request, context):
        """* Tokenize an encrypted tender (does not return plaintext) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTender(self, request, context):
        """* Create a new encrypted tender based on plaintext data 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecryptEmvTags(self, request, context):
        """* Decrypt encrypted EMV tags from a completed bill's tender (returns plaintext) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FideliusTokenizeCard(self, request, context):
        """* Create a Fidelius token for a given card number. Accessible from front-end applications. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPanMetadata(self, request, context):
        """* Gets PAN suffix and BIN info for a given list of Fidelius tokens. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRawPanMetadata(self, request, context):
        """* Gets PAN suffix and BIN info for a given list of raw PAN values. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateGooglePayPayload(self, request, context):
        """* Validates an encrypted Google Pay test payload, to be used during key rotations. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateServerEncryptedTender(self, request, context):
        """* Modify and return a ServerEncryptedTender 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PanhandlerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DecryptTender': grpc.unary_unary_rpc_method_handler(
                    servicer.DecryptTender,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.DecryptTenderRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.DecryptTenderResponse.SerializeToString,
            ),
            'TranslateTender': grpc.unary_unary_rpc_method_handler(
                    servicer.TranslateTender,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.TranslateTenderRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.TranslateTenderResponse.SerializeToString,
            ),
            'TokenizeTender': grpc.unary_unary_rpc_method_handler(
                    servicer.TokenizeTender,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.TokenizeTenderRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.TokenizeTenderResponse.SerializeToString,
            ),
            'CreateTender': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTender,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.CreateTenderRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.CreateTenderResponse.SerializeToString,
            ),
            'DecryptEmvTags': grpc.unary_unary_rpc_method_handler(
                    servicer.DecryptEmvTags,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.DecryptEmvTagsRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.DecryptEmvTagsResponse.SerializeToString,
            ),
            'FideliusTokenizeCard': grpc.unary_unary_rpc_method_handler(
                    servicer.FideliusTokenizeCard,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.FideliusTokenizeCardRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.FideliusTokenizeCardResponse.SerializeToString,
            ),
            'GetPanMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPanMetadata,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.GetPanMetadataRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.GetPanMetadataResponse.SerializeToString,
            ),
            'GetRawPanMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRawPanMetadata,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.GetRawPanMetadataRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.GetRawPanMetadataResponse.SerializeToString,
            ),
            'ValidateGooglePayPayload': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateGooglePayPayload,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.ValidateGooglePayPayloadRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.ValidateGooglePayPayloadResponse.SerializeToString,
            ),
            'UpdateServerEncryptedTender': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateServerEncryptedTender,
                    request_deserializer=squareup_dot_panhandler_dot_service__pb2.UpdateServerEncryptedTenderRequest.FromString,
                    response_serializer=squareup_dot_panhandler_dot_service__pb2.UpdateServerEncryptedTenderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.panhandler.service.PanhandlerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PanhandlerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DecryptTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/DecryptTender',
            squareup_dot_panhandler_dot_service__pb2.DecryptTenderRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.DecryptTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TranslateTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/TranslateTender',
            squareup_dot_panhandler_dot_service__pb2.TranslateTenderRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.TranslateTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokenizeTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/TokenizeTender',
            squareup_dot_panhandler_dot_service__pb2.TokenizeTenderRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.TokenizeTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/CreateTender',
            squareup_dot_panhandler_dot_service__pb2.CreateTenderRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.CreateTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecryptEmvTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/DecryptEmvTags',
            squareup_dot_panhandler_dot_service__pb2.DecryptEmvTagsRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.DecryptEmvTagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FideliusTokenizeCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/FideliusTokenizeCard',
            squareup_dot_panhandler_dot_service__pb2.FideliusTokenizeCardRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.FideliusTokenizeCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPanMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/GetPanMetadata',
            squareup_dot_panhandler_dot_service__pb2.GetPanMetadataRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.GetPanMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRawPanMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/GetRawPanMetadata',
            squareup_dot_panhandler_dot_service__pb2.GetRawPanMetadataRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.GetRawPanMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateGooglePayPayload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/ValidateGooglePayPayload',
            squareup_dot_panhandler_dot_service__pb2.ValidateGooglePayPayloadRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.ValidateGooglePayPayloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateServerEncryptedTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.panhandler.service.PanhandlerService/UpdateServerEncryptedTender',
            squareup_dot_panhandler_dot_service__pb2.UpdateServerEncryptedTenderRequest.SerializeToString,
            squareup_dot_panhandler_dot_service__pb2.UpdateServerEncryptedTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
