# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.card.balance.api import balance_reporting_pb2 as squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2


class ExternalPunchCardReportingServiceStub(object):
    """*
    Service endpoint to support all the requests from loyalty dashboard for reporting purpose.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMetric = channel.unary_unary(
                '/squareup.card.balance.api.ExternalPunchCardReportingService/GetMetric',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetMetricRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetMetricResponse.FromString,
                )
        self.GetAggregation = channel.unary_unary(
                '/squareup.card.balance.api.ExternalPunchCardReportingService/GetAggregation',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetAggregationRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetAggregationResponse.FromString,
                )
        self.GetCustomerAverage = channel.unary_unary(
                '/squareup.card.balance.api.ExternalPunchCardReportingService/GetCustomerAverage',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerAverageRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerAverageResponse.FromString,
                )
        self.GetCustomerFrequency = channel.unary_unary(
                '/squareup.card.balance.api.ExternalPunchCardReportingService/GetCustomerFrequency',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerFrequencyRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerFrequencyResponse.FromString,
                )
        self.GetEvents = channel.unary_unary(
                '/squareup.card.balance.api.ExternalPunchCardReportingService/GetEvents',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventsResponse.FromString,
                )
        self.GetEventDetails = channel.unary_unary(
                '/squareup.card.balance.api.ExternalPunchCardReportingService/GetEventDetails',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventDetailsRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventDetailsResponse.FromString,
                )


class ExternalPunchCardReportingServiceServicer(object):
    """*
    Service endpoint to support all the requests from loyalty dashboard for reporting purpose.
    """

    def GetMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAggregation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomerAverage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCustomerFrequency(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEventDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalPunchCardReportingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetric,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetMetricRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetMetricResponse.SerializeToString,
            ),
            'GetAggregation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAggregation,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetAggregationRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetAggregationResponse.SerializeToString,
            ),
            'GetCustomerAverage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomerAverage,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerAverageRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerAverageResponse.SerializeToString,
            ),
            'GetCustomerFrequency': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCustomerFrequency,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerFrequencyRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerFrequencyResponse.SerializeToString,
            ),
            'GetEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvents,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventsRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventsResponse.SerializeToString,
            ),
            'GetEventDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEventDetails,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventDetailsRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventDetailsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.card.balance.api.ExternalPunchCardReportingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalPunchCardReportingService(object):
    """*
    Service endpoint to support all the requests from loyalty dashboard for reporting purpose.
    """

    @staticmethod
    def GetMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalPunchCardReportingService/GetMetric',
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetMetricRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetMetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAggregation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalPunchCardReportingService/GetAggregation',
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetAggregationRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetAggregationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCustomerAverage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalPunchCardReportingService/GetCustomerAverage',
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerAverageRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerAverageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCustomerFrequency(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalPunchCardReportingService/GetCustomerFrequency',
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerFrequencyRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetCustomerFrequencyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalPunchCardReportingService/GetEvents',
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventsRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEventDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalPunchCardReportingService/GetEventDetails',
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventDetailsRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__reporting__pb2.GetEventDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
