# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.card.balance.api import balance_suspicious_activity_alert_pb2 as squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2


class SuspiciousActivityAlertsServiceStub(object):
    """*
    Service to support loyalty suspicious activity alert operations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAlerts = channel.unary_unary(
                '/squareup.card.balance.api.SuspiciousActivityAlertsService/GetAlerts',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.GetAlertsRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.GetAlertsResponse.FromString,
                )
        self.MarkAlertsAsRead = channel.unary_unary(
                '/squareup.card.balance.api.SuspiciousActivityAlertsService/MarkAlertsAsRead',
                request_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.MarkAlertsAsReadRequest.SerializeToString,
                response_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.MarkAlertsAsReadResponse.FromString,
                )


class SuspiciousActivityAlertsServiceServicer(object):
    """*
    Service to support loyalty suspicious activity alert operations
    """

    def GetAlerts(self, request, context):
        """*
        Get all suspicious activity alerts for the user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkAlertsAsRead(self, request, context):
        """*
        Mark alerts as read.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SuspiciousActivityAlertsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAlerts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlerts,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.GetAlertsRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.GetAlertsResponse.SerializeToString,
            ),
            'MarkAlertsAsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkAlertsAsRead,
                    request_deserializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.MarkAlertsAsReadRequest.FromString,
                    response_serializer=squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.MarkAlertsAsReadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.card.balance.api.SuspiciousActivityAlertsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SuspiciousActivityAlertsService(object):
    """*
    Service to support loyalty suspicious activity alert operations
    """

    @staticmethod
    def GetAlerts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.SuspiciousActivityAlertsService/GetAlerts',
            squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.GetAlertsRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.GetAlertsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkAlertsAsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.SuspiciousActivityAlertsService/MarkAlertsAsRead',
            squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.MarkAlertsAsReadRequest.SerializeToString,
            squareup_dot_card_dot_balance_dot_api_dot_balance__suspicious__activity__alert__pb2.MarkAlertsAsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
