# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.card.balance.model.loyalty_terms_of_service_pb2 import (
    LoyaltyTermsOfService as squareup___card___balance___model___loyalty_terms_of_service_pb2___LoyaltyTermsOfService,
)

from sq_protos_py.squareup.card.balance.model.points_pb2 import (
    LoyaltyPointsExpirationPolicy as squareup___card___balance___model___points_pb2___LoyaltyPointsExpirationPolicy,
    LoyaltyPointsTerminology as squareup___card___balance___model___points_pb2___LoyaltyPointsTerminology,
    RewardTier as squareup___card___balance___model___points_pb2___RewardTier,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.coupons.model_pb2 import (
    DiscountTypeValue as squareup___coupons___model_pb2___DiscountTypeValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

LoyaltyProgramTypeValue = typing___NewType('LoyaltyProgramTypeValue', builtin___int)
type___LoyaltyProgramTypeValue = LoyaltyProgramTypeValue
LoyaltyProgramType: _LoyaltyProgramType
class _LoyaltyProgramType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoyaltyProgramTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PROGRAM_TYPE_UNKNOWN = typing___cast(LoyaltyProgramTypeValue, 0)
    PUNCH_CARD = typing___cast(LoyaltyProgramTypeValue, 1)
    POINTS = typing___cast(LoyaltyProgramTypeValue, 2)
PROGRAM_TYPE_UNKNOWN = typing___cast(LoyaltyProgramTypeValue, 0)
PUNCH_CARD = typing___cast(LoyaltyProgramTypeValue, 1)
POINTS = typing___cast(LoyaltyProgramTypeValue, 2)
type___LoyaltyProgramType = LoyaltyProgramType

LoyaltyProgramStatusValue = typing___NewType('LoyaltyProgramStatusValue', builtin___int)
type___LoyaltyProgramStatusValue = LoyaltyProgramStatusValue
LoyaltyProgramStatus: _LoyaltyProgramStatus
class _LoyaltyProgramStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoyaltyProgramStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PROGRAM_STATUS_UNKNOWN = typing___cast(LoyaltyProgramStatusValue, 0)
    NONE = typing___cast(LoyaltyProgramStatusValue, 1)
    PAUSED = typing___cast(LoyaltyProgramStatusValue, 2)
    FROZEN = typing___cast(LoyaltyProgramStatusValue, 3)
    ACTIVE = typing___cast(LoyaltyProgramStatusValue, 4)
PROGRAM_STATUS_UNKNOWN = typing___cast(LoyaltyProgramStatusValue, 0)
NONE = typing___cast(LoyaltyProgramStatusValue, 1)
PAUSED = typing___cast(LoyaltyProgramStatusValue, 2)
FROZEN = typing___cast(LoyaltyProgramStatusValue, 3)
ACTIVE = typing___cast(LoyaltyProgramStatusValue, 4)
type___LoyaltyProgramStatus = LoyaltyProgramStatus

LoyaltyProgramFieldValue = typing___NewType('LoyaltyProgramFieldValue', builtin___int)
type___LoyaltyProgramFieldValue = LoyaltyProgramFieldValue
LoyaltyProgramField: _LoyaltyProgramField
class _LoyaltyProgramField(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoyaltyProgramFieldValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    FIELD_INVALID = typing___cast(LoyaltyProgramFieldValue, 0)
    FIELD_PROGRAM_TYPE = typing___cast(LoyaltyProgramFieldValue, 1)
FIELD_INVALID = typing___cast(LoyaltyProgramFieldValue, 0)
FIELD_PROGRAM_TYPE = typing___cast(LoyaltyProgramFieldValue, 1)
type___LoyaltyProgramField = LoyaltyProgramField

class PercentageDiscount(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    percentage: builtin___int = ...

    @property
    def max_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        percentage : typing___Optional[builtin___int] = None,
        max_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"max_amount",b"max_amount",u"percentage",b"percentage"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"max_amount",b"max_amount",u"percentage",b"percentage"]) -> None: ...
type___PercentageDiscount = PercentageDiscount

class LoyaltyProgram(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class LoyaltyItemBasedStars(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        LoyaltyItemBasedStarTypesValue = typing___NewType('LoyaltyItemBasedStarTypesValue', builtin___int)
        type___LoyaltyItemBasedStarTypesValue = LoyaltyItemBasedStarTypesValue
        LoyaltyItemBasedStarTypes: _LoyaltyItemBasedStarTypes
        class _LoyaltyItemBasedStarTypes(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            ITEM = typing___cast(LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue, 1)
            CATEGORY = typing___cast(LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue, 2)
        ITEM = typing___cast(LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue, 1)
        CATEGORY = typing___cast(LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue, 2)
        type___LoyaltyItemBasedStarTypes = LoyaltyItemBasedStarTypes

        class LoyaltyItemBasedStar(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            class LoyaltyItemBasedStarToken(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
                id: typing___Text = ...

                def __init__(self,
                    *,
                    id : typing___Optional[typing___Text] = None,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> builtin___bool: ...
                def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> None: ...
            type___LoyaltyItemBasedStarToken = LoyaltyItemBasedStarToken

            stars_earn: builtin___int = ...

            @property
            def token(self) -> type___LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStar.LoyaltyItemBasedStarToken: ...

            def __init__(self,
                *,
                stars_earn : typing___Optional[builtin___int] = None,
                token : typing___Optional[type___LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStar.LoyaltyItemBasedStarToken] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"stars_earn",b"stars_earn",u"token",b"token"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"stars_earn",b"stars_earn",u"token",b"token"]) -> None: ...
        type___LoyaltyItemBasedStar = LoyaltyItemBasedStar

        type: type___LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue = ...

        @property
        def star_specs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStar]: ...

        def __init__(self,
            *,
            type : typing___Optional[type___LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStarTypesValue] = None,
            star_specs : typing___Optional[typing___Iterable[type___LoyaltyProgram.LoyaltyItemBasedStars.LoyaltyItemBasedStar]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"star_specs",b"star_specs",u"type",b"type"]) -> None: ...
    type___LoyaltyItemBasedStars = LoyaltyItemBasedStars

    id: typing___Text = ...
    merchant_token: typing___Text = ...
    unit_token: typing___Text = ...
    name: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    expiration_interval_months: builtin___int = ...
    active_unit_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    is_blacklisted: builtin___bool = ...
    is_frozen: builtin___bool = ...
    is_paused: builtin___bool = ...
    is_off_pos_enrollment_enabled: builtin___bool = ...
    marketing_integration_enabled: builtin___bool = ...
    marketing_punch_incentive: builtin___int = ...
    min_punch_amount_cents: builtin___int = ...
    spend_based_punches_enabled: builtin___bool = ...
    type: typing___Text = ...
    program_type: type___LoyaltyProgramTypeValue = ...
    program_status: type___LoyaltyProgramStatusValue = ...
    program_description: typing___Text = ...
    reward_definition_token: typing___Text = ...
    required_punch_count: builtin___int = ...
    has_grandfathered_free_price: builtin___bool = ...
    allow_automatic_accrual_from_orders_api: builtin___bool = ...
    is_cash_integration_enabled: builtin___bool = ...

    @property
    def paused_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def starts_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def item_based_stars(self) -> type___LoyaltyProgram.LoyaltyItemBasedStars: ...

    @property
    def reward_tiers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___card___balance___model___points_pb2___RewardTier]: ...

    @property
    def accrual_rules(self) -> type___AccrualRules: ...

    @property
    def terminology(self) -> squareup___card___balance___model___points_pb2___LoyaltyPointsTerminology: ...

    @property
    def expirationPolicy(self) -> squareup___card___balance___model___points_pb2___LoyaltyPointsExpirationPolicy: ...

    @property
    def suspicious_activity_alert_policy(self) -> type___LoyaltySuspiciousActivityAlertPolicy: ...

    @property
    def terms_of_service(self) -> squareup___card___balance___model___loyalty_terms_of_service_pb2___LoyaltyTermsOfService: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        expiration_interval_months : typing___Optional[builtin___int] = None,
        active_unit_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        is_blacklisted : typing___Optional[builtin___bool] = None,
        is_frozen : typing___Optional[builtin___bool] = None,
        is_paused : typing___Optional[builtin___bool] = None,
        paused_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        starts_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        is_off_pos_enrollment_enabled : typing___Optional[builtin___bool] = None,
        marketing_integration_enabled : typing___Optional[builtin___bool] = None,
        marketing_punch_incentive : typing___Optional[builtin___int] = None,
        min_punch_amount_cents : typing___Optional[builtin___int] = None,
        spend_based_punches_enabled : typing___Optional[builtin___bool] = None,
        type : typing___Optional[typing___Text] = None,
        item_based_stars : typing___Optional[type___LoyaltyProgram.LoyaltyItemBasedStars] = None,
        program_type : typing___Optional[type___LoyaltyProgramTypeValue] = None,
        program_status : typing___Optional[type___LoyaltyProgramStatusValue] = None,
        program_description : typing___Optional[typing___Text] = None,
        reward_definition_token : typing___Optional[typing___Text] = None,
        required_punch_count : typing___Optional[builtin___int] = None,
        reward_tiers : typing___Optional[typing___Iterable[squareup___card___balance___model___points_pb2___RewardTier]] = None,
        accrual_rules : typing___Optional[type___AccrualRules] = None,
        has_grandfathered_free_price : typing___Optional[builtin___bool] = None,
        terminology : typing___Optional[squareup___card___balance___model___points_pb2___LoyaltyPointsTerminology] = None,
        expirationPolicy : typing___Optional[squareup___card___balance___model___points_pb2___LoyaltyPointsExpirationPolicy] = None,
        suspicious_activity_alert_policy : typing___Optional[type___LoyaltySuspiciousActivityAlertPolicy] = None,
        allow_automatic_accrual_from_orders_api : typing___Optional[builtin___bool] = None,
        terms_of_service : typing___Optional[squareup___card___balance___model___loyalty_terms_of_service_pb2___LoyaltyTermsOfService] = None,
        is_cash_integration_enabled : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accrual_rules",b"accrual_rules",u"allow_automatic_accrual_from_orders_api",b"allow_automatic_accrual_from_orders_api",u"currency_code",b"currency_code",u"expirationPolicy",b"expirationPolicy",u"expiration_interval_months",b"expiration_interval_months",u"has_grandfathered_free_price",b"has_grandfathered_free_price",u"id",b"id",u"is_blacklisted",b"is_blacklisted",u"is_cash_integration_enabled",b"is_cash_integration_enabled",u"is_frozen",b"is_frozen",u"is_off_pos_enrollment_enabled",b"is_off_pos_enrollment_enabled",u"is_paused",b"is_paused",u"item_based_stars",b"item_based_stars",u"loyalty_user_token",b"loyalty_user_token",u"marketing_integration_enabled",b"marketing_integration_enabled",u"marketing_punch_incentive",b"marketing_punch_incentive",u"merchant_token",b"merchant_token",u"min_punch_amount_cents",b"min_punch_amount_cents",u"name",b"name",u"paused_at",b"paused_at",u"program_description",b"program_description",u"program_status",b"program_status",u"program_type",b"program_type",u"required_punch_count",b"required_punch_count",u"reward_definition_token",b"reward_definition_token",u"spend_based_punches_enabled",b"spend_based_punches_enabled",u"starts_at",b"starts_at",u"suspicious_activity_alert_policy",b"suspicious_activity_alert_policy",u"terminology",b"terminology",u"terms_of_service",b"terms_of_service",u"type",b"type",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accrual_rules",b"accrual_rules",u"active_unit_tokens",b"active_unit_tokens",u"allow_automatic_accrual_from_orders_api",b"allow_automatic_accrual_from_orders_api",u"currency_code",b"currency_code",u"expirationPolicy",b"expirationPolicy",u"expiration_interval_months",b"expiration_interval_months",u"has_grandfathered_free_price",b"has_grandfathered_free_price",u"id",b"id",u"is_blacklisted",b"is_blacklisted",u"is_cash_integration_enabled",b"is_cash_integration_enabled",u"is_frozen",b"is_frozen",u"is_off_pos_enrollment_enabled",b"is_off_pos_enrollment_enabled",u"is_paused",b"is_paused",u"item_based_stars",b"item_based_stars",u"loyalty_user_token",b"loyalty_user_token",u"marketing_integration_enabled",b"marketing_integration_enabled",u"marketing_punch_incentive",b"marketing_punch_incentive",u"merchant_token",b"merchant_token",u"min_punch_amount_cents",b"min_punch_amount_cents",u"name",b"name",u"paused_at",b"paused_at",u"program_description",b"program_description",u"program_status",b"program_status",u"program_type",b"program_type",u"required_punch_count",b"required_punch_count",u"reward_definition_token",b"reward_definition_token",u"reward_tiers",b"reward_tiers",u"spend_based_punches_enabled",b"spend_based_punches_enabled",u"starts_at",b"starts_at",u"suspicious_activity_alert_policy",b"suspicious_activity_alert_policy",u"terminology",b"terminology",u"terms_of_service",b"terms_of_service",u"type",b"type",u"unit_token",b"unit_token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"loyalty_user_token",b"loyalty_user_token"]) -> typing_extensions___Literal["merchant_token","unit_token"]: ...
type___LoyaltyProgram = LoyaltyProgram

class LoyaltySuspiciousActivityAlertPolicy(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    min_transaction_count: builtin___int = ...

    def __init__(self,
        *,
        min_transaction_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"min_transaction_count",b"min_transaction_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"min_transaction_count",b"min_transaction_count"]) -> None: ...
type___LoyaltySuspiciousActivityAlertPolicy = LoyaltySuspiciousActivityAlertPolicy

class AccrualRules(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class CatalogObject(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        CatalogObjectTypeValue = typing___NewType('CatalogObjectTypeValue', builtin___int)
        type___CatalogObjectTypeValue = CatalogObjectTypeValue
        CatalogObjectType: _CatalogObjectType
        class _CatalogObjectType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AccrualRules.CatalogObject.CatalogObjectTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            CATALOG_OBJECT_TYPE_UNKNOWN = typing___cast(AccrualRules.CatalogObject.CatalogObjectTypeValue, 0)
            ITEM = typing___cast(AccrualRules.CatalogObject.CatalogObjectTypeValue, 1)
            CATEGORY = typing___cast(AccrualRules.CatalogObject.CatalogObjectTypeValue, 2)
        CATALOG_OBJECT_TYPE_UNKNOWN = typing___cast(AccrualRules.CatalogObject.CatalogObjectTypeValue, 0)
        ITEM = typing___cast(AccrualRules.CatalogObject.CatalogObjectTypeValue, 1)
        CATEGORY = typing___cast(AccrualRules.CatalogObject.CatalogObjectTypeValue, 2)
        type___CatalogObjectType = CatalogObjectType

        token: typing___Text = ...
        catalog_object_type: type___AccrualRules.CatalogObject.CatalogObjectTypeValue = ...

        def __init__(self,
            *,
            token : typing___Optional[typing___Text] = None,
            catalog_object_type : typing___Optional[type___AccrualRules.CatalogObject.CatalogObjectTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"catalog_object_type",b"catalog_object_type",u"token",b"token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object_type",b"catalog_object_type",u"token",b"token"]) -> None: ...
    type___CatalogObject = CatalogObject

    class VisitRules(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        points: builtin___int = ...
        include_tax: builtin___bool = ...

        @property
        def minimum_spend(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            points : typing___Optional[builtin___int] = None,
            minimum_spend : typing___Optional[squareup___common___currency_pb2___Money] = None,
            include_tax : typing___Optional[builtin___bool] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"include_tax",b"include_tax",u"minimum_spend",b"minimum_spend",u"points",b"points"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"include_tax",b"include_tax",u"minimum_spend",b"minimum_spend",u"points",b"points"]) -> None: ...
    type___VisitRules = VisitRules

    class SpendRateRules(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        points: builtin___int = ...
        include_tax: builtin___bool = ...

        @property
        def spend(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            points : typing___Optional[builtin___int] = None,
            spend : typing___Optional[squareup___common___currency_pb2___Money] = None,
            include_tax : typing___Optional[builtin___bool] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"include_tax",b"include_tax",u"points",b"points",u"spend",b"spend"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"include_tax",b"include_tax",u"points",b"points",u"spend",b"spend"]) -> None: ...
    type___SpendRateRules = SpendRateRules

    class ItemRules(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class CatalogObjectRule(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            points: builtin___int = ...

            @property
            def catalog_object(self) -> type___AccrualRules.CatalogObject: ...

            def __init__(self,
                *,
                points : typing___Optional[builtin___int] = None,
                catalog_object : typing___Optional[type___AccrualRules.CatalogObject] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"catalog_object",b"catalog_object",u"points",b"points"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object",b"catalog_object",u"points",b"points"]) -> None: ...
        type___CatalogObjectRule = CatalogObjectRule


        @property
        def catalog_object_rules(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___AccrualRules.ItemRules.CatalogObjectRule]: ...

        def __init__(self,
            *,
            catalog_object_rules : typing___Optional[typing___Iterable[type___AccrualRules.ItemRules.CatalogObjectRule]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object_rules",b"catalog_object_rules"]) -> None: ...
    type___ItemRules = ItemRules

    class AccrualRulesOptions(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        exclude_reward_items: builtin___bool = ...
        exclude_discounted_items: builtin___bool = ...
        exclude_comp_items: builtin___bool = ...

        @property
        def excluded_catalog_objects(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___AccrualRules.CatalogObject]: ...

        def __init__(self,
            *,
            exclude_reward_items : typing___Optional[builtin___bool] = None,
            exclude_discounted_items : typing___Optional[builtin___bool] = None,
            exclude_comp_items : typing___Optional[builtin___bool] = None,
            excluded_catalog_objects : typing___Optional[typing___Iterable[type___AccrualRules.CatalogObject]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"exclude_comp_items",b"exclude_comp_items",u"exclude_discounted_items",b"exclude_discounted_items",u"exclude_reward_items",b"exclude_reward_items"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"exclude_comp_items",b"exclude_comp_items",u"exclude_discounted_items",b"exclude_discounted_items",u"exclude_reward_items",b"exclude_reward_items",u"excluded_catalog_objects",b"excluded_catalog_objects"]) -> None: ...
    type___AccrualRulesOptions = AccrualRulesOptions


    @property
    def visit_rules(self) -> type___AccrualRules.VisitRules: ...

    @property
    def spend_rate_rules(self) -> type___AccrualRules.SpendRateRules: ...

    @property
    def item_rules(self) -> type___AccrualRules.ItemRules: ...

    @property
    def accrual_rules_options(self) -> type___AccrualRules.AccrualRulesOptions: ...

    def __init__(self,
        *,
        visit_rules : typing___Optional[type___AccrualRules.VisitRules] = None,
        spend_rate_rules : typing___Optional[type___AccrualRules.SpendRateRules] = None,
        item_rules : typing___Optional[type___AccrualRules.ItemRules] = None,
        accrual_rules_options : typing___Optional[type___AccrualRules.AccrualRulesOptions] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accrual_rules_options",b"accrual_rules_options",u"item_rules",b"item_rules",u"rules",b"rules",u"spend_rate_rules",b"spend_rate_rules",u"visit_rules",b"visit_rules"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accrual_rules_options",b"accrual_rules_options",u"item_rules",b"item_rules",u"rules",b"rules",u"spend_rate_rules",b"spend_rate_rules",u"visit_rules",b"visit_rules"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"rules",b"rules"]) -> typing_extensions___Literal["visit_rules","spend_rate_rules","item_rules"]: ...
type___AccrualRules = AccrualRules

class PunchCardDiscount(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: squareup___coupons___model_pb2___DiscountTypeValue = ...
    amount: builtin___int = ...
    max_amount: builtin___int = ...

    @property
    def percentage_discount(self) -> type___PercentageDiscount: ...

    @property
    def fixed_discount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        type : typing___Optional[squareup___coupons___model_pb2___DiscountTypeValue] = None,
        amount : typing___Optional[builtin___int] = None,
        max_amount : typing___Optional[builtin___int] = None,
        percentage_discount : typing___Optional[type___PercentageDiscount] = None,
        fixed_discount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"fixed_discount",b"fixed_discount",u"max_amount",b"max_amount",u"percentage_discount",b"percentage_discount",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"fixed_discount",b"fixed_discount",u"max_amount",b"max_amount",u"percentage_discount",b"percentage_discount",u"type",b"type"]) -> None: ...
type___PunchCardDiscount = PunchCardDiscount

class PunchCardReward(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...

    @property
    def discount(self) -> type___PunchCardDiscount: ...

    def __init__(self,
        *,
        discount : typing___Optional[type___PunchCardDiscount] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"discount",b"discount",u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"discount",b"discount",u"name",b"name"]) -> None: ...
type___PunchCardReward = PunchCardReward

class PunchCardProgram(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    required_cents: builtin___int = ...
    required_punches: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    reward_definition_token: typing___Text = ...
    is_multiunit: builtin___bool = ...
    is_paused: builtin___bool = ...

    @property
    def required_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def reward(self) -> type___PunchCardReward: ...

    @property
    def paused_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        required_cents : typing___Optional[builtin___int] = None,
        required_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        required_punches : typing___Optional[builtin___int] = None,
        reward : typing___Optional[type___PunchCardReward] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        reward_definition_token : typing___Optional[typing___Text] = None,
        is_multiunit : typing___Optional[builtin___bool] = None,
        is_paused : typing___Optional[builtin___bool] = None,
        paused_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"currency_code",b"currency_code",u"is_multiunit",b"is_multiunit",u"is_paused",b"is_paused",u"paused_at",b"paused_at",u"required_cents",b"required_cents",u"required_money",b"required_money",u"required_punches",b"required_punches",u"reward",b"reward",u"reward_definition_token",b"reward_definition_token",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"currency_code",b"currency_code",u"is_multiunit",b"is_multiunit",u"is_paused",b"is_paused",u"paused_at",b"paused_at",u"required_cents",b"required_cents",u"required_money",b"required_money",u"required_punches",b"required_punches",u"reward",b"reward",u"reward_definition_token",b"reward_definition_token",u"token",b"token"]) -> None: ...
type___PunchCardProgram = PunchCardProgram

class PunchCardProgramDraft(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    merchant_token: typing___Text = ...
    unit_token: typing___Text = ...
    step_name: typing___Text = ...
    draft_json: typing___Text = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def updated_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def deleted_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        updated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        deleted_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        step_name : typing___Optional[typing___Text] = None,
        draft_json : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"deleted_at",b"deleted_at",u"draft_json",b"draft_json",u"merchant_token",b"merchant_token",u"step_name",b"step_name",u"token",b"token",u"unit_token",b"unit_token",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"deleted_at",b"deleted_at",u"draft_json",b"draft_json",u"merchant_token",b"merchant_token",u"step_name",b"step_name",u"token",b"token",u"unit_token",b"unit_token",u"updated_at",b"updated_at"]) -> None: ...
type___PunchCardProgramDraft = PunchCardProgramDraft
