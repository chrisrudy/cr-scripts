# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.addons.owners import is_addon_enabled_pb2 as squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2


class InternalLoyaltyAddonServiceStub(object):
    """*
    Service endpoint to support requests from the addons service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IsAddonEnabled = channel.unary_unary(
                '/squareup.card.balance.api.InternalLoyaltyAddonService/IsAddonEnabled',
                request_serializer=squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2.IsAddonEnabledRequest.SerializeToString,
                response_deserializer=squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2.IsAddonEnabledResponse.FromString,
                )


class InternalLoyaltyAddonServiceServicer(object):
    """*
    Service endpoint to support requests from the addons service
    """

    def IsAddonEnabled(self, request, context):
        """*
        Check the addon enablement state for a specified unit
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalLoyaltyAddonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IsAddonEnabled': grpc.unary_unary_rpc_method_handler(
                    servicer.IsAddonEnabled,
                    request_deserializer=squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2.IsAddonEnabledRequest.FromString,
                    response_serializer=squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2.IsAddonEnabledResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.card.balance.api.InternalLoyaltyAddonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalLoyaltyAddonService(object):
    """*
    Service endpoint to support requests from the addons service
    """

    @staticmethod
    def IsAddonEnabled(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.InternalLoyaltyAddonService/IsAddonEnabled',
            squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2.IsAddonEnabledRequest.SerializeToString,
            squareup_dot_addons_dot_owners_dot_is__addon__enabled__pb2.IsAddonEnabledResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
