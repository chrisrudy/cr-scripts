# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.connect.v2.actions import preview_loyalty_pb2 as squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2


class ExternalApiServiceStub(object):
    """*
    This rpc service serves traffic from connect. rpc definitions should mirror the ones found in
    squareup.connect.v2.SquareConnectV2 that pertain to loyalty and use the same request and response
    objects.

    Other Square services should instead use our normal s2s API:
    squareup.card.balance.api.PunchCardService
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PreviewLoyaltyExternalEnroll = channel.unary_unary(
                '/squareup.card.balance.api.ExternalApiService/PreviewLoyaltyExternalEnroll',
                request_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewLoyaltyExternalEnrollRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewLoyaltyExternalEnrollResponse.FromString,
                )
        self.PreviewRetrieveLoyaltyStatus = channel.unary_unary(
                '/squareup.card.balance.api.ExternalApiService/PreviewRetrieveLoyaltyStatus',
                request_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewRetrieveLoyaltyStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewRetrieveLoyaltyStatusResponse.FromString,
                )
        self.PreviewAdjustLoyaltyStars = channel.unary_unary(
                '/squareup.card.balance.api.ExternalApiService/PreviewAdjustLoyaltyStars',
                request_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewAdjustLoyaltyStarsRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewAdjustLoyaltyStarsResponse.FromString,
                )
        self.PreviewListLoyaltyEvents = channel.unary_unary(
                '/squareup.card.balance.api.ExternalApiService/PreviewListLoyaltyEvents',
                request_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewListLoyaltyEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewListLoyaltyEventsResponse.FromString,
                )


class ExternalApiServiceServicer(object):
    """*
    This rpc service serves traffic from connect. rpc definitions should mirror the ones found in
    squareup.connect.v2.SquareConnectV2 that pertain to loyalty and use the same request and response
    objects.

    Other Square services should instead use our normal s2s API:
    squareup.card.balance.api.PunchCardService
    """

    def PreviewLoyaltyExternalEnroll(self, request, context):
        """*
        Enroll a phone number into the merchant's currently-active loyalty program.
        This is an online/API-specific version of the enroll, which will not send the SMS notification
        containing the welcome link (this has legal/TCPA impact). No SMS messages should ever be sent
        to customers who have been enrolled solely via this operation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreviewRetrieveLoyaltyStatus(self, request, context):
        """*
        Look up how many stars a customer has, along with
        general information about the loyalty program, by the
        customerâ€™s loyalty account phone number.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreviewAdjustLoyaltyStars(self, request, context):
        """*
        Add or remove loyalty stars. This call will fail if the loyalty balance
        would go below zero or go above the number of stars remaining to get the next
        coupon. If the star adjustment is the number of stars left to reach a coupon
        threshold, a coupon will be issued (but the customer WILL NOT be sent an SMS
        notification).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreviewListLoyaltyEvents(self, request, context):
        """*
        Retrieve a list of loyalty-related events for your customers, such as enrollment into the
        loyalty program and earning loyalty stars.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PreviewLoyaltyExternalEnroll': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewLoyaltyExternalEnroll,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewLoyaltyExternalEnrollRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewLoyaltyExternalEnrollResponse.SerializeToString,
            ),
            'PreviewRetrieveLoyaltyStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewRetrieveLoyaltyStatus,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewRetrieveLoyaltyStatusRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewRetrieveLoyaltyStatusResponse.SerializeToString,
            ),
            'PreviewAdjustLoyaltyStars': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewAdjustLoyaltyStars,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewAdjustLoyaltyStarsRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewAdjustLoyaltyStarsResponse.SerializeToString,
            ),
            'PreviewListLoyaltyEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.PreviewListLoyaltyEvents,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewListLoyaltyEventsRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewListLoyaltyEventsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.card.balance.api.ExternalApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalApiService(object):
    """*
    This rpc service serves traffic from connect. rpc definitions should mirror the ones found in
    squareup.connect.v2.SquareConnectV2 that pertain to loyalty and use the same request and response
    objects.

    Other Square services should instead use our normal s2s API:
    squareup.card.balance.api.PunchCardService
    """

    @staticmethod
    def PreviewLoyaltyExternalEnroll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalApiService/PreviewLoyaltyExternalEnroll',
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewLoyaltyExternalEnrollRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewLoyaltyExternalEnrollResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreviewRetrieveLoyaltyStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalApiService/PreviewRetrieveLoyaltyStatus',
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewRetrieveLoyaltyStatusRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewRetrieveLoyaltyStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreviewAdjustLoyaltyStars(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalApiService/PreviewAdjustLoyaltyStars',
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewAdjustLoyaltyStarsRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewAdjustLoyaltyStarsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreviewListLoyaltyEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.card.balance.api.ExternalApiService/PreviewListLoyaltyEvents',
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewListLoyaltyEventsRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_actions_dot_preview__loyalty__pb2.PreviewListLoyaltyEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
