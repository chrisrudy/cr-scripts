# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.connect.v2.inventory.service import batch_change_inventory_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import batch_retrieve_inventory_changes_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import batch_retrieve_inventory_counts_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_adjustment_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_changes_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_count_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_physical_count_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2


class InventoryConnectFrontendStub(object):
    """--
    @desc The Frontend for the Inventory Connect V2 API
    --
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RetrieveInventoryCount = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryCount',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountResponse.FromString,
                )
        self.RetrieveInventoryAdjustment = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryAdjustment',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentResponse.FromString,
                )
        self.RetrieveInventoryPhysicalCount = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryPhysicalCount',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountResponse.FromString,
                )
        self.RetrieveInventoryChanges = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryChanges',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesResponse.FromString,
                )
        self.BatchRetrieveInventoryCounts = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/BatchRetrieveInventoryCounts',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsResponse.FromString,
                )
        self.BatchRetrieveInventoryChanges = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/BatchRetrieveInventoryChanges',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesResponse.FromString,
                )
        self.BatchChangeInventory = channel.unary_unary(
                '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/BatchChangeInventory',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryResponse.FromString,
                )


class InventoryConnectFrontendServicer(object):
    """--
    @desc The Frontend for the Inventory Connect V2 API
    --
    """

    def RetrieveInventoryCount(self, request, context):
        """--
        @desc Retrieves the current (calculated) stock count for a given [CatalogObject](#type-catalogobject)
        at a given set of [Location](#type-location)s. The response may be paginated when the number of locations
        is large. The sort order of current counts in the response is unspecified. For more sophisticated queries,
        use a batch endpoint.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInventoryAdjustment(self, request, context):
        """@desc Retrieves the [InventoryAdjustment](#type-inventoryadjustment) with the given `adjustment_id`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInventoryPhysicalCount(self, request, context):
        """@desc Retrieves the [InventoryPhysicalCount](#type-inventoryphysicalcount) with the given `physical_count_id`.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInventoryChanges(self, request, context):
        """--
        @desc Retrieves the set of inventory physical counts and adjustments for a given
        [CatalogObject](#type-catalogobject) at a given set of [Location](#type-location)s. The results appear
        in descending order of `occurred_at`/`counted_at` timestamp (newest first), and are paginated.
        There is no limits on how far back the caller can page. This endpoint is useful when displaying recent
        changes for a specific item. For more sophisticated queries, use a batch endpoint.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchRetrieveInventoryCounts(self, request, context):
        """--
        @desc Retrieves current counts for a set of [CatalogObject](#type-catalogobject)s at a set of
        [Location](#type-location)s. If `updated_at` is specified, only counts that have changed since that time
        (based on the server timestamp for the most recent change) are returned. This allows clients to
        perform a "sync" operation, for example in response to receiving a Webhook. The results are sorted by
        [CatalogObject](#type-catalogobject) id and are paginated.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchRetrieveInventoryChanges(self, request, context):
        """--
        @desc Retrieves historical physical counts and adjustments. The set of physical counts and adjustments to
        return may be limited along several dimensions. The results appear in ascending order of server timestamp
        (oldest first), and are paginated. This endpoint is intended as a catch-all for queries that cannot be handled
        by the previous simpler endpoints.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchChangeInventory(self, request, context):
        """--
        @desc Applies new adjustments and counts to inventory. The response will contain the current calculated counts
        for all objects referenced in the request.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryConnectFrontendServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RetrieveInventoryCount': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryCount,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountResponse.SerializeToString,
            ),
            'RetrieveInventoryAdjustment': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryAdjustment,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentResponse.SerializeToString,
            ),
            'RetrieveInventoryPhysicalCount': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryPhysicalCount,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountResponse.SerializeToString,
            ),
            'RetrieveInventoryChanges': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryChanges,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesResponse.SerializeToString,
            ),
            'BatchRetrieveInventoryCounts': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchRetrieveInventoryCounts,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsResponse.SerializeToString,
            ),
            'BatchRetrieveInventoryChanges': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchRetrieveInventoryChanges,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesResponse.SerializeToString,
            ),
            'BatchChangeInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchChangeInventory,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.inventory.frontend.InventoryConnectFrontend', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryConnectFrontend(object):
    """--
    @desc The Frontend for the Inventory Connect V2 API
    --
    """

    @staticmethod
    def RetrieveInventoryCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryCount',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInventoryAdjustment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryAdjustment',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInventoryPhysicalCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryPhysicalCount',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInventoryChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/RetrieveInventoryChanges',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchRetrieveInventoryCounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/BatchRetrieveInventoryCounts',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchRetrieveInventoryChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/BatchRetrieveInventoryChanges',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchChangeInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.frontend.InventoryConnectFrontend/BatchChangeInventory',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
