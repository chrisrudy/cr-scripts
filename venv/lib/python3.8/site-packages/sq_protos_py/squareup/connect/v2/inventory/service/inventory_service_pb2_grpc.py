# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.connect.v2.inventory.service import batch_change_inventory_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import batch_retrieve_inventory_changes_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import batch_retrieve_inventory_counts_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_adjustment_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_changes_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_count_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2
from sq_protos_py.squareup.connect.v2.inventory.service import retrieve_inventory_physical_count_pb2 as squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2


class InventoryApiStub(object):
    """--
    @desc The Inventory Connect V2 API
    --
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RetrieveInventoryCount = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryCount',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountResponse.FromString,
                )
        self.RetrieveInventoryAdjustment = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryAdjustment',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentResponse.FromString,
                )
        self.RetrieveInventoryPhysicalCount = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryPhysicalCount',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountResponse.FromString,
                )
        self.RetrieveInventoryChanges = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryChanges',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesResponse.FromString,
                )
        self.BatchRetrieveInventoryCounts = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/BatchRetrieveInventoryCounts',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsResponse.FromString,
                )
        self.BatchRetrieveInventoryChanges = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/BatchRetrieveInventoryChanges',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesResponse.FromString,
                )
        self.BatchChangeInventory = channel.unary_unary(
                '/squareup.connect.v2.inventory.service.InventoryApi/BatchChangeInventory',
                request_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryResponse.FromString,
                )


class InventoryApiServicer(object):
    """--
    @desc The Inventory Connect V2 API
    --
    """

    def RetrieveInventoryCount(self, request, context):
        """--
        @desc Retrieves the current calculated stock count for a given
        [CatalogObject](#type-catalogobject) at a given set of
        [Location](#type-location)s. Responses are paginated and unsorted.
        For more sophisticated queries, use a batch endpoint.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInventoryAdjustment(self, request, context):
        """--
        @desc Returns the [InventoryAdjustment](#type-inventoryadjustment) object
        with the provided `adjustment_id`.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInventoryPhysicalCount(self, request, context):
        """--
        @desc Returns the [InventoryPhysicalCount](#type-inventoryphysicalcount)
        object with the provided `physical_count_id`.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveInventoryChanges(self, request, context):
        """--
        @desc Returns a set of physical counts and inventory adjustments for the
        provided [CatalogObject](#type-catalogobject) at the requested
        [Location](#type-location)s.

        Results are paginated and sorted in descending order according to their
        `occurred_at` timestamp (newest first).

        There are no limits on how far back the caller can page. This endpoint can be 
        used to display recent changes for a specific item. For more
        sophisticated queries, use a batch endpoint.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchRetrieveInventoryCounts(self, request, context):
        """--
        @desc Returns current counts for the provided
        [CatalogObject](#type-catalogobject)s at the requested
        [Location](#type-location)s.

        Results are paginated and sorted in descending order according to their
        `calculated_at` timestamp (newest first).

        When `updated_after` is specified, only counts that have changed since that
        time (based on the server timestamp for the most recent change) are
        returned. This allows clients to perform a "sync" operation, for example
        in response to receiving a Webhook notification.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchRetrieveInventoryChanges(self, request, context):
        """--
        @desc Returns historical physical counts and adjustments based on the
        provided filter criteria.

        Results are paginated and sorted in ascending order according their
        `occurred_at` timestamp (oldest first).

        BatchRetrieveInventoryChanges is a catch-all query endpoint for queries
        that cannot be handled by other, simpler endpoints.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchChangeInventory(self, request, context):
        """--
        @desc Applies adjustments and counts to the provided item quantities.

        On success: returns the current calculated counts for all objects
        referenced in the request.
        On failure: returns a list of related errors.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RetrieveInventoryCount': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryCount,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountResponse.SerializeToString,
            ),
            'RetrieveInventoryAdjustment': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryAdjustment,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentResponse.SerializeToString,
            ),
            'RetrieveInventoryPhysicalCount': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryPhysicalCount,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountResponse.SerializeToString,
            ),
            'RetrieveInventoryChanges': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveInventoryChanges,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesResponse.SerializeToString,
            ),
            'BatchRetrieveInventoryCounts': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchRetrieveInventoryCounts,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsResponse.SerializeToString,
            ),
            'BatchRetrieveInventoryChanges': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchRetrieveInventoryChanges,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesResponse.SerializeToString,
            ),
            'BatchChangeInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchChangeInventory,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.inventory.service.InventoryApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryApi(object):
    """--
    @desc The Inventory Connect V2 API
    --
    """

    @staticmethod
    def RetrieveInventoryCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryCount',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__count__pb2.RetrieveInventoryCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInventoryAdjustment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryAdjustment',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__adjustment__pb2.RetrieveInventoryAdjustmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInventoryPhysicalCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryPhysicalCount',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__physical__count__pb2.RetrieveInventoryPhysicalCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveInventoryChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/RetrieveInventoryChanges',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_retrieve__inventory__changes__pb2.RetrieveInventoryChangesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchRetrieveInventoryCounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/BatchRetrieveInventoryCounts',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__counts__pb2.BatchRetrieveInventoryCountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchRetrieveInventoryChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/BatchRetrieveInventoryChanges',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__retrieve__inventory__changes__pb2.BatchRetrieveInventoryChangesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchChangeInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.inventory.service.InventoryApi/BatchChangeInventory',
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_inventory_dot_service_dot_batch__change__inventory__pb2.BatchChangeInventoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
