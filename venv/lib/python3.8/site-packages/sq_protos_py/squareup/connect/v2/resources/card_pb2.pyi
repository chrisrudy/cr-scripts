# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.connect.v2.resources.address_pb2 import (
    Address as squareup___connect___v2___resources___address_pb2___Address,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Card(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    BrandValue = typing___NewType('BrandValue', builtin___int)
    type___BrandValue = BrandValue
    Brand: _Brand
    class _Brand(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Card.BrandValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_BRAND = typing___cast(Card.BrandValue, 0)
        VISA = typing___cast(Card.BrandValue, 1)
        MASTERCARD = typing___cast(Card.BrandValue, 2)
        AMERICAN_EXPRESS = typing___cast(Card.BrandValue, 3)
        DISCOVER = typing___cast(Card.BrandValue, 4)
        DISCOVER_DINERS = typing___cast(Card.BrandValue, 5)
        JCB = typing___cast(Card.BrandValue, 6)
        CHINA_UNIONPAY = typing___cast(Card.BrandValue, 7)
        SQUARE_GIFT_CARD = typing___cast(Card.BrandValue, 8)
        SQUARE_CAPITAL_CARD = typing___cast(Card.BrandValue, 9)
        INTERAC = typing___cast(Card.BrandValue, 10)
        EFTPOS = typing___cast(Card.BrandValue, 11)
        FELICA = typing___cast(Card.BrandValue, 12)
    OTHER_BRAND = typing___cast(Card.BrandValue, 0)
    VISA = typing___cast(Card.BrandValue, 1)
    MASTERCARD = typing___cast(Card.BrandValue, 2)
    AMERICAN_EXPRESS = typing___cast(Card.BrandValue, 3)
    DISCOVER = typing___cast(Card.BrandValue, 4)
    DISCOVER_DINERS = typing___cast(Card.BrandValue, 5)
    JCB = typing___cast(Card.BrandValue, 6)
    CHINA_UNIONPAY = typing___cast(Card.BrandValue, 7)
    SQUARE_GIFT_CARD = typing___cast(Card.BrandValue, 8)
    SQUARE_CAPITAL_CARD = typing___cast(Card.BrandValue, 9)
    INTERAC = typing___cast(Card.BrandValue, 10)
    EFTPOS = typing___cast(Card.BrandValue, 11)
    FELICA = typing___cast(Card.BrandValue, 12)
    type___Brand = Brand

    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Card.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN_CARD_TYPE = typing___cast(Card.TypeValue, 0)
        CREDIT = typing___cast(Card.TypeValue, 1)
        DEBIT = typing___cast(Card.TypeValue, 2)
    UNKNOWN_CARD_TYPE = typing___cast(Card.TypeValue, 0)
    CREDIT = typing___cast(Card.TypeValue, 1)
    DEBIT = typing___cast(Card.TypeValue, 2)
    type___Type = Type

    PrepaidTypeValue = typing___NewType('PrepaidTypeValue', builtin___int)
    type___PrepaidTypeValue = PrepaidTypeValue
    PrepaidType: _PrepaidType
    class _PrepaidType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Card.PrepaidTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN_PREPAID_TYPE = typing___cast(Card.PrepaidTypeValue, 0)
        NOT_PREPAID = typing___cast(Card.PrepaidTypeValue, 1)
        PREPAID = typing___cast(Card.PrepaidTypeValue, 2)
    UNKNOWN_PREPAID_TYPE = typing___cast(Card.PrepaidTypeValue, 0)
    NOT_PREPAID = typing___cast(Card.PrepaidTypeValue, 1)
    PREPAID = typing___cast(Card.PrepaidTypeValue, 2)
    type___PrepaidType = PrepaidType

    SquareProductValue = typing___NewType('SquareProductValue', builtin___int)
    type___SquareProductValue = SquareProductValue
    SquareProduct: _SquareProduct
    class _SquareProduct(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Card.SquareProductValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN_SQUARE_PRODUCT = typing___cast(Card.SquareProductValue, 0)
        CONNECT_API = typing___cast(Card.SquareProductValue, 1)
        DASHBOARD = typing___cast(Card.SquareProductValue, 2)
        REGISTER_CLIENT = typing___cast(Card.SquareProductValue, 3)
        BUYER_DASHBOARD = typing___cast(Card.SquareProductValue, 4)
        WEB = typing___cast(Card.SquareProductValue, 5)
        INVOICES = typing___cast(Card.SquareProductValue, 6)
        GIFT_CARD = typing___cast(Card.SquareProductValue, 7)
        VIRTUAL_TERMINAL = typing___cast(Card.SquareProductValue, 8)
        READER_SDK = typing___cast(Card.SquareProductValue, 9)
    UNKNOWN_SQUARE_PRODUCT = typing___cast(Card.SquareProductValue, 0)
    CONNECT_API = typing___cast(Card.SquareProductValue, 1)
    DASHBOARD = typing___cast(Card.SquareProductValue, 2)
    REGISTER_CLIENT = typing___cast(Card.SquareProductValue, 3)
    BUYER_DASHBOARD = typing___cast(Card.SquareProductValue, 4)
    WEB = typing___cast(Card.SquareProductValue, 5)
    INVOICES = typing___cast(Card.SquareProductValue, 6)
    GIFT_CARD = typing___cast(Card.SquareProductValue, 7)
    VIRTUAL_TERMINAL = typing___cast(Card.SquareProductValue, 8)
    READER_SDK = typing___cast(Card.SquareProductValue, 9)
    type___SquareProduct = SquareProduct

    class SquareProductHistory(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        created_by: type___Card.SquareProductValue = ...
        disabled_by: type___Card.SquareProductValue = ...
        last_updated_by: type___Card.SquareProductValue = ...

        def __init__(self,
            *,
            created_by : typing___Optional[type___Card.SquareProductValue] = None,
            disabled_by : typing___Optional[type___Card.SquareProductValue] = None,
            last_updated_by : typing___Optional[type___Card.SquareProductValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"created_by",b"created_by",u"disabled_by",b"disabled_by",u"last_updated_by",b"last_updated_by"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"created_by",b"created_by",u"disabled_by",b"disabled_by",u"last_updated_by",b"last_updated_by"]) -> None: ...
    type___SquareProductHistory = SquareProductHistory

    id: typing___Text = ...
    card_brand: type___Card.BrandValue = ...
    last_4: typing___Text = ...
    exp_month: builtin___int = ...
    exp_year: builtin___int = ...
    cardholder_name: typing___Text = ...
    fingerprint: typing___Text = ...
    customer_id: typing___Text = ...
    reference_id: typing___Text = ...
    enabled: builtin___bool = ...
    card_type: type___Card.TypeValue = ...
    prepaid_type: type___Card.PrepaidTypeValue = ...
    bin: typing___Text = ...
    created_at: typing___Text = ...
    disabled_at: typing___Text = ...
    version: builtin___int = ...
    fidelius_token: typing___Text = ...
    payment_account_reference: typing___Text = ...
    pan_sequence_number: builtin___int = ...
    verification_payment_id: typing___Text = ...

    @property
    def billing_address(self) -> squareup___connect___v2___resources___address_pb2___Address: ...

    @property
    def product_history(self) -> type___Card.SquareProductHistory: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        card_brand : typing___Optional[type___Card.BrandValue] = None,
        last_4 : typing___Optional[typing___Text] = None,
        exp_month : typing___Optional[builtin___int] = None,
        exp_year : typing___Optional[builtin___int] = None,
        cardholder_name : typing___Optional[typing___Text] = None,
        billing_address : typing___Optional[squareup___connect___v2___resources___address_pb2___Address] = None,
        fingerprint : typing___Optional[typing___Text] = None,
        customer_id : typing___Optional[typing___Text] = None,
        reference_id : typing___Optional[typing___Text] = None,
        enabled : typing___Optional[builtin___bool] = None,
        card_type : typing___Optional[type___Card.TypeValue] = None,
        prepaid_type : typing___Optional[type___Card.PrepaidTypeValue] = None,
        bin : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        disabled_at : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        product_history : typing___Optional[type___Card.SquareProductHistory] = None,
        fidelius_token : typing___Optional[typing___Text] = None,
        payment_account_reference : typing___Optional[typing___Text] = None,
        pan_sequence_number : typing___Optional[builtin___int] = None,
        verification_payment_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"billing_address",b"billing_address",u"bin",b"bin",u"card_brand",b"card_brand",u"card_type",b"card_type",u"cardholder_name",b"cardholder_name",u"created_at",b"created_at",u"customer_id",b"customer_id",u"disabled_at",b"disabled_at",u"enabled",b"enabled",u"exp_month",b"exp_month",u"exp_year",b"exp_year",u"fidelius_token",b"fidelius_token",u"fingerprint",b"fingerprint",u"id",b"id",u"last_4",b"last_4",u"pan_sequence_number",b"pan_sequence_number",u"payment_account_reference",b"payment_account_reference",u"prepaid_type",b"prepaid_type",u"product_history",b"product_history",u"reference_id",b"reference_id",u"verification_payment_id",b"verification_payment_id",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"billing_address",b"billing_address",u"bin",b"bin",u"card_brand",b"card_brand",u"card_type",b"card_type",u"cardholder_name",b"cardholder_name",u"created_at",b"created_at",u"customer_id",b"customer_id",u"disabled_at",b"disabled_at",u"enabled",b"enabled",u"exp_month",b"exp_month",u"exp_year",b"exp_year",u"fidelius_token",b"fidelius_token",u"fingerprint",b"fingerprint",u"id",b"id",u"last_4",b"last_4",u"pan_sequence_number",b"pan_sequence_number",u"payment_account_reference",b"payment_account_reference",u"prepaid_type",b"prepaid_type",u"product_history",b"product_history",u"reference_id",b"reference_id",u"verification_payment_id",b"verification_payment_id",u"version",b"version"]) -> None: ...
type___Card = Card
