# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.connect.v2.common.money_pb2 import (
    Money as squareup___connect___v2___common___money_pb2___Money,
)

from sq_protos_py.squareup.connect.v2.common.source_application_pb2 import (
    SourceApplication as squareup___connect___v2___common___source_application_pb2___SourceApplication,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

InventoryStateValue = typing___NewType('InventoryStateValue', builtin___int)
type___InventoryStateValue = InventoryStateValue
InventoryState: _InventoryState
class _InventoryState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[InventoryStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INVENTORY_STATE_DO_NOT_USE = typing___cast(InventoryStateValue, 0)
    CUSTOM = typing___cast(InventoryStateValue, 1)
    IN_STOCK = typing___cast(InventoryStateValue, 2)
    SOLD = typing___cast(InventoryStateValue, 3)
    RETURNED_BY_CUSTOMER = typing___cast(InventoryStateValue, 4)
    RESERVED_FOR_SALE = typing___cast(InventoryStateValue, 5)
    SOLD_ONLINE = typing___cast(InventoryStateValue, 6)
    ORDERED_FROM_VENDOR = typing___cast(InventoryStateValue, 7)
    RECEIVED_FROM_VENDOR = typing___cast(InventoryStateValue, 8)
    IN_TRANSIT_TO = typing___cast(InventoryStateValue, 9)
    NONE = typing___cast(InventoryStateValue, 10)
    WASTE = typing___cast(InventoryStateValue, 11)
    UNLINKED_RETURN = typing___cast(InventoryStateValue, 13)
    COMPOSED = typing___cast(InventoryStateValue, 14)
    DECOMPOSED = typing___cast(InventoryStateValue, 15)
INVENTORY_STATE_DO_NOT_USE = typing___cast(InventoryStateValue, 0)
CUSTOM = typing___cast(InventoryStateValue, 1)
IN_STOCK = typing___cast(InventoryStateValue, 2)
SOLD = typing___cast(InventoryStateValue, 3)
RETURNED_BY_CUSTOMER = typing___cast(InventoryStateValue, 4)
RESERVED_FOR_SALE = typing___cast(InventoryStateValue, 5)
SOLD_ONLINE = typing___cast(InventoryStateValue, 6)
ORDERED_FROM_VENDOR = typing___cast(InventoryStateValue, 7)
RECEIVED_FROM_VENDOR = typing___cast(InventoryStateValue, 8)
IN_TRANSIT_TO = typing___cast(InventoryStateValue, 9)
NONE = typing___cast(InventoryStateValue, 10)
WASTE = typing___cast(InventoryStateValue, 11)
UNLINKED_RETURN = typing___cast(InventoryStateValue, 13)
COMPOSED = typing___cast(InventoryStateValue, 14)
DECOMPOSED = typing___cast(InventoryStateValue, 15)
type___InventoryState = InventoryState

AvailabilityStateValue = typing___NewType('AvailabilityStateValue', builtin___int)
type___AvailabilityStateValue = AvailabilityStateValue
AvailabilityState: _AvailabilityState
class _AvailabilityState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AvailabilityStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_DO_NOT_USE = typing___cast(AvailabilityStateValue, 0)
    SOLD_OUT = typing___cast(AvailabilityStateValue, 1)
    AVAILABLE = typing___cast(AvailabilityStateValue, 2)
UNKNOWN_DO_NOT_USE = typing___cast(AvailabilityStateValue, 0)
SOLD_OUT = typing___cast(AvailabilityStateValue, 1)
AVAILABLE = typing___cast(AvailabilityStateValue, 2)
type___AvailabilityState = AvailabilityState

InventoryChangeTypeValue = typing___NewType('InventoryChangeTypeValue', builtin___int)
type___InventoryChangeTypeValue = InventoryChangeTypeValue
InventoryChangeType: _InventoryChangeType
class _InventoryChangeType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[InventoryChangeTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    INVENTORY_CHANGE_TYPE_DO_NOT_USE = typing___cast(InventoryChangeTypeValue, 0)
    PHYSICAL_COUNT = typing___cast(InventoryChangeTypeValue, 1)
    ADJUSTMENT = typing___cast(InventoryChangeTypeValue, 2)
    TRANSFER = typing___cast(InventoryChangeTypeValue, 3)
    AVAILABILITY = typing___cast(InventoryChangeTypeValue, 4)
INVENTORY_CHANGE_TYPE_DO_NOT_USE = typing___cast(InventoryChangeTypeValue, 0)
PHYSICAL_COUNT = typing___cast(InventoryChangeTypeValue, 1)
ADJUSTMENT = typing___cast(InventoryChangeTypeValue, 2)
TRANSFER = typing___cast(InventoryChangeTypeValue, 3)
AVAILABILITY = typing___cast(InventoryChangeTypeValue, 4)
type___InventoryChangeType = InventoryChangeType

class InventoryPhysicalCount(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    reference_id: typing___Text = ...
    catalog_object_id: typing___Text = ...
    catalog_object_type: typing___Text = ...
    status: type___InventoryStateValue = ...
    state: type___InventoryStateValue = ...
    location_id: typing___Text = ...
    quantity: typing___Text = ...
    employee_id: typing___Text = ...
    occurred_at: typing___Text = ...
    created_at: typing___Text = ...

    @property
    def source(self) -> squareup___connect___v2___common___source_application_pb2___SourceApplication: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        reference_id : typing___Optional[typing___Text] = None,
        catalog_object_id : typing___Optional[typing___Text] = None,
        catalog_object_type : typing___Optional[typing___Text] = None,
        status : typing___Optional[type___InventoryStateValue] = None,
        state : typing___Optional[type___InventoryStateValue] = None,
        location_id : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[typing___Text] = None,
        source : typing___Optional[squareup___connect___v2___common___source_application_pb2___SourceApplication] = None,
        employee_id : typing___Optional[typing___Text] = None,
        occurred_at : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"employee_id",b"employee_id",u"id",b"id",u"location_id",b"location_id",u"occurred_at",b"occurred_at",u"quantity",b"quantity",u"reference_id",b"reference_id",u"source",b"source",u"state",b"state",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"employee_id",b"employee_id",u"id",b"id",u"location_id",b"location_id",u"occurred_at",b"occurred_at",u"quantity",b"quantity",u"reference_id",b"reference_id",u"source",b"source",u"state",b"state",u"status",b"status"]) -> None: ...
type___InventoryPhysicalCount = InventoryPhysicalCount

class InventoryCount(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    catalog_object_id: typing___Text = ...
    catalog_object_type: typing___Text = ...
    status: type___InventoryStateValue = ...
    state: type___InventoryStateValue = ...
    location_id: typing___Text = ...
    quantity: typing___Text = ...
    calculated_at: typing___Text = ...
    availability_state: type___AvailabilityStateValue = ...

    def __init__(self,
        *,
        catalog_object_id : typing___Optional[typing___Text] = None,
        catalog_object_type : typing___Optional[typing___Text] = None,
        status : typing___Optional[type___InventoryStateValue] = None,
        state : typing___Optional[type___InventoryStateValue] = None,
        location_id : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[typing___Text] = None,
        calculated_at : typing___Optional[typing___Text] = None,
        availability_state : typing___Optional[type___AvailabilityStateValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"availability_state",b"availability_state",u"calculated_at",b"calculated_at",u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"location_id",b"location_id",u"quantity",b"quantity",u"state",b"state",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"availability_state",b"availability_state",u"calculated_at",b"calculated_at",u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"location_id",b"location_id",u"quantity",b"quantity",u"state",b"state",u"status",b"status"]) -> None: ...
type___InventoryCount = InventoryCount

class InventoryAdjustment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    reference_id: typing___Text = ...
    from_status: type___InventoryStateValue = ...
    to_status: type___InventoryStateValue = ...
    from_state: type___InventoryStateValue = ...
    to_state: type___InventoryStateValue = ...
    from_location_id: typing___Text = ...
    to_location_id: typing___Text = ...
    location_id: typing___Text = ...
    catalog_object_id: typing___Text = ...
    catalog_object_type: typing___Text = ...
    quantity: typing___Text = ...
    occurred_at: typing___Text = ...
    created_at: typing___Text = ...
    employee_id: typing___Text = ...
    transaction_id: typing___Text = ...
    refund_id: typing___Text = ...
    purchase_order_id: typing___Text = ...
    goods_receipt_id: typing___Text = ...

    @property
    def total_cost_money(self) -> squareup___connect___v2___common___money_pb2___Money: ...

    @property
    def total_price_money(self) -> squareup___connect___v2___common___money_pb2___Money: ...

    @property
    def source(self) -> squareup___connect___v2___common___source_application_pb2___SourceApplication: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        reference_id : typing___Optional[typing___Text] = None,
        from_status : typing___Optional[type___InventoryStateValue] = None,
        to_status : typing___Optional[type___InventoryStateValue] = None,
        from_state : typing___Optional[type___InventoryStateValue] = None,
        to_state : typing___Optional[type___InventoryStateValue] = None,
        from_location_id : typing___Optional[typing___Text] = None,
        to_location_id : typing___Optional[typing___Text] = None,
        location_id : typing___Optional[typing___Text] = None,
        catalog_object_id : typing___Optional[typing___Text] = None,
        catalog_object_type : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[typing___Text] = None,
        total_cost_money : typing___Optional[squareup___connect___v2___common___money_pb2___Money] = None,
        total_price_money : typing___Optional[squareup___connect___v2___common___money_pb2___Money] = None,
        occurred_at : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        source : typing___Optional[squareup___connect___v2___common___source_application_pb2___SourceApplication] = None,
        employee_id : typing___Optional[typing___Text] = None,
        transaction_id : typing___Optional[typing___Text] = None,
        refund_id : typing___Optional[typing___Text] = None,
        purchase_order_id : typing___Optional[typing___Text] = None,
        goods_receipt_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"employee_id",b"employee_id",u"from_location_id",b"from_location_id",u"from_state",b"from_state",u"from_status",b"from_status",u"goods_receipt_id",b"goods_receipt_id",u"id",b"id",u"location_id",b"location_id",u"occurred_at",b"occurred_at",u"purchase_order_id",b"purchase_order_id",u"quantity",b"quantity",u"reference_id",b"reference_id",u"refund_id",b"refund_id",u"source",b"source",u"to_location_id",b"to_location_id",u"to_state",b"to_state",u"to_status",b"to_status",u"total_cost_money",b"total_cost_money",u"total_price_money",b"total_price_money",u"transaction_id",b"transaction_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"employee_id",b"employee_id",u"from_location_id",b"from_location_id",u"from_state",b"from_state",u"from_status",b"from_status",u"goods_receipt_id",b"goods_receipt_id",u"id",b"id",u"location_id",b"location_id",u"occurred_at",b"occurred_at",u"purchase_order_id",b"purchase_order_id",u"quantity",b"quantity",u"reference_id",b"reference_id",u"refund_id",b"refund_id",u"source",b"source",u"to_location_id",b"to_location_id",u"to_state",b"to_state",u"to_status",b"to_status",u"total_cost_money",b"total_cost_money",u"total_price_money",b"total_price_money",u"transaction_id",b"transaction_id"]) -> None: ...
type___InventoryAdjustment = InventoryAdjustment

class InventoryTransfer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    reference_id: typing___Text = ...
    state: type___InventoryStateValue = ...
    from_location_id: typing___Text = ...
    to_location_id: typing___Text = ...
    catalog_object_id: typing___Text = ...
    catalog_object_type: typing___Text = ...
    quantity: typing___Text = ...
    occurred_at: typing___Text = ...
    created_at: typing___Text = ...
    employee_id: typing___Text = ...

    @property
    def source(self) -> squareup___connect___v2___common___source_application_pb2___SourceApplication: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        reference_id : typing___Optional[typing___Text] = None,
        state : typing___Optional[type___InventoryStateValue] = None,
        from_location_id : typing___Optional[typing___Text] = None,
        to_location_id : typing___Optional[typing___Text] = None,
        catalog_object_id : typing___Optional[typing___Text] = None,
        catalog_object_type : typing___Optional[typing___Text] = None,
        quantity : typing___Optional[typing___Text] = None,
        occurred_at : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        source : typing___Optional[squareup___connect___v2___common___source_application_pb2___SourceApplication] = None,
        employee_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"employee_id",b"employee_id",u"from_location_id",b"from_location_id",u"id",b"id",u"occurred_at",b"occurred_at",u"quantity",b"quantity",u"reference_id",b"reference_id",u"source",b"source",u"state",b"state",u"to_location_id",b"to_location_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"employee_id",b"employee_id",u"from_location_id",b"from_location_id",u"id",b"id",u"occurred_at",b"occurred_at",u"quantity",b"quantity",u"reference_id",b"reference_id",u"source",b"source",u"state",b"state",u"to_location_id",b"to_location_id"]) -> None: ...
type___InventoryTransfer = InventoryTransfer

class InventoryAvailability(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    catalog_object_id: typing___Text = ...
    catalog_object_type: typing___Text = ...
    location_id: typing___Text = ...
    state: type___AvailabilityStateValue = ...
    occurred_at: typing___Text = ...
    created_at: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        catalog_object_id : typing___Optional[typing___Text] = None,
        catalog_object_type : typing___Optional[typing___Text] = None,
        location_id : typing___Optional[typing___Text] = None,
        state : typing___Optional[type___AvailabilityStateValue] = None,
        occurred_at : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"id",b"id",u"location_id",b"location_id",u"occurred_at",b"occurred_at",u"state",b"state"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"catalog_object_id",b"catalog_object_id",u"catalog_object_type",b"catalog_object_type",u"created_at",b"created_at",u"id",b"id",u"location_id",b"location_id",u"occurred_at",b"occurred_at",u"state",b"state"]) -> None: ...
type___InventoryAvailability = InventoryAvailability

class InventoryChange(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: type___InventoryChangeTypeValue = ...

    @property
    def physical_count(self) -> type___InventoryPhysicalCount: ...

    @property
    def adjustment(self) -> type___InventoryAdjustment: ...

    @property
    def transfer(self) -> type___InventoryTransfer: ...

    @property
    def availability(self) -> type___InventoryAvailability: ...

    def __init__(self,
        *,
        type : typing___Optional[type___InventoryChangeTypeValue] = None,
        physical_count : typing___Optional[type___InventoryPhysicalCount] = None,
        adjustment : typing___Optional[type___InventoryAdjustment] = None,
        transfer : typing___Optional[type___InventoryTransfer] = None,
        availability : typing___Optional[type___InventoryAvailability] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"adjustment",b"adjustment",u"availability",b"availability",u"physical_count",b"physical_count",u"transfer",b"transfer",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"adjustment",b"adjustment",u"availability",b"availability",u"physical_count",b"physical_count",u"transfer",b"transfer",u"type",b"type"]) -> None: ...
type___InventoryChange = InventoryChange
