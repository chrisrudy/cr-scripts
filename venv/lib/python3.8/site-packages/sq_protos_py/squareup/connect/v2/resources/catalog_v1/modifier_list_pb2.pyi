# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ModifierList(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SelectionTypeValue = typing___NewType('SelectionTypeValue', builtin___int)
    type___SelectionTypeValue = SelectionTypeValue
    SelectionType: _SelectionType
    class _SelectionType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ModifierList.SelectionTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SINGLE = typing___cast(ModifierList.SelectionTypeValue, 1)
        MULTIPLE = typing___cast(ModifierList.SelectionTypeValue, 2)
    SINGLE = typing___cast(ModifierList.SelectionTypeValue, 1)
    MULTIPLE = typing___cast(ModifierList.SelectionTypeValue, 2)
    type___SelectionType = SelectionType

    id: typing___Text = ...
    name: typing___Text = ...
    selection_type: type___ModifierList.SelectionTypeValue = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        selection_type : typing___Optional[type___ModifierList.SelectionTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"selection_type",b"selection_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"selection_type",b"selection_type"]) -> None: ...
type___ModifierList = ModifierList
