# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.connect.v2.device_credentials.service import common_pb2 as squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_common__pb2
from sq_protos_py.squareup.connect.v2.device_credentials.service import create_device_credential_pb2 as squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_create__device__credential__pb2


class DeviceCredentialServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDeviceCredential = channel.unary_unary(
                '/squareup.connect.v2.device_credentials.service.DeviceCredentialService/CreateDeviceCredential',
                request_serializer=squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_create__device__credential__pb2.CreateDeviceCredentialRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_common__pb2.DeviceCredentialResponse.FromString,
                )


class DeviceCredentialServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateDeviceCredential(self, request, context):
        """--
        @desc Create a new device credential that can be used to log into a Point of Sale device.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceCredentialServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDeviceCredential': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeviceCredential,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_create__device__credential__pb2.CreateDeviceCredentialRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_common__pb2.DeviceCredentialResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.device_credentials.service.DeviceCredentialService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceCredentialService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateDeviceCredential(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.device_credentials.service.DeviceCredentialService/CreateDeviceCredential',
            squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_create__device__credential__pb2.CreateDeviceCredentialRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_device__credentials_dot_service_dot_common__pb2.DeviceCredentialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
