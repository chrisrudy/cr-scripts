# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.connect.v2.actions import charge_pb2 as squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2
from sq_protos_py.squareup.connect.v2.payments.service import payments_service_pb2 as squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2


class PaymentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Charge = channel.unary_unary(
                '/squareup.connect.v2.payments.service.PaymentsService/Charge',
                request_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2.ChargeRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2.ChargeResponse.FromString,
                )
        self.UpdateTip = channel.unary_unary(
                '/squareup.connect.v2.payments.service.PaymentsService/UpdateTip',
                request_serializer=squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2.UpdateTipRequest.SerializeToString,
                response_deserializer=squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2.UpdateTipResponse.FromString,
                )


class PaymentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Charge(self, request, context):
        """--
        @desc Charges a card represented by a card nonce or a customer's card on file.

        Your request to this endpoint must include _either_:

        - A value for the `card_nonce` parameter (to charge a card nonce generated
        with the `SqPaymentForm`)
        - Values for the `customer_card_id` and `customer_id` parameters (to charge
        a customer's card on file)

        In order for an eCommerce payment to potentially qualify for
        [Square chargeback protection](https://squareup.com/help/article/5394), you
        _must_ provide values for the following parameters in your request:

        - `buyer_email_address`
        - At least one of `billing_address` or `shipping_address`

        When this response is returned, the amount of Square's processing fee might not yet be
        calculated. To obtain the processing fee, wait about ten seconds and call
        [RetrieveTransaction](#endpoint-retrievetransaction). See the `processing_fee_money`
        field of each [Tender included](#type-tender) in the transaction.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTip(self, request, context):
        """--
        @desc Sets a tip amount on a tender in a transaction. All subsequent UpdateTip calls will
        override the previously set tip.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Charge': grpc.unary_unary_rpc_method_handler(
                    servicer.Charge,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2.ChargeRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2.ChargeResponse.SerializeToString,
            ),
            'UpdateTip': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTip,
                    request_deserializer=squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2.UpdateTipRequest.FromString,
                    response_serializer=squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2.UpdateTipResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.payments.service.PaymentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Charge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.payments.service.PaymentsService/Charge',
            squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2.ChargeRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_actions_dot_charge__pb2.ChargeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.payments.service.PaymentsService/UpdateTip',
            squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2.UpdateTipRequest.SerializeToString,
            squareup_dot_connect_dot_v2_dot_payments_dot_service_dot_payments__service__pb2.UpdateTipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
