# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.token_pb2 import (
    TokenPair as squareup___common___token_pb2___TokenPair,
)

from sq_protos_py.squareup.waiter.data_pb2 import (
    Ticket as squareup___waiter___data_pb2___Ticket,
    VectorClock as squareup___waiter___data_pb2___VectorClock,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class TicketInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def ticket_token_pair(self) -> squareup___common___token_pb2___TokenPair: ...

    @property
    def vector_clock(self) -> squareup___waiter___data_pb2___VectorClock: ...

    def __init__(self,
        *,
        ticket_token_pair : typing___Optional[squareup___common___token_pb2___TokenPair] = None,
        vector_clock : typing___Optional[squareup___waiter___data_pb2___VectorClock] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ticket_token_pair",b"ticket_token_pair",u"vector_clock",b"vector_clock"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ticket_token_pair",b"ticket_token_pair",u"vector_clock",b"vector_clock"]) -> None: ...
type___TicketInfo = TicketInfo

class ListRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    include_omitted_open_tickets: builtin___bool = ...

    @property
    def known_ticket_info(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TicketInfo]: ...

    def __init__(self,
        *,
        known_ticket_info : typing___Optional[typing___Iterable[type___TicketInfo]] = None,
        include_omitted_open_tickets : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"include_omitted_open_tickets",b"include_omitted_open_tickets"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"include_omitted_open_tickets",b"include_omitted_open_tickets",u"known_ticket_info",b"known_ticket_info"]) -> None: ...
type___ListRequest = ListRequest

class ListResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ErrorValue = typing___NewType('ErrorValue', builtin___int)
    type___ErrorValue = ErrorValue
    Error: _Error
    class _Error(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ListResponse.ErrorValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(ListResponse.ErrorValue, 0)
        BLACKLISTED = typing___cast(ListResponse.ErrorValue, 1)
        CONCURRENT_REQUEST_BLACKLISTED = typing___cast(ListResponse.ErrorValue, 2)
    UNKNOWN = typing___cast(ListResponse.ErrorValue, 0)
    BLACKLISTED = typing___cast(ListResponse.ErrorValue, 1)
    CONCURRENT_REQUEST_BLACKLISTED = typing___cast(ListResponse.ErrorValue, 2)
    type___Error = Error

    success: builtin___bool = ...
    error_message: typing___Text = ...
    error_title: typing___Text = ...
    incompatible_ticket_count_fixable_via_upgrade: builtin___int = ...
    incompatible_ticket_count_product_mismatch: builtin___int = ...
    incompatible_ticket_count_unfixable: builtin___int = ...
    more_tickets_available: builtin___bool = ...
    error: type___ListResponse.ErrorValue = ...

    @property
    def ticket_list(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___waiter___data_pb2___Ticket]: ...

    def __init__(self,
        *,
        success : typing___Optional[builtin___bool] = None,
        error_message : typing___Optional[typing___Text] = None,
        error_title : typing___Optional[typing___Text] = None,
        ticket_list : typing___Optional[typing___Iterable[squareup___waiter___data_pb2___Ticket]] = None,
        incompatible_ticket_count_fixable_via_upgrade : typing___Optional[builtin___int] = None,
        incompatible_ticket_count_product_mismatch : typing___Optional[builtin___int] = None,
        incompatible_ticket_count_unfixable : typing___Optional[builtin___int] = None,
        more_tickets_available : typing___Optional[builtin___bool] = None,
        error : typing___Optional[type___ListResponse.ErrorValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"error",b"error",u"error_message",b"error_message",u"error_title",b"error_title",u"incompatible_ticket_count_fixable_via_upgrade",b"incompatible_ticket_count_fixable_via_upgrade",u"incompatible_ticket_count_product_mismatch",b"incompatible_ticket_count_product_mismatch",u"incompatible_ticket_count_unfixable",b"incompatible_ticket_count_unfixable",u"more_tickets_available",b"more_tickets_available",u"success",b"success"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"error",b"error",u"error_message",b"error_message",u"error_title",b"error_title",u"incompatible_ticket_count_fixable_via_upgrade",b"incompatible_ticket_count_fixable_via_upgrade",u"incompatible_ticket_count_product_mismatch",b"incompatible_ticket_count_product_mismatch",u"incompatible_ticket_count_unfixable",b"incompatible_ticket_count_unfixable",u"more_tickets_available",b"more_tickets_available",u"success",b"success",u"ticket_list",b"ticket_list"]) -> None: ...
type___ListResponse = ListResponse

class UpdateRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def ticket(self) -> squareup___waiter___data_pb2___Ticket: ...

    def __init__(self,
        *,
        ticket : typing___Optional[squareup___waiter___data_pb2___Ticket] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ticket",b"ticket"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ticket",b"ticket"]) -> None: ...
type___UpdateRequest = UpdateRequest

class UpdateResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ErrorValue = typing___NewType('ErrorValue', builtin___int)
    type___ErrorValue = ErrorValue
    Error: _Error
    class _Error(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UpdateResponse.ErrorValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(UpdateResponse.ErrorValue, 0)
        BLACKLISTED = typing___cast(UpdateResponse.ErrorValue, 1)
        NO_TICKET = typing___cast(UpdateResponse.ErrorValue, 2)
        TENDER_WITH_NO_CLOSED_AT = typing___cast(UpdateResponse.ErrorValue, 3)
        TICKET_DOES_NOT_BELONG_TO_LOGGED_IN_USER = typing___cast(UpdateResponse.ErrorValue, 4)
    UNKNOWN = typing___cast(UpdateResponse.ErrorValue, 0)
    BLACKLISTED = typing___cast(UpdateResponse.ErrorValue, 1)
    NO_TICKET = typing___cast(UpdateResponse.ErrorValue, 2)
    TENDER_WITH_NO_CLOSED_AT = typing___cast(UpdateResponse.ErrorValue, 3)
    TICKET_DOES_NOT_BELONG_TO_LOGGED_IN_USER = typing___cast(UpdateResponse.ErrorValue, 4)
    type___Error = Error

    success: builtin___bool = ...
    error_message: typing___Text = ...
    error_title: typing___Text = ...
    error: type___UpdateResponse.ErrorValue = ...

    @property
    def ticket(self) -> squareup___waiter___data_pb2___Ticket: ...

    def __init__(self,
        *,
        success : typing___Optional[builtin___bool] = None,
        error_message : typing___Optional[typing___Text] = None,
        error_title : typing___Optional[typing___Text] = None,
        ticket : typing___Optional[squareup___waiter___data_pb2___Ticket] = None,
        error : typing___Optional[type___UpdateResponse.ErrorValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"error",b"error",u"error_message",b"error_message",u"error_title",b"error_title",u"success",b"success",u"ticket",b"ticket"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"error",b"error",u"error_message",b"error_message",u"error_title",b"error_title",u"success",b"success",u"ticket",b"ticket"]) -> None: ...
type___UpdateResponse = UpdateResponse
