# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.api.rpc import rpc_pb2 as squareup_dot_api_dot_rpc_dot_rpc__pb2
from sq_protos_py.squareup.tickets.batch import service_pb2 as squareup_dot_tickets_dot_batch_dot_service__pb2


class TicketsBatchServiceStub(object):
    """* Dispatches request/response batches to the appropriate Tickets actions 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessBatch = channel.unary_unary(
                '/squareup.tickets.batch.TicketsBatchService/ProcessBatch',
                request_serializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.RequestBatch.SerializeToString,
                response_deserializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.ResponseBatch.FromString,
                )


class TicketsBatchServiceServicer(object):
    """* Dispatches request/response batches to the appropriate Tickets actions 
    """

    def ProcessBatch(self, request, context):
        """* Processes a batch of tickets request/responses 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicketsBatchServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessBatch,
                    request_deserializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.RequestBatch.FromString,
                    response_serializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.ResponseBatch.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.tickets.batch.TicketsBatchService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TicketsBatchService(object):
    """* Dispatches request/response batches to the appropriate Tickets actions 
    """

    @staticmethod
    def ProcessBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsBatchService/ProcessBatch',
            squareup_dot_api_dot_rpc_dot_rpc__pb2.RequestBatch.SerializeToString,
            squareup_dot_api_dot_rpc_dot_rpc__pb2.ResponseBatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TicketsServiceStub(object):
    """* The tickets service 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateSession = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/CreateSession',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CreateSessionRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CreateSessionResponse.FromString,
                )
        self.SubmitTicket = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/SubmitTicket',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.SubmitTicketRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.SubmitTicketResponse.FromString,
                )
        self.AcceptTicket = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/AcceptTicket',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.AcceptTicketRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.AcceptTicketResponse.FromString,
                )
        self.RejectTicket = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/RejectTicket',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.RejectTicketRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.RejectTicketResponse.FromString,
                )
        self.CancelTicket = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/CancelTicket',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CancelTicketRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CancelTicketResponse.FromString,
                )
        self.TicketStatus = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/TicketStatus',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketStatusResponse.FromString,
                )
        self.TicketReady = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/TicketReady',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketReadyRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketReadyResponse.FromString,
                )
        self.TicketPickedUp = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/TicketPickedUp',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketPickupRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketPickupResponse.FromString,
                )
        self.TicketDelivered = channel.unary_unary(
                '/squareup.tickets.batch.TicketsService/TicketDelivered',
                request_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketDeliveredRequest.SerializeToString,
                response_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketDeliveredResponse.FromString,
                )


class TicketsServiceServicer(object):
    """* The tickets service 
    """

    def CreateSession(self, request, context):
        """* Creates a new session 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitTicket(self, request, context):
        """* Submits a new ticket 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptTicket(self, request, context):
        """* Accepts the given ticket 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RejectTicket(self, request, context):
        """* Rejects the given ticket 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelTicket(self, request, context):
        """* Cancels a previously submitted ticket 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TicketStatus(self, request, context):
        """* Checks the status of a previously submitted ticket 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TicketReady(self, request, context):
        """* Indicates that the given ticket is ready for pickup or delivery 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TicketPickedUp(self, request, context):
        """* Indicates that the given ticket has been picked up 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TicketDelivered(self, request, context):
        """* Indicates that the given ticket has been delivered 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TicketsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CreateSessionRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CreateSessionResponse.SerializeToString,
            ),
            'SubmitTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitTicket,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.SubmitTicketRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.SubmitTicketResponse.SerializeToString,
            ),
            'AcceptTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptTicket,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.AcceptTicketRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.AcceptTicketResponse.SerializeToString,
            ),
            'RejectTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.RejectTicket,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.RejectTicketRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.RejectTicketResponse.SerializeToString,
            ),
            'CancelTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelTicket,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CancelTicketRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.CancelTicketResponse.SerializeToString,
            ),
            'TicketStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.TicketStatus,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketStatusRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketStatusResponse.SerializeToString,
            ),
            'TicketReady': grpc.unary_unary_rpc_method_handler(
                    servicer.TicketReady,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketReadyRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketReadyResponse.SerializeToString,
            ),
            'TicketPickedUp': grpc.unary_unary_rpc_method_handler(
                    servicer.TicketPickedUp,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketPickupRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketPickupResponse.SerializeToString,
            ),
            'TicketDelivered': grpc.unary_unary_rpc_method_handler(
                    servicer.TicketDelivered,
                    request_deserializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketDeliveredRequest.FromString,
                    response_serializer=squareup_dot_tickets_dot_batch_dot_service__pb2.TicketDeliveredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.tickets.batch.TicketsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TicketsService(object):
    """* The tickets service 
    """

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/CreateSession',
            squareup_dot_tickets_dot_batch_dot_service__pb2.CreateSessionRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.CreateSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/SubmitTicket',
            squareup_dot_tickets_dot_batch_dot_service__pb2.SubmitTicketRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.SubmitTicketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/AcceptTicket',
            squareup_dot_tickets_dot_batch_dot_service__pb2.AcceptTicketRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.AcceptTicketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RejectTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/RejectTicket',
            squareup_dot_tickets_dot_batch_dot_service__pb2.RejectTicketRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.RejectTicketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/CancelTicket',
            squareup_dot_tickets_dot_batch_dot_service__pb2.CancelTicketRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.CancelTicketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TicketStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/TicketStatus',
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketStatusRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TicketReady(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/TicketReady',
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketReadyRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketReadyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TicketPickedUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/TicketPickedUp',
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketPickupRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketPickupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TicketDelivered(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.tickets.batch.TicketsService/TicketDelivered',
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketDeliveredRequest.SerializeToString,
            squareup_dot_tickets_dot_batch_dot_service__pb2.TicketDeliveredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
