# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.kases import cases_service_pb2 as squareup_dot_kases_dot_cases__service__pb2


class CasesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCase = channel.unary_unary(
                '/squareup.kases.service.CasesService/CreateCase',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.CreateCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.CreateCaseResponse.FromString,
                )
        self.GetCase = channel.unary_unary(
                '/squareup.kases.service.CasesService/GetCase',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseResponse.FromString,
                )
        self.GetCases = channel.unary_unary(
                '/squareup.kases.service.CasesService/GetCases',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.GetCasesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetCasesResponse.FromString,
                )
        self.UpdateCase = channel.unary_unary(
                '/squareup.kases.service.CasesService/UpdateCase',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCaseResponse.FromString,
                )
        self.UpdateCases = channel.unary_unary(
                '/squareup.kases.service.CasesService/UpdateCases',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCasesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCasesResponse.FromString,
                )
        self.DeleteCase = channel.unary_unary(
                '/squareup.kases.service.CasesService/DeleteCase',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.DeleteCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.DeleteCaseResponse.FromString,
                )
        self.FindCases = channel.unary_unary(
                '/squareup.kases.service.CasesService/FindCases',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesResponse.FromString,
                )
        self.FindCasesCount = channel.unary_unary(
                '/squareup.kases.service.CasesService/FindCasesCount',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesCountRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesCountResponse.FromString,
                )
        self.AddCaseLabelsToCase = channel.unary_unary(
                '/squareup.kases.service.CasesService/AddCaseLabelsToCase',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.AddCaseLabelsToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.AddCaseLabelsToCaseResponse.FromString,
                )
        self.AddAssociatedTargetsToCase = channel.unary_unary(
                '/squareup.kases.service.CasesService/AddAssociatedTargetsToCase',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.AddAssociatedTargetsToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.AddAssociatedTargetsToCaseResponse.FromString,
                )
        self.GetCaseTypesByNames = channel.unary_unary(
                '/squareup.kases.service.CasesService/GetCaseTypesByNames',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseTypesByNamesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseTypesByNamesResponse.FromString,
                )
        self.ListCaseTypes = channel.unary_unary(
                '/squareup.kases.service.CasesService/ListCaseTypes',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.ListCaseTypesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.ListCaseTypesResponse.FromString,
                )
        self.GetTargetTypesByNames = channel.unary_unary(
                '/squareup.kases.service.CasesService/GetTargetTypesByNames',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.GetTargetTypesByNamesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetTargetTypesByNamesResponse.FromString,
                )
        self.ListTargetTypes = channel.unary_unary(
                '/squareup.kases.service.CasesService/ListTargetTypes',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.ListTargetTypesRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.ListTargetTypesResponse.FromString,
                )
        self.FindCaseEvents = channel.unary_unary(
                '/squareup.kases.service.CasesService/FindCaseEvents',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsResponse.FromString,
                )
        self.FindCaseEventsCount = channel.unary_unary(
                '/squareup.kases.service.CasesService/FindCaseEventsCount',
                request_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsCountRequest.SerializeToString,
                response_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsCountResponse.FromString,
                )


class CasesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCasesCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCaseLabelsToCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAssociatedTargetsToCase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCaseTypesByNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCaseTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTargetTypesByNames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTargetTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCaseEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCaseEventsCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CasesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCase,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.CreateCaseRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.CreateCaseResponse.SerializeToString,
            ),
            'GetCase': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCase,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseResponse.SerializeToString,
            ),
            'GetCases': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCases,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetCasesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.GetCasesResponse.SerializeToString,
            ),
            'UpdateCase': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCase,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCaseRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCaseResponse.SerializeToString,
            ),
            'UpdateCases': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCases,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCasesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.UpdateCasesResponse.SerializeToString,
            ),
            'DeleteCase': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCase,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.DeleteCaseRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.DeleteCaseResponse.SerializeToString,
            ),
            'FindCases': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCases,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesResponse.SerializeToString,
            ),
            'FindCasesCount': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCasesCount,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesCountRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCasesCountResponse.SerializeToString,
            ),
            'AddCaseLabelsToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCaseLabelsToCase,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.AddCaseLabelsToCaseRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.AddCaseLabelsToCaseResponse.SerializeToString,
            ),
            'AddAssociatedTargetsToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAssociatedTargetsToCase,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.AddAssociatedTargetsToCaseRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.AddAssociatedTargetsToCaseResponse.SerializeToString,
            ),
            'GetCaseTypesByNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCaseTypesByNames,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseTypesByNamesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.GetCaseTypesByNamesResponse.SerializeToString,
            ),
            'ListCaseTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCaseTypes,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.ListCaseTypesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.ListCaseTypesResponse.SerializeToString,
            ),
            'GetTargetTypesByNames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTargetTypesByNames,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.GetTargetTypesByNamesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.GetTargetTypesByNamesResponse.SerializeToString,
            ),
            'ListTargetTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTargetTypes,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.ListTargetTypesRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.ListTargetTypesResponse.SerializeToString,
            ),
            'FindCaseEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCaseEvents,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsResponse.SerializeToString,
            ),
            'FindCaseEventsCount': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCaseEventsCount,
                    request_deserializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsCountRequest.FromString,
                    response_serializer=squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsCountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.kases.service.CasesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CasesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/CreateCase',
            squareup_dot_kases_dot_cases__service__pb2.CreateCaseRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.CreateCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/GetCase',
            squareup_dot_kases_dot_cases__service__pb2.GetCaseRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.GetCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/GetCases',
            squareup_dot_kases_dot_cases__service__pb2.GetCasesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.GetCasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/UpdateCase',
            squareup_dot_kases_dot_cases__service__pb2.UpdateCaseRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.UpdateCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/UpdateCases',
            squareup_dot_kases_dot_cases__service__pb2.UpdateCasesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.UpdateCasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/DeleteCase',
            squareup_dot_kases_dot_cases__service__pb2.DeleteCaseRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.DeleteCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/FindCases',
            squareup_dot_kases_dot_cases__service__pb2.FindCasesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.FindCasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCasesCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/FindCasesCount',
            squareup_dot_kases_dot_cases__service__pb2.FindCasesCountRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.FindCasesCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCaseLabelsToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/AddCaseLabelsToCase',
            squareup_dot_kases_dot_cases__service__pb2.AddCaseLabelsToCaseRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.AddCaseLabelsToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAssociatedTargetsToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/AddAssociatedTargetsToCase',
            squareup_dot_kases_dot_cases__service__pb2.AddAssociatedTargetsToCaseRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.AddAssociatedTargetsToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCaseTypesByNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/GetCaseTypesByNames',
            squareup_dot_kases_dot_cases__service__pb2.GetCaseTypesByNamesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.GetCaseTypesByNamesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCaseTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/ListCaseTypes',
            squareup_dot_kases_dot_cases__service__pb2.ListCaseTypesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.ListCaseTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTargetTypesByNames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/GetTargetTypesByNames',
            squareup_dot_kases_dot_cases__service__pb2.GetTargetTypesByNamesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.GetTargetTypesByNamesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTargetTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/ListTargetTypes',
            squareup_dot_kases_dot_cases__service__pb2.ListTargetTypesRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.ListTargetTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCaseEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/FindCaseEvents',
            squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCaseEventsCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.kases.service.CasesService/FindCaseEventsCount',
            squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsCountRequest.SerializeToString,
            squareup_dot_kases_dot_cases__service__pb2.FindCaseEventsCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
