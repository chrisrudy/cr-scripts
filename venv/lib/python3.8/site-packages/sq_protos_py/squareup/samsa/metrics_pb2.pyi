# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class MetricEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    field_name: typing___Text = ...
    timestamp: builtin___int = ...
    long_value: builtin___int = ...
    double_value: builtin___float = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        field_name : typing___Optional[typing___Text] = None,
        timestamp : typing___Optional[builtin___int] = None,
        long_value : typing___Optional[builtin___int] = None,
        double_value : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"double_value",b"double_value",u"field_name",b"field_name",u"long_value",b"long_value",u"name",b"name",u"timestamp",b"timestamp"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"double_value",b"double_value",u"field_name",b"field_name",u"long_value",b"long_value",u"name",b"name",u"timestamp",b"timestamp"]) -> None: ...
type___MetricEvent = MetricEvent

class BatchedMetricEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    timestamp: builtin___int = ...
    use_source_metadata: builtin___bool = ...

    @property
    def event(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___MetricEvent]: ...

    def __init__(self,
        *,
        event : typing___Optional[typing___Iterable[type___MetricEvent]] = None,
        timestamp : typing___Optional[builtin___int] = None,
        use_source_metadata : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"timestamp",b"timestamp",u"use_source_metadata",b"use_source_metadata"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"event",b"event",u"timestamp",b"timestamp",u"use_source_metadata",b"use_source_metadata"]) -> None: ...
type___BatchedMetricEvent = BatchedMetricEvent

class MetricTagValue(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    tag: typing___Text = ...
    value: typing___Text = ...

    def __init__(self,
        *,
        tag : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"tag",b"tag",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"tag",b"tag",u"value",b"value"]) -> None: ...
type___MetricTagValue = MetricTagValue

class MetricMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    full_metric_name: typing___Text = ...
    base_metric_name: typing___Text = ...

    @property
    def metric_tags(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___MetricTagValue]: ...

    def __init__(self,
        *,
        full_metric_name : typing___Optional[typing___Text] = None,
        base_metric_name : typing___Optional[typing___Text] = None,
        metric_tags : typing___Optional[typing___Iterable[type___MetricTagValue]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"base_metric_name",b"base_metric_name",u"full_metric_name",b"full_metric_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"base_metric_name",b"base_metric_name",u"full_metric_name",b"full_metric_name",u"metric_tags",b"metric_tags"]) -> None: ...
type___MetricMetadata = MetricMetadata
