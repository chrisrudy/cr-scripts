# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.rewards.rewardCode import service_pb2 as squareup_dot_rewards_dot_rewardCode_dot_service__pb2


class RewardCodeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Show = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/Show',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ShowRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ShowResponse.FromString,
                )
        self.Claim = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/Claim',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ClaimRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ClaimResponse.FromString,
                )
        self.Unclaim = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/Unclaim',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.UnclaimRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.UnclaimResponse.FromString,
                )
        self.Activate = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/Activate',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ActivateRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ActivateResponse.FromString,
                )
        self.GetForMerchant = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/GetForMerchant',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetForMerchantResponse.FromString,
                )
        self.Campaign = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/Campaign',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CampaignRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CampaignResponse.FromString,
                )
        self.CustomizeRewardCode = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/CustomizeRewardCode',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CustomizeRewardCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CustomizeRewardCodeResponse.FromString,
                )
        self.GetRewardCodeUsesForMerchant = channel.unary_unary(
                '/squareup.rewards.rewardCode.service.RewardCodeService/GetRewardCodeUsesForMerchant',
                request_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetRewardCodeUsesForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetRewardCodeUsesForMerchantResponse.FromString,
                )


class RewardCodeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Show(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Claim(self, request, context):
        """* Creates a reward code use that maps the sender to the receiver 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unclaim(self, request, context):
        """* Marks the reward code use as inactive 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Activate(self, request, context):
        """* Marks the reward code use as activated. Grants the associated reward 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetForMerchant(self, request, context):
        """* Get or create a reward code for a merchant, to be used as a signup token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Campaign(self, request, context):
        """* Get or create a reward code for a merchant, to be used as a signup token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CustomizeRewardCode(self, request, context):
        """* Public endpoint to customize referral code in Dashboard for a logged in merchant. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRewardCodeUsesForMerchant(self, request, context):
        """* Get RewardCodeUses associated to given merchant. *
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RewardCodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Show': grpc.unary_unary_rpc_method_handler(
                    servicer.Show,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ShowRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ShowResponse.SerializeToString,
            ),
            'Claim': grpc.unary_unary_rpc_method_handler(
                    servicer.Claim,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ClaimRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ClaimResponse.SerializeToString,
            ),
            'Unclaim': grpc.unary_unary_rpc_method_handler(
                    servicer.Unclaim,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.UnclaimRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.UnclaimResponse.SerializeToString,
            ),
            'Activate': grpc.unary_unary_rpc_method_handler(
                    servicer.Activate,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ActivateRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ActivateResponse.SerializeToString,
            ),
            'GetForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForMerchant,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetForMerchantRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetForMerchantResponse.SerializeToString,
            ),
            'Campaign': grpc.unary_unary_rpc_method_handler(
                    servicer.Campaign,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CampaignRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CampaignResponse.SerializeToString,
            ),
            'CustomizeRewardCode': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomizeRewardCode,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CustomizeRewardCodeRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CustomizeRewardCodeResponse.SerializeToString,
            ),
            'GetRewardCodeUsesForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRewardCodeUsesForMerchant,
                    request_deserializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetRewardCodeUsesForMerchantRequest.FromString,
                    response_serializer=squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetRewardCodeUsesForMerchantResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rewards.rewardCode.service.RewardCodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RewardCodeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Show(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/Show',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ShowRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ShowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Claim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/Claim',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ClaimRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ClaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unclaim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/Unclaim',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.UnclaimRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.UnclaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/Activate',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ActivateRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.ActivateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/GetForMerchant',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetForMerchantRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetForMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Campaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/Campaign',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CampaignRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CampaignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CustomizeRewardCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/CustomizeRewardCode',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CustomizeRewardCodeRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.CustomizeRewardCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRewardCodeUsesForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rewards.rewardCode.service.RewardCodeService/GetRewardCodeUsesForMerchant',
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetRewardCodeUsesForMerchantRequest.SerializeToString,
            squareup_dot_rewards_dot_rewardCode_dot_service__pb2.GetRewardCodeUsesForMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
