# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cronkite.wf import service_pb2 as squareup_dot_cronkite_dot_wf_dot_service__pb2


class CronkiteServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MerchantCount = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/MerchantCount',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.MerchantCountRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.MerchantCountResponse.FromString,
                )
        self.FetchMerchantBatch = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/FetchMerchantBatch',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchMerchantBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchMerchantBatchResponse.FromString,
                )
        self.PaymentCount = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/PaymentCount',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.PaymentCountRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.PaymentCountResponse.FromString,
                )
        self.FetchPaymentBatch = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/FetchPaymentBatch',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchPaymentBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchPaymentBatchResponse.FromString,
                )
        self.ShadowFundingCount = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/ShadowFundingCount',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowFundingCountRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowFundingCountResponse.FromString,
                )
        self.FetchShadowFundingBatch = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/FetchShadowFundingBatch',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowFundingBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowFundingBatchResponse.FromString,
                )
        self.ShadowReserveCount = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/ShadowReserveCount',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowReserveCountRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowReserveCountResponse.FromString,
                )
        self.FetchShadowReserveBatch = channel.unary_unary(
                '/squareup.cronkite.wf.CronkiteService/FetchShadowReserveBatch',
                request_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowReserveBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowReserveBatchResponse.FromString,
                )


class CronkiteServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def MerchantCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchMerchantBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PaymentCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchPaymentBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShadowFundingCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchShadowFundingBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShadowReserveCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchShadowReserveBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CronkiteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MerchantCount': grpc.unary_unary_rpc_method_handler(
                    servicer.MerchantCount,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.MerchantCountRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.MerchantCountResponse.SerializeToString,
            ),
            'FetchMerchantBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchMerchantBatch,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchMerchantBatchRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchMerchantBatchResponse.SerializeToString,
            ),
            'PaymentCount': grpc.unary_unary_rpc_method_handler(
                    servicer.PaymentCount,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.PaymentCountRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.PaymentCountResponse.SerializeToString,
            ),
            'FetchPaymentBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchPaymentBatch,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchPaymentBatchRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchPaymentBatchResponse.SerializeToString,
            ),
            'ShadowFundingCount': grpc.unary_unary_rpc_method_handler(
                    servicer.ShadowFundingCount,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowFundingCountRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowFundingCountResponse.SerializeToString,
            ),
            'FetchShadowFundingBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchShadowFundingBatch,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowFundingBatchRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowFundingBatchResponse.SerializeToString,
            ),
            'ShadowReserveCount': grpc.unary_unary_rpc_method_handler(
                    servicer.ShadowReserveCount,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowReserveCountRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowReserveCountResponse.SerializeToString,
            ),
            'FetchShadowReserveBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchShadowReserveBatch,
                    request_deserializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowReserveBatchRequest.FromString,
                    response_serializer=squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowReserveBatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cronkite.wf.CronkiteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CronkiteService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def MerchantCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/MerchantCount',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.MerchantCountRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.MerchantCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchMerchantBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/FetchMerchantBatch',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchMerchantBatchRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchMerchantBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PaymentCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/PaymentCount',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.PaymentCountRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.PaymentCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchPaymentBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/FetchPaymentBatch',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchPaymentBatchRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchPaymentBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShadowFundingCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/ShadowFundingCount',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowFundingCountRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowFundingCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchShadowFundingBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/FetchShadowFundingBatch',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowFundingBatchRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowFundingBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShadowReserveCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/ShadowReserveCount',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowReserveCountRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.ShadowReserveCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchShadowReserveBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cronkite.wf.CronkiteService/FetchShadowReserveBatch',
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowReserveBatchRequest.SerializeToString,
            squareup_dot_cronkite_dot_wf_dot_service__pb2.FetchShadowReserveBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
