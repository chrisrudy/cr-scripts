# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.fred2.api.fred_system_pb2 import (
    SystemIdValue as squareup___fred2___api___fred_system_pb2___SystemIdValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.bank_settlement_entry_pb2 import (
    BankSettlementEntryDescriptionValue as squareup___fred2___reconcile___domain___bank_settlement_entry_pb2___BankSettlementEntryDescriptionValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.ledger_entry_pb2 import (
    LedgerEntryTypeValue as squareup___fred2___reconcile___domain___ledger_entry_pb2___LedgerEntryTypeValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.payable_summary_activity_pb2 import (
    ActivityValue as squareup___fred2___reconcile___domain___payable_summary_activity_pb2___ActivityValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.payable_summary_pb2 import (
    FundingAccountValue as squareup___fred2___reconcile___domain___payable_summary_pb2___FundingAccountValue,
    ProductValue as squareup___fred2___reconcile___domain___payable_summary_pb2___ProductValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.payment_pb2 import (
    PaymentSourceValue as squareup___fred2___reconcile___domain___payment_pb2___PaymentSourceValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.rec_pb2 import (
    RecResultTypeValue as squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PayableRecJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ledger_id: typing___Text = ...
    merchant_token: typing___Text = ...
    event_type: squareup___fred2___reconcile___domain___ledger_entry_pb2___LedgerEntryTypeValue = ...
    event_id: typing___Text = ...
    payable_amount_cents: builtin___int = ...
    fee_amount_cents: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    region: typing___Text = ...
    result: squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue = ...
    prior_result: squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue = ...
    rec_id: builtin___int = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def effective_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        ledger_id : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        event_type : typing___Optional[squareup___fred2___reconcile___domain___ledger_entry_pb2___LedgerEntryTypeValue] = None,
        event_id : typing___Optional[typing___Text] = None,
        payable_amount_cents : typing___Optional[builtin___int] = None,
        fee_amount_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        region : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        result : typing___Optional[squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue] = None,
        prior_result : typing___Optional[squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue] = None,
        rec_id : typing___Optional[builtin___int] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        effective_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"effective_at",b"effective_at",u"event_id",b"event_id",u"event_type",b"event_type",u"fee_amount_cents",b"fee_amount_cents",u"generation",b"generation",u"ledger_id",b"ledger_id",u"merchant_token",b"merchant_token",u"payable_amount_cents",b"payable_amount_cents",u"prior_result",b"prior_result",u"rec_id",b"rec_id",u"region",b"region",u"result",b"result",u"system_id",b"system_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"effective_at",b"effective_at",u"event_id",b"event_id",u"event_type",b"event_type",u"fee_amount_cents",b"fee_amount_cents",u"generation",b"generation",u"ledger_id",b"ledger_id",u"merchant_token",b"merchant_token",u"payable_amount_cents",b"payable_amount_cents",u"prior_result",b"prior_result",u"rec_id",b"rec_id",u"region",b"region",u"result",b"result",u"system_id",b"system_id"]) -> None: ...
type___PayableRecJournalEntry = PayableRecJournalEntry

class PayableSourceJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_type: squareup___fred2___reconcile___domain___ledger_entry_pb2___LedgerEntryTypeValue = ...
    event_id: typing___Text = ...
    description: typing___Text = ...
    merchant_token: typing___Text = ...
    amount_cents: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    region: typing___Text = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        event_type : typing___Optional[squareup___fred2___reconcile___domain___ledger_entry_pb2___LedgerEntryTypeValue] = None,
        event_id : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        region : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"description",b"description",u"event_id",b"event_id",u"event_type",b"event_type",u"generation",b"generation",u"merchant_token",b"merchant_token",u"region",b"region",u"system_id",b"system_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"description",b"description",u"event_id",b"event_id",u"event_type",b"event_type",u"generation",b"generation",u"merchant_token",b"merchant_token",u"region",b"region",u"system_id",b"system_id"]) -> None: ...
type___PayableSourceJournalEntry = PayableSourceJournalEntry

class PayableSummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    file_transmission_token: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    transaction_fund_id: builtin___int = ...
    description: squareup___fred2___reconcile___domain___bank_settlement_entry_pb2___BankSettlementEntryDescriptionValue = ...
    merchant_token: typing___Text = ...
    amount_cents: builtin___int = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...
    rec_id: builtin___int = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    product: squareup___fred2___reconcile___domain___payable_summary_pb2___ProductValue = ...
    activity: squareup___fred2___reconcile___domain___payable_summary_activity_pb2___ActivityValue = ...
    funding_account: squareup___fred2___reconcile___domain___payable_summary_pb2___FundingAccountValue = ...
    token: typing___Text = ...
    region: typing___Text = ...
    result: squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue = ...
    prior_result: squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue = ...
    source_id: typing___Text = ...
    source_name: squareup___fred2___reconcile___domain___payment_pb2___PaymentSourceValue = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def reconciled_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        file_transmission_token : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        transaction_fund_id : typing___Optional[builtin___int] = None,
        description : typing___Optional[squareup___fred2___reconcile___domain___bank_settlement_entry_pb2___BankSettlementEntryDescriptionValue] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        rec_id : typing___Optional[builtin___int] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        product : typing___Optional[squareup___fred2___reconcile___domain___payable_summary_pb2___ProductValue] = None,
        activity : typing___Optional[squareup___fred2___reconcile___domain___payable_summary_activity_pb2___ActivityValue] = None,
        funding_account : typing___Optional[squareup___fred2___reconcile___domain___payable_summary_pb2___FundingAccountValue] = None,
        token : typing___Optional[typing___Text] = None,
        region : typing___Optional[typing___Text] = None,
        result : typing___Optional[squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue] = None,
        prior_result : typing___Optional[squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue] = None,
        source_id : typing___Optional[typing___Text] = None,
        source_name : typing___Optional[squareup___fred2___reconcile___domain___payment_pb2___PaymentSourceValue] = None,
        reconciled_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"activity",b"activity",u"amount_cents",b"amount_cents",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"description",b"description",u"file_transmission_token",b"file_transmission_token",u"funding_account",b"funding_account",u"generation",b"generation",u"merchant_token",b"merchant_token",u"prior_result",b"prior_result",u"product",b"product",u"rec_id",b"rec_id",u"reconciled_at",b"reconciled_at",u"region",b"region",u"result",b"result",u"source_id",b"source_id",u"source_name",b"source_name",u"system_id",b"system_id",u"token",b"token",u"transaction_fund_id",b"transaction_fund_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"activity",b"activity",u"amount_cents",b"amount_cents",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"description",b"description",u"file_transmission_token",b"file_transmission_token",u"funding_account",b"funding_account",u"generation",b"generation",u"merchant_token",b"merchant_token",u"prior_result",b"prior_result",u"product",b"product",u"rec_id",b"rec_id",u"reconciled_at",b"reconciled_at",u"region",b"region",u"result",b"result",u"source_id",b"source_id",u"source_name",b"source_name",u"system_id",b"system_id",u"token",b"token",u"transaction_fund_id",b"transaction_fund_id"]) -> None: ...
type___PayableSummary = PayableSummary
