# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.entry_method_pb2 import (
    PayWithSquareEntryMethodValue as squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue,
)

from sq_protos_py.squareup.common.instrument_pb2 import (
    InstrumentTypeValue as squareup___common___instrument_pb2___InstrumentTypeValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.fred2.api.fred_system_pb2 import (
    SystemIdValue as squareup___fred2___api___fred_system_pb2___SystemIdValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.payment_pb2 import (
    ProcessorValue as squareup___fred2___reconcile___domain___payment_pb2___ProcessorValue,
    TransactionTypeValue as squareup___fred2___reconcile___domain___payment_pb2___TransactionTypeValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class EsperantoSourceJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_token: typing___Text = ...
    transaction_type: squareup___fred2___reconcile___domain___payment_pb2___TransactionTypeValue = ...
    instrument_type: squareup___common___instrument_pb2___InstrumentTypeValue = ...
    merchant_token: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    region: typing___Text = ...
    amount_cents: builtin___int = ...
    processor: squareup___fred2___reconcile___domain___payment_pb2___ProcessorValue = ...
    gateway_transaction_id: typing___Text = ...
    entry_method: squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue = ...
    requested_refund: builtin___bool = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        payment_token : typing___Optional[typing___Text] = None,
        transaction_type : typing___Optional[squareup___fred2___reconcile___domain___payment_pb2___TransactionTypeValue] = None,
        instrument_type : typing___Optional[squareup___common___instrument_pb2___InstrumentTypeValue] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        region : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        processor : typing___Optional[squareup___fred2___reconcile___domain___payment_pb2___ProcessorValue] = None,
        gateway_transaction_id : typing___Optional[typing___Text] = None,
        entry_method : typing___Optional[squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        requested_refund : typing___Optional[builtin___bool] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"entry_method",b"entry_method",u"gateway_transaction_id",b"gateway_transaction_id",u"generation",b"generation",u"instrument_type",b"instrument_type",u"merchant_token",b"merchant_token",u"payment_token",b"payment_token",u"processor",b"processor",u"region",b"region",u"requested_refund",b"requested_refund",u"system_id",b"system_id",u"transaction_type",b"transaction_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"entry_method",b"entry_method",u"gateway_transaction_id",b"gateway_transaction_id",u"generation",b"generation",u"instrument_type",b"instrument_type",u"merchant_token",b"merchant_token",u"payment_token",b"payment_token",u"processor",b"processor",u"region",b"region",u"requested_refund",b"requested_refund",u"system_id",b"system_id",u"transaction_type",b"transaction_type"]) -> None: ...
type___EsperantoSourceJournalEntry = EsperantoSourceJournalEntry
