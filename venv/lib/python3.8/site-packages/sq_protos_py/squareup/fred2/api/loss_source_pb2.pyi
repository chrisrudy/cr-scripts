# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.payment_pb2 import (
    SquareProductValue as squareup___common___payment_pb2___SquareProductValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from sq_protos_py.squareup.fred2.api.fred_system_pb2 import (
    SystemIdValue as squareup___fred2___api___fred_system_pb2___SystemIdValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.payable_summary_pb2 import (
    ProductValue as squareup___fred2___reconcile___domain___payable_summary_pb2___ProductValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.payment_pb2 import (
    PaymentReconciliationSideValue as squareup___fred2___reconcile___domain___payment_pb2___PaymentReconciliationSideValue,
    ProcessorValue as squareup___fred2___reconcile___domain___payment_pb2___ProcessorValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

PartnerValue = typing___NewType('PartnerValue', builtin___int)
type___PartnerValue = PartnerValue
Partner: _Partner
class _Partner(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PartnerValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    SQUARE = typing___cast(PartnerValue, 0)
    STARBUCKS = typing___cast(PartnerValue, 1)
    UNKNOWN_PARTNER = typing___cast(PartnerValue, 3)
SQUARE = typing___cast(PartnerValue, 0)
STARBUCKS = typing___cast(PartnerValue, 1)
UNKNOWN_PARTNER = typing___cast(PartnerValue, 3)
type___Partner = Partner

ResolutionValue = typing___NewType('ResolutionValue', builtin___int)
type___ResolutionValue = ResolutionValue
Resolution: _Resolution
class _Resolution(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ResolutionValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    WON = typing___cast(ResolutionValue, 0)
    LOST = typing___cast(ResolutionValue, 1)
    PENDING = typing___cast(ResolutionValue, 2)
    UNKNOWN = typing___cast(ResolutionValue, 3)
WON = typing___cast(ResolutionValue, 0)
LOST = typing___cast(ResolutionValue, 1)
PENDING = typing___cast(ResolutionValue, 2)
UNKNOWN = typing___cast(ResolutionValue, 3)
type___Resolution = Resolution

LedgerDisputeActionValue = typing___NewType('LedgerDisputeActionValue', builtin___int)
type___LedgerDisputeActionValue = LedgerDisputeActionValue
LedgerDisputeAction: _LedgerDisputeAction
class _LedgerDisputeAction(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LedgerDisputeActionValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    E_UNKNOWN = typing___cast(LedgerDisputeActionValue, 0)
    CREATE_DISPUTE = typing___cast(LedgerDisputeActionValue, 1)
    RESOLVE_DISPUTE = typing___cast(LedgerDisputeActionValue, 2)
    ADJUST_DISPUTE = typing___cast(LedgerDisputeActionValue, 3)
    REOPEN_DISPUTE = typing___cast(LedgerDisputeActionValue, 4)
    OPEN_DISPUTE = typing___cast(LedgerDisputeActionValue, 5)
    DISPUTE_ADJUSTMENT = typing___cast(LedgerDisputeActionValue, 6)
    RESOLVED_DISPUTE = typing___cast(LedgerDisputeActionValue, 7)
E_UNKNOWN = typing___cast(LedgerDisputeActionValue, 0)
CREATE_DISPUTE = typing___cast(LedgerDisputeActionValue, 1)
RESOLVE_DISPUTE = typing___cast(LedgerDisputeActionValue, 2)
ADJUST_DISPUTE = typing___cast(LedgerDisputeActionValue, 3)
REOPEN_DISPUTE = typing___cast(LedgerDisputeActionValue, 4)
OPEN_DISPUTE = typing___cast(LedgerDisputeActionValue, 5)
DISPUTE_ADJUSTMENT = typing___cast(LedgerDisputeActionValue, 6)
RESOLVED_DISPUTE = typing___cast(LedgerDisputeActionValue, 7)
type___LedgerDisputeAction = LedgerDisputeAction

RecordTypeValue = typing___NewType('RecordTypeValue', builtin___int)
type___RecordTypeValue = RecordTypeValue
RecordType: _RecordType
class _RecordType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RecordTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFINITELY_WRONG = typing___cast(RecordTypeValue, 0)
    CHARGEBACK_ORIGIN = typing___cast(RecordTypeValue, 1)
    DISPUTE_HOLD_ORIGIN = typing___cast(RecordTypeValue, 2)
DEFINITELY_WRONG = typing___cast(RecordTypeValue, 0)
CHARGEBACK_ORIGIN = typing___cast(RecordTypeValue, 1)
DISPUTE_HOLD_ORIGIN = typing___cast(RecordTypeValue, 2)
type___RecordType = RecordType

class LossSourceJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    record_type: type___RecordTypeValue = ...
    processor: squareup___fred2___reconcile___domain___payment_pb2___ProcessorValue = ...
    DEPRECATED_product: squareup___fred2___reconcile___domain___payable_summary_pb2___ProductValue = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    source_id: typing___Text = ...
    partner: type___PartnerValue = ...
    chargeback_related: builtin___bool = ...
    DEPRECATED_disputed_amount: builtin___int = ...
    monetary_action_amount: builtin___int = ...
    anti_record: builtin___bool = ...
    bad_record: builtin___bool = ...
    ledger_dispute_hold_amount: builtin___int = ...
    DEPRECATED_ledger_dispute_event_type: type___LedgerDisputeActionValue = ...
    ledger_dispute_event_type: type___LedgerDisputeActionValue = ...
    payment_token: typing___Text = ...
    payment_number: typing___Text = ...
    payment_amount: builtin___int = ...
    payment_fee_amount: builtin___int = ...
    merchant_token: typing___Text = ...
    current_resolution: type___ResolutionValue = ...
    previous_resolution: type___ResolutionValue = ...
    reconciliation: squareup___fred2___reconcile___domain___payment_pb2___PaymentReconciliationSideValue = ...
    version: typing___Text = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...
    product: squareup___common___payment_pb2___SquareProductValue = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def DEPRECATED_chargeback_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def DEPRECATED_original_chargeback_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def payment_created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def chargeback_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

    @property
    def original_chargeback_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        record_type : typing___Optional[type___RecordTypeValue] = None,
        processor : typing___Optional[squareup___fred2___reconcile___domain___payment_pb2___ProcessorValue] = None,
        DEPRECATED_product : typing___Optional[squareup___fred2___reconcile___domain___payable_summary_pb2___ProductValue] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        source_id : typing___Optional[typing___Text] = None,
        partner : typing___Optional[type___PartnerValue] = None,
        chargeback_related : typing___Optional[builtin___bool] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        DEPRECATED_chargeback_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        DEPRECATED_original_chargeback_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        DEPRECATED_disputed_amount : typing___Optional[builtin___int] = None,
        monetary_action_amount : typing___Optional[builtin___int] = None,
        anti_record : typing___Optional[builtin___bool] = None,
        bad_record : typing___Optional[builtin___bool] = None,
        ledger_dispute_hold_amount : typing___Optional[builtin___int] = None,
        DEPRECATED_ledger_dispute_event_type : typing___Optional[type___LedgerDisputeActionValue] = None,
        ledger_dispute_event_type : typing___Optional[type___LedgerDisputeActionValue] = None,
        payment_token : typing___Optional[typing___Text] = None,
        payment_number : typing___Optional[typing___Text] = None,
        payment_created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        payment_amount : typing___Optional[builtin___int] = None,
        payment_fee_amount : typing___Optional[builtin___int] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        current_resolution : typing___Optional[type___ResolutionValue] = None,
        previous_resolution : typing___Optional[type___ResolutionValue] = None,
        reconciliation : typing___Optional[squareup___fred2___reconcile___domain___payment_pb2___PaymentReconciliationSideValue] = None,
        version : typing___Optional[typing___Text] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        product : typing___Optional[squareup___common___payment_pb2___SquareProductValue] = None,
        chargeback_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
        original_chargeback_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"DEPRECATED_chargeback_date",b"DEPRECATED_chargeback_date",u"DEPRECATED_disputed_amount",b"DEPRECATED_disputed_amount",u"DEPRECATED_ledger_dispute_event_type",b"DEPRECATED_ledger_dispute_event_type",u"DEPRECATED_original_chargeback_date",b"DEPRECATED_original_chargeback_date",u"DEPRECATED_product",b"DEPRECATED_product",u"anti_record",b"anti_record",u"bad_record",b"bad_record",u"chargeback_date",b"chargeback_date",u"chargeback_related",b"chargeback_related",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"current_resolution",b"current_resolution",u"generation",b"generation",u"id",b"id",u"ledger_dispute_event_type",b"ledger_dispute_event_type",u"ledger_dispute_hold_amount",b"ledger_dispute_hold_amount",u"merchant_token",b"merchant_token",u"monetary_action_amount",b"monetary_action_amount",u"original_chargeback_date",b"original_chargeback_date",u"partner",b"partner",u"payment_amount",b"payment_amount",u"payment_created_at",b"payment_created_at",u"payment_fee_amount",b"payment_fee_amount",u"payment_number",b"payment_number",u"payment_token",b"payment_token",u"previous_resolution",b"previous_resolution",u"processor",b"processor",u"product",b"product",u"reconciliation",b"reconciliation",u"record_type",b"record_type",u"source_id",b"source_id",u"system_id",b"system_id",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"DEPRECATED_chargeback_date",b"DEPRECATED_chargeback_date",u"DEPRECATED_disputed_amount",b"DEPRECATED_disputed_amount",u"DEPRECATED_ledger_dispute_event_type",b"DEPRECATED_ledger_dispute_event_type",u"DEPRECATED_original_chargeback_date",b"DEPRECATED_original_chargeback_date",u"DEPRECATED_product",b"DEPRECATED_product",u"anti_record",b"anti_record",u"bad_record",b"bad_record",u"chargeback_date",b"chargeback_date",u"chargeback_related",b"chargeback_related",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"current_resolution",b"current_resolution",u"generation",b"generation",u"id",b"id",u"ledger_dispute_event_type",b"ledger_dispute_event_type",u"ledger_dispute_hold_amount",b"ledger_dispute_hold_amount",u"merchant_token",b"merchant_token",u"monetary_action_amount",b"monetary_action_amount",u"original_chargeback_date",b"original_chargeback_date",u"partner",b"partner",u"payment_amount",b"payment_amount",u"payment_created_at",b"payment_created_at",u"payment_fee_amount",b"payment_fee_amount",u"payment_number",b"payment_number",u"payment_token",b"payment_token",u"previous_resolution",b"previous_resolution",u"processor",b"processor",u"product",b"product",u"reconciliation",b"reconciliation",u"record_type",b"record_type",u"source_id",b"source_id",u"system_id",b"system_id",u"version",b"version"]) -> None: ...
type___LossSourceJournalEntry = LossSourceJournalEntry
