# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.fred2.api.fred_system_pb2 import (
    SystemIdValue as squareup___fred2___api___fred_system_pb2___SystemIdValue,
)

from sq_protos_py.squareup.fred2.reconcile.domain.rec_pb2 import (
    RecResultTypeValue as squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

AccountTypesValue = typing___NewType('AccountTypesValue', builtin___int)
type___AccountTypesValue = AccountTypesValue
AccountTypes: _AccountTypes
class _AccountTypes(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AccountTypesValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CASH = typing___cast(AccountTypesValue, 0)
    REVENUE = typing___cast(AccountTypesValue, 1)
    CASH_IN_TRANSIT = typing___cast(AccountTypesValue, 2)
    PAYABLE = typing___cast(AccountTypesValue, 3)
CASH = typing___cast(AccountTypesValue, 0)
REVENUE = typing___cast(AccountTypesValue, 1)
CASH_IN_TRANSIT = typing___cast(AccountTypesValue, 2)
PAYABLE = typing___cast(AccountTypesValue, 3)
type___AccountTypes = AccountTypes

TransferMeansValue = typing___NewType('TransferMeansValue', builtin___int)
type___TransferMeansValue = TransferMeansValue
TransferMeans: _TransferMeans
class _TransferMeans(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TransferMeansValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_MEANS = typing___cast(TransferMeansValue, 0)
    TELLER = typing___cast(TransferMeansValue, 1)
    LEDGER = typing___cast(TransferMeansValue, 2)
    BILLING = typing___cast(TransferMeansValue, 3)
    WIRE = typing___cast(TransferMeansValue, 4)
    INTERNAL_TRANSFER = typing___cast(TransferMeansValue, 5)
    NONE = typing___cast(TransferMeansValue, 6)
    OMNIBUS = typing___cast(TransferMeansValue, 7)
    CHECK = typing___cast(TransferMeansValue, 8)
    PAYAPI = typing___cast(TransferMeansValue, 9)
    NET_ZERO = typing___cast(TransferMeansValue, 10)
    INVOICE = typing___cast(TransferMeansValue, 11)
    VIRTUAL_TERMINAL = typing___cast(TransferMeansValue, 12)
    PAGO = typing___cast(TransferMeansValue, 13)
UNKNOWN_MEANS = typing___cast(TransferMeansValue, 0)
TELLER = typing___cast(TransferMeansValue, 1)
LEDGER = typing___cast(TransferMeansValue, 2)
BILLING = typing___cast(TransferMeansValue, 3)
WIRE = typing___cast(TransferMeansValue, 4)
INTERNAL_TRANSFER = typing___cast(TransferMeansValue, 5)
NONE = typing___cast(TransferMeansValue, 6)
OMNIBUS = typing___cast(TransferMeansValue, 7)
CHECK = typing___cast(TransferMeansValue, 8)
PAYAPI = typing___cast(TransferMeansValue, 9)
NET_ZERO = typing___cast(TransferMeansValue, 10)
INVOICE = typing___cast(TransferMeansValue, 11)
VIRTUAL_TERMINAL = typing___cast(TransferMeansValue, 12)
PAGO = typing___cast(TransferMeansValue, 13)
type___TransferMeans = TransferMeans

CapitalProductValue = typing___NewType('CapitalProductValue', builtin___int)
type___CapitalProductValue = CapitalProductValue
CapitalProduct: _CapitalProduct
class _CapitalProduct(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CapitalProductValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_PRODUCT = typing___cast(CapitalProductValue, 0)
    MCA = typing___cast(CapitalProductValue, 1)
    FLEX_LOAN = typing___cast(CapitalProductValue, 2)
    PARTNER_FLEX_LOAN = typing___cast(CapitalProductValue, 3)
    INVOICE_INSTALLMENT_LOAN = typing___cast(CapitalProductValue, 4)
    TERM_LOAN = typing___cast(CapitalProductValue, 5)
    PARTNER_TERM_LOAN = typing___cast(CapitalProductValue, 6)
    SQUARE_SHOP_RISA = typing___cast(CapitalProductValue, 7)
    INSTORE_INSTALLMENT_LOAN = typing___cast(CapitalProductValue, 8)
    ECOMMERCE_INSTALLMENT_LOAN = typing___cast(CapitalProductValue, 9)
    GAP_LOAN = typing___cast(CapitalProductValue, 10)
UNKNOWN_PRODUCT = typing___cast(CapitalProductValue, 0)
MCA = typing___cast(CapitalProductValue, 1)
FLEX_LOAN = typing___cast(CapitalProductValue, 2)
PARTNER_FLEX_LOAN = typing___cast(CapitalProductValue, 3)
INVOICE_INSTALLMENT_LOAN = typing___cast(CapitalProductValue, 4)
TERM_LOAN = typing___cast(CapitalProductValue, 5)
PARTNER_TERM_LOAN = typing___cast(CapitalProductValue, 6)
SQUARE_SHOP_RISA = typing___cast(CapitalProductValue, 7)
INSTORE_INSTALLMENT_LOAN = typing___cast(CapitalProductValue, 8)
ECOMMERCE_INSTALLMENT_LOAN = typing___cast(CapitalProductValue, 9)
GAP_LOAN = typing___cast(CapitalProductValue, 10)
type___CapitalProduct = CapitalProduct

CapitalTransactionTypeValue = typing___NewType('CapitalTransactionTypeValue', builtin___int)
type___CapitalTransactionTypeValue = CapitalTransactionTypeValue
CapitalTransactionType: _CapitalTransactionType
class _CapitalTransactionType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CapitalTransactionTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_TRANSACTION_TYPE = typing___cast(CapitalTransactionTypeValue, 0)
    PLAN_PAYMENT = typing___cast(CapitalTransactionTypeValue, 1)
    ADVANCE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 2)
    PLAN_ADVANCE = typing___cast(CapitalTransactionTypeValue, 3)
    SERVICING_TRANSFER = typing___cast(CapitalTransactionTypeValue, 4)
    SERVICING_FEE = typing___cast(CapitalTransactionTypeValue, 5)
    INVESTOR_ALLOCATION = typing___cast(CapitalTransactionTypeValue, 6)
    ORIGINATION_PREMIUM_TRANSFER = typing___cast(CapitalTransactionTypeValue, 7)
    PLAN_FEE = typing___cast(CapitalTransactionTypeValue, 8)
    INITIAL_FUNDING = typing___cast(CapitalTransactionTypeValue, 9)
    INTEREST_TRANSFER = typing___cast(CapitalTransactionTypeValue, 10)
    LOSS_FROM_CANCEL = typing___cast(CapitalTransactionTypeValue, 11)
    PLAN_PURCHASE = typing___cast(CapitalTransactionTypeValue, 12)
    ORIGINATION_FEE = typing___cast(CapitalTransactionTypeValue, 13)
    PAYMENT_REVENUE = typing___cast(CapitalTransactionTypeValue, 14)
    ORIGINATION_TRANSFER = typing___cast(CapitalTransactionTypeValue, 15)
    PAYMENT_TRANSFER = typing___cast(CapitalTransactionTypeValue, 16)
    ORIGINATION_PREMIUM = typing___cast(CapitalTransactionTypeValue, 17)
    PROCESSING_TRANSFER = typing___cast(CapitalTransactionTypeValue, 18)
    SALE_PAYMENT = typing___cast(CapitalTransactionTypeValue, 19)
    PROCESSING_FEE_CANCEL = typing___cast(CapitalTransactionTypeValue, 20)
    INTEREST_REFUND = typing___cast(CapitalTransactionTypeValue, 21)
    SERVICING_FEE_REVERSAL = typing___cast(CapitalTransactionTypeValue, 22)
    PAYMENT_REVENUE_REVERSAL = typing___cast(CapitalTransactionTypeValue, 23)
    PAYMENT_TRANSFER_REVERSAL = typing___cast(CapitalTransactionTypeValue, 24)
    SERVICING_TRANSFER_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 25)
    PLAN_PRINCIPAL = typing___cast(CapitalTransactionTypeValue, 26)
    PLAN_PAYMENT_REVERSAL = typing___cast(CapitalTransactionTypeValue, 27)
    PAYMENT_REVENUE_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 28)
    FUTURE_REVENUE_CANCEL = typing___cast(CapitalTransactionTypeValue, 29)
    SQUARE_ALLOCATION_REVENUE = typing___cast(CapitalTransactionTypeValue, 30)
    SERVICING_FEE_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 31)
    PLAN_PRINCIPAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 32)
    PLAN_TRANSFER = typing___cast(CapitalTransactionTypeValue, 33)
    FUTURE_REVENUE = typing___cast(CapitalTransactionTypeValue, 34)
    PLAN_PAYMENT_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 35)
    SERVICING_TRANSFER_REVERSAL = typing___cast(CapitalTransactionTypeValue, 36)
    PAYMENT_TRANSFER_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 37)
    PROCESSING_FEE = typing___cast(CapitalTransactionTypeValue, 38)
    PLAN_ADVANCE_WRITE_OFF = typing___cast(CapitalTransactionTypeValue, 39)
    PLAN_SALE = typing___cast(CapitalTransactionTypeValue, 40)
    SALE_REVENUE = typing___cast(CapitalTransactionTypeValue, 41)
    PURCHASE_PAYMENT = typing___cast(CapitalTransactionTypeValue, 42)
    PURCHASE_REVENUE = typing___cast(CapitalTransactionTypeValue, 43)
    INTEREST_ACCRUAL = typing___cast(CapitalTransactionTypeValue, 44)
    FIXED_PAYMENT_DUE = typing___cast(CapitalTransactionTypeValue, 45)
    DUE_AGING = typing___cast(CapitalTransactionTypeValue, 46)
    PENALTY_ACCRUAL = typing___cast(CapitalTransactionTypeValue, 47)
    WRITE_OFF = typing___cast(CapitalTransactionTypeValue, 48)
    ACCOUNT_REBALANCE = typing___cast(CapitalTransactionTypeValue, 49)
    INTEREST_CANCEL = typing___cast(CapitalTransactionTypeValue, 50)
    INTEREST_REVENUE = typing___cast(CapitalTransactionTypeValue, 51)
    SIGNUP_BONUS = typing___cast(CapitalTransactionTypeValue, 52)
    PLAN_INTEREST_REFUND = typing___cast(CapitalTransactionTypeValue, 53)
    ADVANCE_TRANSFER_REFUND = typing___cast(CapitalTransactionTypeValue, 54)
    SALE_REVENUE_ROLLBACK = typing___cast(CapitalTransactionTypeValue, 55)
    TRAILING_FEE = typing___cast(CapitalTransactionTypeValue, 56)
    TRAILING_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 57)
    ORIGINATION_TRAILING_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 58)
    ORIGINATOR_MARKETING_FEE = typing___cast(CapitalTransactionTypeValue, 59)
    ORIGINATOR_MARKETING_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 60)
    MERCHANT_DISCOUNT = typing___cast(CapitalTransactionTypeValue, 61)
    MERCHANT_DISCOUNT_CANCEL = typing___cast(CapitalTransactionTypeValue, 62)
    MERCHANT_DISCOUNT_TRANSFER = typing___cast(CapitalTransactionTypeValue, 63)
    MERCHANT_DISCOUNT_TRANSFER_CANCEL = typing___cast(CapitalTransactionTypeValue, 64)
    DOWN_PAYMENT = typing___cast(CapitalTransactionTypeValue, 65)
    DOWN_PAYMENT_CANCEL = typing___cast(CapitalTransactionTypeValue, 66)
    DOWN_PAYMENT_REVERSAL_SELLER = typing___cast(CapitalTransactionTypeValue, 67)
    DOWN_PAYMENT_REVERSAL_BORROWER = typing___cast(CapitalTransactionTypeValue, 68)
    CASH_TRANSFER = typing___cast(CapitalTransactionTypeValue, 69)
    CANCEL_CASH_TRANSFER = typing___cast(CapitalTransactionTypeValue, 70)
    PLAN_REVENUE_REFUND = typing___cast(CapitalTransactionTypeValue, 71)
    SERVICE_CREDIT = typing___cast(CapitalTransactionTypeValue, 72)
    AGENT_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 73)
UNKNOWN_TRANSACTION_TYPE = typing___cast(CapitalTransactionTypeValue, 0)
PLAN_PAYMENT = typing___cast(CapitalTransactionTypeValue, 1)
ADVANCE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 2)
PLAN_ADVANCE = typing___cast(CapitalTransactionTypeValue, 3)
SERVICING_TRANSFER = typing___cast(CapitalTransactionTypeValue, 4)
SERVICING_FEE = typing___cast(CapitalTransactionTypeValue, 5)
INVESTOR_ALLOCATION = typing___cast(CapitalTransactionTypeValue, 6)
ORIGINATION_PREMIUM_TRANSFER = typing___cast(CapitalTransactionTypeValue, 7)
PLAN_FEE = typing___cast(CapitalTransactionTypeValue, 8)
INITIAL_FUNDING = typing___cast(CapitalTransactionTypeValue, 9)
INTEREST_TRANSFER = typing___cast(CapitalTransactionTypeValue, 10)
LOSS_FROM_CANCEL = typing___cast(CapitalTransactionTypeValue, 11)
PLAN_PURCHASE = typing___cast(CapitalTransactionTypeValue, 12)
ORIGINATION_FEE = typing___cast(CapitalTransactionTypeValue, 13)
PAYMENT_REVENUE = typing___cast(CapitalTransactionTypeValue, 14)
ORIGINATION_TRANSFER = typing___cast(CapitalTransactionTypeValue, 15)
PAYMENT_TRANSFER = typing___cast(CapitalTransactionTypeValue, 16)
ORIGINATION_PREMIUM = typing___cast(CapitalTransactionTypeValue, 17)
PROCESSING_TRANSFER = typing___cast(CapitalTransactionTypeValue, 18)
SALE_PAYMENT = typing___cast(CapitalTransactionTypeValue, 19)
PROCESSING_FEE_CANCEL = typing___cast(CapitalTransactionTypeValue, 20)
INTEREST_REFUND = typing___cast(CapitalTransactionTypeValue, 21)
SERVICING_FEE_REVERSAL = typing___cast(CapitalTransactionTypeValue, 22)
PAYMENT_REVENUE_REVERSAL = typing___cast(CapitalTransactionTypeValue, 23)
PAYMENT_TRANSFER_REVERSAL = typing___cast(CapitalTransactionTypeValue, 24)
SERVICING_TRANSFER_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 25)
PLAN_PRINCIPAL = typing___cast(CapitalTransactionTypeValue, 26)
PLAN_PAYMENT_REVERSAL = typing___cast(CapitalTransactionTypeValue, 27)
PAYMENT_REVENUE_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 28)
FUTURE_REVENUE_CANCEL = typing___cast(CapitalTransactionTypeValue, 29)
SQUARE_ALLOCATION_REVENUE = typing___cast(CapitalTransactionTypeValue, 30)
SERVICING_FEE_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 31)
PLAN_PRINCIPAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 32)
PLAN_TRANSFER = typing___cast(CapitalTransactionTypeValue, 33)
FUTURE_REVENUE = typing___cast(CapitalTransactionTypeValue, 34)
PLAN_PAYMENT_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 35)
SERVICING_TRANSFER_REVERSAL = typing___cast(CapitalTransactionTypeValue, 36)
PAYMENT_TRANSFER_REVERSAL_CANCEL = typing___cast(CapitalTransactionTypeValue, 37)
PROCESSING_FEE = typing___cast(CapitalTransactionTypeValue, 38)
PLAN_ADVANCE_WRITE_OFF = typing___cast(CapitalTransactionTypeValue, 39)
PLAN_SALE = typing___cast(CapitalTransactionTypeValue, 40)
SALE_REVENUE = typing___cast(CapitalTransactionTypeValue, 41)
PURCHASE_PAYMENT = typing___cast(CapitalTransactionTypeValue, 42)
PURCHASE_REVENUE = typing___cast(CapitalTransactionTypeValue, 43)
INTEREST_ACCRUAL = typing___cast(CapitalTransactionTypeValue, 44)
FIXED_PAYMENT_DUE = typing___cast(CapitalTransactionTypeValue, 45)
DUE_AGING = typing___cast(CapitalTransactionTypeValue, 46)
PENALTY_ACCRUAL = typing___cast(CapitalTransactionTypeValue, 47)
WRITE_OFF = typing___cast(CapitalTransactionTypeValue, 48)
ACCOUNT_REBALANCE = typing___cast(CapitalTransactionTypeValue, 49)
INTEREST_CANCEL = typing___cast(CapitalTransactionTypeValue, 50)
INTEREST_REVENUE = typing___cast(CapitalTransactionTypeValue, 51)
SIGNUP_BONUS = typing___cast(CapitalTransactionTypeValue, 52)
PLAN_INTEREST_REFUND = typing___cast(CapitalTransactionTypeValue, 53)
ADVANCE_TRANSFER_REFUND = typing___cast(CapitalTransactionTypeValue, 54)
SALE_REVENUE_ROLLBACK = typing___cast(CapitalTransactionTypeValue, 55)
TRAILING_FEE = typing___cast(CapitalTransactionTypeValue, 56)
TRAILING_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 57)
ORIGINATION_TRAILING_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 58)
ORIGINATOR_MARKETING_FEE = typing___cast(CapitalTransactionTypeValue, 59)
ORIGINATOR_MARKETING_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 60)
MERCHANT_DISCOUNT = typing___cast(CapitalTransactionTypeValue, 61)
MERCHANT_DISCOUNT_CANCEL = typing___cast(CapitalTransactionTypeValue, 62)
MERCHANT_DISCOUNT_TRANSFER = typing___cast(CapitalTransactionTypeValue, 63)
MERCHANT_DISCOUNT_TRANSFER_CANCEL = typing___cast(CapitalTransactionTypeValue, 64)
DOWN_PAYMENT = typing___cast(CapitalTransactionTypeValue, 65)
DOWN_PAYMENT_CANCEL = typing___cast(CapitalTransactionTypeValue, 66)
DOWN_PAYMENT_REVERSAL_SELLER = typing___cast(CapitalTransactionTypeValue, 67)
DOWN_PAYMENT_REVERSAL_BORROWER = typing___cast(CapitalTransactionTypeValue, 68)
CASH_TRANSFER = typing___cast(CapitalTransactionTypeValue, 69)
CANCEL_CASH_TRANSFER = typing___cast(CapitalTransactionTypeValue, 70)
PLAN_REVENUE_REFUND = typing___cast(CapitalTransactionTypeValue, 71)
SERVICE_CREDIT = typing___cast(CapitalTransactionTypeValue, 72)
AGENT_FEE_TRANSFER = typing___cast(CapitalTransactionTypeValue, 73)
type___CapitalTransactionType = CapitalTransactionType

CapitalOmnibusTransactionTypeValue = typing___NewType('CapitalOmnibusTransactionTypeValue', builtin___int)
type___CapitalOmnibusTransactionTypeValue = CapitalOmnibusTransactionTypeValue
CapitalOmnibusTransactionType: _CapitalOmnibusTransactionType
class _CapitalOmnibusTransactionType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CapitalOmnibusTransactionTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    CAPTURE = typing___cast(CapitalOmnibusTransactionTypeValue, 0)
    REFUND = typing___cast(CapitalOmnibusTransactionTypeValue, 1)
    CAPITAL_TENDER = typing___cast(CapitalOmnibusTransactionTypeValue, 2)
    CAPITAL_TENDER_REFUND = typing___cast(CapitalOmnibusTransactionTypeValue, 3)
CAPTURE = typing___cast(CapitalOmnibusTransactionTypeValue, 0)
REFUND = typing___cast(CapitalOmnibusTransactionTypeValue, 1)
CAPITAL_TENDER = typing___cast(CapitalOmnibusTransactionTypeValue, 2)
CAPITAL_TENDER_REFUND = typing___cast(CapitalOmnibusTransactionTypeValue, 3)
type___CapitalOmnibusTransactionType = CapitalOmnibusTransactionType

class CapitalSourceJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    product_id: typing___Text = ...
    product: type___CapitalProductValue = ...
    plan_id: typing___Text = ...
    applicant_id: typing___Text = ...
    event_id: typing___Text = ...
    reason_code: typing___Text = ...
    transaction_type: typing___Text = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    region: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    amount_cents: builtin___int = ...
    fund_id: typing___Text = ...
    fund_name: typing___Text = ...
    user_id: typing___Text = ...
    account_type: type___AccountTypesValue = ...
    fund_plan_id: typing___Text = ...
    applicant_partner_id: typing___Text = ...
    applicant_partner_token: typing___Text = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        product_id : typing___Optional[typing___Text] = None,
        product : typing___Optional[type___CapitalProductValue] = None,
        plan_id : typing___Optional[typing___Text] = None,
        applicant_id : typing___Optional[typing___Text] = None,
        event_id : typing___Optional[typing___Text] = None,
        reason_code : typing___Optional[typing___Text] = None,
        transaction_type : typing___Optional[typing___Text] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        region : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        fund_id : typing___Optional[typing___Text] = None,
        fund_name : typing___Optional[typing___Text] = None,
        user_id : typing___Optional[typing___Text] = None,
        account_type : typing___Optional[type___AccountTypesValue] = None,
        fund_plan_id : typing___Optional[typing___Text] = None,
        applicant_partner_id : typing___Optional[typing___Text] = None,
        applicant_partner_token : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"amount_cents",b"amount_cents",u"applicant_id",b"applicant_id",u"applicant_partner_id",b"applicant_partner_id",u"applicant_partner_token",b"applicant_partner_token",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"event_id",b"event_id",u"fund_id",b"fund_id",u"fund_name",b"fund_name",u"fund_plan_id",b"fund_plan_id",u"generation",b"generation",u"plan_id",b"plan_id",u"product",b"product",u"product_id",b"product_id",u"reason_code",b"reason_code",u"region",b"region",u"system_id",b"system_id",u"transaction_type",b"transaction_type",u"user_id",b"user_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"amount_cents",b"amount_cents",u"applicant_id",b"applicant_id",u"applicant_partner_id",b"applicant_partner_id",u"applicant_partner_token",b"applicant_partner_token",u"country",b"country",u"created_at",b"created_at",u"currency_code",b"currency_code",u"event_id",b"event_id",u"fund_id",b"fund_id",u"fund_name",b"fund_name",u"fund_plan_id",b"fund_plan_id",u"generation",b"generation",u"plan_id",b"plan_id",u"product",b"product",u"product_id",b"product_id",u"reason_code",b"reason_code",u"region",b"region",u"system_id",b"system_id",u"transaction_type",b"transaction_type",u"user_id",b"user_id"]) -> None: ...
type___CapitalSourceJournalEntry = CapitalSourceJournalEntry

class CapitalRecJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_id: typing___Text = ...
    rec_journal_name: typing___Text = ...
    rec_journal_source_id: typing___Text = ...
    result: squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue = ...
    prior_result: squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue = ...
    rec_id: builtin___int = ...
    amount_cents: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...

    @property
    def reconciled_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        event_id : typing___Optional[typing___Text] = None,
        rec_journal_name : typing___Optional[typing___Text] = None,
        rec_journal_source_id : typing___Optional[typing___Text] = None,
        result : typing___Optional[squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue] = None,
        prior_result : typing___Optional[squareup___fred2___reconcile___domain___rec_pb2___RecResultTypeValue] = None,
        rec_id : typing___Optional[builtin___int] = None,
        reconciled_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"created_at",b"created_at",u"currency_code",b"currency_code",u"event_id",b"event_id",u"generation",b"generation",u"prior_result",b"prior_result",u"rec_id",b"rec_id",u"rec_journal_name",b"rec_journal_name",u"rec_journal_source_id",b"rec_journal_source_id",u"reconciled_at",b"reconciled_at",u"result",b"result",u"system_id",b"system_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"created_at",b"created_at",u"currency_code",b"currency_code",u"event_id",b"event_id",u"generation",b"generation",u"prior_result",b"prior_result",u"rec_id",b"rec_id",u"rec_journal_name",b"rec_journal_name",u"rec_journal_source_id",b"rec_journal_source_id",u"reconciled_at",b"reconciled_at",u"result",b"result",u"system_id",b"system_id"]) -> None: ...
type___CapitalRecJournalEntry = CapitalRecJournalEntry

class CapitalActionJournalEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_id: typing___Text = ...
    transfer_means: type___TransferMeansValue = ...
    action_id: typing___Text = ...
    rec_journal_name: typing___Text = ...
    rec_journal_source_id: typing___Text = ...
    amount_cents: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    system_id: squareup___fred2___api___fred_system_pb2___SystemIdValue = ...
    generation: builtin___int = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        event_id : typing___Optional[typing___Text] = None,
        transfer_means : typing___Optional[type___TransferMeansValue] = None,
        action_id : typing___Optional[typing___Text] = None,
        rec_journal_name : typing___Optional[typing___Text] = None,
        rec_journal_source_id : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        system_id : typing___Optional[squareup___fred2___api___fred_system_pb2___SystemIdValue] = None,
        generation : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"action_id",b"action_id",u"amount_cents",b"amount_cents",u"created_at",b"created_at",u"currency_code",b"currency_code",u"event_id",b"event_id",u"generation",b"generation",u"rec_journal_name",b"rec_journal_name",u"rec_journal_source_id",b"rec_journal_source_id",u"system_id",b"system_id",u"transfer_means",b"transfer_means"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"action_id",b"action_id",u"amount_cents",b"amount_cents",u"created_at",b"created_at",u"currency_code",b"currency_code",u"event_id",b"event_id",u"generation",b"generation",u"rec_journal_name",b"rec_journal_name",u"rec_journal_source_id",b"rec_journal_source_id",u"system_id",b"system_id",u"transfer_means",b"transfer_means"]) -> None: ...
type___CapitalActionJournalEntry = CapitalActionJournalEntry
