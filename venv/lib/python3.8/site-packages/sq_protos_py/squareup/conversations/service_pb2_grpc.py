# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.conversations.bot import bot_service_pb2 as squareup_dot_conversations_dot_bot_dot_bot__service__pb2
from sq_protos_py.squareup.conversations import service_pb2 as squareup_dot_conversations_dot_service__pb2


class ConversationsServiceStub(object):
    """*
    Public endpoints for the Conversations service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnqueueSms = channel.unary_unary(
                '/squareup.conversations.ConversationsService/EnqueueSms',
                request_serializer=squareup_dot_conversations_dot_service__pb2.EnqueueSmsRequest.SerializeToString,
                response_deserializer=squareup_dot_conversations_dot_service__pb2.EnqueueSmsResponse.FromString,
                )
        self.FindTranscript = channel.unary_unary(
                '/squareup.conversations.ConversationsService/FindTranscript',
                request_serializer=squareup_dot_conversations_dot_bot_dot_bot__service__pb2.FindTranscriptRequest.SerializeToString,
                response_deserializer=squareup_dot_conversations_dot_bot_dot_bot__service__pb2.FindTranscriptResponse.FromString,
                )


class ConversationsServiceServicer(object):
    """*
    Public endpoints for the Conversations service.
    """

    def EnqueueSms(self, request, context):
        """*
        Request to send a message. This Rpc may return before the message is
        actually sent. Intended to be an almost drop-in replacement for
        SmsService's EnqueueSms.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindTranscript(self, request, context):
        """*
        Obtain a page of transcripts based on a set of filters specified in the
        request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConversationsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnqueueSms': grpc.unary_unary_rpc_method_handler(
                    servicer.EnqueueSms,
                    request_deserializer=squareup_dot_conversations_dot_service__pb2.EnqueueSmsRequest.FromString,
                    response_serializer=squareup_dot_conversations_dot_service__pb2.EnqueueSmsResponse.SerializeToString,
            ),
            'FindTranscript': grpc.unary_unary_rpc_method_handler(
                    servicer.FindTranscript,
                    request_deserializer=squareup_dot_conversations_dot_bot_dot_bot__service__pb2.FindTranscriptRequest.FromString,
                    response_serializer=squareup_dot_conversations_dot_bot_dot_bot__service__pb2.FindTranscriptResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.conversations.ConversationsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConversationsService(object):
    """*
    Public endpoints for the Conversations service.
    """

    @staticmethod
    def EnqueueSms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.conversations.ConversationsService/EnqueueSms',
            squareup_dot_conversations_dot_service__pb2.EnqueueSmsRequest.SerializeToString,
            squareup_dot_conversations_dot_service__pb2.EnqueueSmsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindTranscript(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.conversations.ConversationsService/FindTranscript',
            squareup_dot_conversations_dot_bot_dot_bot__service__pb2.FindTranscriptRequest.SerializeToString,
            squareup_dot_conversations_dot_bot_dot_bot__service__pb2.FindTranscriptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
