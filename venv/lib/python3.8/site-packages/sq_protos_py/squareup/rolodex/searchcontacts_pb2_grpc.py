# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.rolodex import searchcontacts_pb2 as squareup_dot_rolodex_dot_searchcontacts__pb2


class RolodexSearchContactsServiceStub(object):
    """RolodexSearchContactsService provides API to search contacts.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchContacts = channel.unary_unary(
                '/squareup.rolodex.RolodexSearchContactsService/SearchContacts',
                request_serializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsResponse.FromString,
                )


class RolodexSearchContactsServiceServicer(object):
    """RolodexSearchContactsService provides API to search contacts.
    """

    def SearchContacts(self, request, context):
        """*
        Search contacts based on a set of criterion provided by clients.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RolodexSearchContactsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchContacts': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchContacts,
                    request_deserializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsRequest.FromString,
                    response_serializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rolodex.RolodexSearchContactsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RolodexSearchContactsService(object):
    """RolodexSearchContactsService provides API to search contacts.
    """

    @staticmethod
    def SearchContacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodex.RolodexSearchContactsService/SearchContacts',
            squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsRequest.SerializeToString,
            squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InternalRolodexSearchContactsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchContactsInternal = channel.unary_unary(
                '/squareup.rolodex.InternalRolodexSearchContactsService/SearchContactsInternal',
                request_serializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsResponse.FromString,
                )


class InternalRolodexSearchContactsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchContactsInternal(self, request, context):
        """*
        Search contacts based on a set of criterion provided by clients.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalRolodexSearchContactsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchContactsInternal': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchContactsInternal,
                    request_deserializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsRequest.FromString,
                    response_serializer=squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rolodex.InternalRolodexSearchContactsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalRolodexSearchContactsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchContactsInternal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodex.InternalRolodexSearchContactsService/SearchContactsInternal',
            squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsRequest.SerializeToString,
            squareup_dot_rolodex_dot_searchcontacts__pb2.SearchContactsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
