# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.bletchley import service_pb2 as squareup_dot_bletchley_dot_service__pb2


class BletchleyServiceStub(object):
    """* The Bletchley online decryption service 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReserveKey = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/ReserveKey',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.ReserveKeyRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.ReserveKeyResponse.FromString,
                )
        self.RetrieveKey = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/RetrieveKey',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyResponse.FromString,
                )
        self.DeleteKey = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/DeleteKey',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.DeleteKeyRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.DeleteKeyResponse.FromString,
                )
        self.Decrypt = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/Decrypt',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.DecryptRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.DecryptResponse.FromString,
                )
        self.RetrieveKeyPool = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/RetrieveKeyPool',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyPoolRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyPoolResponse.FromString,
                )
        self.UpdateKeyACL = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/UpdateKeyACL',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.UpdateKeyACLRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.UpdateKeyACLResponse.FromString,
                )
        self.KeysInfo = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/KeysInfo',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.KeysInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.KeysInfoResponse.FromString,
                )
        self.SaveKeys = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/SaveKeys',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.SaveKeysRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.SaveKeysResponse.FromString,
                )
        self.ListKeys = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/ListKeys',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.ListKeysRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.ListKeysResponse.FromString,
                )
        self.ListDeletedKeys = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/ListDeletedKeys',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.ListDeletedKeysRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.ListDeletedKeysResponse.FromString,
                )
        self.FetchKeys = channel.unary_unary(
                '/squareup.bletchley.service.BletchleyService/FetchKeys',
                request_serializer=squareup_dot_bletchley_dot_service__pb2.FetchKeysRequest.SerializeToString,
                response_deserializer=squareup_dot_bletchley_dot_service__pb2.FetchKeysResponse.FromString,
                )


class BletchleyServiceServicer(object):
    """* The Bletchley online decryption service 
    """

    def ReserveKey(self, request, context):
        """* Reserve a new key 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveKey(self, request, context):
        """* Retrieve the public half of an already reserved key 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKey(self, request, context):
        """* Delete a key 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decrypt(self, request, context):
        """* Decrypt an encrypted message 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveKeyPool(self, request, context):
        """* Gets active keys in a given key pool 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateKeyACL(self, request, context):
        """* Updates a Key acl and returns a new keyId 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeysInfo(self, request, context):
        """*
        The following two APIs are for Bletchley-Haas integration, allowing Haas to collect
        information on keys known to Bletchley.

        IMPORTANT NOTICE: given that Bletchley is multi-master, Haas risks seeing inconsistent
        information when querying Bletchley across datacenters. The easiest fix for now is to make
        sure that Haas only talks to Bletchley in the same datacenter.

        These APIs are deprecated
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListKeys(self, request, context):
        """*
        The following APIs are for Bletchley-Haas integration, allowing Haas to collect
        information on keys known to Bletchley.

        IMPORTANT NOTICE: given that Bletchley is multi-master, Haas may see inconsistent
        information when querying Bletchley across datacenters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeletedKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BletchleyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReserveKey': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveKey,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.ReserveKeyRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.ReserveKeyResponse.SerializeToString,
            ),
            'RetrieveKey': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveKey,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyResponse.SerializeToString,
            ),
            'DeleteKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKey,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.DeleteKeyRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.DeleteKeyResponse.SerializeToString,
            ),
            'Decrypt': grpc.unary_unary_rpc_method_handler(
                    servicer.Decrypt,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.DecryptRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.DecryptResponse.SerializeToString,
            ),
            'RetrieveKeyPool': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveKeyPool,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyPoolRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.RetrieveKeyPoolResponse.SerializeToString,
            ),
            'UpdateKeyACL': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateKeyACL,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.UpdateKeyACLRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.UpdateKeyACLResponse.SerializeToString,
            ),
            'KeysInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.KeysInfo,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.KeysInfoRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.KeysInfoResponse.SerializeToString,
            ),
            'SaveKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveKeys,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.SaveKeysRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.SaveKeysResponse.SerializeToString,
            ),
            'ListKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKeys,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.ListKeysRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.ListKeysResponse.SerializeToString,
            ),
            'ListDeletedKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeletedKeys,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.ListDeletedKeysRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.ListDeletedKeysResponse.SerializeToString,
            ),
            'FetchKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchKeys,
                    request_deserializer=squareup_dot_bletchley_dot_service__pb2.FetchKeysRequest.FromString,
                    response_serializer=squareup_dot_bletchley_dot_service__pb2.FetchKeysResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.bletchley.service.BletchleyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BletchleyService(object):
    """* The Bletchley online decryption service 
    """

    @staticmethod
    def ReserveKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/ReserveKey',
            squareup_dot_bletchley_dot_service__pb2.ReserveKeyRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.ReserveKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/RetrieveKey',
            squareup_dot_bletchley_dot_service__pb2.RetrieveKeyRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.RetrieveKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/DeleteKey',
            squareup_dot_bletchley_dot_service__pb2.DeleteKeyRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.DeleteKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Decrypt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/Decrypt',
            squareup_dot_bletchley_dot_service__pb2.DecryptRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.DecryptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveKeyPool(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/RetrieveKeyPool',
            squareup_dot_bletchley_dot_service__pb2.RetrieveKeyPoolRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.RetrieveKeyPoolResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateKeyACL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/UpdateKeyACL',
            squareup_dot_bletchley_dot_service__pb2.UpdateKeyACLRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.UpdateKeyACLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KeysInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/KeysInfo',
            squareup_dot_bletchley_dot_service__pb2.KeysInfoRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.KeysInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/SaveKeys',
            squareup_dot_bletchley_dot_service__pb2.SaveKeysRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.SaveKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/ListKeys',
            squareup_dot_bletchley_dot_service__pb2.ListKeysRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.ListKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDeletedKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/ListDeletedKeys',
            squareup_dot_bletchley_dot_service__pb2.ListDeletedKeysRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.ListDeletedKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.bletchley.service.BletchleyService/FetchKeys',
            squareup_dot_bletchley_dot_service__pb2.FetchKeysRequest.SerializeToString,
            squareup_dot_bletchley_dot_service__pb2.FetchKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
