# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from sq_protos_py.squareup.giftcard.model.egift_theme_category_pb2 import (
    EGiftThemeCategory as squareup___giftcard___model___egift_theme_category_pb2___EGiftThemeCategory,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class EGiftTheme(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class AvailableDateRange(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def start_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

        @property
        def end_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

        def __init__(self,
            *,
            start_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
            end_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"end_date",b"end_date",u"start_date",b"start_date"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"end_date",b"end_date",u"start_date",b"start_date"]) -> None: ...
    type___AvailableDateRange = AvailableDateRange

    image_url: typing___Text = ...
    background_color: typing___Text = ...
    read_only_token: typing___Text = ...
    description: typing___Text = ...

    @property
    def available_date_range(self) -> type___EGiftTheme.AvailableDateRange: ...

    @property
    def category(self) -> squareup___giftcard___model___egift_theme_category_pb2___EGiftThemeCategory: ...

    def __init__(self,
        *,
        image_url : typing___Optional[typing___Text] = None,
        background_color : typing___Optional[typing___Text] = None,
        read_only_token : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        available_date_range : typing___Optional[type___EGiftTheme.AvailableDateRange] = None,
        category : typing___Optional[squareup___giftcard___model___egift_theme_category_pb2___EGiftThemeCategory] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"available_date_range",b"available_date_range",u"background_color",b"background_color",u"category",b"category",u"description",b"description",u"image_url",b"image_url",u"read_only_token",b"read_only_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"available_date_range",b"available_date_range",u"background_color",b"background_color",u"category",b"category",u"description",b"description",u"image_url",b"image_url",u"read_only_token",b"read_only_token"]) -> None: ...
type___EGiftTheme = EGiftTheme
