# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.empermissions.displaypermissions.permission_flags_pb2 import (
    PermissionFlagValue as squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue,
)

from sq_protos_py.squareup.empermissions.displaypermissions.permission_group_flags_pb2 import (
    PermissionGroupFlagValue as squareup___empermissions___displaypermissions___permission_group_flags_pb2___PermissionGroupFlagValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

AccessPointFlagValue = typing___NewType('AccessPointFlagValue', builtin___int)
type___AccessPointFlagValue = AccessPointFlagValue
AccessPointFlag: _AccessPointFlag
class _AccessPointFlag(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AccessPointFlagValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ACCESS_POINT_DO_NOT_USE = typing___cast(AccessPointFlagValue, 0)
    SHARED_POS = typing___cast(AccessPointFlagValue, 1)
    DASHBOARD = typing___cast(AccessPointFlagValue, 2)
    MOBILE_POS = typing___cast(AccessPointFlagValue, 3)
ACCESS_POINT_DO_NOT_USE = typing___cast(AccessPointFlagValue, 0)
SHARED_POS = typing___cast(AccessPointFlagValue, 1)
DASHBOARD = typing___cast(AccessPointFlagValue, 2)
MOBILE_POS = typing___cast(AccessPointFlagValue, 3)
type___AccessPointFlag = AccessPointFlag

RoleTypeValue = typing___NewType('RoleTypeValue', builtin___int)
type___RoleTypeValue = RoleTypeValue
RoleType: _RoleType
class _RoleType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RoleTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ROLE_TYPE_DO_NOT_USE = typing___cast(RoleTypeValue, 0)
    CUSTOM = typing___cast(RoleTypeValue, 1)
    ACCOUNT_OWNER = typing___cast(RoleTypeValue, 2)
    TEAM_PERMISSIONS = typing___cast(RoleTypeValue, 3)
ROLE_TYPE_DO_NOT_USE = typing___cast(RoleTypeValue, 0)
CUSTOM = typing___cast(RoleTypeValue, 1)
ACCOUNT_OWNER = typing___cast(RoleTypeValue, 2)
TEAM_PERMISSIONS = typing___cast(RoleTypeValue, 3)
type___RoleType = RoleType

class PermissionSet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    name: typing___Text = ...
    full_access: builtin___bool = ...
    role_type: type___RoleTypeValue = ...
    access_point_flag_bitset: builtin___bytes = ...

    @property
    def enabled_permissions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___EnabledPermission]: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        full_access : typing___Optional[builtin___bool] = None,
        role_type : typing___Optional[type___RoleTypeValue] = None,
        access_point_flag_bitset : typing___Optional[builtin___bytes] = None,
        enabled_permissions : typing___Optional[typing___Iterable[type___EnabledPermission]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"access_point_flag_bitset",b"access_point_flag_bitset",u"full_access",b"full_access",u"name",b"name",u"role_type",b"role_type",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"access_point_flag_bitset",b"access_point_flag_bitset",u"enabled_permissions",b"enabled_permissions",u"full_access",b"full_access",u"name",b"name",u"role_type",b"role_type",u"token",b"token"]) -> None: ...
type___PermissionSet = PermissionSet

class Permission(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Permission.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        TYPE_DO_NOT_USE = typing___cast(Permission.TypeValue, 0)
        REGULAR = typing___cast(Permission.TypeValue, 1)
        INHERIT_PARENT = typing___cast(Permission.TypeValue, 2)
        FULL_ACCESS_ONLY = typing___cast(Permission.TypeValue, 3)
    TYPE_DO_NOT_USE = typing___cast(Permission.TypeValue, 0)
    REGULAR = typing___cast(Permission.TypeValue, 1)
    INHERIT_PARENT = typing___cast(Permission.TypeValue, 2)
    FULL_ACCESS_ONLY = typing___cast(Permission.TypeValue, 3)
    type___Type = Type

    permission_flag: squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue = ...
    name: typing___Text = ...
    supported_access_point_flags_bitset: builtin___bytes = ...
    has_filters: builtin___bool = ...
    type: type___Permission.TypeValue = ...
    enabled_by_default_if_group_enabled: builtin___bool = ...
    description: typing___Text = ...

    @property
    def children(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Permission]: ...

    def __init__(self,
        *,
        permission_flag : typing___Optional[squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue] = None,
        name : typing___Optional[typing___Text] = None,
        supported_access_point_flags_bitset : typing___Optional[builtin___bytes] = None,
        has_filters : typing___Optional[builtin___bool] = None,
        type : typing___Optional[type___Permission.TypeValue] = None,
        enabled_by_default_if_group_enabled : typing___Optional[builtin___bool] = None,
        children : typing___Optional[typing___Iterable[type___Permission]] = None,
        description : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"description",b"description",u"enabled_by_default_if_group_enabled",b"enabled_by_default_if_group_enabled",u"has_filters",b"has_filters",u"name",b"name",u"permission_flag",b"permission_flag",u"supported_access_point_flags_bitset",b"supported_access_point_flags_bitset",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"children",b"children",u"description",b"description",u"enabled_by_default_if_group_enabled",b"enabled_by_default_if_group_enabled",u"has_filters",b"has_filters",u"name",b"name",u"permission_flag",b"permission_flag",u"supported_access_point_flags_bitset",b"supported_access_point_flags_bitset",u"type",b"type"]) -> None: ...
type___Permission = Permission

class PermissionGroup(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class SubgroupList(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def list(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___PermissionGroup.Subgroup]: ...

        def __init__(self,
            *,
            list : typing___Optional[typing___Iterable[type___PermissionGroup.Subgroup]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"list",b"list"]) -> None: ...
    type___SubgroupList = SubgroupList

    class Subgroup(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        header: typing___Text = ...

        @property
        def permissions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Permission]: ...

        def __init__(self,
            *,
            header : typing___Optional[typing___Text] = None,
            permissions : typing___Optional[typing___Iterable[type___Permission]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"header",b"header"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"header",b"header",u"permissions",b"permissions"]) -> None: ...
    type___Subgroup = Subgroup

    class PermissionAlias(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def permission(self) -> type___Permission: ...

        def __init__(self,
            *,
            permission : typing___Optional[type___Permission] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"permission",b"permission"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"permission",b"permission"]) -> None: ...
    type___PermissionAlias = PermissionAlias

    permission_group_flag: squareup___empermissions___displaypermissions___permission_group_flags_pb2___PermissionGroupFlagValue = ...
    name: typing___Text = ...
    help_text: typing___Text = ...
    small_svg_icon_url: typing___Text = ...
    medium_svg_icon_url: typing___Text = ...

    @property
    def subgroups(self) -> type___PermissionGroup.SubgroupList: ...

    @property
    def permission_alias(self) -> type___PermissionGroup.PermissionAlias: ...

    def __init__(self,
        *,
        permission_group_flag : typing___Optional[squareup___empermissions___displaypermissions___permission_group_flags_pb2___PermissionGroupFlagValue] = None,
        name : typing___Optional[typing___Text] = None,
        help_text : typing___Optional[typing___Text] = None,
        small_svg_icon_url : typing___Optional[typing___Text] = None,
        medium_svg_icon_url : typing___Optional[typing___Text] = None,
        subgroups : typing___Optional[type___PermissionGroup.SubgroupList] = None,
        permission_alias : typing___Optional[type___PermissionGroup.PermissionAlias] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"help_text",b"help_text",u"medium_svg_icon_url",b"medium_svg_icon_url",u"name",b"name",u"permission_alias",b"permission_alias",u"permission_group_flag",b"permission_group_flag",u"small_svg_icon_url",b"small_svg_icon_url",u"subgroups",b"subgroups",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"help_text",b"help_text",u"medium_svg_icon_url",b"medium_svg_icon_url",u"name",b"name",u"permission_alias",b"permission_alias",u"permission_group_flag",b"permission_group_flag",u"small_svg_icon_url",b"small_svg_icon_url",u"subgroups",b"subgroups",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"type",b"type"]) -> typing_extensions___Literal["subgroups","permission_alias"]: ...
type___PermissionGroup = PermissionGroup

class EnabledPermission(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    permission_flag: squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue = ...
    filter_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        permission_flag : typing___Optional[squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue] = None,
        filter_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"permission_flag",b"permission_flag"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter_tokens",b"filter_tokens",u"permission_flag",b"permission_flag"]) -> None: ...
type___EnabledPermission = EnabledPermission

class FilterEntities(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Entity(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        filter_token: typing___Text = ...
        title: typing___Text = ...
        is_read_only: builtin___bool = ...
        is_full_access_only: builtin___bool = ...

        def __init__(self,
            *,
            filter_token : typing___Optional[typing___Text] = None,
            title : typing___Optional[typing___Text] = None,
            is_read_only : typing___Optional[builtin___bool] = None,
            is_full_access_only : typing___Optional[builtin___bool] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"filter_token",b"filter_token",u"is_full_access_only",b"is_full_access_only",u"is_read_only",b"is_read_only",u"title",b"title"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"filter_token",b"filter_token",u"is_full_access_only",b"is_full_access_only",u"is_read_only",b"is_read_only",u"title",b"title"]) -> None: ...
    type___Entity = Entity

    class Name(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        title: typing___Text = ...
        one: typing___Text = ...
        other: typing___Text = ...
        all: typing___Text = ...
        description: typing___Text = ...
        action: typing___Text = ...
        select_hint: typing___Text = ...

        def __init__(self,
            *,
            title : typing___Optional[typing___Text] = None,
            one : typing___Optional[typing___Text] = None,
            other : typing___Optional[typing___Text] = None,
            all : typing___Optional[typing___Text] = None,
            description : typing___Optional[typing___Text] = None,
            action : typing___Optional[typing___Text] = None,
            select_hint : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"all",b"all",u"description",b"description",u"one",b"one",u"other",b"other",u"select_hint",b"select_hint",u"title",b"title"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"all",b"all",u"description",b"description",u"one",b"one",u"other",b"other",u"select_hint",b"select_hint",u"title",b"title"]) -> None: ...
    type___Name = Name

    permission_flag: squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue = ...
    entity_name: typing___Text = ...

    @property
    def name(self) -> type___FilterEntities.Name: ...

    @property
    def entities(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___FilterEntities.Entity]: ...

    def __init__(self,
        *,
        permission_flag : typing___Optional[squareup___empermissions___displaypermissions___permission_flags_pb2___PermissionFlagValue] = None,
        entity_name : typing___Optional[typing___Text] = None,
        name : typing___Optional[type___FilterEntities.Name] = None,
        entities : typing___Optional[typing___Iterable[type___FilterEntities.Entity]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"entity_name",b"entity_name",u"name",b"name",u"permission_flag",b"permission_flag"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"entities",b"entities",u"entity_name",b"entity_name",u"name",b"name",u"permission_flag",b"permission_flag"]) -> None: ...
type___FilterEntities = FilterEntities
