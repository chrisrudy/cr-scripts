# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.checklist import service_pb2 as squareup_dot_checklist_dot_service__pb2
from sq_protos_py.squareup.common import messages_pb2 as squareup_dot_common_dot_messages__pb2


class CustomerSignalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSignalValue = channel.unary_unary(
                '/squareup.checklist.service.CustomerSignalService/GetSignalValue',
                request_serializer=squareup_dot_checklist_dot_service__pb2.GetSignalValueRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.GetSignalValueResponse.FromString,
                )
        self.GetBatchSignalValue = channel.unary_unary(
                '/squareup.checklist.service.CustomerSignalService/GetBatchSignalValue',
                request_serializer=squareup_dot_checklist_dot_service__pb2.GetBatchSignalValueRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.GetSignalValueResponse.FromString,
                )


class CustomerSignalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSignalValue(self, request, context):
        """*
        Returns a signal fetch result for the identifier for this named signal.

        Note that if a signal fetch result is absent, it means that we have not seen any data about
        this identifier, and a default should be used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBatchSignalValue(self, request, context):
        """*
        Returns signal fetch result for the identifiers for all signals.

        Note that if a signal fetch result is absent, it means that we have not seen any data about
        these identifiers, and a default should be used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerSignalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSignalValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSignalValue,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.GetSignalValueRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.GetSignalValueResponse.SerializeToString,
            ),
            'GetBatchSignalValue': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBatchSignalValue,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.GetBatchSignalValueRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.GetSignalValueResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.checklist.service.CustomerSignalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerSignalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSignalValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.CustomerSignalService/GetSignalValue',
            squareup_dot_checklist_dot_service__pb2.GetSignalValueRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.GetSignalValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBatchSignalValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.CustomerSignalService/GetBatchSignalValue',
            squareup_dot_checklist_dot_service__pb2.GetBatchSignalValueRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.GetSignalValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ChecklistServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChecklist = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/GetChecklist',
                request_serializer=squareup_dot_checklist_dot_service__pb2.GetChecklistRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.GetChecklistResponse.FromString,
                )
        self.DismissActionItem = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/DismissActionItem',
                request_serializer=squareup_dot_checklist_dot_service__pb2.DismissActionItemRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.DismissActionItemResponse.FromString,
                )
        self.ShouldShowChecklist = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/ShouldShowChecklist',
                request_serializer=squareup_dot_checklist_dot_service__pb2.ShouldShowChecklistRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.ShouldShowChecklistResponse.FromString,
                )
        self.GetMilestones = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/GetMilestones',
                request_serializer=squareup_dot_checklist_dot_service__pb2.GetMilestonesRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.GetMilestonesResponse.FromString,
                )
        self.UndismissActionItem = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/UndismissActionItem',
                request_serializer=squareup_dot_checklist_dot_service__pb2.UndismissActionItemRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.UndismissActionItemResponse.FromString,
                )
        self.CompleteActionItem = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/CompleteActionItem',
                request_serializer=squareup_dot_checklist_dot_service__pb2.CompleteActionItemRequest.SerializeToString,
                response_deserializer=squareup_dot_checklist_dot_service__pb2.CompleteActionItemResponse.FromString,
                )
        self.DismissSetupGuide = channel.unary_unary(
                '/squareup.checklist.service.ChecklistService/DismissSetupGuide',
                request_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )


class ChecklistServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetChecklist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DismissActionItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShouldShowChecklist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMilestones(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UndismissActionItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteActionItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DismissSetupGuide(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChecklistServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChecklist': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChecklist,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.GetChecklistRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.GetChecklistResponse.SerializeToString,
            ),
            'DismissActionItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DismissActionItem,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.DismissActionItemRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.DismissActionItemResponse.SerializeToString,
            ),
            'ShouldShowChecklist': grpc.unary_unary_rpc_method_handler(
                    servicer.ShouldShowChecklist,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.ShouldShowChecklistRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.ShouldShowChecklistResponse.SerializeToString,
            ),
            'GetMilestones': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMilestones,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.GetMilestonesRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.GetMilestonesResponse.SerializeToString,
            ),
            'UndismissActionItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UndismissActionItem,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.UndismissActionItemRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.UndismissActionItemResponse.SerializeToString,
            ),
            'CompleteActionItem': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteActionItem,
                    request_deserializer=squareup_dot_checklist_dot_service__pb2.CompleteActionItemRequest.FromString,
                    response_serializer=squareup_dot_checklist_dot_service__pb2.CompleteActionItemResponse.SerializeToString,
            ),
            'DismissSetupGuide': grpc.unary_unary_rpc_method_handler(
                    servicer.DismissSetupGuide,
                    request_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.checklist.service.ChecklistService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChecklistService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetChecklist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/GetChecklist',
            squareup_dot_checklist_dot_service__pb2.GetChecklistRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.GetChecklistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DismissActionItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/DismissActionItem',
            squareup_dot_checklist_dot_service__pb2.DismissActionItemRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.DismissActionItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShouldShowChecklist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/ShouldShowChecklist',
            squareup_dot_checklist_dot_service__pb2.ShouldShowChecklistRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.ShouldShowChecklistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMilestones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/GetMilestones',
            squareup_dot_checklist_dot_service__pb2.GetMilestonesRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.GetMilestonesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UndismissActionItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/UndismissActionItem',
            squareup_dot_checklist_dot_service__pb2.UndismissActionItemRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.UndismissActionItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteActionItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/CompleteActionItem',
            squareup_dot_checklist_dot_service__pb2.CompleteActionItemRequest.SerializeToString,
            squareup_dot_checklist_dot_service__pb2.CompleteActionItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DismissSetupGuide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.checklist.service.ChecklistService/DismissSetupGuide',
            squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
