# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.engbrain import service_pb2 as squareup_dot_engbrain_dot_service__pb2


class EngbrainServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FeedCursorOp = channel.unary_unary(
                '/squareup.engbrain.service.EngbrainService/FeedCursorOp',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.FeedCursorOpReqResp.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.FeedCursorOpReqResp.FromString,
                )
        self.Oncall = channel.unary_unary(
                '/squareup.engbrain.service.EngbrainService/Oncall',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.OncallReq.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.OncallResp.FromString,
                )
        self.DecodeAlert = channel.unary_unary(
                '/squareup.engbrain.service.EngbrainService/DecodeAlert',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.DecodeAlertReq.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.DecodeAlertResp.FromString,
                )
        self.PingOrca = channel.unary_unary(
                '/squareup.engbrain.service.EngbrainService/PingOrca',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.PingOrcaReq.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.PingOrcaResp.FromString,
                )


class EngbrainServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FeedCursorOp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Oncall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecodeAlert(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PingOrca(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EngbrainServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FeedCursorOp': grpc.unary_unary_rpc_method_handler(
                    servicer.FeedCursorOp,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.FeedCursorOpReqResp.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.FeedCursorOpReqResp.SerializeToString,
            ),
            'Oncall': grpc.unary_unary_rpc_method_handler(
                    servicer.Oncall,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.OncallReq.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.OncallResp.SerializeToString,
            ),
            'DecodeAlert': grpc.unary_unary_rpc_method_handler(
                    servicer.DecodeAlert,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.DecodeAlertReq.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.DecodeAlertResp.SerializeToString,
            ),
            'PingOrca': grpc.unary_unary_rpc_method_handler(
                    servicer.PingOrca,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.PingOrcaReq.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.PingOrcaResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.engbrain.service.EngbrainService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EngbrainService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FeedCursorOp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.EngbrainService/FeedCursorOp',
            squareup_dot_engbrain_dot_service__pb2.FeedCursorOpReqResp.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.FeedCursorOpReqResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Oncall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.EngbrainService/Oncall',
            squareup_dot_engbrain_dot_service__pb2.OncallReq.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.OncallResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecodeAlert(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.EngbrainService/DecodeAlert',
            squareup_dot_engbrain_dot_service__pb2.DecodeAlertReq.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.DecodeAlertResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PingOrca(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.EngbrainService/PingOrca',
            squareup_dot_engbrain_dot_service__pb2.PingOrcaReq.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.PingOrcaResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class KvStoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Put = channel.unary_unary(
                '/squareup.engbrain.service.KvStoreService/Put',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.KV.FromString,
                )
        self.PutOrUpdate = channel.unary_unary(
                '/squareup.engbrain.service.KvStoreService/PutOrUpdate',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.KV.FromString,
                )
        self.Get = channel.unary_unary(
                '/squareup.engbrain.service.KvStoreService/Get',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.KV.FromString,
                )
        self.List = channel.unary_unary(
                '/squareup.engbrain.service.KvStoreService/List',
                request_serializer=squareup_dot_engbrain_dot_service__pb2.ListKvReq.SerializeToString,
                response_deserializer=squareup_dot_engbrain_dot_service__pb2.ListKvResp.FromString,
                )


class KvStoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutOrUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KvStoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.KV.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
            ),
            'PutOrUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.PutOrUpdate,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.KV.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.KV.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
            ),
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=squareup_dot_engbrain_dot_service__pb2.ListKvReq.FromString,
                    response_serializer=squareup_dot_engbrain_dot_service__pb2.ListKvResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.engbrain.service.KvStoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KvStoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.KvStoreService/Put',
            squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.KV.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutOrUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.KvStoreService/PutOrUpdate',
            squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.KV.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.KvStoreService/Get',
            squareup_dot_engbrain_dot_service__pb2.KV.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.KV.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.engbrain.service.KvStoreService/List',
            squareup_dot_engbrain_dot_service__pb2.ListKvReq.SerializeToString,
            squareup_dot_engbrain_dot_service__pb2.ListKvResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
