# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.receiptsapi.message import list_receipts_pb2 as squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2
from sq_protos_py.squareup.receiptsapi.message import send_receipt_pb2 as squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2


class ReceiptsApiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListReceipts = channel.unary_unary(
                '/squareup.receiptsapi.ReceiptsApiService/ListReceipts',
                request_serializer=squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2.ListReceiptsRequest.SerializeToString,
                response_deserializer=squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2.ListReceiptsResponse.FromString,
                )
        self.SendReceipt = channel.unary_unary(
                '/squareup.receiptsapi.ReceiptsApiService/SendReceipt',
                request_serializer=squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2.SendReceiptRequest.SerializeToString,
                response_deserializer=squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2.SendReceiptResponse.FromString,
                )


class ReceiptsApiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListReceipts(self, request, context):
        """--
        @desc Method definition for the [ListReceipts](#endpoint-listreceipts) endpoint.
        Retrieve all of the receipts sent for a given payment. Most of the time, this will
        only be one receipt, however, it is possible to have multiple receipts for a single
        payment.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendReceipt(self, request, context):
        """--
        @desc Method definition for the [SendReceipt](#endpoint-sendreceipt) endpoint.
        Send either an SMS or email receipt for a payment.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReceiptsApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListReceipts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListReceipts,
                    request_deserializer=squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2.ListReceiptsRequest.FromString,
                    response_serializer=squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2.ListReceiptsResponse.SerializeToString,
            ),
            'SendReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.SendReceipt,
                    request_deserializer=squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2.SendReceiptRequest.FromString,
                    response_serializer=squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2.SendReceiptResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.receiptsapi.ReceiptsApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ReceiptsApiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListReceipts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.receiptsapi.ReceiptsApiService/ListReceipts',
            squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2.ListReceiptsRequest.SerializeToString,
            squareup_dot_receiptsapi_dot_message_dot_list__receipts__pb2.ListReceiptsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.receiptsapi.ReceiptsApiService/SendReceipt',
            squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2.SendReceiptRequest.SerializeToString,
            squareup_dot_receiptsapi_dot_message_dot_send__receipt__pb2.SendReceiptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
