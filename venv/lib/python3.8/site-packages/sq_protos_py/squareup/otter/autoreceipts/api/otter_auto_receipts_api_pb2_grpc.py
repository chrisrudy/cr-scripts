# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.otter.autoreceipts.api import otter_auto_receipts_api_pb2 as squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2


class AutoReceiptsServiceStub(object):
    """*
    Service that supports all auto-receipt operations.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DecideIntentToSendAutoReceipt = channel.unary_unary(
                '/squareup.otter.autoreceipts.api.AutoReceiptsService/DecideIntentToSendAutoReceipt',
                request_serializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.DecideIntentToSendAutoReceiptRequest.SerializeToString,
                response_deserializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.DecideIntentToSendAutoReceiptResponse.FromString,
                )
        self.ShouldSendAutoReceipt = channel.unary_unary(
                '/squareup.otter.autoreceipts.api.AutoReceiptsService/ShouldSendAutoReceipt',
                request_serializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.ShouldSendAutoReceiptRequest.SerializeToString,
                response_deserializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.ShouldSendAutoReceiptResponse.FromString,
                )


class AutoReceiptsServiceServicer(object):
    """*
    Service that supports all auto-receipt operations.
    """

    def DecideIntentToSendAutoReceipt(self, request, context):
        """*
        Called by Regis during AddTender (auth), in parallel with the back-end card auth.

        Based on a series of rules and buyer and merchant preferences, a decision is made
        about whether or not to send an auto-receipt.

        If an auto-receipt should be sent, a row is written to the auto_receipt_intent table,
        containing the tender_client_token. A boolean is returned, and Regis is expected
        to return an indication to Register that the receipt screen should NOT be shown. If
        subsequent requests are made with the same bill_token+tender_client_token pair,
        the request is successful and the same results are returned as the first request,
        but no new auto receipt intent row is written.

        Later on, when the capture corresponding to the tender_client_token comes through on the
        omnibus bill event feed (which otter/auto-receipt consumes), an auto receipt is sent
        via the receipts service, and the row is deleted.

        If an auto receipt should not be sent, false is returned, and Regis is expected to
        return an indication to Register that the receipt screen should be shown. Once a buyer
        enters in their email address or phone number, a manual receipt is sent via the receipts
        service. In other words, the auto-receipts capability is not used.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShouldSendAutoReceipt(self, request, context):
        """*
        Called by Terminal to find out based on a series of rules and buyer and merchant preferences
        if auto receipt should be send.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AutoReceiptsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DecideIntentToSendAutoReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.DecideIntentToSendAutoReceipt,
                    request_deserializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.DecideIntentToSendAutoReceiptRequest.FromString,
                    response_serializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.DecideIntentToSendAutoReceiptResponse.SerializeToString,
            ),
            'ShouldSendAutoReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.ShouldSendAutoReceipt,
                    request_deserializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.ShouldSendAutoReceiptRequest.FromString,
                    response_serializer=squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.ShouldSendAutoReceiptResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.otter.autoreceipts.api.AutoReceiptsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AutoReceiptsService(object):
    """*
    Service that supports all auto-receipt operations.
    """

    @staticmethod
    def DecideIntentToSendAutoReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.otter.autoreceipts.api.AutoReceiptsService/DecideIntentToSendAutoReceipt',
            squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.DecideIntentToSendAutoReceiptRequest.SerializeToString,
            squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.DecideIntentToSendAutoReceiptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShouldSendAutoReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.otter.autoreceipts.api.AutoReceiptsService/ShouldSendAutoReceipt',
            squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.ShouldSendAutoReceiptRequest.SerializeToString,
            squareup_dot_otter_dot_autoreceipts_dot_api_dot_otter__auto__receipts__api__pb2.ShouldSendAutoReceiptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
