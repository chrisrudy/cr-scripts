# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.knowledge.graph.common_pb2 import (
    Metadata as squareup___knowledge___graph___common_pb2___Metadata,
)

from sq_protos_py.squareup.knowledge.graph.types_pb2 import (
    NodeTypeValue as squareup___knowledge___graph___types_pb2___NodeTypeValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class NodeId(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    node_type: squareup___knowledge___graph___types_pb2___NodeTypeValue = ...
    token: typing___Text = ...

    def __init__(self,
        *,
        node_type : typing___Optional[squareup___knowledge___graph___types_pb2___NodeTypeValue] = None,
        token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"node_type",b"node_type",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"node_type",b"node_type",u"token",b"token"]) -> None: ...
type___NodeId = NodeId

class Node(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def node_id(self) -> type___NodeId: ...

    @property
    def metadata(self) -> squareup___knowledge___graph___common_pb2___Metadata: ...

    def __init__(self,
        *,
        node_id : typing___Optional[type___NodeId] = None,
        metadata : typing___Optional[squareup___knowledge___graph___common_pb2___Metadata] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"node_id",b"node_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"node_id",b"node_id"]) -> None: ...
type___Node = Node
