# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/knowledge/graph/service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.common import validation_pb2 as squareup_dot_common_dot_validation__pb2
from sq_protos_py.squareup.sake import options_pb2 as squareup_dot_sake_dot_options__pb2
from sq_protos_py.squareup.riskapi.wrapper import wrapper_pb2 as squareup_dot_riskapi_dot_wrapper_dot_wrapper__pb2
from sq_protos_py.squareup.knowledge.graph import nodes_pb2 as squareup_dot_knowledge_dot_graph_dot_nodes__pb2
from sq_protos_py.squareup.knowledge.graph import types_pb2 as squareup_dot_knowledge_dot_graph_dot_types__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/knowledge/graph/service.proto',
  package='squareup.knowledge.graph.service',
  syntax='proto2',
  serialized_options=_b('\n+com.squareup.protos.knowledge.graph.service\210\001\001'),
  serialized_pb=_b('\n&squareup/knowledge/graph/service.proto\x12 squareup.knowledge.graph.service\x1a squareup/common/validation.proto\x1a\x1bsquareup/sake/options.proto\x1a&squareup/riskapi/wrapper/wrapper.proto\x1a$squareup/knowledge/graph/nodes.proto\x1a$squareup/knowledge/graph/types.proto\"I\n\x17\x43onsumeRiskInputRequest\x12.\n\triskInput\x18\x01 \x03(\x0b\x32\x1b.squareup.riskapi.RiskInput\"\x1a\n\x18\x43onsumeRiskInputResponse\"\'\n\x16RunGremlinQueryRequest\x12\r\n\x05query\x18\x01 \x01(\t\"*\n\x17RunGremlinQueryResponse\x12\x0f\n\x07results\x18\x01 \x03(\t\"g\n\x0eTraversalQuery\x12\x41\n\tedge_type\x18\x01 \x03(\x0e\x32(.squareup.knowledge.graph.types.EdgeTypeB\x04\xf0\xf1\n\x01\x12\x12\n\x04hops\x18\x02 \x01(\x05\x42\x04\xf0\xf1\n\x01\"\xfa\x01\n\x18GetConnectedNodesRequest\x12\x43\n\rstart_node_id\x18\x01 \x03(\x0b\x32&.squareup.knowledge.graph.nodes.NodeIdB\x04\xf0\xf1\n\x01\x12O\n\x0ftraversal_query\x18\x02 \x01(\x0b\x32\x30.squareup.knowledge.graph.service.TraversalQueryB\x04\xf0\xf1\n\x01\x12H\n\x10return_node_type\x18\x03 \x03(\x0e\x32(.squareup.knowledge.graph.types.NodeTypeB\x04\xf0\xf1\n\x01\"T\n\x19GetConnectedNodesResponse\x12\x37\n\x07node_id\x18\x01 \x03(\x0b\x32&.squareup.knowledge.graph.nodes.NodeId2\xb6\x02\n\x15KnowledgeGraphService\x12\x8b\x01\n\x10\x43onsumeRiskInput\x12\x39.squareup.knowledge.graph.service.ConsumeRiskInputRequest\x1a:.squareup.knowledge.graph.service.ConsumeRiskInputResponse\"\x00\x12\x8e\x01\n\x11GetConnectedNodes\x12:.squareup.knowledge.graph.service.GetConnectedNodesRequest\x1a;.squareup.knowledge.graph.service.GetConnectedNodesResponse\"\x00\x32\xa6\x01\n\x19KnowledgeGraphTestService\x12\x88\x01\n\x0fRunGremlinQuery\x12\x38.squareup.knowledge.graph.service.RunGremlinQueryRequest\x1a\x39.squareup.knowledge.graph.service.RunGremlinQueryResponse\"\x00\x42\x30\n+com.squareup.protos.knowledge.graph.service\x88\x01\x01')
  ,
  dependencies=[squareup_dot_common_dot_validation__pb2.DESCRIPTOR,squareup_dot_sake_dot_options__pb2.DESCRIPTOR,squareup_dot_riskapi_dot_wrapper_dot_wrapper__pb2.DESCRIPTOR,squareup_dot_knowledge_dot_graph_dot_nodes__pb2.DESCRIPTOR,squareup_dot_knowledge_dot_graph_dot_types__pb2.DESCRIPTOR,])




_CONSUMERISKINPUTREQUEST = _descriptor.Descriptor(
  name='ConsumeRiskInputRequest',
  full_name='squareup.knowledge.graph.service.ConsumeRiskInputRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='riskInput', full_name='squareup.knowledge.graph.service.ConsumeRiskInputRequest.riskInput', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=255,
  serialized_end=328,
)


_CONSUMERISKINPUTRESPONSE = _descriptor.Descriptor(
  name='ConsumeRiskInputResponse',
  full_name='squareup.knowledge.graph.service.ConsumeRiskInputResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=330,
  serialized_end=356,
)


_RUNGREMLINQUERYREQUEST = _descriptor.Descriptor(
  name='RunGremlinQueryRequest',
  full_name='squareup.knowledge.graph.service.RunGremlinQueryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='query', full_name='squareup.knowledge.graph.service.RunGremlinQueryRequest.query', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=358,
  serialized_end=397,
)


_RUNGREMLINQUERYRESPONSE = _descriptor.Descriptor(
  name='RunGremlinQueryResponse',
  full_name='squareup.knowledge.graph.service.RunGremlinQueryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='results', full_name='squareup.knowledge.graph.service.RunGremlinQueryResponse.results', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=441,
)


_TRAVERSALQUERY = _descriptor.Descriptor(
  name='TraversalQuery',
  full_name='squareup.knowledge.graph.service.TraversalQuery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='edge_type', full_name='squareup.knowledge.graph.service.TraversalQuery.edge_type', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hops', full_name='squareup.knowledge.graph.service.TraversalQuery.hops', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=443,
  serialized_end=546,
)


_GETCONNECTEDNODESREQUEST = _descriptor.Descriptor(
  name='GetConnectedNodesRequest',
  full_name='squareup.knowledge.graph.service.GetConnectedNodesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_node_id', full_name='squareup.knowledge.graph.service.GetConnectedNodesRequest.start_node_id', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='traversal_query', full_name='squareup.knowledge.graph.service.GetConnectedNodesRequest.traversal_query', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='return_node_type', full_name='squareup.knowledge.graph.service.GetConnectedNodesRequest.return_node_type', index=2,
      number=3, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=549,
  serialized_end=799,
)


_GETCONNECTEDNODESRESPONSE = _descriptor.Descriptor(
  name='GetConnectedNodesResponse',
  full_name='squareup.knowledge.graph.service.GetConnectedNodesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_id', full_name='squareup.knowledge.graph.service.GetConnectedNodesResponse.node_id', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=801,
  serialized_end=885,
)

_CONSUMERISKINPUTREQUEST.fields_by_name['riskInput'].message_type = squareup_dot_riskapi_dot_wrapper_dot_wrapper__pb2._RISKINPUT
_TRAVERSALQUERY.fields_by_name['edge_type'].enum_type = squareup_dot_knowledge_dot_graph_dot_types__pb2._EDGETYPE
_GETCONNECTEDNODESREQUEST.fields_by_name['start_node_id'].message_type = squareup_dot_knowledge_dot_graph_dot_nodes__pb2._NODEID
_GETCONNECTEDNODESREQUEST.fields_by_name['traversal_query'].message_type = _TRAVERSALQUERY
_GETCONNECTEDNODESREQUEST.fields_by_name['return_node_type'].enum_type = squareup_dot_knowledge_dot_graph_dot_types__pb2._NODETYPE
_GETCONNECTEDNODESRESPONSE.fields_by_name['node_id'].message_type = squareup_dot_knowledge_dot_graph_dot_nodes__pb2._NODEID
DESCRIPTOR.message_types_by_name['ConsumeRiskInputRequest'] = _CONSUMERISKINPUTREQUEST
DESCRIPTOR.message_types_by_name['ConsumeRiskInputResponse'] = _CONSUMERISKINPUTRESPONSE
DESCRIPTOR.message_types_by_name['RunGremlinQueryRequest'] = _RUNGREMLINQUERYREQUEST
DESCRIPTOR.message_types_by_name['RunGremlinQueryResponse'] = _RUNGREMLINQUERYRESPONSE
DESCRIPTOR.message_types_by_name['TraversalQuery'] = _TRAVERSALQUERY
DESCRIPTOR.message_types_by_name['GetConnectedNodesRequest'] = _GETCONNECTEDNODESREQUEST
DESCRIPTOR.message_types_by_name['GetConnectedNodesResponse'] = _GETCONNECTEDNODESRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConsumeRiskInputRequest = _reflection.GeneratedProtocolMessageType('ConsumeRiskInputRequest', (_message.Message,), {
  'DESCRIPTOR' : _CONSUMERISKINPUTREQUEST,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.ConsumeRiskInputRequest)
  })
_sym_db.RegisterMessage(ConsumeRiskInputRequest)

ConsumeRiskInputResponse = _reflection.GeneratedProtocolMessageType('ConsumeRiskInputResponse', (_message.Message,), {
  'DESCRIPTOR' : _CONSUMERISKINPUTRESPONSE,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.ConsumeRiskInputResponse)
  })
_sym_db.RegisterMessage(ConsumeRiskInputResponse)

RunGremlinQueryRequest = _reflection.GeneratedProtocolMessageType('RunGremlinQueryRequest', (_message.Message,), {
  'DESCRIPTOR' : _RUNGREMLINQUERYREQUEST,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.RunGremlinQueryRequest)
  })
_sym_db.RegisterMessage(RunGremlinQueryRequest)

RunGremlinQueryResponse = _reflection.GeneratedProtocolMessageType('RunGremlinQueryResponse', (_message.Message,), {
  'DESCRIPTOR' : _RUNGREMLINQUERYRESPONSE,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.RunGremlinQueryResponse)
  })
_sym_db.RegisterMessage(RunGremlinQueryResponse)

TraversalQuery = _reflection.GeneratedProtocolMessageType('TraversalQuery', (_message.Message,), {
  'DESCRIPTOR' : _TRAVERSALQUERY,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.TraversalQuery)
  })
_sym_db.RegisterMessage(TraversalQuery)

GetConnectedNodesRequest = _reflection.GeneratedProtocolMessageType('GetConnectedNodesRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETCONNECTEDNODESREQUEST,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.GetConnectedNodesRequest)
  })
_sym_db.RegisterMessage(GetConnectedNodesRequest)

GetConnectedNodesResponse = _reflection.GeneratedProtocolMessageType('GetConnectedNodesResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETCONNECTEDNODESRESPONSE,
  '__module__' : 'squareup.knowledge.graph.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.knowledge.graph.service.GetConnectedNodesResponse)
  })
_sym_db.RegisterMessage(GetConnectedNodesResponse)


DESCRIPTOR._options = None
_TRAVERSALQUERY.fields_by_name['edge_type']._options = None
_TRAVERSALQUERY.fields_by_name['hops']._options = None
_GETCONNECTEDNODESREQUEST.fields_by_name['start_node_id']._options = None
_GETCONNECTEDNODESREQUEST.fields_by_name['traversal_query']._options = None
_GETCONNECTEDNODESREQUEST.fields_by_name['return_node_type']._options = None

_KNOWLEDGEGRAPHSERVICE = _descriptor.ServiceDescriptor(
  name='KnowledgeGraphService',
  full_name='squareup.knowledge.graph.service.KnowledgeGraphService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=888,
  serialized_end=1198,
  methods=[
  _descriptor.MethodDescriptor(
    name='ConsumeRiskInput',
    full_name='squareup.knowledge.graph.service.KnowledgeGraphService.ConsumeRiskInput',
    index=0,
    containing_service=None,
    input_type=_CONSUMERISKINPUTREQUEST,
    output_type=_CONSUMERISKINPUTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetConnectedNodes',
    full_name='squareup.knowledge.graph.service.KnowledgeGraphService.GetConnectedNodes',
    index=1,
    containing_service=None,
    input_type=_GETCONNECTEDNODESREQUEST,
    output_type=_GETCONNECTEDNODESRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_KNOWLEDGEGRAPHSERVICE)

DESCRIPTOR.services_by_name['KnowledgeGraphService'] = _KNOWLEDGEGRAPHSERVICE


_KNOWLEDGEGRAPHTESTSERVICE = _descriptor.ServiceDescriptor(
  name='KnowledgeGraphTestService',
  full_name='squareup.knowledge.graph.service.KnowledgeGraphTestService',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  serialized_start=1201,
  serialized_end=1367,
  methods=[
  _descriptor.MethodDescriptor(
    name='RunGremlinQuery',
    full_name='squareup.knowledge.graph.service.KnowledgeGraphTestService.RunGremlinQuery',
    index=0,
    containing_service=None,
    input_type=_RUNGREMLINQUERYREQUEST,
    output_type=_RUNGREMLINQUERYRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_KNOWLEDGEGRAPHTESTSERVICE)

DESCRIPTOR.services_by_name['KnowledgeGraphTestService'] = _KNOWLEDGEGRAPHTESTSERVICE

# @@protoc_insertion_point(module_scope)
