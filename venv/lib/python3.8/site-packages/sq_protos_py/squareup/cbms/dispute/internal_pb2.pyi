# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cbms.dispute.common_pb2 import (
    ResolutionValue as squareup___cbms___dispute___common_pb2___ResolutionValue,
)

from sq_protos_py.squareup.cbms.dispute.dispute_reason_pb2 import (
    DisputeReason as squareup___cbms___dispute___dispute_reason_pb2___DisputeReason,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class DisputedPayment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    PaymentTypeValue = typing___NewType('PaymentTypeValue', builtin___int)
    type___PaymentTypeValue = PaymentTypeValue
    PaymentType: _PaymentType
    class _PaymentType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DisputedPayment.PaymentTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(DisputedPayment.PaymentTypeValue, 0)
        REGISTER = typing___cast(DisputedPayment.PaymentTypeValue, 1)
        SQ_CASH = typing___cast(DisputedPayment.PaymentTypeValue, 2)
    UNKNOWN = typing___cast(DisputedPayment.PaymentTypeValue, 0)
    REGISTER = typing___cast(DisputedPayment.PaymentTypeValue, 1)
    SQ_CASH = typing___cast(DisputedPayment.PaymentTypeValue, 2)
    type___PaymentType = PaymentType

    payment_token: typing___Text = ...

    @property
    def disputes(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Dispute]: ...

    @property
    def first_disputed_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def most_recent_disputed_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        disputes : typing___Optional[typing___Iterable[type___Dispute]] = None,
        payment_token : typing___Optional[typing___Text] = None,
        first_disputed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        most_recent_disputed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"first_disputed_at",b"first_disputed_at",u"most_recent_disputed_at",b"most_recent_disputed_at",u"payment_token",b"payment_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"disputes",b"disputes",u"first_disputed_at",b"first_disputed_at",u"most_recent_disputed_at",b"most_recent_disputed_at",u"payment_token",b"payment_token"]) -> None: ...
type___DisputedPayment = DisputedPayment

class Dispute(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StateValue = typing___NewType('StateValue', builtin___int)
    type___StateValue = StateValue
    State: _State
    class _State(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Dispute.StateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        S_UNKNOWN = typing___cast(Dispute.StateValue, 0)
        ACTIVE_CASE = typing___cast(Dispute.StateValue, 1)
        ASSIGNED = typing___cast(Dispute.StateValue, 2)
        CHARGEBACK = typing___cast(Dispute.StateValue, 3)
        CLOSED_IN_MERCHANTS_FAVOR = typing___cast(Dispute.StateValue, 4)
        FAILED = typing___cast(Dispute.StateValue, 5)
        LOST = typing___cast(Dispute.StateValue, 6)
        LOST_DUE_TO_FRAUD = typing___cast(Dispute.StateValue, 7)
        MANUALLY_PROCESSED = typing___cast(Dispute.StateValue, 8)
        MARKED = typing___cast(Dispute.StateValue, 9)
        NEW = typing___cast(Dispute.StateValue, 10)
        REDISPUTED = typing___cast(Dispute.StateValue, 11)
        TRANSITIONED = typing___cast(Dispute.StateValue, 12)
        WON = typing___cast(Dispute.StateValue, 13)
        REVERSED = typing___cast(Dispute.StateValue, 14)
        LOST_DUE_TO_ACCEPT = typing___cast(Dispute.StateValue, 15)
        LOST_NO_RECOURSE = typing___cast(Dispute.StateValue, 16)
    S_UNKNOWN = typing___cast(Dispute.StateValue, 0)
    ACTIVE_CASE = typing___cast(Dispute.StateValue, 1)
    ASSIGNED = typing___cast(Dispute.StateValue, 2)
    CHARGEBACK = typing___cast(Dispute.StateValue, 3)
    CLOSED_IN_MERCHANTS_FAVOR = typing___cast(Dispute.StateValue, 4)
    FAILED = typing___cast(Dispute.StateValue, 5)
    LOST = typing___cast(Dispute.StateValue, 6)
    LOST_DUE_TO_FRAUD = typing___cast(Dispute.StateValue, 7)
    MANUALLY_PROCESSED = typing___cast(Dispute.StateValue, 8)
    MARKED = typing___cast(Dispute.StateValue, 9)
    NEW = typing___cast(Dispute.StateValue, 10)
    REDISPUTED = typing___cast(Dispute.StateValue, 11)
    TRANSITIONED = typing___cast(Dispute.StateValue, 12)
    WON = typing___cast(Dispute.StateValue, 13)
    REVERSED = typing___cast(Dispute.StateValue, 14)
    LOST_DUE_TO_ACCEPT = typing___cast(Dispute.StateValue, 15)
    LOST_NO_RECOURSE = typing___cast(Dispute.StateValue, 16)
    type___State = State

    DocumentationStateValue = typing___NewType('DocumentationStateValue', builtin___int)
    type___DocumentationStateValue = DocumentationStateValue
    DocumentationState: _DocumentationState
    class _DocumentationState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Dispute.DocumentationStateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DS_UNKNOWN = typing___cast(Dispute.DocumentationStateValue, 0)
        AWAITING_AGENT_REVIEW = typing___cast(Dispute.DocumentationStateValue, 1)
        AWAITING_IRF_RESPONSE = typing___cast(Dispute.DocumentationStateValue, 2)
        DOCUMENTATION_APPROVED = typing___cast(Dispute.DocumentationStateValue, 3)
        DOCUMENTATION_NOT_NEEDED = typing___cast(Dispute.DocumentationStateValue, 4)
        DOCUMENTATION_NOT_RECEIVED = typing___cast(Dispute.DocumentationStateValue, 5)
        DOCUMENTATION_REJECTED = typing___cast(Dispute.DocumentationStateValue, 6)
        IRF_PENDING = typing___cast(Dispute.DocumentationStateValue, 7)
        NMI_DOCUMENTATION_NOT_RECEIVED = typing___cast(Dispute.DocumentationStateValue, 8)
        AWAITING_MORE_INFORMATION = typing___cast(Dispute.DocumentationStateValue, 9)
    DS_UNKNOWN = typing___cast(Dispute.DocumentationStateValue, 0)
    AWAITING_AGENT_REVIEW = typing___cast(Dispute.DocumentationStateValue, 1)
    AWAITING_IRF_RESPONSE = typing___cast(Dispute.DocumentationStateValue, 2)
    DOCUMENTATION_APPROVED = typing___cast(Dispute.DocumentationStateValue, 3)
    DOCUMENTATION_NOT_NEEDED = typing___cast(Dispute.DocumentationStateValue, 4)
    DOCUMENTATION_NOT_RECEIVED = typing___cast(Dispute.DocumentationStateValue, 5)
    DOCUMENTATION_REJECTED = typing___cast(Dispute.DocumentationStateValue, 6)
    IRF_PENDING = typing___cast(Dispute.DocumentationStateValue, 7)
    NMI_DOCUMENTATION_NOT_RECEIVED = typing___cast(Dispute.DocumentationStateValue, 8)
    AWAITING_MORE_INFORMATION = typing___cast(Dispute.DocumentationStateValue, 9)
    type___DocumentationState = DocumentationState

    ProtectionStateValue = typing___NewType('ProtectionStateValue', builtin___int)
    type___ProtectionStateValue = ProtectionStateValue
    ProtectionState: _ProtectionState
    class _ProtectionState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Dispute.ProtectionStateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PS_UNKNOWN = typing___cast(Dispute.ProtectionStateValue, 0)
        NOT_APPLICABLE = typing___cast(Dispute.ProtectionStateValue, 1)
        PENDING_PROTECTION_DECISION = typing___cast(Dispute.ProtectionStateValue, 2)
        NOT_PROTECTED = typing___cast(Dispute.ProtectionStateValue, 3)
        ELIGIBILITY_NOT_DETERMINED = typing___cast(Dispute.ProtectionStateValue, 4)
        PROTECTED = typing___cast(Dispute.ProtectionStateValue, 5)
        NOT_ELIGIBLE = typing___cast(Dispute.ProtectionStateValue, 6)
        VIRGIL = typing___cast(Dispute.ProtectionStateValue, 7)
        VIRGIL_EXPIRED = typing___cast(Dispute.ProtectionStateValue, 8)
        MANUAL_VIRGIL = typing___cast(Dispute.ProtectionStateValue, 9)
    PS_UNKNOWN = typing___cast(Dispute.ProtectionStateValue, 0)
    NOT_APPLICABLE = typing___cast(Dispute.ProtectionStateValue, 1)
    PENDING_PROTECTION_DECISION = typing___cast(Dispute.ProtectionStateValue, 2)
    NOT_PROTECTED = typing___cast(Dispute.ProtectionStateValue, 3)
    ELIGIBILITY_NOT_DETERMINED = typing___cast(Dispute.ProtectionStateValue, 4)
    PROTECTED = typing___cast(Dispute.ProtectionStateValue, 5)
    NOT_ELIGIBLE = typing___cast(Dispute.ProtectionStateValue, 6)
    VIRGIL = typing___cast(Dispute.ProtectionStateValue, 7)
    VIRGIL_EXPIRED = typing___cast(Dispute.ProtectionStateValue, 8)
    MANUAL_VIRGIL = typing___cast(Dispute.ProtectionStateValue, 9)
    type___ProtectionState = ProtectionState

    dispute_token: typing___Text = ...
    merchant_order_number: typing___Text = ...
    protection_state: type___Dispute.ProtectionStateValue = ...
    documentation_state: type___Dispute.DocumentationStateValue = ...
    dispute_state: type___Dispute.StateValue = ...
    merchant_resolution: squareup___cbms___dispute___common_pb2___ResolutionValue = ...
    dispute_type: typing___Text = ...
    hold_token: typing___Text = ...
    hold_reason: typing___Text = ...
    regulator_case_id: typing___Text = ...
    desk_case_id: typing___Text = ...
    desk_case_url: typing___Text = ...
    can_be_represented: builtin___bool = ...
    is_blacklisted: builtin___bool = ...
    is_sq_cash: builtin___bool = ...
    support_to_follow: builtin___bool = ...
    sequence_number: typing___Text = ...
    challenge_summary: typing___Text = ...
    protection_eligibility_reason: typing___Text = ...
    additional_information: typing___Text = ...

    @property
    def disputed_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def dispute_reason(self) -> squareup___cbms___dispute___dispute_reason_pb2___DisputeReason: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def due_at(self) -> squareup___common___time_pb2___YearMonthDay: ...

    @property
    def reported_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        dispute_token : typing___Optional[typing___Text] = None,
        disputed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        merchant_order_number : typing___Optional[typing___Text] = None,
        protection_state : typing___Optional[type___Dispute.ProtectionStateValue] = None,
        documentation_state : typing___Optional[type___Dispute.DocumentationStateValue] = None,
        dispute_state : typing___Optional[type___Dispute.StateValue] = None,
        merchant_resolution : typing___Optional[squareup___cbms___dispute___common_pb2___ResolutionValue] = None,
        dispute_reason : typing___Optional[squareup___cbms___dispute___dispute_reason_pb2___DisputeReason] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        due_at : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
        reported_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        dispute_type : typing___Optional[typing___Text] = None,
        hold_token : typing___Optional[typing___Text] = None,
        hold_reason : typing___Optional[typing___Text] = None,
        regulator_case_id : typing___Optional[typing___Text] = None,
        desk_case_id : typing___Optional[typing___Text] = None,
        desk_case_url : typing___Optional[typing___Text] = None,
        can_be_represented : typing___Optional[builtin___bool] = None,
        is_blacklisted : typing___Optional[builtin___bool] = None,
        is_sq_cash : typing___Optional[builtin___bool] = None,
        support_to_follow : typing___Optional[builtin___bool] = None,
        sequence_number : typing___Optional[typing___Text] = None,
        challenge_summary : typing___Optional[typing___Text] = None,
        protection_eligibility_reason : typing___Optional[typing___Text] = None,
        additional_information : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"additional_information",b"additional_information",u"can_be_represented",b"can_be_represented",u"challenge_summary",b"challenge_summary",u"created_at",b"created_at",u"desk_case_id",b"desk_case_id",u"desk_case_url",b"desk_case_url",u"dispute_reason",b"dispute_reason",u"dispute_state",b"dispute_state",u"dispute_token",b"dispute_token",u"dispute_type",b"dispute_type",u"disputed_amount",b"disputed_amount",u"documentation_state",b"documentation_state",u"due_at",b"due_at",u"hold_reason",b"hold_reason",u"hold_token",b"hold_token",u"is_blacklisted",b"is_blacklisted",u"is_sq_cash",b"is_sq_cash",u"merchant_order_number",b"merchant_order_number",u"merchant_resolution",b"merchant_resolution",u"protection_eligibility_reason",b"protection_eligibility_reason",u"protection_state",b"protection_state",u"regulator_case_id",b"regulator_case_id",u"reported_at",b"reported_at",u"sequence_number",b"sequence_number",u"support_to_follow",b"support_to_follow"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"additional_information",b"additional_information",u"can_be_represented",b"can_be_represented",u"challenge_summary",b"challenge_summary",u"created_at",b"created_at",u"desk_case_id",b"desk_case_id",u"desk_case_url",b"desk_case_url",u"dispute_reason",b"dispute_reason",u"dispute_state",b"dispute_state",u"dispute_token",b"dispute_token",u"dispute_type",b"dispute_type",u"disputed_amount",b"disputed_amount",u"documentation_state",b"documentation_state",u"due_at",b"due_at",u"hold_reason",b"hold_reason",u"hold_token",b"hold_token",u"is_blacklisted",b"is_blacklisted",u"is_sq_cash",b"is_sq_cash",u"merchant_order_number",b"merchant_order_number",u"merchant_resolution",b"merchant_resolution",u"protection_eligibility_reason",b"protection_eligibility_reason",u"protection_state",b"protection_state",u"regulator_case_id",b"regulator_case_id",u"reported_at",b"reported_at",u"sequence_number",b"sequence_number",u"support_to_follow",b"support_to_follow"]) -> None: ...
type___Dispute = Dispute
