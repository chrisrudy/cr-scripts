# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class DisputeReason(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CategoryValue = typing___NewType('CategoryValue', builtin___int)
    type___CategoryValue = CategoryValue
    Category: _Category
    class _Category(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DisputeReason.CategoryValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(DisputeReason.CategoryValue, 0)
        AMOUNT_DIFFERS = typing___cast(DisputeReason.CategoryValue, 1)
        CANCELLED = typing___cast(DisputeReason.CategoryValue, 2)
        COMPLIANCE = typing___cast(DisputeReason.CategoryValue, 3)
        DISSATISFIED = typing___cast(DisputeReason.CategoryValue, 4)
        DUPLICATE = typing___cast(DisputeReason.CategoryValue, 5)
        FRAUD = typing___cast(DisputeReason.CategoryValue, 6)
        NO_KNOWLEDGE = typing___cast(DisputeReason.CategoryValue, 7)
        NOT_AS_DESCRIBED = typing___cast(DisputeReason.CategoryValue, 8)
        NOT_RECEIVED = typing___cast(DisputeReason.CategoryValue, 9)
        PAID_BY_OTHER_MEANS = typing___cast(DisputeReason.CategoryValue, 10)
        CUSTOMER_REQUESTS_CREDIT = typing___cast(DisputeReason.CategoryValue, 11)
        UNAUTHORIZED = typing___cast(DisputeReason.CategoryValue, 12)
        RETURNED = typing___cast(DisputeReason.CategoryValue, 13)
        INSUFFICIENT_RESPONSE = typing___cast(DisputeReason.CategoryValue, 14)
        REQUEST_DOCUMENTATION = typing___cast(DisputeReason.CategoryValue, 15)
        EMV_LIABILITY_SHIFT = typing___cast(DisputeReason.CategoryValue, 16)
        ACH_CREDIT_NOT_PROCESSED = typing___cast(DisputeReason.CategoryValue, 17)
        ACH_INSUFFICIENT_FUNDS = typing___cast(DisputeReason.CategoryValue, 18)
        ACH_UNAUTHORIZED = typing___cast(DisputeReason.CategoryValue, 19)
    UNKNOWN = typing___cast(DisputeReason.CategoryValue, 0)
    AMOUNT_DIFFERS = typing___cast(DisputeReason.CategoryValue, 1)
    CANCELLED = typing___cast(DisputeReason.CategoryValue, 2)
    COMPLIANCE = typing___cast(DisputeReason.CategoryValue, 3)
    DISSATISFIED = typing___cast(DisputeReason.CategoryValue, 4)
    DUPLICATE = typing___cast(DisputeReason.CategoryValue, 5)
    FRAUD = typing___cast(DisputeReason.CategoryValue, 6)
    NO_KNOWLEDGE = typing___cast(DisputeReason.CategoryValue, 7)
    NOT_AS_DESCRIBED = typing___cast(DisputeReason.CategoryValue, 8)
    NOT_RECEIVED = typing___cast(DisputeReason.CategoryValue, 9)
    PAID_BY_OTHER_MEANS = typing___cast(DisputeReason.CategoryValue, 10)
    CUSTOMER_REQUESTS_CREDIT = typing___cast(DisputeReason.CategoryValue, 11)
    UNAUTHORIZED = typing___cast(DisputeReason.CategoryValue, 12)
    RETURNED = typing___cast(DisputeReason.CategoryValue, 13)
    INSUFFICIENT_RESPONSE = typing___cast(DisputeReason.CategoryValue, 14)
    REQUEST_DOCUMENTATION = typing___cast(DisputeReason.CategoryValue, 15)
    EMV_LIABILITY_SHIFT = typing___cast(DisputeReason.CategoryValue, 16)
    ACH_CREDIT_NOT_PROCESSED = typing___cast(DisputeReason.CategoryValue, 17)
    ACH_INSUFFICIENT_FUNDS = typing___cast(DisputeReason.CategoryValue, 18)
    ACH_UNAUTHORIZED = typing___cast(DisputeReason.CategoryValue, 19)
    type___Category = Category

    category: type___DisputeReason.CategoryValue = ...
    code: typing___Text = ...
    description: typing___Text = ...

    def __init__(self,
        *,
        category : typing___Optional[type___DisputeReason.CategoryValue] = None,
        code : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"category",b"category",u"code",b"code",u"description",b"description"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"category",b"category",u"code",b"code",u"description",b"description"]) -> None: ...
type___DisputeReason = DisputeReason
