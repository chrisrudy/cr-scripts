# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.paper_signature.v2 import service_pb2 as squareup_dot_paper__signature_dot_v2_dot_service__pb2


class PaperSignatureListingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTendersAwaitingMerchantTip = channel.unary_unary(
                '/squareup.paper_signature.v2.service.PaperSignatureListingService/ListTendersAwaitingMerchantTip',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.ListTendersAwaitingMerchantTipRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.ListTendersAwaitingMerchantTipResponse.FromString,
                )
        self.CountTendersAwaitingMerchantTip = channel.unary_unary(
                '/squareup.paper_signature.v2.service.PaperSignatureListingService/CountTendersAwaitingMerchantTip',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.CountTendersAwaitingMerchantTipRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.CountTendersAwaitingMerchantTipResponse.FromString,
                )


class PaperSignatureListingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListTendersAwaitingMerchantTip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountTendersAwaitingMerchantTip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaperSignatureListingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTendersAwaitingMerchantTip': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTendersAwaitingMerchantTip,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.ListTendersAwaitingMerchantTipRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.ListTendersAwaitingMerchantTipResponse.SerializeToString,
            ),
            'CountTendersAwaitingMerchantTip': grpc.unary_unary_rpc_method_handler(
                    servicer.CountTendersAwaitingMerchantTip,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.CountTendersAwaitingMerchantTipRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.CountTendersAwaitingMerchantTipResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.paper_signature.v2.service.PaperSignatureListingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaperSignatureListingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListTendersAwaitingMerchantTip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.PaperSignatureListingService/ListTendersAwaitingMerchantTip',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.ListTendersAwaitingMerchantTipRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.ListTendersAwaitingMerchantTipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CountTendersAwaitingMerchantTip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.PaperSignatureListingService/CountTendersAwaitingMerchantTip',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.CountTendersAwaitingMerchantTipRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.CountTendersAwaitingMerchantTipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DelayCaptureServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DelayCapture = channel.unary_unary(
                '/squareup.paper_signature.v2.service.DelayCaptureService/DelayCapture',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.FromString,
                )


class DelayCaptureServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DelayCapture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DelayCaptureServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DelayCapture': grpc.unary_unary_rpc_method_handler(
                    servicer.DelayCapture,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.paper_signature.v2.service.DelayCaptureService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DelayCaptureService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DelayCapture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.DelayCaptureService/DelayCapture',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InternalDelayCaptureServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.TrustedDelayCapture = channel.unary_unary(
                '/squareup.paper_signature.v2.service.InternalDelayCaptureService/TrustedDelayCapture',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.TrustedDelayCaptureRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.FromString,
                )
        self.TrustedSplitTenderDelayCapture = channel.unary_unary(
                '/squareup.paper_signature.v2.service.InternalDelayCaptureService/TrustedSplitTenderDelayCapture',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.SplitTenderDelayCaptureRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.FromString,
                )


class InternalDelayCaptureServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def TrustedDelayCapture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TrustedSplitTenderDelayCapture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalDelayCaptureServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'TrustedDelayCapture': grpc.unary_unary_rpc_method_handler(
                    servicer.TrustedDelayCapture,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.TrustedDelayCaptureRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.SerializeToString,
            ),
            'TrustedSplitTenderDelayCapture': grpc.unary_unary_rpc_method_handler(
                    servicer.TrustedSplitTenderDelayCapture,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.SplitTenderDelayCaptureRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.paper_signature.v2.service.InternalDelayCaptureService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalDelayCaptureService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def TrustedDelayCapture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.InternalDelayCaptureService/TrustedDelayCapture',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.TrustedDelayCaptureRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TrustedSplitTenderDelayCapture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.InternalDelayCaptureService/TrustedSplitTenderDelayCapture',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.SplitTenderDelayCaptureRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.DelayCaptureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PaperSignatureBatchServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitTipAndSettleBatch = channel.unary_unary(
                '/squareup.paper_signature.v2.service.PaperSignatureBatchService/SubmitTipAndSettleBatch',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.SubmitTipAndSettleBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.SubmitTipAndSettleBatchResponse.FromString,
                )


class PaperSignatureBatchServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitTipAndSettleBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaperSignatureBatchServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitTipAndSettleBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitTipAndSettleBatch,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.SubmitTipAndSettleBatchRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.SubmitTipAndSettleBatchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.paper_signature.v2.service.PaperSignatureBatchService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaperSignatureBatchService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitTipAndSettleBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.PaperSignatureBatchService/SubmitTipAndSettleBatch',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.SubmitTipAndSettleBatchRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.SubmitTipAndSettleBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ItemizationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetItemizations = channel.unary_unary(
                '/squareup.paper_signature.v2.service.ItemizationService/GetItemizations',
                request_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.GetItemizationsRequest.SerializeToString,
                response_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.GetItemizationsResponse.FromString,
                )


class ItemizationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetItemizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ItemizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetItemizations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemizations,
                    request_deserializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.GetItemizationsRequest.FromString,
                    response_serializer=squareup_dot_paper__signature_dot_v2_dot_service__pb2.GetItemizationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.paper_signature.v2.service.ItemizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ItemizationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetItemizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paper_signature.v2.service.ItemizationService/GetItemizations',
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.GetItemizationsRequest.SerializeToString,
            squareup_dot_paper__signature_dot_v2_dot_service__pb2.GetItemizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
