# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.address_pb2 import (
    Address as squareup___common___address_pb2___Address,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PersonalAttributes(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Passport(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        country: squareup___common___countries_pb2___CountryValue = ...
        number: typing___Text = ...

        def __init__(self,
            *,
            country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
            number : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"country",b"country",u"number",b"number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"country",b"country",u"number",b"number"]) -> None: ...
    type___Passport = Passport

    class DriversLicense(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        country: squareup___common___countries_pb2___CountryValue = ...
        state: typing___Text = ...
        number: typing___Text = ...

        def __init__(self,
            *,
            country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
            state : typing___Optional[typing___Text] = None,
            number : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"country",b"country",u"number",b"number",u"state",b"state"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"country",b"country",u"number",b"number",u"state",b"state"]) -> None: ...
    type___DriversLicense = DriversLicense

    given_name: typing___Text = ...
    middle_name: typing___Text = ...
    family_name: typing___Text = ...
    phone_number: typing___Text = ...
    raw_personal_id: typing___Text = ...
    personal_id_fidelius_token: typing___Text = ...
    ssn_last4: typing___Text = ...

    @property
    def birth_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

    @property
    def address(self) -> squareup___common___address_pb2___Address: ...

    @property
    def passport(self) -> type___PersonalAttributes.Passport: ...

    @property
    def drivers_license(self) -> type___PersonalAttributes.DriversLicense: ...

    def __init__(self,
        *,
        given_name : typing___Optional[typing___Text] = None,
        middle_name : typing___Optional[typing___Text] = None,
        family_name : typing___Optional[typing___Text] = None,
        birth_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
        address : typing___Optional[squareup___common___address_pb2___Address] = None,
        phone_number : typing___Optional[typing___Text] = None,
        raw_personal_id : typing___Optional[typing___Text] = None,
        personal_id_fidelius_token : typing___Optional[typing___Text] = None,
        ssn_last4 : typing___Optional[typing___Text] = None,
        passport : typing___Optional[type___PersonalAttributes.Passport] = None,
        drivers_license : typing___Optional[type___PersonalAttributes.DriversLicense] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"birth_date",b"birth_date",u"drivers_license",b"drivers_license",u"family_name",b"family_name",u"given_name",b"given_name",u"middle_name",b"middle_name",u"passport",b"passport",u"personal_id",b"personal_id",u"personal_id_fidelius_token",b"personal_id_fidelius_token",u"phone_number",b"phone_number",u"raw_personal_id",b"raw_personal_id",u"ssn_last4",b"ssn_last4"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"birth_date",b"birth_date",u"drivers_license",b"drivers_license",u"family_name",b"family_name",u"given_name",b"given_name",u"middle_name",b"middle_name",u"passport",b"passport",u"personal_id",b"personal_id",u"personal_id_fidelius_token",b"personal_id_fidelius_token",u"phone_number",b"phone_number",u"raw_personal_id",b"raw_personal_id",u"ssn_last4",b"ssn_last4"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"personal_id",b"personal_id"]) -> typing_extensions___Literal["raw_personal_id","personal_id_fidelius_token","ssn_last4"]: ...
type___PersonalAttributes = PersonalAttributes
