# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.connect.v2.common.money_pb2 import (
    Money as squareup___connect___v2___common___money_pb2___Money,
)

from sq_protos_py.squareup.rulius.model.condition_type_pb2 import (
    ConditionTypeValue as squareup___rulius___model___condition_type_pb2___ConditionTypeValue,
)

from typing import (
    Optional as typing___Optional,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Condition(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    condition_type: squareup___rulius___model___condition_type_pb2___ConditionTypeValue = ...

    @property
    def transaction_amount(self) -> squareup___connect___v2___common___money_pb2___Money: ...

    @property
    def transaction_amount_min(self) -> squareup___connect___v2___common___money_pb2___Money: ...

    @property
    def transaction_amount_max(self) -> squareup___connect___v2___common___money_pb2___Money: ...

    def __init__(self,
        *,
        condition_type : typing___Optional[squareup___rulius___model___condition_type_pb2___ConditionTypeValue] = None,
        transaction_amount : typing___Optional[squareup___connect___v2___common___money_pb2___Money] = None,
        transaction_amount_min : typing___Optional[squareup___connect___v2___common___money_pb2___Money] = None,
        transaction_amount_max : typing___Optional[squareup___connect___v2___common___money_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"condition_type",b"condition_type",u"transaction_amount",b"transaction_amount",u"transaction_amount_max",b"transaction_amount_max",u"transaction_amount_min",b"transaction_amount_min"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"condition_type",b"condition_type",u"transaction_amount",b"transaction_amount",u"transaction_amount_max",b"transaction_amount_max",u"transaction_amount_min",b"transaction_amount_min"]) -> None: ...
type___Condition = Condition
