# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.rulius.message import create_rule_pb2 as squareup_dot_rulius_dot_message_dot_create__rule__pb2
from sq_protos_py.squareup.rulius.message import delete_rule_pb2 as squareup_dot_rulius_dot_message_dot_delete__rule__pb2
from sq_protos_py.squareup.rulius.message import get_rule_pb2 as squareup_dot_rulius_dot_message_dot_get__rule__pb2
from sq_protos_py.squareup.rulius.message import list_rules_pb2 as squareup_dot_rulius_dot_message_dot_list__rules__pb2
from sq_protos_py.squareup.rulius.message import search_rules_pb2 as squareup_dot_rulius_dot_message_dot_search__rules__pb2


class RulesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRule = channel.unary_unary(
                '/squareup.rulius.RulesService/CreateRule',
                request_serializer=squareup_dot_rulius_dot_message_dot_create__rule__pb2.CreateRuleRequest.SerializeToString,
                response_deserializer=squareup_dot_rulius_dot_message_dot_create__rule__pb2.CreateRuleResponse.FromString,
                )
        self.DeleteRule = channel.unary_unary(
                '/squareup.rulius.RulesService/DeleteRule',
                request_serializer=squareup_dot_rulius_dot_message_dot_delete__rule__pb2.DeleteRuleRequest.SerializeToString,
                response_deserializer=squareup_dot_rulius_dot_message_dot_delete__rule__pb2.DeleteRuleResponse.FromString,
                )
        self.GetRule = channel.unary_unary(
                '/squareup.rulius.RulesService/GetRule',
                request_serializer=squareup_dot_rulius_dot_message_dot_get__rule__pb2.GetRuleRequest.SerializeToString,
                response_deserializer=squareup_dot_rulius_dot_message_dot_get__rule__pb2.GetRuleResponse.FromString,
                )
        self.ListRules = channel.unary_unary(
                '/squareup.rulius.RulesService/ListRules',
                request_serializer=squareup_dot_rulius_dot_message_dot_list__rules__pb2.ListRulesRequest.SerializeToString,
                response_deserializer=squareup_dot_rulius_dot_message_dot_list__rules__pb2.ListRulesResponse.FromString,
                )
        self.SearchRules = channel.unary_unary(
                '/squareup.rulius.RulesService/SearchRules',
                request_serializer=squareup_dot_rulius_dot_message_dot_search__rules__pb2.SearchRulesRequest.SerializeToString,
                response_deserializer=squareup_dot_rulius_dot_message_dot_search__rules__pb2.SearchRulesResponse.FromString,
                )


class RulesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchRules(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RulesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRule': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRule,
                    request_deserializer=squareup_dot_rulius_dot_message_dot_create__rule__pb2.CreateRuleRequest.FromString,
                    response_serializer=squareup_dot_rulius_dot_message_dot_create__rule__pb2.CreateRuleResponse.SerializeToString,
            ),
            'DeleteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRule,
                    request_deserializer=squareup_dot_rulius_dot_message_dot_delete__rule__pb2.DeleteRuleRequest.FromString,
                    response_serializer=squareup_dot_rulius_dot_message_dot_delete__rule__pb2.DeleteRuleResponse.SerializeToString,
            ),
            'GetRule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRule,
                    request_deserializer=squareup_dot_rulius_dot_message_dot_get__rule__pb2.GetRuleRequest.FromString,
                    response_serializer=squareup_dot_rulius_dot_message_dot_get__rule__pb2.GetRuleResponse.SerializeToString,
            ),
            'ListRules': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRules,
                    request_deserializer=squareup_dot_rulius_dot_message_dot_list__rules__pb2.ListRulesRequest.FromString,
                    response_serializer=squareup_dot_rulius_dot_message_dot_list__rules__pb2.ListRulesResponse.SerializeToString,
            ),
            'SearchRules': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchRules,
                    request_deserializer=squareup_dot_rulius_dot_message_dot_search__rules__pb2.SearchRulesRequest.FromString,
                    response_serializer=squareup_dot_rulius_dot_message_dot_search__rules__pb2.SearchRulesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rulius.RulesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RulesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rulius.RulesService/CreateRule',
            squareup_dot_rulius_dot_message_dot_create__rule__pb2.CreateRuleRequest.SerializeToString,
            squareup_dot_rulius_dot_message_dot_create__rule__pb2.CreateRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rulius.RulesService/DeleteRule',
            squareup_dot_rulius_dot_message_dot_delete__rule__pb2.DeleteRuleRequest.SerializeToString,
            squareup_dot_rulius_dot_message_dot_delete__rule__pb2.DeleteRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rulius.RulesService/GetRule',
            squareup_dot_rulius_dot_message_dot_get__rule__pb2.GetRuleRequest.SerializeToString,
            squareup_dot_rulius_dot_message_dot_get__rule__pb2.GetRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rulius.RulesService/ListRules',
            squareup_dot_rulius_dot_message_dot_list__rules__pb2.ListRulesRequest.SerializeToString,
            squareup_dot_rulius_dot_message_dot_list__rules__pb2.ListRulesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchRules(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rulius.RulesService/SearchRules',
            squareup_dot_rulius_dot_message_dot_search__rules__pb2.SearchRulesRequest.SerializeToString,
            squareup_dot_rulius_dot_message_dot_search__rules__pb2.SearchRulesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
