# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.jobs.pipeline.service import service_pb2 as squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2


class PipelineServiceStub(object):
    """* The pipeline service is used to start, restart, and stop pipeline jobs.
    The container hosting the pipeline service is responsible for starting and tracking the jobs.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunPipeline = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/RunPipeline',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunPipelineRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunPipelineResponse.FromString,
                )
        self.RestartPipeline = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/RestartPipeline',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RestartPipelineRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RestartPipelineResponse.FromString,
                )
        self.PipelineRunStatus = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/PipelineRunStatus',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.PipelineRunStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.PipelineRunStatusResponse.FromString,
                )
        self.KillPipeline = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/KillPipeline',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.KillPipelineRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.KillPipelineResponse.FromString,
                )
        self.RunStage = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/RunStage',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunStageRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunStageResponse.FromString,
                )
        self.LockPipeline = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/LockPipeline',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineResponse.FromString,
                )
        self.UnlockPipeline = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/UnlockPipeline',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineResponse.FromString,
                )
        self.ListRunningPipelines = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/ListRunningPipelines',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.ListRunningPipelinesRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.ListRunningPipelinesResponse.FromString,
                )
        self.SkipFailedStage = channel.unary_unary(
                '/squareup.jobs.pipeline.service.PipelineService/SkipFailedStage',
                request_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.SkipFailedStageRequest.SerializeToString,
                response_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.SkipFailedStageResponse.FromString,
                )


class PipelineServiceServicer(object):
    """* The pipeline service is used to start, restart, and stop pipeline jobs.
    The container hosting the pipeline service is responsible for starting and tracking the jobs.
    """

    def RunPipeline(self, request, context):
        """* Start a new pipeline with specific input 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestartPipeline(self, request, context):
        """* Restart a failed or aborted pipeline 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PipelineRunStatus(self, request, context):
        """* Get the run status of an existing pipeline 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KillPipeline(self, request, context):
        """* Kill a running pipeline. If a stage is currently running it will not be interrupted, but
        subsequent stages will not be executed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunStage(self, request, context):
        """*
        Run a single stage for an existing stage in isolation. Useful for retrying individual stages
        after the pipeline has successfully run later stages.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LockPipeline(self, request, context):
        """*
        Creates a pipeline_lock and prevents the execution of the pipeline
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockPipeline(self, request, context):
        """*
        Removes the lock created by the LockPipeline endpoint and allows the pipeline to run.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRunningPipelines(self, request, context):
        """*
        Gets all currently running pipelines and their stages.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SkipFailedStage(self, request, context):
        """*
        Finds the current pipeline run from the named pipeline and skips the latest stage. The stage
        must be marked as FAILED. It will be marked COMPLETED instead.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RunPipeline,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunPipelineRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunPipelineResponse.SerializeToString,
            ),
            'RestartPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartPipeline,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RestartPipelineRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RestartPipelineResponse.SerializeToString,
            ),
            'PipelineRunStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PipelineRunStatus,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.PipelineRunStatusRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.PipelineRunStatusResponse.SerializeToString,
            ),
            'KillPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.KillPipeline,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.KillPipelineRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.KillPipelineResponse.SerializeToString,
            ),
            'RunStage': grpc.unary_unary_rpc_method_handler(
                    servicer.RunStage,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunStageRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunStageResponse.SerializeToString,
            ),
            'LockPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.LockPipeline,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineResponse.SerializeToString,
            ),
            'UnlockPipeline': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockPipeline,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineResponse.SerializeToString,
            ),
            'ListRunningPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRunningPipelines,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.ListRunningPipelinesRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.ListRunningPipelinesResponse.SerializeToString,
            ),
            'SkipFailedStage': grpc.unary_unary_rpc_method_handler(
                    servicer.SkipFailedStage,
                    request_deserializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.SkipFailedStageRequest.FromString,
                    response_serializer=squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.SkipFailedStageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.jobs.pipeline.service.PipelineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PipelineService(object):
    """* The pipeline service is used to start, restart, and stop pipeline jobs.
    The container hosting the pipeline service is responsible for starting and tracking the jobs.
    """

    @staticmethod
    def RunPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/RunPipeline',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunPipelineRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestartPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/RestartPipeline',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RestartPipelineRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RestartPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PipelineRunStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/PipelineRunStatus',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.PipelineRunStatusRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.PipelineRunStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KillPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/KillPipeline',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.KillPipelineRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.KillPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunStage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/RunStage',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunStageRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.RunStageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LockPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/LockPipeline',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnlockPipeline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/UnlockPipeline',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.LockUnlockPipelineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRunningPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/ListRunningPipelines',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.ListRunningPipelinesRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.ListRunningPipelinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SkipFailedStage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobs.pipeline.service.PipelineService/SkipFailedStage',
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.SkipFailedStageRequest.SerializeToString,
            squareup_dot_jobs_dot_pipeline_dot_service_dot_service__pb2.SkipFailedStageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
