# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.messenger import api_pb2 as squareup_dot_messenger_dot_api__pb2


class ExternalMessengerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListConversations = channel.unary_unary(
                '/squareup.messenger.ExternalMessengerService/ListConversations',
                request_serializer=squareup_dot_messenger_dot_api__pb2.ListConversationsRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_api__pb2.ListConversationsResponse.FromString,
                )
        self.GetConversation = channel.unary_unary(
                '/squareup.messenger.ExternalMessengerService/GetConversation',
                request_serializer=squareup_dot_messenger_dot_api__pb2.GetConversationRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_api__pb2.GetConversationResponse.FromString,
                )
        self.AddMessageToConversation = channel.unary_unary(
                '/squareup.messenger.ExternalMessengerService/AddMessageToConversation',
                request_serializer=squareup_dot_messenger_dot_api__pb2.AddMessageToConversationRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_api__pb2.AddMessageToConversationResponse.FromString,
                )
        self.GetUnreadConversationCount = channel.unary_unary(
                '/squareup.messenger.ExternalMessengerService/GetUnreadConversationCount',
                request_serializer=squareup_dot_messenger_dot_api__pb2.GetUnreadConversationCountRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_api__pb2.GetUnreadConversationCountResponse.FromString,
                )
        self.MarkConversationAsUnread = channel.unary_unary(
                '/squareup.messenger.ExternalMessengerService/MarkConversationAsUnread',
                request_serializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsUnreadRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsUnreadResponse.FromString,
                )
        self.MarkConversationAsRead = channel.unary_unary(
                '/squareup.messenger.ExternalMessengerService/MarkConversationAsRead',
                request_serializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsReadRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsReadResponse.FromString,
                )


class ExternalMessengerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListConversations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddMessageToConversation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnreadConversationCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkConversationAsUnread(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkConversationAsRead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalMessengerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversations,
                    request_deserializer=squareup_dot_messenger_dot_api__pb2.ListConversationsRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_api__pb2.ListConversationsResponse.SerializeToString,
            ),
            'GetConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversation,
                    request_deserializer=squareup_dot_messenger_dot_api__pb2.GetConversationRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_api__pb2.GetConversationResponse.SerializeToString,
            ),
            'AddMessageToConversation': grpc.unary_unary_rpc_method_handler(
                    servicer.AddMessageToConversation,
                    request_deserializer=squareup_dot_messenger_dot_api__pb2.AddMessageToConversationRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_api__pb2.AddMessageToConversationResponse.SerializeToString,
            ),
            'GetUnreadConversationCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnreadConversationCount,
                    request_deserializer=squareup_dot_messenger_dot_api__pb2.GetUnreadConversationCountRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_api__pb2.GetUnreadConversationCountResponse.SerializeToString,
            ),
            'MarkConversationAsUnread': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkConversationAsUnread,
                    request_deserializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsUnreadRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsUnreadResponse.SerializeToString,
            ),
            'MarkConversationAsRead': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkConversationAsRead,
                    request_deserializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsReadRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_api__pb2.MarkConversationAsReadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.messenger.ExternalMessengerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalMessengerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.ExternalMessengerService/ListConversations',
            squareup_dot_messenger_dot_api__pb2.ListConversationsRequest.SerializeToString,
            squareup_dot_messenger_dot_api__pb2.ListConversationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.ExternalMessengerService/GetConversation',
            squareup_dot_messenger_dot_api__pb2.GetConversationRequest.SerializeToString,
            squareup_dot_messenger_dot_api__pb2.GetConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddMessageToConversation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.ExternalMessengerService/AddMessageToConversation',
            squareup_dot_messenger_dot_api__pb2.AddMessageToConversationRequest.SerializeToString,
            squareup_dot_messenger_dot_api__pb2.AddMessageToConversationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnreadConversationCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.ExternalMessengerService/GetUnreadConversationCount',
            squareup_dot_messenger_dot_api__pb2.GetUnreadConversationCountRequest.SerializeToString,
            squareup_dot_messenger_dot_api__pb2.GetUnreadConversationCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkConversationAsUnread(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.ExternalMessengerService/MarkConversationAsUnread',
            squareup_dot_messenger_dot_api__pb2.MarkConversationAsUnreadRequest.SerializeToString,
            squareup_dot_messenger_dot_api__pb2.MarkConversationAsUnreadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkConversationAsRead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.ExternalMessengerService/MarkConversationAsRead',
            squareup_dot_messenger_dot_api__pb2.MarkConversationAsReadRequest.SerializeToString,
            squareup_dot_messenger_dot_api__pb2.MarkConversationAsReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
