# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.messenger.v2 import messenger_service_pb2 as squareup_dot_messenger_dot_v2_dot_messenger__service__pb2


class MessengerServiceStub(object):
    """*
    Public endpoints for the Messenger service.  This service is intended to be
    called only from the public internet over edge-envoy; all endpoints require
    multipass credentials.

    TODO(hqin): Ask appointments to switch to calling the
    InternalMessengerService version of SendMessage.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConversations = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/GetConversations',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetConversationsRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetConversationsResponse.FromString,
                )
        self.GetUtterances = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/GetUtterances',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUtterancesRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUtterancesResponse.FromString,
                )
        self.ListMediums = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/ListMediums',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ListMediumsRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ListMediumsResponse.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/SendMessage',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.SendMessageResponse.FromString,
                )
        self.UpdateTranscript = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/UpdateTranscript',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateTranscriptRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateTranscriptResponse.FromString,
                )
        self.UpdateUtterance = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/UpdateUtterance',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateUtteranceRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateUtteranceResponse.FromString,
                )
        self.GetUnreadConversationsCount = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/GetUnreadConversationsCount',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUnreadConversationsCountRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUnreadConversationsCountResponse.FromString,
                )
        self.ExecuteGraphQL = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/ExecuteGraphQL',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ExecuteGraphQLRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ExecuteGraphQLResponse.FromString,
                )
        self.GetMessengerSettings = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/GetMessengerSettings',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerSettingsRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerSettingsResponse.FromString,
                )
        self.UpdateMessengerSettings = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/UpdateMessengerSettings',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateMessengerSettingsRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateMessengerSettingsResponse.FromString,
                )
        self.GetMessengerFeatureFlags = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/GetMessengerFeatureFlags',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerFeatureFlagsRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerFeatureFlagsResponse.FromString,
                )
        self.RequestConsent = channel.unary_unary(
                '/squareup.messenger.v2.MessengerService/RequestConsent',
                request_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.RequestConsentRequest.SerializeToString,
                response_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.RequestConsentResponse.FromString,
                )


class MessengerServiceServicer(object):
    """*
    Public endpoints for the Messenger service.  This service is intended to be
    called only from the public internet over edge-envoy; all endpoints require
    multipass credentials.

    TODO(hqin): Ask appointments to switch to calling the
    InternalMessengerService version of SendMessage.
    """

    def GetConversations(self, request, context):
        """*
        Get the conversations matching a set of filters. By default, returns the
        most recent conversations, ordered by most recent inbound message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUtterances(self, request, context):
        """*
        Get the utterances associated with a conversation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMediums(self, request, context):
        """*
        Enumerate the mediums that a given customer can be contacted over by a
        given merchant.

        For the time being, this method returns mediums for which the given
        merchant has the customer's contact information, without regard for
        whether that contact method is available to the merchant. This makes sense
        because the only contact medium supported by Square Messenger today is
        SMS, and Square provides phone numbers for merchants, so the merchant side
        will always have a method of contact. In a Unified Messaging future, this
        method may (if Square does not configure it for them) need to check
        whether the merchant has set up an account for a given medium (e.g. a
        Facebook page).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """*
        Send a message and return an updated transcript version.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTranscript(self, request, context):
        """*
        Update transcript fields and metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUtterance(self, request, context):
        """*
        Update utterance fields and metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnreadConversationsCount(self, request, context):
        """*
        Returns either the number of unread conversations or a lower bound on the
        number.
        TODO(gabor) Note that as implemented currently, this counts transcripts
        rather than conversations, to avoid an expensive Rolodex call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteGraphQL(self, request, context):
        """*
        Execute the given GraphQL query in the context of the given conversation.
        These queries will typically make requests to other Square services and
        extract the bits that are requested by the caller of this Rpc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessengerSettings(self, request, context):
        """*
        Get the messenger settings for the currently logged in user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMessengerSettings(self, request, context):
        """*
        Update the messenger settings for the currently logged in user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessengerFeatureFlags(self, request, context):
        """*
        Get the feature flags for the logged in user. Needed for Launch
        Darkly support on the frontend as frontend moves off of the LD
        client SDK.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestConsent(self, request, context):
        """*
        Request consent for the buyer to recieve messages from the seller.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessengerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConversations,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetConversationsRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetConversationsResponse.SerializeToString,
            ),
            'GetUtterances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUtterances,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUtterancesRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUtterancesResponse.SerializeToString,
            ),
            'ListMediums': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMediums,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ListMediumsRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ListMediumsResponse.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.SendMessageRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.SendMessageResponse.SerializeToString,
            ),
            'UpdateTranscript': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTranscript,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateTranscriptRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateTranscriptResponse.SerializeToString,
            ),
            'UpdateUtterance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUtterance,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateUtteranceRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateUtteranceResponse.SerializeToString,
            ),
            'GetUnreadConversationsCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnreadConversationsCount,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUnreadConversationsCountRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUnreadConversationsCountResponse.SerializeToString,
            ),
            'ExecuteGraphQL': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteGraphQL,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ExecuteGraphQLRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ExecuteGraphQLResponse.SerializeToString,
            ),
            'GetMessengerSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessengerSettings,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerSettingsRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerSettingsResponse.SerializeToString,
            ),
            'UpdateMessengerSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMessengerSettings,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateMessengerSettingsRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateMessengerSettingsResponse.SerializeToString,
            ),
            'GetMessengerFeatureFlags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessengerFeatureFlags,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerFeatureFlagsRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerFeatureFlagsResponse.SerializeToString,
            ),
            'RequestConsent': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestConsent,
                    request_deserializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.RequestConsentRequest.FromString,
                    response_serializer=squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.RequestConsentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.messenger.v2.MessengerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessengerService(object):
    """*
    Public endpoints for the Messenger service.  This service is intended to be
    called only from the public internet over edge-envoy; all endpoints require
    multipass credentials.

    TODO(hqin): Ask appointments to switch to calling the
    InternalMessengerService version of SendMessage.
    """

    @staticmethod
    def GetConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/GetConversations',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetConversationsRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetConversationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUtterances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/GetUtterances',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUtterancesRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUtterancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMediums(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/ListMediums',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ListMediumsRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ListMediumsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/SendMessage',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.SendMessageRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.SendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTranscript(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/UpdateTranscript',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateTranscriptRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateTranscriptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUtterance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/UpdateUtterance',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateUtteranceRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateUtteranceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnreadConversationsCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/GetUnreadConversationsCount',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUnreadConversationsCountRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetUnreadConversationsCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteGraphQL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/ExecuteGraphQL',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ExecuteGraphQLRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.ExecuteGraphQLResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessengerSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/GetMessengerSettings',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerSettingsRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMessengerSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/UpdateMessengerSettings',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateMessengerSettingsRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.UpdateMessengerSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessengerFeatureFlags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/GetMessengerFeatureFlags',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerFeatureFlagsRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.GetMessengerFeatureFlagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestConsent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.messenger.v2.MessengerService/RequestConsent',
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.RequestConsentRequest.SerializeToString,
            squareup_dot_messenger_dot_v2_dot_messenger__service__pb2.RequestConsentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
