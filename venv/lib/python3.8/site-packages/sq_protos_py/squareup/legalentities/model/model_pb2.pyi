# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.address_pb2 import (
    Address as squareup___common___address_pb2___Address,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.location_pb2 import (
    Phone as squareup___common___location_pb2___Phone,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Structure(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    version_token: typing___Text = ...
    version: builtin___int = ...
    jurisdiction: squareup___common___countries_pb2___CountryValue = ...
    updated_token: typing___Text = ...
    deleted_nodes: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    @property
    def root_legal_entity(self) -> type___LegalEntity: ...

    @property
    def audit_log_entry(self) -> type___AuditLogEntry: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        version_token : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        root_legal_entity : typing___Optional[type___LegalEntity] = None,
        jurisdiction : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        updated_token : typing___Optional[typing___Text] = None,
        audit_log_entry : typing___Optional[type___AuditLogEntry] = None,
        deleted_nodes : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_log_entry",b"audit_log_entry",u"jurisdiction",b"jurisdiction",u"root_legal_entity",b"root_legal_entity",u"token",b"token",u"updated_token",b"updated_token",u"version",b"version",u"version_token",b"version_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_log_entry",b"audit_log_entry",u"deleted_nodes",b"deleted_nodes",u"jurisdiction",b"jurisdiction",u"root_legal_entity",b"root_legal_entity",u"token",b"token",u"updated_token",b"updated_token",u"version",b"version",u"version_token",b"version_token"]) -> None: ...
type___Structure = Structure

class LegalEntity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Relationship(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        @property
        def legal_entity(self) -> type___LegalEntity: ...

        @property
        def business_control_relationship(self) -> type___Business.ControlRelationship: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            legal_entity : typing___Optional[type___LegalEntity] = None,
            business_control_relationship : typing___Optional[type___Business.ControlRelationship] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"business_control_relationship",b"business_control_relationship",u"legal_entity",b"legal_entity",u"metadata",b"metadata",u"relationship",b"relationship"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"business_control_relationship",b"business_control_relationship",u"legal_entity",b"legal_entity",u"metadata",b"metadata",u"relationship",b"relationship"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"relationship",b"relationship"]) -> typing_extensions___Literal["business_control_relationship"]: ...
    type___Relationship = Relationship

    token: typing___Text = ...
    redacted: builtin___bool = ...

    @property
    def relationships(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LegalEntity.Relationship]: ...

    @property
    def individual(self) -> type___Individual: ...

    @property
    def business(self) -> type___Business: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        relationships : typing___Optional[typing___Iterable[type___LegalEntity.Relationship]] = None,
        individual : typing___Optional[type___Individual] = None,
        business : typing___Optional[type___Business] = None,
        redacted : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"business",b"business",u"data",b"data",u"individual",b"individual",u"redacted",b"redacted",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"business",b"business",u"data",b"data",u"individual",b"individual",u"redacted",b"redacted",u"relationships",b"relationships",u"token",b"token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"data",b"data"]) -> typing_extensions___Literal["individual","business"]: ...
type___LegalEntity = LegalEntity

class Individual(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Name(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        family_name: typing___Text = ...
        given_name: typing___Text = ...
        middle_name: typing___Text = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            family_name : typing___Optional[typing___Text] = None,
            given_name : typing___Optional[typing___Text] = None,
            middle_name : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"family_name",b"family_name",u"given_name",b"given_name",u"metadata",b"metadata",u"middle_name",b"middle_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"family_name",b"family_name",u"given_name",b"given_name",u"metadata",b"metadata",u"middle_name",b"middle_name"]) -> None: ...
    type___Name = Name

    class Gender(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ValueValue = typing___NewType('ValueValue', builtin___int)
        type___ValueValue = ValueValue
        Value: _Value
        class _Value(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Individual.Gender.ValueValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            GENDER_VALUE_NOT_SET = typing___cast(Individual.Gender.ValueValue, 0)
            FEMALE = typing___cast(Individual.Gender.ValueValue, 1)
            MALE = typing___cast(Individual.Gender.ValueValue, 2)
        GENDER_VALUE_NOT_SET = typing___cast(Individual.Gender.ValueValue, 0)
        FEMALE = typing___cast(Individual.Gender.ValueValue, 1)
        MALE = typing___cast(Individual.Gender.ValueValue, 2)
        type___Value = Value

        value: type___Individual.Gender.ValueValue = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            value : typing___Optional[type___Individual.Gender.ValueValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
    type___Gender = Gender

    class BirthDate(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        @property
        def value(self) -> squareup___common___time_pb2___YearMonthDay: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            value : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
    type___BirthDate = BirthDate

    class Email(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        value: typing___Text = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
    type___Email = Email

    class SsnLastFour(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        value: typing___Text = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
    type___SsnLastFour = SsnLastFour

    class AuData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        dvs_header_opt_in: builtin___bool = ...
        credit_header_opt_in: builtin___bool = ...

        @property
        def document(self) -> type___Document: ...

        def __init__(self,
            *,
            document : typing___Optional[type___Document] = None,
            dvs_header_opt_in : typing___Optional[builtin___bool] = None,
            credit_header_opt_in : typing___Optional[builtin___bool] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"credit_header_opt_in",b"credit_header_opt_in",u"document",b"document",u"dvs_header_opt_in",b"dvs_header_opt_in"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"credit_header_opt_in",b"credit_header_opt_in",u"document",b"document",u"dvs_header_opt_in",b"dvs_header_opt_in"]) -> None: ...
    type___AuData = AuData

    class CaData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def sin_fidelius_token(self) -> type___StringWithFieldMetadata: ...

        def __init__(self,
            *,
            sin_fidelius_token : typing___Optional[type___StringWithFieldMetadata] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"sin_fidelius_token",b"sin_fidelius_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"sin_fidelius_token",b"sin_fidelius_token"]) -> None: ...
    type___CaData = CaData

    class FrData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___FrData = FrData

    class GbData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___GbData = GbData

    class GovernmentData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        GovernmentIdTypeValue = typing___NewType('GovernmentIdTypeValue', builtin___int)
        type___GovernmentIdTypeValue = GovernmentIdTypeValue
        GovernmentIdType: _GovernmentIdType
        class _GovernmentIdType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Individual.GovernmentData.GovernmentIdTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            T_DO_NOT_USE = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 0)
            PASSPORT = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 1)
            DRIVERS_LICENSE = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 2)
            ID_CARD = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 3)
            RESIDENCE_PERMIT = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 4)
        T_DO_NOT_USE = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 0)
        PASSPORT = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 1)
        DRIVERS_LICENSE = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 2)
        ID_CARD = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 3)
        RESIDENCE_PERMIT = typing___cast(Individual.GovernmentData.GovernmentIdTypeValue, 4)
        type___GovernmentIdType = GovernmentIdType

        type: type___Individual.GovernmentData.GovernmentIdTypeValue = ...
        issuing_country: squareup___common___countries_pb2___CountryValue = ...

        @property
        def government_id_fidelius_token(self) -> type___StringWithFieldMetadata: ...

        def __init__(self,
            *,
            government_id_fidelius_token : typing___Optional[type___StringWithFieldMetadata] = None,
            type : typing___Optional[type___Individual.GovernmentData.GovernmentIdTypeValue] = None,
            issuing_country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"government_id_fidelius_token",b"government_id_fidelius_token",u"issuing_country",b"issuing_country",u"type",b"type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"government_id_fidelius_token",b"government_id_fidelius_token",u"issuing_country",b"issuing_country",u"type",b"type"]) -> None: ...
    type___GovernmentData = GovernmentData

    class JpData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def kanji_name(self) -> type___Individual.Name: ...

        @property
        def katakana_name(self) -> type___Individual.Name: ...

        def __init__(self,
            *,
            kanji_name : typing___Optional[type___Individual.Name] = None,
            katakana_name : typing___Optional[type___Individual.Name] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"kanji_name",b"kanji_name",u"katakana_name",b"katakana_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"kanji_name",b"kanji_name",u"katakana_name",b"katakana_name"]) -> None: ...
    type___JpData = JpData

    class UsData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def ssn_last_four(self) -> type___Individual.SsnLastFour: ...

        @property
        def ssn_fidelius_token(self) -> type___StringWithFieldMetadata: ...

        def __init__(self,
            *,
            ssn_last_four : typing___Optional[type___Individual.SsnLastFour] = None,
            ssn_fidelius_token : typing___Optional[type___StringWithFieldMetadata] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"ssn_fidelius_token",b"ssn_fidelius_token",u"ssn_last_four",b"ssn_last_four"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ssn_fidelius_token",b"ssn_fidelius_token",u"ssn_last_four",b"ssn_last_four"]) -> None: ...
    type___UsData = UsData


    @property
    def name(self) -> type___Individual.Name: ...

    @property
    def address(self) -> type___Address: ...

    @property
    def birth_date(self) -> type___Individual.BirthDate: ...

    @property
    def phone_number(self) -> type___PhoneNumber: ...

    @property
    def gender(self) -> type___Individual.Gender: ...

    @property
    def email(self) -> type___Individual.Email: ...

    @property
    def incorrect_data(self) -> type___IncorrectData: ...

    @property
    def au_data(self) -> type___Individual.AuData: ...

    @property
    def ca_data(self) -> type___Individual.CaData: ...

    @property
    def fr_data(self) -> type___Individual.FrData: ...

    @property
    def gb_data(self) -> type___Individual.GbData: ...

    @property
    def jp_data(self) -> type___Individual.JpData: ...

    @property
    def us_data(self) -> type___Individual.UsData: ...

    @property
    def government_data(self) -> type___Individual.GovernmentData: ...

    def __init__(self,
        *,
        name : typing___Optional[type___Individual.Name] = None,
        address : typing___Optional[type___Address] = None,
        birth_date : typing___Optional[type___Individual.BirthDate] = None,
        phone_number : typing___Optional[type___PhoneNumber] = None,
        gender : typing___Optional[type___Individual.Gender] = None,
        email : typing___Optional[type___Individual.Email] = None,
        incorrect_data : typing___Optional[type___IncorrectData] = None,
        au_data : typing___Optional[type___Individual.AuData] = None,
        ca_data : typing___Optional[type___Individual.CaData] = None,
        fr_data : typing___Optional[type___Individual.FrData] = None,
        gb_data : typing___Optional[type___Individual.GbData] = None,
        jp_data : typing___Optional[type___Individual.JpData] = None,
        us_data : typing___Optional[type___Individual.UsData] = None,
        government_data : typing___Optional[type___Individual.GovernmentData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"au_data",b"au_data",u"birth_date",b"birth_date",u"ca_data",b"ca_data",u"country_data",b"country_data",u"email",b"email",u"fr_data",b"fr_data",u"gb_data",b"gb_data",u"gender",b"gender",u"government_data",b"government_data",u"incorrect_data",b"incorrect_data",u"jp_data",b"jp_data",u"name",b"name",u"phone_number",b"phone_number",u"us_data",b"us_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"au_data",b"au_data",u"birth_date",b"birth_date",u"ca_data",b"ca_data",u"country_data",b"country_data",u"email",b"email",u"fr_data",b"fr_data",u"gb_data",b"gb_data",u"gender",b"gender",u"government_data",b"government_data",u"incorrect_data",b"incorrect_data",u"jp_data",b"jp_data",u"name",b"name",u"phone_number",b"phone_number",u"us_data",b"us_data"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"country_data",b"country_data"]) -> typing_extensions___Literal["au_data","ca_data","fr_data","gb_data","jp_data","us_data","government_data"]: ...
type___Individual = Individual

class IncorrectData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    value: builtin___bool = ...
    reason: typing___Text = ...

    @property
    def metadata(self) -> type___FieldMetadata: ...

    def __init__(self,
        *,
        metadata : typing___Optional[type___FieldMetadata] = None,
        value : typing___Optional[builtin___bool] = None,
        reason : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"reason",b"reason",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"reason",b"reason",u"value",b"value"]) -> None: ...
type___IncorrectData = IncorrectData

class Business(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class DocumentFile(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        DocumentTypeValue = typing___NewType('DocumentTypeValue', builtin___int)
        type___DocumentTypeValue = DocumentTypeValue
        DocumentType: _DocumentType
        class _DocumentType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Business.DocumentFile.DocumentTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DOCUMENT_TYPE_UNDEFINED = typing___cast(Business.DocumentFile.DocumentTypeValue, 0)
            TRUST_DEED = typing___cast(Business.DocumentFile.DocumentTypeValue, 1)
            ANNUAL_GENERAL_MEETING_MINUTES = typing___cast(Business.DocumentFile.DocumentTypeValue, 2)
            CERTIFICATE_OF_INCORPORATION = typing___cast(Business.DocumentFile.DocumentTypeValue, 3)
        DOCUMENT_TYPE_UNDEFINED = typing___cast(Business.DocumentFile.DocumentTypeValue, 0)
        TRUST_DEED = typing___cast(Business.DocumentFile.DocumentTypeValue, 1)
        ANNUAL_GENERAL_MEETING_MINUTES = typing___cast(Business.DocumentFile.DocumentTypeValue, 2)
        CERTIFICATE_OF_INCORPORATION = typing___cast(Business.DocumentFile.DocumentTypeValue, 3)
        type___DocumentType = DocumentType

        document_type: type___Business.DocumentFile.DocumentTypeValue = ...
        docbox_token: typing___Text = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            document_type : typing___Optional[type___Business.DocumentFile.DocumentTypeValue] = None,
            docbox_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"docbox_token",b"docbox_token",u"document_type",b"document_type",u"metadata",b"metadata"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"docbox_token",b"docbox_token",u"document_type",b"document_type",u"metadata",b"metadata"]) -> None: ...
    type___DocumentFile = DocumentFile

    class Structure(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        TypeValue = typing___NewType('TypeValue', builtin___int)
        type___TypeValue = TypeValue
        Type: _Type
        class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Business.Structure.TypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            STRUCTURE_VALUE_NOT_SET = typing___cast(Business.Structure.TypeValue, 1)
            UNKNOWN = typing___cast(Business.Structure.TypeValue, 2)
            INDIVIDUAL_SOLE_TRADER = typing___cast(Business.Structure.TypeValue, 3)
            COMPANY = typing___cast(Business.Structure.TypeValue, 4)
            PARTNERSHIP = typing___cast(Business.Structure.TypeValue, 5)
            TRUST = typing___cast(Business.Structure.TypeValue, 6)
            GOVERNMENT_BODY = typing___cast(Business.Structure.TypeValue, 7)
            COOPERATIVE = typing___cast(Business.Structure.TypeValue, 8)
            SOLE_PROPRIETORSHIP = typing___cast(Business.Structure.TypeValue, 9)
            C_CORPORATION = typing___cast(Business.Structure.TypeValue, 10)
            S_CORPORATION = typing___cast(Business.Structure.TypeValue, 11)
            LIMITED_LIABILITY_COMPANY = typing___cast(Business.Structure.TypeValue, 12)
            INDEPENDENT_CONTRACTOR = typing___cast(Business.Structure.TypeValue, 13)
            SELF_EMPLOYED = typing___cast(Business.Structure.TypeValue, 14)
            NONPROFIT = typing___cast(Business.Structure.TypeValue, 15)
            VETERANS_ORGANIZATION = typing___cast(Business.Structure.TypeValue, 16)
            TRIBAL_BUSINESS = typing___cast(Business.Structure.TypeValue, 17)
            OTHER = typing___cast(Business.Structure.TypeValue, 18)
            DISCRETIONARY_TRUST = typing___cast(Business.Structure.TypeValue, 19)
            UNIT_TRUST = typing___cast(Business.Structure.TypeValue, 20)
            INCORPORATED_ASSOCIATION = typing___cast(Business.Structure.TypeValue, 21)
            UNINCORPORATED_ASSOCIATION = typing___cast(Business.Structure.TypeValue, 22)
            UNKNOWN_ASSOCIATION = typing___cast(Business.Structure.TypeValue, 23)
            UNKNOWN_TRUST = typing___cast(Business.Structure.TypeValue, 24)
        STRUCTURE_VALUE_NOT_SET = typing___cast(Business.Structure.TypeValue, 1)
        UNKNOWN = typing___cast(Business.Structure.TypeValue, 2)
        INDIVIDUAL_SOLE_TRADER = typing___cast(Business.Structure.TypeValue, 3)
        COMPANY = typing___cast(Business.Structure.TypeValue, 4)
        PARTNERSHIP = typing___cast(Business.Structure.TypeValue, 5)
        TRUST = typing___cast(Business.Structure.TypeValue, 6)
        GOVERNMENT_BODY = typing___cast(Business.Structure.TypeValue, 7)
        COOPERATIVE = typing___cast(Business.Structure.TypeValue, 8)
        SOLE_PROPRIETORSHIP = typing___cast(Business.Structure.TypeValue, 9)
        C_CORPORATION = typing___cast(Business.Structure.TypeValue, 10)
        S_CORPORATION = typing___cast(Business.Structure.TypeValue, 11)
        LIMITED_LIABILITY_COMPANY = typing___cast(Business.Structure.TypeValue, 12)
        INDEPENDENT_CONTRACTOR = typing___cast(Business.Structure.TypeValue, 13)
        SELF_EMPLOYED = typing___cast(Business.Structure.TypeValue, 14)
        NONPROFIT = typing___cast(Business.Structure.TypeValue, 15)
        VETERANS_ORGANIZATION = typing___cast(Business.Structure.TypeValue, 16)
        TRIBAL_BUSINESS = typing___cast(Business.Structure.TypeValue, 17)
        OTHER = typing___cast(Business.Structure.TypeValue, 18)
        DISCRETIONARY_TRUST = typing___cast(Business.Structure.TypeValue, 19)
        UNIT_TRUST = typing___cast(Business.Structure.TypeValue, 20)
        INCORPORATED_ASSOCIATION = typing___cast(Business.Structure.TypeValue, 21)
        UNINCORPORATED_ASSOCIATION = typing___cast(Business.Structure.TypeValue, 22)
        UNKNOWN_ASSOCIATION = typing___cast(Business.Structure.TypeValue, 23)
        UNKNOWN_TRUST = typing___cast(Business.Structure.TypeValue, 24)
        type___Type = Type

        type: type___Business.Structure.TypeValue = ...
        raw_structure: typing___Text = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            type : typing___Optional[type___Business.Structure.TypeValue] = None,
            raw_structure : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"raw_structure",b"raw_structure",u"type",b"type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"raw_structure",b"raw_structure",u"type",b"type"]) -> None: ...
    type___Structure = Structure

    class Name(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        value: typing___Text = ...

        @property
        def metadata(self) -> type___FieldMetadata: ...

        def __init__(self,
            *,
            metadata : typing___Optional[type___FieldMetadata] = None,
            value : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
    type___Name = Name

    class ControlRelationship(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        OwnershipValue = typing___NewType('OwnershipValue', builtin___int)
        type___OwnershipValue = OwnershipValue
        Ownership: _Ownership
        class _Ownership(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Business.ControlRelationship.OwnershipValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            OWNERSHIP_NOT_SET = typing___cast(Business.ControlRelationship.OwnershipValue, 0)
            NO_OWNERSHIP = typing___cast(Business.ControlRelationship.OwnershipValue, 1)
            NON_SIGNIFICANT = typing___cast(Business.ControlRelationship.OwnershipValue, 2)
            BENEFICIAL = typing___cast(Business.ControlRelationship.OwnershipValue, 3)
        OWNERSHIP_NOT_SET = typing___cast(Business.ControlRelationship.OwnershipValue, 0)
        NO_OWNERSHIP = typing___cast(Business.ControlRelationship.OwnershipValue, 1)
        NON_SIGNIFICANT = typing___cast(Business.ControlRelationship.OwnershipValue, 2)
        BENEFICIAL = typing___cast(Business.ControlRelationship.OwnershipValue, 3)
        type___Ownership = Ownership

        RoleValue = typing___NewType('RoleValue', builtin___int)
        type___RoleValue = RoleValue
        Role: _Role
        class _Role(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Business.ControlRelationship.RoleValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            ROLE_NOT_SET = typing___cast(Business.ControlRelationship.RoleValue, 0)
            NO_ROLE = typing___cast(Business.ControlRelationship.RoleValue, 1)
            MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 2)
            DIRECTOR = typing___cast(Business.ControlRelationship.RoleValue, 3)
            PARTNER = typing___cast(Business.ControlRelationship.RoleValue, 4)
            TRUST_BENEFICIARY = typing___cast(Business.ControlRelationship.RoleValue, 5)
            TRUST_HOLDER = typing___cast(Business.ControlRelationship.RoleValue, 6)
            SOLE_TRADER = typing___cast(Business.ControlRelationship.RoleValue, 7)
            OFFICER_OR_AGENT = typing___cast(Business.ControlRelationship.RoleValue, 8)
            SECRETARY = typing___cast(Business.ControlRelationship.RoleValue, 9)
            SOLE_DIRECTOR = typing___cast(Business.ControlRelationship.RoleValue, 10)
            COMPANY_DIRECTORS = typing___cast(Business.ControlRelationship.RoleValue, 11)
            TRUSTEE = typing___cast(Business.ControlRelationship.RoleValue, 12)
            APPOINTER_OR_PRINCIPAL = typing___cast(Business.ControlRelationship.RoleValue, 13)
            TREASURER_OR_FINANCIAL_CONTROLLER = typing___cast(Business.ControlRelationship.RoleValue, 14)
            PRESIDENT_OR_CHAIRMAN_OR_CEO = typing___cast(Business.ControlRelationship.RoleValue, 15)
            BUSINESS_MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 16)
            CEO = typing___cast(Business.ControlRelationship.RoleValue, 17)
            CFO = typing___cast(Business.ControlRelationship.RoleValue, 18)
            COO = typing___cast(Business.ControlRelationship.RoleValue, 19)
            MANAGING_MEMBER = typing___cast(Business.ControlRelationship.RoleValue, 20)
            GENERAL_PARTNER = typing___cast(Business.ControlRelationship.RoleValue, 21)
            PRESIDENT = typing___cast(Business.ControlRelationship.RoleValue, 22)
            VICE_PRESIDENT = typing___cast(Business.ControlRelationship.RoleValue, 23)
            TREASURER = typing___cast(Business.ControlRelationship.RoleValue, 24)
            OTHER_MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 25)
            NON_MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 26)
            TAXPAYER = typing___cast(Business.ControlRelationship.RoleValue, 27)
            SETTLOR = typing___cast(Business.ControlRelationship.RoleValue, 28)
            UNIT_HOLDER = typing___cast(Business.ControlRelationship.RoleValue, 29)
            APPOINTER = typing___cast(Business.ControlRelationship.RoleValue, 30)
        ROLE_NOT_SET = typing___cast(Business.ControlRelationship.RoleValue, 0)
        NO_ROLE = typing___cast(Business.ControlRelationship.RoleValue, 1)
        MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 2)
        DIRECTOR = typing___cast(Business.ControlRelationship.RoleValue, 3)
        PARTNER = typing___cast(Business.ControlRelationship.RoleValue, 4)
        TRUST_BENEFICIARY = typing___cast(Business.ControlRelationship.RoleValue, 5)
        TRUST_HOLDER = typing___cast(Business.ControlRelationship.RoleValue, 6)
        SOLE_TRADER = typing___cast(Business.ControlRelationship.RoleValue, 7)
        OFFICER_OR_AGENT = typing___cast(Business.ControlRelationship.RoleValue, 8)
        SECRETARY = typing___cast(Business.ControlRelationship.RoleValue, 9)
        SOLE_DIRECTOR = typing___cast(Business.ControlRelationship.RoleValue, 10)
        COMPANY_DIRECTORS = typing___cast(Business.ControlRelationship.RoleValue, 11)
        TRUSTEE = typing___cast(Business.ControlRelationship.RoleValue, 12)
        APPOINTER_OR_PRINCIPAL = typing___cast(Business.ControlRelationship.RoleValue, 13)
        TREASURER_OR_FINANCIAL_CONTROLLER = typing___cast(Business.ControlRelationship.RoleValue, 14)
        PRESIDENT_OR_CHAIRMAN_OR_CEO = typing___cast(Business.ControlRelationship.RoleValue, 15)
        BUSINESS_MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 16)
        CEO = typing___cast(Business.ControlRelationship.RoleValue, 17)
        CFO = typing___cast(Business.ControlRelationship.RoleValue, 18)
        COO = typing___cast(Business.ControlRelationship.RoleValue, 19)
        MANAGING_MEMBER = typing___cast(Business.ControlRelationship.RoleValue, 20)
        GENERAL_PARTNER = typing___cast(Business.ControlRelationship.RoleValue, 21)
        PRESIDENT = typing___cast(Business.ControlRelationship.RoleValue, 22)
        VICE_PRESIDENT = typing___cast(Business.ControlRelationship.RoleValue, 23)
        TREASURER = typing___cast(Business.ControlRelationship.RoleValue, 24)
        OTHER_MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 25)
        NON_MANAGER = typing___cast(Business.ControlRelationship.RoleValue, 26)
        TAXPAYER = typing___cast(Business.ControlRelationship.RoleValue, 27)
        SETTLOR = typing___cast(Business.ControlRelationship.RoleValue, 28)
        UNIT_HOLDER = typing___cast(Business.ControlRelationship.RoleValue, 29)
        APPOINTER = typing___cast(Business.ControlRelationship.RoleValue, 30)
        type___Role = Role

        role: type___Business.ControlRelationship.RoleValue = ...
        ownership: type___Business.ControlRelationship.OwnershipValue = ...
        primary_individual: builtin___bool = ...
        authorized_representative: builtin___bool = ...

        def __init__(self,
            *,
            role : typing___Optional[type___Business.ControlRelationship.RoleValue] = None,
            ownership : typing___Optional[type___Business.ControlRelationship.OwnershipValue] = None,
            primary_individual : typing___Optional[builtin___bool] = None,
            authorized_representative : typing___Optional[builtin___bool] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"authorized_representative",b"authorized_representative",u"ownership",b"ownership",u"primary_individual",b"primary_individual",u"role",b"role"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"authorized_representative",b"authorized_representative",u"ownership",b"ownership",u"primary_individual",b"primary_individual",u"role",b"role"]) -> None: ...
    type___ControlRelationship = ControlRelationship

    class AuData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def abn(self) -> type___StringWithFieldMetadata: ...

        @property
        def acn(self) -> type___StringWithFieldMetadata: ...

        @property
        def incorporation_number(self) -> type___StringWithFieldMetadata: ...

        def __init__(self,
            *,
            abn : typing___Optional[type___StringWithFieldMetadata] = None,
            acn : typing___Optional[type___StringWithFieldMetadata] = None,
            incorporation_number : typing___Optional[type___StringWithFieldMetadata] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"abn",b"abn",u"acn",b"acn",u"incorporation_number",b"incorporation_number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"abn",b"abn",u"acn",b"acn",u"incorporation_number",b"incorporation_number"]) -> None: ...
    type___AuData = AuData

    class CaData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def cra_business_number(self) -> type___StringWithFieldMetadata: ...

        def __init__(self,
            *,
            cra_business_number : typing___Optional[type___StringWithFieldMetadata] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"cra_business_number",b"cra_business_number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"cra_business_number",b"cra_business_number"]) -> None: ...
    type___CaData = CaData

    class GbData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def chrn(self) -> type___StringWithFieldMetadata: ...

        @property
        def location_address(self) -> type___Address: ...

        def __init__(self,
            *,
            chrn : typing___Optional[type___StringWithFieldMetadata] = None,
            location_address : typing___Optional[type___Address] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"chrn",b"chrn",u"location_address",b"location_address"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"chrn",b"chrn",u"location_address",b"location_address"]) -> None: ...
    type___GbData = GbData

    class JpData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class JcbApplicationInfo(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            administrative_action: builtin___bool = ...
            administrative_action_note: typing___Text = ...
            corporate_number: typing___Text = ...
            license_number: typing___Text = ...
            license_holder_name: typing___Text = ...
            license_type: typing___Text = ...

            @property
            def metadata(self) -> type___FieldMetadata: ...

            def __init__(self,
                *,
                metadata : typing___Optional[type___FieldMetadata] = None,
                administrative_action : typing___Optional[builtin___bool] = None,
                administrative_action_note : typing___Optional[typing___Text] = None,
                corporate_number : typing___Optional[typing___Text] = None,
                license_number : typing___Optional[typing___Text] = None,
                license_holder_name : typing___Optional[typing___Text] = None,
                license_type : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"administrative_action",b"administrative_action",u"administrative_action_note",b"administrative_action_note",u"corporate_number",b"corporate_number",u"license_holder_name",b"license_holder_name",u"license_number",b"license_number",u"license_type",b"license_type",u"metadata",b"metadata"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"administrative_action",b"administrative_action",u"administrative_action_note",b"administrative_action_note",u"corporate_number",b"corporate_number",u"license_holder_name",b"license_holder_name",u"license_number",b"license_number",u"license_type",b"license_type",u"metadata",b"metadata"]) -> None: ...
        type___JcbApplicationInfo = JcbApplicationInfo


        @property
        def jcb_application_info(self) -> type___Business.JpData.JcbApplicationInfo: ...

        @property
        def kanji_name(self) -> type___Business.Name: ...

        @property
        def katakana_name(self) -> type___Business.Name: ...

        @property
        def phone_number(self) -> type___PhoneNumber: ...

        def __init__(self,
            *,
            jcb_application_info : typing___Optional[type___Business.JpData.JcbApplicationInfo] = None,
            kanji_name : typing___Optional[type___Business.Name] = None,
            katakana_name : typing___Optional[type___Business.Name] = None,
            phone_number : typing___Optional[type___PhoneNumber] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"jcb_application_info",b"jcb_application_info",u"kanji_name",b"kanji_name",u"katakana_name",b"katakana_name",u"phone_number",b"phone_number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"jcb_application_info",b"jcb_application_info",u"kanji_name",b"kanji_name",u"katakana_name",b"katakana_name",u"phone_number",b"phone_number"]) -> None: ...
    type___JpData = JpData

    class UsData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def ein_fidelius_token(self) -> type___StringWithFieldMetadata: ...

        def __init__(self,
            *,
            ein_fidelius_token : typing___Optional[type___StringWithFieldMetadata] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"ein_fidelius_token",b"ein_fidelius_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ein_fidelius_token",b"ein_fidelius_token"]) -> None: ...
    type___UsData = UsData

    incomplete_owners: builtin___bool = ...

    @property
    def structure(self) -> type___Business.Structure: ...

    @property
    def legal_name(self) -> type___Business.Name: ...

    @property
    def address(self) -> type___Address: ...

    @property
    def phone_number(self) -> type___PhoneNumber: ...

    @property
    def document_files(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Business.DocumentFile]: ...

    @property
    def incorrect_data(self) -> type___IncorrectData: ...

    @property
    def au_data(self) -> type___Business.AuData: ...

    @property
    def ca_data(self) -> type___Business.CaData: ...

    @property
    def gb_data(self) -> type___Business.GbData: ...

    @property
    def jp_data(self) -> type___Business.JpData: ...

    @property
    def us_data(self) -> type___Business.UsData: ...

    def __init__(self,
        *,
        structure : typing___Optional[type___Business.Structure] = None,
        legal_name : typing___Optional[type___Business.Name] = None,
        address : typing___Optional[type___Address] = None,
        incomplete_owners : typing___Optional[builtin___bool] = None,
        phone_number : typing___Optional[type___PhoneNumber] = None,
        document_files : typing___Optional[typing___Iterable[type___Business.DocumentFile]] = None,
        incorrect_data : typing___Optional[type___IncorrectData] = None,
        au_data : typing___Optional[type___Business.AuData] = None,
        ca_data : typing___Optional[type___Business.CaData] = None,
        gb_data : typing___Optional[type___Business.GbData] = None,
        jp_data : typing___Optional[type___Business.JpData] = None,
        us_data : typing___Optional[type___Business.UsData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"au_data",b"au_data",u"ca_data",b"ca_data",u"country_data",b"country_data",u"gb_data",b"gb_data",u"incomplete_owners",b"incomplete_owners",u"incorrect_data",b"incorrect_data",u"jp_data",b"jp_data",u"legal_name",b"legal_name",u"phone_number",b"phone_number",u"structure",b"structure",u"us_data",b"us_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"au_data",b"au_data",u"ca_data",b"ca_data",u"country_data",b"country_data",u"document_files",b"document_files",u"gb_data",b"gb_data",u"incomplete_owners",b"incomplete_owners",u"incorrect_data",b"incorrect_data",u"jp_data",b"jp_data",u"legal_name",b"legal_name",u"phone_number",b"phone_number",u"structure",b"structure",u"us_data",b"us_data"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"country_data",b"country_data"]) -> typing_extensions___Literal["au_data","ca_data","gb_data","jp_data","us_data"]: ...
type___Business = Business

class StringWithFieldMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    value: typing___Text = ...

    @property
    def metadata(self) -> type___FieldMetadata: ...

    def __init__(self,
        *,
        metadata : typing___Optional[type___FieldMetadata] = None,
        value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
type___StringWithFieldMetadata = StringWithFieldMetadata

class Address(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class JpData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        agrex_code: typing___Text = ...
        prefecture_iso_code: typing___Text = ...

        def __init__(self,
            *,
            agrex_code : typing___Optional[typing___Text] = None,
            prefecture_iso_code : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"agrex_code",b"agrex_code",u"prefecture_iso_code",b"prefecture_iso_code"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"agrex_code",b"agrex_code",u"prefecture_iso_code",b"prefecture_iso_code"]) -> None: ...
    type___JpData = JpData

    address_token: typing___Text = ...

    @property
    def metadata(self) -> type___FieldMetadata: ...

    @property
    def jp_data(self) -> type___Address.JpData: ...

    @property
    def address(self) -> squareup___common___address_pb2___Address: ...

    def __init__(self,
        *,
        metadata : typing___Optional[type___FieldMetadata] = None,
        address_token : typing___Optional[typing___Text] = None,
        jp_data : typing___Optional[type___Address.JpData] = None,
        address : typing___Optional[squareup___common___address_pb2___Address] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"address_token",b"address_token",u"country_data",b"country_data",u"jp_data",b"jp_data",u"metadata",b"metadata"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"address_token",b"address_token",u"country_data",b"country_data",u"jp_data",b"jp_data",u"metadata",b"metadata"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"country_data",b"country_data"]) -> typing_extensions___Literal["jp_data"]: ...
type___Address = Address

class DateTime(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def metadata(self) -> type___FieldMetadata: ...

    @property
    def value(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        metadata : typing___Optional[type___FieldMetadata] = None,
        value : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
type___DateTime = DateTime

class PhoneNumber(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def metadata(self) -> type___FieldMetadata: ...

    @property
    def value(self) -> squareup___common___location_pb2___Phone: ...

    def __init__(self,
        *,
        metadata : typing___Optional[type___FieldMetadata] = None,
        value : typing___Optional[squareup___common___location_pb2___Phone] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"value",b"value"]) -> None: ...
type___PhoneNumber = PhoneNumber

class FieldMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    QualityValue = typing___NewType('QualityValue', builtin___int)
    type___QualityValue = QualityValue
    Quality: _Quality
    class _Quality(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FieldMetadata.QualityValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        QUALITY_NOT_SET = typing___cast(FieldMetadata.QualityValue, 0)
        USER_INPUT = typing___cast(FieldMetadata.QualityValue, 1)
        FUZZY_MATCH = typing___cast(FieldMetadata.QualityValue, 5)
        STRICT_MATCH = typing___cast(FieldMetadata.QualityValue, 6)
        APPROVED_MANUAL_MODIFICATION = typing___cast(FieldMetadata.QualityValue, 9)
    QUALITY_NOT_SET = typing___cast(FieldMetadata.QualityValue, 0)
    USER_INPUT = typing___cast(FieldMetadata.QualityValue, 1)
    FUZZY_MATCH = typing___cast(FieldMetadata.QualityValue, 5)
    STRICT_MATCH = typing___cast(FieldMetadata.QualityValue, 6)
    APPROVED_MANUAL_MODIFICATION = typing___cast(FieldMetadata.QualityValue, 9)
    type___Quality = Quality

    quality: type___FieldMetadata.QualityValue = ...
    source: typing___Text = ...

    def __init__(self,
        *,
        quality : typing___Optional[type___FieldMetadata.QualityValue] = None,
        source : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"quality",b"quality",u"source",b"source"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"quality",b"quality",u"source",b"source"]) -> None: ...
type___FieldMetadata = FieldMetadata

class AuditLogEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    service_ou: typing___Text = ...
    agent_uid: typing___Text = ...
    update_reason: typing___Text = ...

    def __init__(self,
        *,
        service_ou : typing___Optional[typing___Text] = None,
        agent_uid : typing___Optional[typing___Text] = None,
        update_reason : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"agent_uid",b"agent_uid",u"service_ou",b"service_ou",u"update_reason",b"update_reason"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"agent_uid",b"agent_uid",u"service_ou",b"service_ou",u"update_reason",b"update_reason"]) -> None: ...
type___AuditLogEntry = AuditLogEntry

class Document(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Passport(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        GenderValue = typing___NewType('GenderValue', builtin___int)
        type___GenderValue = GenderValue
        Gender: _Gender
        class _Gender(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Document.Passport.GenderValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            GENDER_NOT_SET = typing___cast(Document.Passport.GenderValue, 0)
            MALE = typing___cast(Document.Passport.GenderValue, 1)
            FEMALE = typing___cast(Document.Passport.GenderValue, 2)
        GENDER_NOT_SET = typing___cast(Document.Passport.GenderValue, 0)
        MALE = typing___cast(Document.Passport.GenderValue, 1)
        FEMALE = typing___cast(Document.Passport.GenderValue, 2)
        type___Gender = Gender

        country: squareup___common___countries_pb2___CountryValue = ...
        number: typing___Text = ...
        gender: type___Document.Passport.GenderValue = ...

        def __init__(self,
            *,
            country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
            number : typing___Optional[typing___Text] = None,
            gender : typing___Optional[type___Document.Passport.GenderValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"country",b"country",u"gender",b"gender",u"number",b"number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"country",b"country",u"gender",b"gender",u"number",b"number"]) -> None: ...
    type___Passport = Passport

    class DriversLicense(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        state_code: typing___Text = ...
        number: typing___Text = ...

        def __init__(self,
            *,
            state_code : typing___Optional[typing___Text] = None,
            number : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"number",b"number",u"state_code",b"state_code"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"number",b"number",u"state_code",b"state_code"]) -> None: ...
    type___DriversLicense = DriversLicense

    class Medicare(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        CardColorValue = typing___NewType('CardColorValue', builtin___int)
        type___CardColorValue = CardColorValue
        CardColor: _CardColor
        class _CardColor(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Document.Medicare.CardColorValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            CARD_COLOR_NOT_SET = typing___cast(Document.Medicare.CardColorValue, 0)
            GREEN = typing___cast(Document.Medicare.CardColorValue, 1)
            BLUE = typing___cast(Document.Medicare.CardColorValue, 2)
            YELLOW = typing___cast(Document.Medicare.CardColorValue, 3)
        CARD_COLOR_NOT_SET = typing___cast(Document.Medicare.CardColorValue, 0)
        GREEN = typing___cast(Document.Medicare.CardColorValue, 1)
        BLUE = typing___cast(Document.Medicare.CardColorValue, 2)
        YELLOW = typing___cast(Document.Medicare.CardColorValue, 3)
        type___CardColor = CardColor

        card_number: typing___Text = ...
        reference_number: typing___Text = ...
        middle_name_on_card: typing___Text = ...
        card_color: type___Document.Medicare.CardColorValue = ...

        @property
        def expiration_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

        def __init__(self,
            *,
            card_number : typing___Optional[typing___Text] = None,
            reference_number : typing___Optional[typing___Text] = None,
            middle_name_on_card : typing___Optional[typing___Text] = None,
            expiration_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
            card_color : typing___Optional[type___Document.Medicare.CardColorValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"card_color",b"card_color",u"card_number",b"card_number",u"expiration_date",b"expiration_date",u"middle_name_on_card",b"middle_name_on_card",u"reference_number",b"reference_number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"card_color",b"card_color",u"card_number",b"card_number",u"expiration_date",b"expiration_date",u"middle_name_on_card",b"middle_name_on_card",u"reference_number",b"reference_number"]) -> None: ...
    type___Medicare = Medicare


    @property
    def metadata(self) -> type___FieldMetadata: ...

    @property
    def passport(self) -> type___Document.Passport: ...

    @property
    def drivers_license(self) -> type___Document.DriversLicense: ...

    @property
    def medicare(self) -> type___Document.Medicare: ...

    def __init__(self,
        *,
        metadata : typing___Optional[type___FieldMetadata] = None,
        passport : typing___Optional[type___Document.Passport] = None,
        drivers_license : typing___Optional[type___Document.DriversLicense] = None,
        medicare : typing___Optional[type___Document.Medicare] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"document",b"document",u"drivers_license",b"drivers_license",u"medicare",b"medicare",u"metadata",b"metadata",u"passport",b"passport"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"document",b"document",u"drivers_license",b"drivers_license",u"medicare",b"medicare",u"metadata",b"metadata",u"passport",b"passport"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"document",b"document"]) -> typing_extensions___Literal["passport","drivers_license","medicare"]: ...
type___Document = Document
