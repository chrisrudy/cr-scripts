# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.legalentities.service.admin import admin_service_pb2 as squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2


class LegalEntitiesAdminServiceStub(object):
    """
    Set of operations useful for debugging/manual intervention, strictly for internal team use.

    Only exposed via admin console RPC tab; interaction with these operations should not be
    automated or made part of any critical flow.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStructureHistory = channel.unary_unary(
                '/squareup.legalentities.service.admin.LegalEntitiesAdminService/GetStructureHistory',
                request_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetStructureHistoryRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetStructureHistoryResponse.FromString,
                )
        self.ResetVerificationAttempts = channel.unary_unary(
                '/squareup.legalentities.service.admin.LegalEntitiesAdminService/ResetVerificationAttempts',
                request_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.ResetVerificationAttemptsRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.ResetVerificationAttemptsResponse.FromString,
                )
        self.RefreshVerificationDecision = channel.unary_unary(
                '/squareup.legalentities.service.admin.LegalEntitiesAdminService/RefreshVerificationDecision',
                request_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.RefreshVerificationDecisionRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.RefreshVerificationDecisionResponse.FromString,
                )
        self.GetDecisionHistory = channel.unary_unary(
                '/squareup.legalentities.service.admin.LegalEntitiesAdminService/GetDecisionHistory',
                request_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetDecisionHistoryRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetDecisionHistoryResponse.FromString,
                )
        self.UpsertSignal = channel.unary_unary(
                '/squareup.legalentities.service.admin.LegalEntitiesAdminService/UpsertSignal',
                request_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.UpsertSignalRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.UpsertSignalResponse.FromString,
                )
        self.GetIdvJobData = channel.unary_unary(
                '/squareup.legalentities.service.admin.LegalEntitiesAdminService/GetIdvJobData',
                request_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetIdvJobDataRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetIdvJobDataResponse.FromString,
                )


class LegalEntitiesAdminServiceServicer(object):
    """
    Set of operations useful for debugging/manual intervention, strictly for internal team use.

    Only exposed via admin console RPC tab; interaction with these operations should not be
    automated or made part of any critical flow.
    """

    def GetStructureHistory(self, request, context):
        """Read all versions of a Legal Entity structure. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetVerificationAttempts(self, request, context):
        """
        Resets the number of tracked full verification attempts on a given Legal Entity structure and
        refreshes its decisions. Used for sporadic cases where a given Legal Entity should be allowed
        to retry IDV after they've exhausted their default number of attempts (either due to outage,
        customer support, or compliance requests). Only applies to full verifications; has no effect
        on existing provisional activtions (i.e. provisional verifications can only occur once over the
        lifetime of a Legal Entity).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshVerificationDecision(self, request, context):
        """Refresh the verification decision for a Legal Entity. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDecisionHistory(self, request, context):
        """Retrieve all the decisions for a given legal entity, across all its versions. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertSignal(self, request, context):
        """
        Upsert internal Signals on a structure to potentially drive a change in the structure's
        VerificationStatus
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIdvJobData(self, request, context):
        """Retrieve the current context for specific IDV job. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LegalEntitiesAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStructureHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStructureHistory,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetStructureHistoryRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetStructureHistoryResponse.SerializeToString,
            ),
            'ResetVerificationAttempts': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetVerificationAttempts,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.ResetVerificationAttemptsRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.ResetVerificationAttemptsResponse.SerializeToString,
            ),
            'RefreshVerificationDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshVerificationDecision,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.RefreshVerificationDecisionRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.RefreshVerificationDecisionResponse.SerializeToString,
            ),
            'GetDecisionHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDecisionHistory,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetDecisionHistoryRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetDecisionHistoryResponse.SerializeToString,
            ),
            'UpsertSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertSignal,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.UpsertSignalRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.UpsertSignalResponse.SerializeToString,
            ),
            'GetIdvJobData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIdvJobData,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetIdvJobDataRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetIdvJobDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.legalentities.service.admin.LegalEntitiesAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LegalEntitiesAdminService(object):
    """
    Set of operations useful for debugging/manual intervention, strictly for internal team use.

    Only exposed via admin console RPC tab; interaction with these operations should not be
    automated or made part of any critical flow.
    """

    @staticmethod
    def GetStructureHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.admin.LegalEntitiesAdminService/GetStructureHistory',
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetStructureHistoryRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetStructureHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetVerificationAttempts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.admin.LegalEntitiesAdminService/ResetVerificationAttempts',
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.ResetVerificationAttemptsRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.ResetVerificationAttemptsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshVerificationDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.admin.LegalEntitiesAdminService/RefreshVerificationDecision',
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.RefreshVerificationDecisionRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.RefreshVerificationDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDecisionHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.admin.LegalEntitiesAdminService/GetDecisionHistory',
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetDecisionHistoryRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetDecisionHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.admin.LegalEntitiesAdminService/UpsertSignal',
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.UpsertSignalRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.UpsertSignalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIdvJobData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.admin.LegalEntitiesAdminService/GetIdvJobData',
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetIdvJobDataRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_admin_dot_admin__service__pb2.GetIdvJobDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
