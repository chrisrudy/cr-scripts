# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.legalentities.service import service_pb2 as squareup_dot_legalentities_dot_service_dot_service__pb2


class LegalEntitiesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBusiness = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/CreateBusiness',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateBusinessResponse.FromString,
                )
        self.CreateIndividualWithBusinessRelationship = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/CreateIndividualWithBusinessRelationship',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateIndividualWithBusinessRelationshipRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateIndividualWithBusinessRelationshipResponse.FromString,
                )
        self.GetLegalEntity = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/GetLegalEntity',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLegalEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLegalEntityResponse.FromString,
                )
        self.UpdateLegalEntity = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/UpdateLegalEntity',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityResponse.FromString,
                )
        self.UpdateLegalEntityNode = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/UpdateLegalEntityNode',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityNodeRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityNodeResponse.FromString,
                )
        self.DeleteIndividual = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/DeleteIndividual',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteIndividualRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteIndividualResponse.FromString,
                )
        self.PrivilegedDeleteNode = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/PrivilegedDeleteNode',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.PrivilegedDeleteNodeRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.PrivilegedDeleteNodeResponse.FromString,
                )
        self.ListLegalEntitiesNodes = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/ListLegalEntitiesNodes',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListLegalEntitiesNodesRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListLegalEntitiesNodesResponse.FromString,
                )
        self.GetStructure = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/GetStructure',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetStructureRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetStructureResponse.FromString,
                )
        self.GetSignals = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/GetSignals',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetSignalsResponse.FromString,
                )
        self.SetManualReviewSignal = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/SetManualReviewSignal',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetManualReviewSignalRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetManualReviewSignalResponse.FromString,
                )
        self.SetAcceptanceSignal = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/SetAcceptanceSignal',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetAcceptanceSignalRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetAcceptanceSignalResponse.FromString,
                )
        self.SetComplianceSignal = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/SetComplianceSignal',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetComplianceSignalRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetComplianceSignalResponse.FromString,
                )
        self.SetTinSignal = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/SetTinSignal',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetTinSignalRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetTinSignalResponse.FromString,
                )
        self.UpdateProvisionalSignal = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/UpdateProvisionalSignal',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateProvisionalSignalRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateProvisionalSignalResponse.FromString,
                )
        self.SetIndividualIdv = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/SetIndividualIdv',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetIndividualIdvRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetIndividualIdvResponse.FromString,
                )
        self.RedactLegalEntity = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/RedactLegalEntity',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RedactLegalEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RedactLegalEntityResponse.FromString,
                )
        self.GetLatestVerificationDecision = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/GetLatestVerificationDecision',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLatestVerificationDecisionRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLatestVerificationDecisionResponse.FromString,
                )
        self.Verify = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/Verify',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyResponse.FromString,
                )
        self.GetAllVerificationsDecisions = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/GetAllVerificationsDecisions',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetAllVerificationsDecisionsRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetAllVerificationsDecisionsResponse.FromString,
                )
        self.VerifyQuiz = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/VerifyQuiz',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyQuizRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyQuizResponse.FromString,
                )
        self.CreateDocument = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/CreateDocument',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateDocumentRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateDocumentResponse.FromString,
                )
        self.ListDocuments = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/ListDocuments',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListDocumentsRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListDocumentsResponse.FromString,
                )
        self.RetrieveDocument = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/RetrieveDocument',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RetrieveDocumentRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RetrieveDocumentResponse.FromString,
                )
        self.DeleteDocument = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/DeleteDocument',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteDocumentRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteDocumentResponse.FromString,
                )
        self.OverwriteStructure = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/OverwriteStructure',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.OverwriteStructureRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.OverwriteStructureResponse.FromString,
                )
        self.ListStructuresByIndividual = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/ListStructuresByIndividual',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByIndividualRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByIndividualResponse.FromString,
                )
        self.ListStructuresByBusiness = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/ListStructuresByBusiness',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByBusinessResponse.FromString,
                )
        self.BeginDocIdv = channel.unary_unary(
                '/squareup.legalentities.service.LegalEntitiesService/BeginDocIdv',
                request_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.BeginDocIdvRequest.SerializeToString,
                response_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.BeginDocIdvResponse.FromString,
                )


class LegalEntitiesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateBusiness(self, request, context):
        """* Create a new business 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIndividualWithBusinessRelationship(self, request, context):
        """* Create an individual associated with an existing business 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLegalEntity(self, request, context):
        """* Read the latest version or a specific version of a LegalEntity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLegalEntity(self, request, context):
        """*
        DEPRECATED: For exclusive use of Onboard during migration process.
        Use UpdateLegalEntityNode instead.

        Updates a Legal Entity (bumping its version) without carrying over any signal or decision
        information, effectively leaving it open to roll back to UNVERIFIED as soon as any other event
        that causes a decision refresh happens.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLegalEntityNode(self, request, context):
        """*
        Update a legal entity node within a legal entity structure,
        preserving all active signals and verification decision.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIndividual(self, request, context):
        """*
        DEPRECATED: Use PrivilegedDeleteNode
        DeleteIndividual updates a legal entity structure to remove a node from its
        graph. The named node and its relationship to its parent will be removed. Can
        only be applied to individual-type legal entity nodes (not a business).

        This is a privileged operation. It will modify legal entities with verified
        or suspended product decisions or in other normally non-editable states. This
        operation will not change any existing signal metadata describing the legal
        entity, in particular IDV results that may reference the deleted node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrivilegedDeleteNode(self, request, context):
        """*
        PrivilegedDeleteNode updates a legal entity structure to remove a node from its
        graph. The named node and its relationship to its parent will be removed. Can not be applied
        to root legal entity node.

        This is a privileged operation. It will modify legal entities with verified
        or suspended product decisions or in other normally non-editable states. This
        operation will not change any existing signal metadata describing the legal
        entity, in particular IDV results that may reference the deleted node.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLegalEntitiesNodes(self, request, context):
        """*
        List the latest version of all nodes and its decision including deleted nodes. The latest
        version of a deleted node is the version before it was deleted.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStructure(self, request, context):
        """* Read the latest version or a specific version of a Structure 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSignals(self, request, context):
        """* Get active signals for a Legal Entity structure. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetManualReviewSignal(self, request, context):
        """* Install a new or update an existing VerificationSignal of type ManualReview 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAcceptanceSignal(self, request, context):
        """* Install a new or update an existing VerificationSignal of type Acceptance 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetComplianceSignal(self, request, context):
        """* Install a new or update an existing VerificationSignal of type Compliance 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetTinSignal(self, request, context):
        """* Install a new or update an existing VerificationSignal of type Tin 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProvisionalSignal(self, request, context):
        """* Update an existing VerificationSignal of type Provisional. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIndividualIdv(self, request, context):
        """*
        Manually sets the IDV results for an Individual. A manual IDV result takes
        precedence over other data sources. The specified Individual must be present
        in the latest legal entity structure revision.

        This is effectively a specialized method for changing a VerificationSignal of
        type IdentityVerification. Like other Set*Signal methods, this call will
        install a new signal or updating the existing one if present.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedactLegalEntity(self, request, context):
        """* Redact the information associated with a given LegalEntity for all versions of the Structure 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestVerificationDecision(self, request, context):
        """Get the latest verification decision for a Legal Entity to use a product. The LE can be either
        the latest version or a specified version.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Verify(self, request, context):
        """* Verify a Legal Entity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllVerificationsDecisions(self, request, context):
        """* Get all verifications decisions of a legal entity across used to use a product all versions. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyQuiz(self, request, context):
        """* Verify a Legal Entity by additionally interpreting results from KBA Quiz 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDocument(self, request, context):
        """Create a new document describing an individual in a legal entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocuments(self, request, context):
        """List document metadata associated with a legal entity.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveDocument(self, request, context):
        """Get document metadata for a specific document.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocument(self, request, context):
        """Delete an uploaded document when possible.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OverwriteStructure(self, request, context):
        """Replaces all nodes inside a destination legal entity structure with the nodes from a source
        legal entity structure. Node data is preserved exactly, but each node will be given a new
        random ID (to keep node IDs unique).
        Source and destination legal entities must both be in VERIFIED status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStructuresByIndividual(self, request, context):
        """Get legal entities structures assosiated with an individual
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListStructuresByBusiness(self, request, context):
        """Get legal entities structures assosiated with an individual
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BeginDocIdv(self, request, context):
        """* Begin document based identity verification for an individual node. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LegalEntitiesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBusiness,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateBusinessRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateBusinessResponse.SerializeToString,
            ),
            'CreateIndividualWithBusinessRelationship': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndividualWithBusinessRelationship,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateIndividualWithBusinessRelationshipRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateIndividualWithBusinessRelationshipResponse.SerializeToString,
            ),
            'GetLegalEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLegalEntity,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLegalEntityRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLegalEntityResponse.SerializeToString,
            ),
            'UpdateLegalEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLegalEntity,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityResponse.SerializeToString,
            ),
            'UpdateLegalEntityNode': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLegalEntityNode,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityNodeRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityNodeResponse.SerializeToString,
            ),
            'DeleteIndividual': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIndividual,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteIndividualRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteIndividualResponse.SerializeToString,
            ),
            'PrivilegedDeleteNode': grpc.unary_unary_rpc_method_handler(
                    servicer.PrivilegedDeleteNode,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.PrivilegedDeleteNodeRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.PrivilegedDeleteNodeResponse.SerializeToString,
            ),
            'ListLegalEntitiesNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLegalEntitiesNodes,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListLegalEntitiesNodesRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListLegalEntitiesNodesResponse.SerializeToString,
            ),
            'GetStructure': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStructure,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetStructureRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetStructureResponse.SerializeToString,
            ),
            'GetSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSignals,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetSignalsRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetSignalsResponse.SerializeToString,
            ),
            'SetManualReviewSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.SetManualReviewSignal,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetManualReviewSignalRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetManualReviewSignalResponse.SerializeToString,
            ),
            'SetAcceptanceSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAcceptanceSignal,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetAcceptanceSignalRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetAcceptanceSignalResponse.SerializeToString,
            ),
            'SetComplianceSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.SetComplianceSignal,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetComplianceSignalRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetComplianceSignalResponse.SerializeToString,
            ),
            'SetTinSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.SetTinSignal,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetTinSignalRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetTinSignalResponse.SerializeToString,
            ),
            'UpdateProvisionalSignal': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProvisionalSignal,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateProvisionalSignalRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateProvisionalSignalResponse.SerializeToString,
            ),
            'SetIndividualIdv': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIndividualIdv,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetIndividualIdvRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.SetIndividualIdvResponse.SerializeToString,
            ),
            'RedactLegalEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.RedactLegalEntity,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RedactLegalEntityRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RedactLegalEntityResponse.SerializeToString,
            ),
            'GetLatestVerificationDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestVerificationDecision,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLatestVerificationDecisionRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetLatestVerificationDecisionResponse.SerializeToString,
            ),
            'Verify': grpc.unary_unary_rpc_method_handler(
                    servicer.Verify,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyResponse.SerializeToString,
            ),
            'GetAllVerificationsDecisions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllVerificationsDecisions,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetAllVerificationsDecisionsRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.GetAllVerificationsDecisionsResponse.SerializeToString,
            ),
            'VerifyQuiz': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyQuiz,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyQuizRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyQuizResponse.SerializeToString,
            ),
            'CreateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDocument,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateDocumentRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.CreateDocumentResponse.SerializeToString,
            ),
            'ListDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDocuments,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListDocumentsRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListDocumentsResponse.SerializeToString,
            ),
            'RetrieveDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveDocument,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RetrieveDocumentRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.RetrieveDocumentResponse.SerializeToString,
            ),
            'DeleteDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocument,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteDocumentRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteDocumentResponse.SerializeToString,
            ),
            'OverwriteStructure': grpc.unary_unary_rpc_method_handler(
                    servicer.OverwriteStructure,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.OverwriteStructureRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.OverwriteStructureResponse.SerializeToString,
            ),
            'ListStructuresByIndividual': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStructuresByIndividual,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByIndividualRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByIndividualResponse.SerializeToString,
            ),
            'ListStructuresByBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.ListStructuresByBusiness,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByBusinessRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByBusinessResponse.SerializeToString,
            ),
            'BeginDocIdv': grpc.unary_unary_rpc_method_handler(
                    servicer.BeginDocIdv,
                    request_deserializer=squareup_dot_legalentities_dot_service_dot_service__pb2.BeginDocIdvRequest.FromString,
                    response_serializer=squareup_dot_legalentities_dot_service_dot_service__pb2.BeginDocIdvResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.legalentities.service.LegalEntitiesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LegalEntitiesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/CreateBusiness',
            squareup_dot_legalentities_dot_service_dot_service__pb2.CreateBusinessRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.CreateBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIndividualWithBusinessRelationship(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/CreateIndividualWithBusinessRelationship',
            squareup_dot_legalentities_dot_service_dot_service__pb2.CreateIndividualWithBusinessRelationshipRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.CreateIndividualWithBusinessRelationshipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLegalEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/GetLegalEntity',
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetLegalEntityRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetLegalEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLegalEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/UpdateLegalEntity',
            squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLegalEntityNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/UpdateLegalEntityNode',
            squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityNodeRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateLegalEntityNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteIndividual(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/DeleteIndividual',
            squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteIndividualRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteIndividualResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrivilegedDeleteNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/PrivilegedDeleteNode',
            squareup_dot_legalentities_dot_service_dot_service__pb2.PrivilegedDeleteNodeRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.PrivilegedDeleteNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLegalEntitiesNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/ListLegalEntitiesNodes',
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListLegalEntitiesNodesRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListLegalEntitiesNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/GetStructure',
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetStructureRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetStructureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/GetSignals',
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetSignalsRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetManualReviewSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/SetManualReviewSignal',
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetManualReviewSignalRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetManualReviewSignalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAcceptanceSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/SetAcceptanceSignal',
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetAcceptanceSignalRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetAcceptanceSignalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetComplianceSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/SetComplianceSignal',
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetComplianceSignalRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetComplianceSignalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetTinSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/SetTinSignal',
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetTinSignalRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetTinSignalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProvisionalSignal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/UpdateProvisionalSignal',
            squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateProvisionalSignalRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.UpdateProvisionalSignalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIndividualIdv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/SetIndividualIdv',
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetIndividualIdvRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.SetIndividualIdvResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedactLegalEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/RedactLegalEntity',
            squareup_dot_legalentities_dot_service_dot_service__pb2.RedactLegalEntityRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.RedactLegalEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLatestVerificationDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/GetLatestVerificationDecision',
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetLatestVerificationDecisionRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetLatestVerificationDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Verify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/Verify',
            squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllVerificationsDecisions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/GetAllVerificationsDecisions',
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetAllVerificationsDecisionsRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.GetAllVerificationsDecisionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyQuiz(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/VerifyQuiz',
            squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyQuizRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.VerifyQuizResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/CreateDocument',
            squareup_dot_legalentities_dot_service_dot_service__pb2.CreateDocumentRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.CreateDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/ListDocuments',
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListDocumentsRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListDocumentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/RetrieveDocument',
            squareup_dot_legalentities_dot_service_dot_service__pb2.RetrieveDocumentRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.RetrieveDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/DeleteDocument',
            squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteDocumentRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.DeleteDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OverwriteStructure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/OverwriteStructure',
            squareup_dot_legalentities_dot_service_dot_service__pb2.OverwriteStructureRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.OverwriteStructureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListStructuresByIndividual(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/ListStructuresByIndividual',
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByIndividualRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByIndividualResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListStructuresByBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/ListStructuresByBusiness',
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByBusinessRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.ListStructuresByBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BeginDocIdv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.legalentities.service.LegalEntitiesService/BeginDocIdv',
            squareup_dot_legalentities_dot_service_dot_service__pb2.BeginDocIdvRequest.SerializeToString,
            squareup_dot_legalentities_dot_service_dot_service__pb2.BeginDocIdvResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
