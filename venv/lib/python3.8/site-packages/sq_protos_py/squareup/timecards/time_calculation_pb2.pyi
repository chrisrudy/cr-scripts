# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTimeInterval as squareup___common___time_pb2___DateTimeInterval,
)

from sq_protos_py.squareup.timecards.data_pb2 import (
    Timecard as squareup___timecards___data_pb2___Timecard,
    TimecardAndBreaks as squareup___timecards___data_pb2___TimecardAndBreaks,
)

from sq_protos_py.squareup.timecards.time_pb2 import (
    LocalDateTimeRange as squareup___timecards___time_pb2___LocalDateTimeRange,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class WorkweekConfiguration(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DayOfWeekValue = typing___NewType('DayOfWeekValue', builtin___int)
    type___DayOfWeekValue = DayOfWeekValue
    DayOfWeek: _DayOfWeek
    class _DayOfWeek(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[WorkweekConfiguration.DayOfWeekValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        MONDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 1)
        TUESDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 2)
        WEDNESDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 3)
        THURSDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 4)
        FRIDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 5)
        SATURDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 6)
        SUNDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 7)
    MONDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 1)
    TUESDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 2)
    WEDNESDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 3)
    THURSDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 4)
    FRIDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 5)
    SATURDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 6)
    SUNDAY = typing___cast(WorkweekConfiguration.DayOfWeekValue, 7)
    type___DayOfWeek = DayOfWeek

    start_of_week: type___WorkweekConfiguration.DayOfWeekValue = ...
    start_of_day_offset_minutes: builtin___int = ...

    def __init__(self,
        *,
        start_of_week : typing___Optional[type___WorkweekConfiguration.DayOfWeekValue] = None,
        start_of_day_offset_minutes : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"start_of_day_offset_minutes",b"start_of_day_offset_minutes",u"start_of_week",b"start_of_week"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"start_of_day_offset_minutes",b"start_of_day_offset_minutes",u"start_of_week",b"start_of_week"]) -> None: ...
type___WorkweekConfiguration = WorkweekConfiguration

class CalculationTotal(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    PayStateValue = typing___NewType('PayStateValue', builtin___int)
    type___PayStateValue = PayStateValue
    PayState: _PayState
    class _PayState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CalculationTotal.PayStateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        REGULAR = typing___cast(CalculationTotal.PayStateValue, 1)
        REGULAR_PAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 2)
        REGULAR_UNPAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 3)
        OVERTIME = typing___cast(CalculationTotal.PayStateValue, 4)
        OVERTIME_PAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 5)
        OVERTIME_UNPAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 6)
        DOUBLETIME = typing___cast(CalculationTotal.PayStateValue, 7)
        DOUBLETIME_PAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 8)
        DOUBLETIME_UNPAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 9)
    REGULAR = typing___cast(CalculationTotal.PayStateValue, 1)
    REGULAR_PAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 2)
    REGULAR_UNPAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 3)
    OVERTIME = typing___cast(CalculationTotal.PayStateValue, 4)
    OVERTIME_PAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 5)
    OVERTIME_UNPAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 6)
    DOUBLETIME = typing___cast(CalculationTotal.PayStateValue, 7)
    DOUBLETIME_PAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 8)
    DOUBLETIME_UNPAID_BREAK = typing___cast(CalculationTotal.PayStateValue, 9)
    type___PayState = PayState

    class MapEntry(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        pay_state: type___CalculationTotal.PayStateValue = ...
        seconds: builtin___int = ...

        def __init__(self,
            *,
            pay_state : typing___Optional[type___CalculationTotal.PayStateValue] = None,
            seconds : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"pay_state",b"pay_state",u"seconds",b"seconds"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pay_state",b"pay_state",u"seconds",b"seconds"]) -> None: ...
    type___MapEntry = MapEntry

    regular_seconds: builtin___int = ...
    overtime_seconds: builtin___int = ...
    doubletime_seconds: builtin___int = ...

    @property
    def seconds_worked_for_pay_state(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CalculationTotal.MapEntry]: ...

    def __init__(self,
        *,
        regular_seconds : typing___Optional[builtin___int] = None,
        overtime_seconds : typing___Optional[builtin___int] = None,
        doubletime_seconds : typing___Optional[builtin___int] = None,
        seconds_worked_for_pay_state : typing___Optional[typing___Iterable[type___CalculationTotal.MapEntry]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"doubletime_seconds",b"doubletime_seconds",u"overtime_seconds",b"overtime_seconds",u"regular_seconds",b"regular_seconds"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"doubletime_seconds",b"doubletime_seconds",u"overtime_seconds",b"overtime_seconds",u"regular_seconds",b"regular_seconds",u"seconds_worked_for_pay_state",b"seconds_worked_for_pay_state"]) -> None: ...
type___CalculationTotal = CalculationTotal

class OvertimeRule(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ReasonValue = typing___NewType('ReasonValue', builtin___int)
    type___ReasonValue = ReasonValue
    Reason: _Reason
    class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[OvertimeRule.ReasonValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        WEEKLY_OVERTIME = typing___cast(OvertimeRule.ReasonValue, 1)
        DAILY_OVERTIME = typing___cast(OvertimeRule.ReasonValue, 2)
        DAILY_DOUBLETIME = typing___cast(OvertimeRule.ReasonValue, 3)
        SEVENTH_DAY_OVERTIME = typing___cast(OvertimeRule.ReasonValue, 4)
        SEVENTH_DAY_DOUBLETIME = typing___cast(OvertimeRule.ReasonValue, 5)
    WEEKLY_OVERTIME = typing___cast(OvertimeRule.ReasonValue, 1)
    DAILY_OVERTIME = typing___cast(OvertimeRule.ReasonValue, 2)
    DAILY_DOUBLETIME = typing___cast(OvertimeRule.ReasonValue, 3)
    SEVENTH_DAY_OVERTIME = typing___cast(OvertimeRule.ReasonValue, 4)
    SEVENTH_DAY_DOUBLETIME = typing___cast(OvertimeRule.ReasonValue, 5)
    type___Reason = Reason

    reason: type___OvertimeRule.ReasonValue = ...
    trigger_seconds: builtin___int = ...

    def __init__(self,
        *,
        reason : typing___Optional[type___OvertimeRule.ReasonValue] = None,
        trigger_seconds : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"reason",b"reason",u"trigger_seconds",b"trigger_seconds"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"reason",b"reason",u"trigger_seconds",b"trigger_seconds"]) -> None: ...
type___OvertimeRule = OvertimeRule

class LaborCostTotal(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def regular_labor_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def overtime_labor_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def doubletime_labor_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        regular_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        overtime_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        doubletime_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"doubletime_labor_money",b"doubletime_labor_money",u"overtime_labor_money",b"overtime_labor_money",u"regular_labor_money",b"regular_labor_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"doubletime_labor_money",b"doubletime_labor_money",u"overtime_labor_money",b"overtime_labor_money",u"regular_labor_money",b"regular_labor_money"]) -> None: ...
type___LaborCostTotal = LaborCostTotal

class LaborCalculation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    job_title: typing___Text = ...
    paid_seconds: builtin___int = ...

    @property
    def base_hourly_rate(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def premium_hourly_rate(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def labor_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        job_title : typing___Optional[typing___Text] = None,
        paid_seconds : typing___Optional[builtin___int] = None,
        base_hourly_rate : typing___Optional[squareup___common___currency_pb2___Money] = None,
        premium_hourly_rate : typing___Optional[squareup___common___currency_pb2___Money] = None,
        labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"base_hourly_rate",b"base_hourly_rate",u"job_title",b"job_title",u"labor_money",b"labor_money",u"paid_seconds",b"paid_seconds",u"premium_hourly_rate",b"premium_hourly_rate"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"base_hourly_rate",b"base_hourly_rate",u"job_title",b"job_title",u"labor_money",b"labor_money",u"paid_seconds",b"paid_seconds",u"premium_hourly_rate",b"premium_hourly_rate"]) -> None: ...
type___LaborCalculation = LaborCalculation

class LaborCalculationSummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    total_paid_seconds: builtin___int = ...

    @property
    def local_date_time_range(self) -> squareup___timecards___time_pb2___LocalDateTimeRange: ...

    @property
    def average_wage(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def total_labor_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def regular_labor_calculations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LaborCalculation]: ...

    @property
    def overtime_labor_calculations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LaborCalculation]: ...

    @property
    def doubletime_labor_calculations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LaborCalculation]: ...

    def __init__(self,
        *,
        local_date_time_range : typing___Optional[squareup___timecards___time_pb2___LocalDateTimeRange] = None,
        average_wage : typing___Optional[squareup___common___currency_pb2___Money] = None,
        total_paid_seconds : typing___Optional[builtin___int] = None,
        total_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        regular_labor_calculations : typing___Optional[typing___Iterable[type___LaborCalculation]] = None,
        overtime_labor_calculations : typing___Optional[typing___Iterable[type___LaborCalculation]] = None,
        doubletime_labor_calculations : typing___Optional[typing___Iterable[type___LaborCalculation]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"average_wage",b"average_wage",u"local_date_time_range",b"local_date_time_range",u"total_labor_money",b"total_labor_money",u"total_paid_seconds",b"total_paid_seconds"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"average_wage",b"average_wage",u"doubletime_labor_calculations",b"doubletime_labor_calculations",u"local_date_time_range",b"local_date_time_range",u"overtime_labor_calculations",b"overtime_labor_calculations",u"regular_labor_calculations",b"regular_labor_calculations",u"total_labor_money",b"total_labor_money",u"total_paid_seconds",b"total_paid_seconds"]) -> None: ...
type___LaborCalculationSummary = LaborCalculationSummary

class TimeWindowCalculation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class WeekCalculation(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def time_interval(self) -> squareup___common___time_pb2___DateTimeInterval: ...

        @property
        def calculation_total(self) -> type___CalculationTotal: ...

        @property
        def day_calculations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TimeWindowCalculation.DayCalculation]: ...

        def __init__(self,
            *,
            time_interval : typing___Optional[squareup___common___time_pb2___DateTimeInterval] = None,
            calculation_total : typing___Optional[type___CalculationTotal] = None,
            day_calculations : typing___Optional[typing___Iterable[type___TimeWindowCalculation.DayCalculation]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"time_interval",b"time_interval"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"day_calculations",b"day_calculations",u"time_interval",b"time_interval"]) -> None: ...
    type___WeekCalculation = WeekCalculation

    class DayCalculation(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def time_interval(self) -> squareup___common___time_pb2___DateTimeInterval: ...

        @property
        def calculation_total(self) -> type___CalculationTotal: ...

        @property
        def segment_calculation(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TimeWindowCalculation.SegmentCalculation]: ...

        @property
        def segment_group(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TimeWindowCalculation.SegmentGroup]: ...

        def __init__(self,
            *,
            time_interval : typing___Optional[squareup___common___time_pb2___DateTimeInterval] = None,
            calculation_total : typing___Optional[type___CalculationTotal] = None,
            segment_calculation : typing___Optional[typing___Iterable[type___TimeWindowCalculation.SegmentCalculation]] = None,
            segment_group : typing___Optional[typing___Iterable[type___TimeWindowCalculation.SegmentGroup]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"time_interval",b"time_interval"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"segment_calculation",b"segment_calculation",u"segment_group",b"segment_group",u"time_interval",b"time_interval"]) -> None: ...
    type___DayCalculation = DayCalculation

    class SegmentGroup(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def segment_calculation(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TimeWindowCalculation.SegmentCalculation]: ...

        @property
        def timecard(self) -> squareup___timecards___data_pb2___Timecard: ...

        @property
        def timecard_and_breaks(self) -> squareup___timecards___data_pb2___TimecardAndBreaks: ...

        def __init__(self,
            *,
            segment_calculation : typing___Optional[typing___Iterable[type___TimeWindowCalculation.SegmentCalculation]] = None,
            timecard : typing___Optional[squareup___timecards___data_pb2___Timecard] = None,
            timecard_and_breaks : typing___Optional[squareup___timecards___data_pb2___TimecardAndBreaks] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"timecard",b"timecard",u"timecard_and_breaks",b"timecard_and_breaks"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"segment_calculation",b"segment_calculation",u"timecard",b"timecard",u"timecard_and_breaks",b"timecard_and_breaks"]) -> None: ...
    type___SegmentGroup = SegmentGroup

    class SegmentCalculation(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def time_interval(self) -> squareup___common___time_pb2___DateTimeInterval: ...

        @property
        def calculation_total(self) -> type___CalculationTotal: ...

        def __init__(self,
            *,
            time_interval : typing___Optional[squareup___common___time_pb2___DateTimeInterval] = None,
            calculation_total : typing___Optional[type___CalculationTotal] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"time_interval",b"time_interval"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"time_interval",b"time_interval"]) -> None: ...
    type___SegmentCalculation = SegmentCalculation

    employee_token: typing___Text = ...
    well_aligned_with_week: builtin___bool = ...

    @property
    def time_interval(self) -> squareup___common___time_pb2___DateTimeInterval: ...

    @property
    def calculation_total(self) -> type___CalculationTotal: ...

    @property
    def week_calculations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TimeWindowCalculation.WeekCalculation]: ...

    @property
    def workweek_configuration(self) -> type___WorkweekConfiguration: ...

    def __init__(self,
        *,
        time_interval : typing___Optional[squareup___common___time_pb2___DateTimeInterval] = None,
        employee_token : typing___Optional[typing___Text] = None,
        calculation_total : typing___Optional[type___CalculationTotal] = None,
        week_calculations : typing___Optional[typing___Iterable[type___TimeWindowCalculation.WeekCalculation]] = None,
        workweek_configuration : typing___Optional[type___WorkweekConfiguration] = None,
        well_aligned_with_week : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"employee_token",b"employee_token",u"time_interval",b"time_interval",u"well_aligned_with_week",b"well_aligned_with_week",u"workweek_configuration",b"workweek_configuration"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"calculation_total",b"calculation_total",u"employee_token",b"employee_token",u"time_interval",b"time_interval",u"week_calculations",b"week_calculations",u"well_aligned_with_week",b"well_aligned_with_week",u"workweek_configuration",b"workweek_configuration"]) -> None: ...
type___TimeWindowCalculation = TimeWindowCalculation

class PaidBreakOverageConversionSummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    converted_duration: typing___Text = ...

    @property
    def total_labor_cost_saved(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        converted_duration : typing___Optional[typing___Text] = None,
        total_labor_cost_saved : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"converted_duration",b"converted_duration",u"total_labor_cost_saved",b"total_labor_cost_saved"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"converted_duration",b"converted_duration",u"total_labor_cost_saved",b"total_labor_cost_saved"]) -> None: ...
type___PaidBreakOverageConversionSummary = PaidBreakOverageConversionSummary
