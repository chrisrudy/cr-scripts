# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.timecards import service_pb2 as squareup_dot_timecards_dot_service__pb2


class TimeCalculationServiceStub(object):
    """*
    *** IMPORTANT ***
    All of these endpoints must be multipass protected / safe for external use, as this service is exposed via tracon
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckTimeCalculationEligibility = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/CheckTimeCalculationEligibility',
                request_serializer=squareup_dot_timecards_dot_service__pb2.CheckTimeCalculationEligibilityRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.CheckTimeCalculationEligibilityResponse.FromString,
                )
        self.GetUnitsNotConfiguredForOvertimeReports = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/GetUnitsNotConfiguredForOvertimeReports',
                request_serializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.GetUnitsNotConfiguredForOvertimeReportsResponse.FromString,
                )
        self.CheckOvertimePrerequisites = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/CheckOvertimePrerequisites',
                request_serializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.CheckOvertimePrerequisitesResponse.FromString,
                )
        self.CreateOrUpdateMerchantUnitOvertimeRuleset = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/CreateOrUpdateMerchantUnitOvertimeRuleset',
                request_serializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantUnitOvertimeRulesetRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantUnitOvertimeRulesetResponse.FromString,
                )
        self.GetMerchantUnitOvertimeRuleset = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/GetMerchantUnitOvertimeRuleset',
                request_serializer=squareup_dot_timecards_dot_service__pb2.GetMerchantUnitOvertimeRulesetRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.GetMerchantUnitOvertimeRulesetResponse.FromString,
                )
        self.BatchGetMerchantUnitOvertimeRuleset = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/BatchGetMerchantUnitOvertimeRuleset',
                request_serializer=squareup_dot_timecards_dot_service__pb2.BatchGetMerchantUnitOvertimeRulesetRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.BatchGetMerchantUnitOvertimeRulesetResponse.FromString,
                )
        self.GetMerchantOvertimeConfiguration = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/GetMerchantOvertimeConfiguration',
                request_serializer=squareup_dot_timecards_dot_service__pb2.GetMerchantOvertimeConfigurationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.GetMerchantOvertimeConfigurationResponse.FromString,
                )
        self.CreateOrUpdateMerchantWorkweekConfiguration = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/CreateOrUpdateMerchantWorkweekConfiguration',
                request_serializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantWorkweekConfigurationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantWorkweekConfigurationResponse.FromString,
                )
        self.GetMerchantWorkweekConfiguration = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/GetMerchantWorkweekConfiguration',
                request_serializer=squareup_dot_timecards_dot_service__pb2.GetMerchantWorkweekConfigurationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.GetMerchantWorkweekConfigurationResponse.FromString,
                )
        self.GetRulesetForState = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/GetRulesetForState',
                request_serializer=squareup_dot_timecards_dot_service__pb2.GetRulesetForStateRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.GetRulesetForStateResponse.FromString,
                )
        self.GetEmployeeTokensInCalculation = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/GetEmployeeTokensInCalculation',
                request_serializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.GetEmployeeTokensInCalculationResponse.FromString,
                )
        self.BulkUpdateTimecardWithoutClockinUnit = channel.unary_unary(
                '/squareup.timecards.TimeCalculationService/BulkUpdateTimecardWithoutClockinUnit',
                request_serializer=squareup_dot_timecards_dot_service__pb2.BulkUpdateTimecardWithoutClockinUnitRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.BulkUpdateTimecardWithoutClockinUnitResponse.FromString,
                )


class TimeCalculationServiceServicer(object):
    """*
    *** IMPORTANT ***
    All of these endpoints must be multipass protected / safe for external use, as this service is exposed via tracon
    """

    def CheckTimeCalculationEligibility(self, request, context):
        """*
        Deprecated: use CheckOvertimePrerequisites
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnitsNotConfiguredForOvertimeReports(self, request, context):
        """Prefer CheckOvertimePrerequisites, since it's better named now
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckOvertimePrerequisites(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrUpdateMerchantUnitOvertimeRuleset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerchantUnitOvertimeRuleset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetMerchantUnitOvertimeRuleset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerchantOvertimeConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrUpdateMerchantWorkweekConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerchantWorkweekConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRulesetForState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmployeeTokensInCalculation(self, request, context):
        """*
        Gets employee tokens that are used in a calculation
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkUpdateTimecardWithoutClockinUnit(self, request, context):
        """*
        Used to handle the edge case where timecards were created without a clockin unit token, and timecards
        need to be updated to include a clockin unit to get accurate overtime data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TimeCalculationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckTimeCalculationEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckTimeCalculationEligibility,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.CheckTimeCalculationEligibilityRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.CheckTimeCalculationEligibilityResponse.SerializeToString,
            ),
            'GetUnitsNotConfiguredForOvertimeReports': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnitsNotConfiguredForOvertimeReports,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.GetUnitsNotConfiguredForOvertimeReportsResponse.SerializeToString,
            ),
            'CheckOvertimePrerequisites': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckOvertimePrerequisites,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.CheckOvertimePrerequisitesResponse.SerializeToString,
            ),
            'CreateOrUpdateMerchantUnitOvertimeRuleset': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrUpdateMerchantUnitOvertimeRuleset,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantUnitOvertimeRulesetRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantUnitOvertimeRulesetResponse.SerializeToString,
            ),
            'GetMerchantUnitOvertimeRuleset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerchantUnitOvertimeRuleset,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.GetMerchantUnitOvertimeRulesetRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.GetMerchantUnitOvertimeRulesetResponse.SerializeToString,
            ),
            'BatchGetMerchantUnitOvertimeRuleset': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetMerchantUnitOvertimeRuleset,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.BatchGetMerchantUnitOvertimeRulesetRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.BatchGetMerchantUnitOvertimeRulesetResponse.SerializeToString,
            ),
            'GetMerchantOvertimeConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerchantOvertimeConfiguration,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.GetMerchantOvertimeConfigurationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.GetMerchantOvertimeConfigurationResponse.SerializeToString,
            ),
            'CreateOrUpdateMerchantWorkweekConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrUpdateMerchantWorkweekConfiguration,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantWorkweekConfigurationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantWorkweekConfigurationResponse.SerializeToString,
            ),
            'GetMerchantWorkweekConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerchantWorkweekConfiguration,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.GetMerchantWorkweekConfigurationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.GetMerchantWorkweekConfigurationResponse.SerializeToString,
            ),
            'GetRulesetForState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRulesetForState,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.GetRulesetForStateRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.GetRulesetForStateResponse.SerializeToString,
            ),
            'GetEmployeeTokensInCalculation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmployeeTokensInCalculation,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.GetEmployeeTokensInCalculationResponse.SerializeToString,
            ),
            'BulkUpdateTimecardWithoutClockinUnit': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkUpdateTimecardWithoutClockinUnit,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.BulkUpdateTimecardWithoutClockinUnitRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.BulkUpdateTimecardWithoutClockinUnitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.timecards.TimeCalculationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TimeCalculationService(object):
    """*
    *** IMPORTANT ***
    All of these endpoints must be multipass protected / safe for external use, as this service is exposed via tracon
    """

    @staticmethod
    def CheckTimeCalculationEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/CheckTimeCalculationEligibility',
            squareup_dot_timecards_dot_service__pb2.CheckTimeCalculationEligibilityRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.CheckTimeCalculationEligibilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUnitsNotConfiguredForOvertimeReports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/GetUnitsNotConfiguredForOvertimeReports',
            squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.GetUnitsNotConfiguredForOvertimeReportsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckOvertimePrerequisites(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/CheckOvertimePrerequisites',
            squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.CheckOvertimePrerequisitesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrUpdateMerchantUnitOvertimeRuleset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/CreateOrUpdateMerchantUnitOvertimeRuleset',
            squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantUnitOvertimeRulesetRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantUnitOvertimeRulesetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerchantUnitOvertimeRuleset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/GetMerchantUnitOvertimeRuleset',
            squareup_dot_timecards_dot_service__pb2.GetMerchantUnitOvertimeRulesetRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.GetMerchantUnitOvertimeRulesetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetMerchantUnitOvertimeRuleset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/BatchGetMerchantUnitOvertimeRuleset',
            squareup_dot_timecards_dot_service__pb2.BatchGetMerchantUnitOvertimeRulesetRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.BatchGetMerchantUnitOvertimeRulesetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerchantOvertimeConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/GetMerchantOvertimeConfiguration',
            squareup_dot_timecards_dot_service__pb2.GetMerchantOvertimeConfigurationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.GetMerchantOvertimeConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrUpdateMerchantWorkweekConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/CreateOrUpdateMerchantWorkweekConfiguration',
            squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantWorkweekConfigurationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.CreateOrUpdateMerchantWorkweekConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerchantWorkweekConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/GetMerchantWorkweekConfiguration',
            squareup_dot_timecards_dot_service__pb2.GetMerchantWorkweekConfigurationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.GetMerchantWorkweekConfigurationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRulesetForState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/GetRulesetForState',
            squareup_dot_timecards_dot_service__pb2.GetRulesetForStateRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.GetRulesetForStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEmployeeTokensInCalculation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/GetEmployeeTokensInCalculation',
            squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.GetEmployeeTokensInCalculationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkUpdateTimecardWithoutClockinUnit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationService/BulkUpdateTimecardWithoutClockinUnit',
            squareup_dot_timecards_dot_service__pb2.BulkUpdateTimecardWithoutClockinUnitRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.BulkUpdateTimecardWithoutClockinUnitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TimeCalculationReportServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SimpleOvertimeReport = channel.unary_unary(
                '/squareup.timecards.TimeCalculationReportService/SimpleOvertimeReport',
                request_serializer=squareup_dot_timecards_dot_service__pb2.SimpleOvertimeReportRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleOvertimeReportResponse.FromString,
                )
        self.OvertimeReportByTimecard = channel.unary_unary(
                '/squareup.timecards.TimeCalculationReportService/OvertimeReportByTimecard',
                request_serializer=squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardResponse.FromString,
                )
        self.OvertimeReportByTimecardForEmployee = channel.unary_unary(
                '/squareup.timecards.TimeCalculationReportService/OvertimeReportByTimecardForEmployee',
                request_serializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardForEmployeeResponse.FromString,
                )
        self.TimecardOvertimeSegments = channel.unary_unary(
                '/squareup.timecards.TimeCalculationReportService/TimecardOvertimeSegments',
                request_serializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.TimecardOvertimeSegmentsResponse.FromString,
                )
        self.CalculateOvertimeForTimecard = channel.unary_unary(
                '/squareup.timecards.TimeCalculationReportService/CalculateOvertimeForTimecard',
                request_serializer=squareup_dot_timecards_dot_service__pb2.CalculateOvertimeForTimecardRequest.SerializeToString,
                response_deserializer=squareup_dot_timecards_dot_service__pb2.CalculateOvertimeForTimecardResponse.FromString,
                )


class TimeCalculationReportServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SimpleOvertimeReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OvertimeReportByTimecard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OvertimeReportByTimecardForEmployee(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimecardOvertimeSegments(self, request, context):
        """Note: only supports ShiftType.TIMECARDS_ONLY
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateOvertimeForTimecard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TimeCalculationReportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SimpleOvertimeReport': grpc.unary_unary_rpc_method_handler(
                    servicer.SimpleOvertimeReport,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleOvertimeReportRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.SimpleOvertimeReportResponse.SerializeToString,
            ),
            'OvertimeReportByTimecard': grpc.unary_unary_rpc_method_handler(
                    servicer.OvertimeReportByTimecard,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardResponse.SerializeToString,
            ),
            'OvertimeReportByTimecardForEmployee': grpc.unary_unary_rpc_method_handler(
                    servicer.OvertimeReportByTimecardForEmployee,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardForEmployeeResponse.SerializeToString,
            ),
            'TimecardOvertimeSegments': grpc.unary_unary_rpc_method_handler(
                    servicer.TimecardOvertimeSegments,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.TimecardOvertimeSegmentsResponse.SerializeToString,
            ),
            'CalculateOvertimeForTimecard': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateOvertimeForTimecard,
                    request_deserializer=squareup_dot_timecards_dot_service__pb2.CalculateOvertimeForTimecardRequest.FromString,
                    response_serializer=squareup_dot_timecards_dot_service__pb2.CalculateOvertimeForTimecardResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.timecards.TimeCalculationReportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TimeCalculationReportService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SimpleOvertimeReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationReportService/SimpleOvertimeReport',
            squareup_dot_timecards_dot_service__pb2.SimpleOvertimeReportRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.SimpleOvertimeReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OvertimeReportByTimecard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationReportService/OvertimeReportByTimecard',
            squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OvertimeReportByTimecardForEmployee(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationReportService/OvertimeReportByTimecardForEmployee',
            squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.OvertimeReportByTimecardForEmployeeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimecardOvertimeSegments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationReportService/TimecardOvertimeSegments',
            squareup_dot_timecards_dot_service__pb2.SimpleTimeWorkedCalculationRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.TimecardOvertimeSegmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalculateOvertimeForTimecard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.timecards.TimeCalculationReportService/CalculateOvertimeForTimecard',
            squareup_dot_timecards_dot_service__pb2.CalculateOvertimeForTimecardRequest.SerializeToString,
            squareup_dot_timecards_dot_service__pb2.CalculateOvertimeForTimecardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
