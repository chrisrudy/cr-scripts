# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LegacyTimecard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    employee_token: typing___Text = ...
    clockin_unit_token: typing___Text = ...
    clockout_unit_token: typing___Text = ...
    clockin_time: typing___Text = ...
    clockout_time: typing___Text = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...

    @property
    def employee_timecard_events(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LegacyTimecardEvent]: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        employee_token : typing___Optional[typing___Text] = None,
        clockin_unit_token : typing___Optional[typing___Text] = None,
        clockout_unit_token : typing___Optional[typing___Text] = None,
        clockin_time : typing___Optional[typing___Text] = None,
        clockout_time : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        employee_timecard_events : typing___Optional[typing___Iterable[type___LegacyTimecardEvent]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"clockin_time",b"clockin_time",u"clockin_unit_token",b"clockin_unit_token",u"clockout_time",b"clockout_time",u"clockout_unit_token",b"clockout_unit_token",u"created_at",b"created_at",u"employee_token",b"employee_token",u"id",b"id",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"clockin_time",b"clockin_time",u"clockin_unit_token",b"clockin_unit_token",u"clockout_time",b"clockout_time",u"clockout_unit_token",b"clockout_unit_token",u"created_at",b"created_at",u"employee_timecard_events",b"employee_timecard_events",u"employee_token",b"employee_token",u"id",b"id",u"updated_at",b"updated_at"]) -> None: ...
type___LegacyTimecard = LegacyTimecard

class LegacyTimecardEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LegacyTimecardEvent.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        clockin = typing___cast(LegacyTimecardEvent.EventTypeValue, 1)
        clockout = typing___cast(LegacyTimecardEvent.EventTypeValue, 2)
        supervisor_close = typing___cast(LegacyTimecardEvent.EventTypeValue, 3)
        edit = typing___cast(LegacyTimecardEvent.EventTypeValue, 4)
        create = typing___cast(LegacyTimecardEvent.EventTypeValue, 5)
        delete = typing___cast(LegacyTimecardEvent.EventTypeValue, 6)
        api_create = typing___cast(LegacyTimecardEvent.EventTypeValue, 7)
        api_delete = typing___cast(LegacyTimecardEvent.EventTypeValue, 8)
        api_edit = typing___cast(LegacyTimecardEvent.EventTypeValue, 9)
    clockin = typing___cast(LegacyTimecardEvent.EventTypeValue, 1)
    clockout = typing___cast(LegacyTimecardEvent.EventTypeValue, 2)
    supervisor_close = typing___cast(LegacyTimecardEvent.EventTypeValue, 3)
    edit = typing___cast(LegacyTimecardEvent.EventTypeValue, 4)
    create = typing___cast(LegacyTimecardEvent.EventTypeValue, 5)
    delete = typing___cast(LegacyTimecardEvent.EventTypeValue, 6)
    api_create = typing___cast(LegacyTimecardEvent.EventTypeValue, 7)
    api_delete = typing___cast(LegacyTimecardEvent.EventTypeValue, 8)
    api_edit = typing___cast(LegacyTimecardEvent.EventTypeValue, 9)
    type___EventType = EventType

    token: typing___Text = ...
    event_type: type___LegacyTimecardEvent.EventTypeValue = ...
    creator_employee_token: typing___Text = ...
    clockin_time: typing___Text = ...
    clockout_time: typing___Text = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        event_type : typing___Optional[type___LegacyTimecardEvent.EventTypeValue] = None,
        creator_employee_token : typing___Optional[typing___Text] = None,
        clockin_time : typing___Optional[typing___Text] = None,
        clockout_time : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"clockin_time",b"clockin_time",u"clockout_time",b"clockout_time",u"created_at",b"created_at",u"creator_employee_token",b"creator_employee_token",u"event_type",b"event_type",u"token",b"token",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"clockin_time",b"clockin_time",u"clockout_time",b"clockout_time",u"created_at",b"created_at",u"creator_employee_token",b"creator_employee_token",u"event_type",b"event_type",u"token",b"token",u"updated_at",b"updated_at"]) -> None: ...
type___LegacyTimecardEvent = LegacyTimecardEvent

class WrappedLegacyTimecard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def timecard(self) -> type___LegacyTimecard: ...

    def __init__(self,
        *,
        timecard : typing___Optional[type___LegacyTimecard] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"timecard",b"timecard"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"timecard",b"timecard"]) -> None: ...
type___WrappedLegacyTimecard = WrappedLegacyTimecard
