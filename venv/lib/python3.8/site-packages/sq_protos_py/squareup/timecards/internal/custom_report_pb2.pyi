# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.beemo.v2.reporting.custom_report_pb2 import (
    Filter as squareup___beemo___v2___reporting___custom_report_pb2___Filter,
    GroupByTypeValue as squareup___beemo___v2___reporting___custom_report_pb2___GroupByTypeValue,
    GroupByValue as squareup___beemo___v2___reporting___custom_report_pb2___GroupByValue,
)

from sq_protos_py.squareup.beemo.v2.reporting.request_pb2 import (
    RequestParams as squareup___beemo___v2___reporting___request_pb2___RequestParams,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LaborCustomReportRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_by_type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___beemo___v2___reporting___custom_report_pb2___GroupByTypeValue] = ...

    @property
    def request_params(self) -> squareup___beemo___v2___reporting___request_pb2___RequestParams: ...

    @property
    def filter(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___beemo___v2___reporting___custom_report_pb2___Filter]: ...

    def __init__(self,
        *,
        request_params : typing___Optional[squareup___beemo___v2___reporting___request_pb2___RequestParams] = None,
        group_by_type : typing___Optional[typing___Iterable[squareup___beemo___v2___reporting___custom_report_pb2___GroupByTypeValue]] = None,
        filter : typing___Optional[typing___Iterable[squareup___beemo___v2___reporting___custom_report_pb2___Filter]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"request_params",b"request_params"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter",b"filter",u"group_by_type",b"group_by_type",u"request_params",b"request_params"]) -> None: ...
type___LaborCustomReportRequest = LaborCustomReportRequest

class LaborCustomReportResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def custom_report(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LaborReport]: ...

    def __init__(self,
        *,
        custom_report : typing___Optional[typing___Iterable[type___LaborReport]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"custom_report",b"custom_report"]) -> None: ...
type___LaborCustomReportResponse = LaborCustomReportResponse

class LaborReport(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_by_type: squareup___beemo___v2___reporting___custom_report_pb2___GroupByTypeValue = ...

    @property
    def group_by_value(self) -> squareup___beemo___v2___reporting___custom_report_pb2___GroupByValue: ...

    @property
    def aggregate(self) -> type___LaborAggregate: ...

    @property
    def sub_report(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LaborReport]: ...

    def __init__(self,
        *,
        group_by_type : typing___Optional[squareup___beemo___v2___reporting___custom_report_pb2___GroupByTypeValue] = None,
        group_by_value : typing___Optional[squareup___beemo___v2___reporting___custom_report_pb2___GroupByValue] = None,
        aggregate : typing___Optional[type___LaborAggregate] = None,
        sub_report : typing___Optional[typing___Iterable[type___LaborReport]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aggregate",b"aggregate",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aggregate",b"aggregate",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value",u"sub_report",b"sub_report"]) -> None: ...
type___LaborReport = LaborReport

class LaborAggregate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class LaborDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def total_labor_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def regular_labor_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def overtime_labor_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def doubletime_labor_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            total_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            regular_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            overtime_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            doubletime_labor_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"doubletime_labor_money",b"doubletime_labor_money",u"overtime_labor_money",b"overtime_labor_money",u"regular_labor_money",b"regular_labor_money",u"total_labor_money",b"total_labor_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"doubletime_labor_money",b"doubletime_labor_money",u"overtime_labor_money",b"overtime_labor_money",u"regular_labor_money",b"regular_labor_money",u"total_labor_money",b"total_labor_money"]) -> None: ...
    type___LaborDetails = LaborDetails


    @property
    def labor(self) -> type___LaborAggregate.LaborDetails: ...

    def __init__(self,
        *,
        labor : typing___Optional[type___LaborAggregate.LaborDetails] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"labor",b"labor"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"labor",b"labor"]) -> None: ...
type___LaborAggregate = LaborAggregate
