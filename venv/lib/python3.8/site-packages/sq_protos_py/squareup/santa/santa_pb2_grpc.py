# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.santa import santa_pb2 as squareup_dot_santa_dot_santa__pb2


class SantaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Blacklist = channel.unary_unary(
                '/squareup.santa.service.SantaService/Blacklist',
                request_serializer=squareup_dot_santa_dot_santa__pb2.BlacklistRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.BlacklistResponse.FromString,
                )
        self.IsBlacklisted = channel.unary_unary(
                '/squareup.santa.service.SantaService/IsBlacklisted',
                request_serializer=squareup_dot_santa_dot_santa__pb2.IsBlacklistedRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.IsBlacklistedResponse.FromString,
                )
        self.BulkIsBlacklisted = channel.unary_unary(
                '/squareup.santa.service.SantaService/BulkIsBlacklisted',
                request_serializer=squareup_dot_santa_dot_santa__pb2.BulkIsBlacklistedRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.IsBlacklistedResponse.FromString,
                )
        self.Unblacklist = channel.unary_unary(
                '/squareup.santa.service.SantaService/Unblacklist',
                request_serializer=squareup_dot_santa_dot_santa__pb2.UnblacklistRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.UnblacklistResponse.FromString,
                )
        self.GetNaughtyList = channel.unary_unary(
                '/squareup.santa.service.SantaService/GetNaughtyList',
                request_serializer=squareup_dot_santa_dot_santa__pb2.GetNaughtyListRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.GetNaughtyListResponse.FromString,
                )
        self.IsNaughty = channel.unary_unary(
                '/squareup.santa.service.SantaService/IsNaughty',
                request_serializer=squareup_dot_santa_dot_santa__pb2.IsNaughtyRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.IsNaughtyResponse.FromString,
                )
        self.BulkIsNaughty = channel.unary_unary(
                '/squareup.santa.service.SantaService/BulkIsNaughty',
                request_serializer=squareup_dot_santa_dot_santa__pb2.BulkIsNaughtyRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.IsNaughtyResponse.FromString,
                )
        self.AddNaughty = channel.unary_unary(
                '/squareup.santa.service.SantaService/AddNaughty',
                request_serializer=squareup_dot_santa_dot_santa__pb2.AddNaughtyRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.AddNaughtyResponse.FromString,
                )
        self.RemoveNaughty = channel.unary_unary(
                '/squareup.santa.service.SantaService/RemoveNaughty',
                request_serializer=squareup_dot_santa_dot_santa__pb2.RemoveNaughtyRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.RemoveNaughtyResponse.FromString,
                )
        self.Whitelist = channel.unary_unary(
                '/squareup.santa.service.SantaService/Whitelist',
                request_serializer=squareup_dot_santa_dot_santa__pb2.WhitelistRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.WhitelistResponse.FromString,
                )
        self.IsWhitelisted = channel.unary_unary(
                '/squareup.santa.service.SantaService/IsWhitelisted',
                request_serializer=squareup_dot_santa_dot_santa__pb2.IsWhitelistedRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.IsWhitelistedResponse.FromString,
                )
        self.BulkIsWhitelisted = channel.unary_unary(
                '/squareup.santa.service.SantaService/BulkIsWhitelisted',
                request_serializer=squareup_dot_santa_dot_santa__pb2.BulkIsWhitelistedRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.IsWhitelistedResponse.FromString,
                )
        self.Unwhitelist = channel.unary_unary(
                '/squareup.santa.service.SantaService/Unwhitelist',
                request_serializer=squareup_dot_santa_dot_santa__pb2.UnwhitelistRequest.SerializeToString,
                response_deserializer=squareup_dot_santa_dot_santa__pb2.UnwhitelistResponse.FromString,
                )


class SantaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Blacklist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsBlacklisted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkIsBlacklisted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unblacklist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNaughtyList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsNaughty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkIsNaughty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddNaughty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveNaughty(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Whitelist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsWhitelisted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkIsWhitelisted(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unwhitelist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SantaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Blacklist': grpc.unary_unary_rpc_method_handler(
                    servicer.Blacklist,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.BlacklistRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.BlacklistResponse.SerializeToString,
            ),
            'IsBlacklisted': grpc.unary_unary_rpc_method_handler(
                    servicer.IsBlacklisted,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.IsBlacklistedRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.IsBlacklistedResponse.SerializeToString,
            ),
            'BulkIsBlacklisted': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkIsBlacklisted,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.BulkIsBlacklistedRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.IsBlacklistedResponse.SerializeToString,
            ),
            'Unblacklist': grpc.unary_unary_rpc_method_handler(
                    servicer.Unblacklist,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.UnblacklistRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.UnblacklistResponse.SerializeToString,
            ),
            'GetNaughtyList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNaughtyList,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.GetNaughtyListRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.GetNaughtyListResponse.SerializeToString,
            ),
            'IsNaughty': grpc.unary_unary_rpc_method_handler(
                    servicer.IsNaughty,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.IsNaughtyRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.IsNaughtyResponse.SerializeToString,
            ),
            'BulkIsNaughty': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkIsNaughty,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.BulkIsNaughtyRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.IsNaughtyResponse.SerializeToString,
            ),
            'AddNaughty': grpc.unary_unary_rpc_method_handler(
                    servicer.AddNaughty,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.AddNaughtyRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.AddNaughtyResponse.SerializeToString,
            ),
            'RemoveNaughty': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveNaughty,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.RemoveNaughtyRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.RemoveNaughtyResponse.SerializeToString,
            ),
            'Whitelist': grpc.unary_unary_rpc_method_handler(
                    servicer.Whitelist,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.WhitelistRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.WhitelistResponse.SerializeToString,
            ),
            'IsWhitelisted': grpc.unary_unary_rpc_method_handler(
                    servicer.IsWhitelisted,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.IsWhitelistedRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.IsWhitelistedResponse.SerializeToString,
            ),
            'BulkIsWhitelisted': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkIsWhitelisted,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.BulkIsWhitelistedRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.IsWhitelistedResponse.SerializeToString,
            ),
            'Unwhitelist': grpc.unary_unary_rpc_method_handler(
                    servicer.Unwhitelist,
                    request_deserializer=squareup_dot_santa_dot_santa__pb2.UnwhitelistRequest.FromString,
                    response_serializer=squareup_dot_santa_dot_santa__pb2.UnwhitelistResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.santa.service.SantaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SantaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Blacklist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/Blacklist',
            squareup_dot_santa_dot_santa__pb2.BlacklistRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.BlacklistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsBlacklisted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/IsBlacklisted',
            squareup_dot_santa_dot_santa__pb2.IsBlacklistedRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.IsBlacklistedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkIsBlacklisted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/BulkIsBlacklisted',
            squareup_dot_santa_dot_santa__pb2.BulkIsBlacklistedRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.IsBlacklistedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unblacklist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/Unblacklist',
            squareup_dot_santa_dot_santa__pb2.UnblacklistRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.UnblacklistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNaughtyList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/GetNaughtyList',
            squareup_dot_santa_dot_santa__pb2.GetNaughtyListRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.GetNaughtyListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsNaughty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/IsNaughty',
            squareup_dot_santa_dot_santa__pb2.IsNaughtyRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.IsNaughtyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkIsNaughty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/BulkIsNaughty',
            squareup_dot_santa_dot_santa__pb2.BulkIsNaughtyRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.IsNaughtyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddNaughty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/AddNaughty',
            squareup_dot_santa_dot_santa__pb2.AddNaughtyRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.AddNaughtyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveNaughty(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/RemoveNaughty',
            squareup_dot_santa_dot_santa__pb2.RemoveNaughtyRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.RemoveNaughtyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Whitelist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/Whitelist',
            squareup_dot_santa_dot_santa__pb2.WhitelistRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.WhitelistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsWhitelisted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/IsWhitelisted',
            squareup_dot_santa_dot_santa__pb2.IsWhitelistedRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.IsWhitelistedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkIsWhitelisted(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/BulkIsWhitelisted',
            squareup_dot_santa_dot_santa__pb2.BulkIsWhitelistedRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.IsWhitelistedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unwhitelist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.santa.service.SantaService/Unwhitelist',
            squareup_dot_santa_dot_santa__pb2.UnwhitelistRequest.SerializeToString,
            squareup_dot_santa_dot_santa__pb2.UnwhitelistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
