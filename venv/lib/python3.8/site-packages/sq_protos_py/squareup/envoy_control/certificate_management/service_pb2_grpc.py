# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.envoy_control.certificate_management import service_pb2 as squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2


class CertificateManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCertificates = channel.unary_unary(
                '/squareup.certificate_management.service.CertificateManagementService/GetCertificates',
                request_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetCertificatesRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetCertificatesResponse.FromString,
                )
        self.GetActiveCertificate = channel.unary_unary(
                '/squareup.certificate_management.service.CertificateManagementService/GetActiveCertificate',
                request_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetActiveCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetActiveCertificateResponse.FromString,
                )
        self.CreateCertificate = channel.unary_unary(
                '/squareup.certificate_management.service.CertificateManagementService/CreateCertificate',
                request_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.CreateCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.CreateCertificateResponse.FromString,
                )
        self.RenewCertificate = channel.unary_unary(
                '/squareup.certificate_management.service.CertificateManagementService/RenewCertificate',
                request_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RenewCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RenewCertificateResponse.FromString,
                )
        self.RevokeCertificate = channel.unary_unary(
                '/squareup.certificate_management.service.CertificateManagementService/RevokeCertificate',
                request_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RevokeCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RevokeCertificateResponse.FromString,
                )


class CertificateManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCertificates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveCertificate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCertificate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenewCertificate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeCertificate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CertificateManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCertificates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCertificates,
                    request_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetCertificatesRequest.FromString,
                    response_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetCertificatesResponse.SerializeToString,
            ),
            'GetActiveCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveCertificate,
                    request_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetActiveCertificateRequest.FromString,
                    response_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetActiveCertificateResponse.SerializeToString,
            ),
            'CreateCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCertificate,
                    request_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.CreateCertificateRequest.FromString,
                    response_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.CreateCertificateResponse.SerializeToString,
            ),
            'RenewCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.RenewCertificate,
                    request_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RenewCertificateRequest.FromString,
                    response_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RenewCertificateResponse.SerializeToString,
            ),
            'RevokeCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeCertificate,
                    request_deserializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RevokeCertificateRequest.FromString,
                    response_serializer=squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RevokeCertificateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.certificate_management.service.CertificateManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CertificateManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCertificates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.certificate_management.service.CertificateManagementService/GetCertificates',
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetCertificatesRequest.SerializeToString,
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetCertificatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.certificate_management.service.CertificateManagementService/GetActiveCertificate',
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetActiveCertificateRequest.SerializeToString,
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.GetActiveCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.certificate_management.service.CertificateManagementService/CreateCertificate',
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.CreateCertificateRequest.SerializeToString,
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.CreateCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenewCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.certificate_management.service.CertificateManagementService/RenewCertificate',
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RenewCertificateRequest.SerializeToString,
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RenewCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.certificate_management.service.CertificateManagementService/RevokeCertificate',
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RevokeCertificateRequest.SerializeToString,
            squareup_dot_envoy__control_dot_certificate__management_dot_service__pb2.RevokeCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
