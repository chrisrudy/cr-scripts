# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LoginEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    connection_ip_address: typing___Text = ...
    connection_network_operator: typing___Text = ...
    connection_user_agent: typing___Text = ...
    subject_anonymous_token: typing___Text = ...
    subject_credential_token: typing___Text = ...
    subject_device_credential_token: typing___Text = ...
    multipass_event_captcha_response_provided: builtin___bool = ...
    multipass_event_client_o_u: typing___Text = ...
    multipass_event_device_identifier: typing___Text = ...
    multipass_event_error_code: typing___Text = ...
    multipass_event_has_matching_person_token: builtin___bool = ...
    multipass_event_hashed_email: typing___Text = ...
    multipass_event_impersonator: typing___Text = ...
    multipass_event_scope: typing___Text = ...
    multipass_event_session_type: typing___Text = ...
    multipass_event_set_trusted_device: typing___Text = ...
    multipass_event_trusted_device_state: builtin___bool = ...
    multipass_event_unverified_person_token: typing___Text = ...

    def __init__(self,
        *,
        connection_ip_address : typing___Optional[typing___Text] = None,
        connection_network_operator : typing___Optional[typing___Text] = None,
        connection_user_agent : typing___Optional[typing___Text] = None,
        subject_anonymous_token : typing___Optional[typing___Text] = None,
        subject_credential_token : typing___Optional[typing___Text] = None,
        subject_device_credential_token : typing___Optional[typing___Text] = None,
        multipass_event_captcha_response_provided : typing___Optional[builtin___bool] = None,
        multipass_event_client_o_u : typing___Optional[typing___Text] = None,
        multipass_event_device_identifier : typing___Optional[typing___Text] = None,
        multipass_event_error_code : typing___Optional[typing___Text] = None,
        multipass_event_has_matching_person_token : typing___Optional[builtin___bool] = None,
        multipass_event_hashed_email : typing___Optional[typing___Text] = None,
        multipass_event_impersonator : typing___Optional[typing___Text] = None,
        multipass_event_scope : typing___Optional[typing___Text] = None,
        multipass_event_session_type : typing___Optional[typing___Text] = None,
        multipass_event_set_trusted_device : typing___Optional[typing___Text] = None,
        multipass_event_trusted_device_state : typing___Optional[builtin___bool] = None,
        multipass_event_unverified_person_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"connection_ip_address",b"connection_ip_address",u"connection_network_operator",b"connection_network_operator",u"connection_user_agent",b"connection_user_agent",u"multipass_event_captcha_response_provided",b"multipass_event_captcha_response_provided",u"multipass_event_client_o_u",b"multipass_event_client_o_u",u"multipass_event_device_identifier",b"multipass_event_device_identifier",u"multipass_event_error_code",b"multipass_event_error_code",u"multipass_event_has_matching_person_token",b"multipass_event_has_matching_person_token",u"multipass_event_hashed_email",b"multipass_event_hashed_email",u"multipass_event_impersonator",b"multipass_event_impersonator",u"multipass_event_scope",b"multipass_event_scope",u"multipass_event_session_type",b"multipass_event_session_type",u"multipass_event_set_trusted_device",b"multipass_event_set_trusted_device",u"multipass_event_trusted_device_state",b"multipass_event_trusted_device_state",u"multipass_event_unverified_person_token",b"multipass_event_unverified_person_token",u"subject_anonymous_token",b"subject_anonymous_token",u"subject_credential_token",b"subject_credential_token",u"subject_device_credential_token",b"subject_device_credential_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"connection_ip_address",b"connection_ip_address",u"connection_network_operator",b"connection_network_operator",u"connection_user_agent",b"connection_user_agent",u"multipass_event_captcha_response_provided",b"multipass_event_captcha_response_provided",u"multipass_event_client_o_u",b"multipass_event_client_o_u",u"multipass_event_device_identifier",b"multipass_event_device_identifier",u"multipass_event_error_code",b"multipass_event_error_code",u"multipass_event_has_matching_person_token",b"multipass_event_has_matching_person_token",u"multipass_event_hashed_email",b"multipass_event_hashed_email",u"multipass_event_impersonator",b"multipass_event_impersonator",u"multipass_event_scope",b"multipass_event_scope",u"multipass_event_session_type",b"multipass_event_session_type",u"multipass_event_set_trusted_device",b"multipass_event_set_trusted_device",u"multipass_event_trusted_device_state",b"multipass_event_trusted_device_state",u"multipass_event_unverified_person_token",b"multipass_event_unverified_person_token",u"subject_anonymous_token",b"subject_anonymous_token",u"subject_credential_token",b"subject_credential_token",u"subject_device_credential_token",b"subject_device_credential_token"]) -> None: ...
type___LoginEvent = LoginEvent
