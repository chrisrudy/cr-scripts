# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

IncomeRangeValue = typing___NewType('IncomeRangeValue', builtin___int)
type___IncomeRangeValue = IncomeRangeValue
IncomeRange: _IncomeRange
class _IncomeRange(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[IncomeRangeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    NO_INCOME_DATA = typing___cast(IncomeRangeValue, 0)
    RANGE_0_TO_25000 = typing___cast(IncomeRangeValue, 1)
    RANGE_25001_TO_30000 = typing___cast(IncomeRangeValue, 2)
    RANGE_30001_TO_35000 = typing___cast(IncomeRangeValue, 3)
    RANGE_35001_TO_40000 = typing___cast(IncomeRangeValue, 4)
    RANGE_40001_TO_50000 = typing___cast(IncomeRangeValue, 5)
    RANGE_51001_TO_60000 = typing___cast(IncomeRangeValue, 6)
    RANGE_60001_TO_80000 = typing___cast(IncomeRangeValue, 7)
    RANGE_80001_TO_100000 = typing___cast(IncomeRangeValue, 8)
    RANGE_100001_TO_120000 = typing___cast(IncomeRangeValue, 9)
    RANGE_120001_TO_150000 = typing___cast(IncomeRangeValue, 10)
    RANGE_150001_OR_MORE = typing___cast(IncomeRangeValue, 11)
NO_INCOME_DATA = typing___cast(IncomeRangeValue, 0)
RANGE_0_TO_25000 = typing___cast(IncomeRangeValue, 1)
RANGE_25001_TO_30000 = typing___cast(IncomeRangeValue, 2)
RANGE_30001_TO_35000 = typing___cast(IncomeRangeValue, 3)
RANGE_35001_TO_40000 = typing___cast(IncomeRangeValue, 4)
RANGE_40001_TO_50000 = typing___cast(IncomeRangeValue, 5)
RANGE_51001_TO_60000 = typing___cast(IncomeRangeValue, 6)
RANGE_60001_TO_80000 = typing___cast(IncomeRangeValue, 7)
RANGE_80001_TO_100000 = typing___cast(IncomeRangeValue, 8)
RANGE_100001_TO_120000 = typing___cast(IncomeRangeValue, 9)
RANGE_120001_TO_150000 = typing___cast(IncomeRangeValue, 10)
RANGE_150001_OR_MORE = typing___cast(IncomeRangeValue, 11)
type___IncomeRange = IncomeRange

CollegeRatingValue = typing___NewType('CollegeRatingValue', builtin___int)
type___CollegeRatingValue = CollegeRatingValue
CollegeRating: _CollegeRating
class _CollegeRating(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CollegeRatingValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    NO_COLLEGE_RATING_DATA = typing___cast(CollegeRatingValue, 0)
    UNKNOWN_TIER = typing___cast(CollegeRatingValue, 1)
    TIER_1 = typing___cast(CollegeRatingValue, 2)
    TIER_2 = typing___cast(CollegeRatingValue, 3)
    TIER_3 = typing___cast(CollegeRatingValue, 4)
    TIER_4 = typing___cast(CollegeRatingValue, 5)
    TIER_5 = typing___cast(CollegeRatingValue, 6)
    TIER_6 = typing___cast(CollegeRatingValue, 7)
NO_COLLEGE_RATING_DATA = typing___cast(CollegeRatingValue, 0)
UNKNOWN_TIER = typing___cast(CollegeRatingValue, 1)
TIER_1 = typing___cast(CollegeRatingValue, 2)
TIER_2 = typing___cast(CollegeRatingValue, 3)
TIER_3 = typing___cast(CollegeRatingValue, 4)
TIER_4 = typing___cast(CollegeRatingValue, 5)
TIER_5 = typing___cast(CollegeRatingValue, 6)
TIER_6 = typing___cast(CollegeRatingValue, 7)
type___CollegeRating = CollegeRating

class LexisNexisProfileBoosterPii(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    called_successfully_at_millis: builtin___int = ...
    request_id: typing___Text = ...
    unit_token: typing___Text = ...

    @property
    def prospect(self) -> type___ProspectCharacteristics: ...

    @property
    def household(self) -> type___GroupCharacteristics: ...

    @property
    def relatives_and_associates(self) -> type___GroupCharacteristics: ...

    def __init__(self,
        *,
        prospect : typing___Optional[type___ProspectCharacteristics] = None,
        household : typing___Optional[type___GroupCharacteristics] = None,
        relatives_and_associates : typing___Optional[type___GroupCharacteristics] = None,
        called_successfully_at_millis : typing___Optional[builtin___int] = None,
        request_id : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"called_successfully_at_millis",b"called_successfully_at_millis",u"household",b"household",u"prospect",b"prospect",u"relatives_and_associates",b"relatives_and_associates",u"request_id",b"request_id",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"called_successfully_at_millis",b"called_successfully_at_millis",u"household",b"household",u"prospect",b"prospect",u"relatives_and_associates",b"relatives_and_associates",u"request_id",b"request_id",u"unit_token",b"unit_token"]) -> None: ...
type___LexisNexisProfileBoosterPii = LexisNexisProfileBoosterPii

class ProspectCharacteristics(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def verification(self) -> type___Verification: ...

    @property
    def demographics(self) -> type___Demographics: ...

    @property
    def assets(self) -> type___Assets: ...

    @property
    def life_events(self) -> type___LifeEvents: ...

    @property
    def residence(self) -> type___Residence: ...

    @property
    def court_records(self) -> type___CourtRecords: ...

    @property
    def occupational(self) -> type___Occupational: ...

    @property
    def interests(self) -> type___Interests: ...

    def __init__(self,
        *,
        verification : typing___Optional[type___Verification] = None,
        demographics : typing___Optional[type___Demographics] = None,
        assets : typing___Optional[type___Assets] = None,
        life_events : typing___Optional[type___LifeEvents] = None,
        residence : typing___Optional[type___Residence] = None,
        court_records : typing___Optional[type___CourtRecords] = None,
        occupational : typing___Optional[type___Occupational] = None,
        interests : typing___Optional[type___Interests] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"assets",b"assets",u"court_records",b"court_records",u"demographics",b"demographics",u"interests",b"interests",u"life_events",b"life_events",u"occupational",b"occupational",u"residence",b"residence",u"verification",b"verification"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"assets",b"assets",u"court_records",b"court_records",u"demographics",b"demographics",u"interests",b"interests",u"life_events",b"life_events",u"occupational",b"occupational",u"residence",b"residence",u"verification",b"verification"]) -> None: ...
type___ProspectCharacteristics = ProspectCharacteristics

class GroupCharacteristics(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def demographics(self) -> type___GroupDemographics: ...

    @property
    def assets(self) -> type___GroupAssets: ...

    @property
    def court_records(self) -> type___GroupCourtRecords: ...

    @property
    def occupational(self) -> type___GroupOccupational: ...

    @property
    def interests(self) -> type___GroupInterests: ...

    def __init__(self,
        *,
        demographics : typing___Optional[type___GroupDemographics] = None,
        assets : typing___Optional[type___GroupAssets] = None,
        court_records : typing___Optional[type___GroupCourtRecords] = None,
        occupational : typing___Optional[type___GroupOccupational] = None,
        interests : typing___Optional[type___GroupInterests] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"assets",b"assets",u"court_records",b"court_records",u"demographics",b"demographics",u"interests",b"interests",u"occupational",b"occupational"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"assets",b"assets",u"court_records",b"court_records",u"demographics",b"demographics",u"interests",b"interests",u"occupational",b"occupational"]) -> None: ...
type___GroupCharacteristics = GroupCharacteristics

class Verification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    NameVerificationValue = typing___NewType('NameVerificationValue', builtin___int)
    type___NameVerificationValue = NameVerificationValue
    NameVerification: _NameVerification
    class _NameVerification(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Verification.NameVerificationValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_NAME_DATA = typing___cast(Verification.NameVerificationValue, 0)
        NAME_NOT_VERIFIED = typing___cast(Verification.NameVerificationValue, 1)
        FIRST_NAME_VERIFIED = typing___cast(Verification.NameVerificationValue, 2)
        LAST_NAME_VERIFIED = typing___cast(Verification.NameVerificationValue, 3)
        FIRST_AND_LAST_NAME_VERIFIED = typing___cast(Verification.NameVerificationValue, 4)
    NO_NAME_DATA = typing___cast(Verification.NameVerificationValue, 0)
    NAME_NOT_VERIFIED = typing___cast(Verification.NameVerificationValue, 1)
    FIRST_NAME_VERIFIED = typing___cast(Verification.NameVerificationValue, 2)
    LAST_NAME_VERIFIED = typing___cast(Verification.NameVerificationValue, 3)
    FIRST_AND_LAST_NAME_VERIFIED = typing___cast(Verification.NameVerificationValue, 4)
    type___NameVerification = NameVerification

    AddressVerificationValue = typing___NewType('AddressVerificationValue', builtin___int)
    type___AddressVerificationValue = AddressVerificationValue
    AddressVerification: _AddressVerification
    class _AddressVerification(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Verification.AddressVerificationValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_ADDRESS_DATA = typing___cast(Verification.AddressVerificationValue, 0)
        ADDRESS_NOT_VERIFIED = typing___cast(Verification.AddressVerificationValue, 1)
        PRIOR_RESIDENCE = typing___cast(Verification.AddressVerificationValue, 2)
        CURRENT_RESIDENCE = typing___cast(Verification.AddressVerificationValue, 3)
    NO_ADDRESS_DATA = typing___cast(Verification.AddressVerificationValue, 0)
    ADDRESS_NOT_VERIFIED = typing___cast(Verification.AddressVerificationValue, 1)
    PRIOR_RESIDENCE = typing___cast(Verification.AddressVerificationValue, 2)
    CURRENT_RESIDENCE = typing___cast(Verification.AddressVerificationValue, 3)
    type___AddressVerification = AddressVerification

    is_do_not_mail: builtin___bool = ...
    is_verified_prospect_data_found: builtin___bool = ...
    name_verified: type___Verification.NameVerificationValue = ...
    is_ssn_verified: builtin___bool = ...
    is_phone_verified: builtin___bool = ...
    is_address_verified: type___Verification.AddressVerificationValue = ...

    def __init__(self,
        *,
        is_do_not_mail : typing___Optional[builtin___bool] = None,
        is_verified_prospect_data_found : typing___Optional[builtin___bool] = None,
        name_verified : typing___Optional[type___Verification.NameVerificationValue] = None,
        is_ssn_verified : typing___Optional[builtin___bool] = None,
        is_phone_verified : typing___Optional[builtin___bool] = None,
        is_address_verified : typing___Optional[type___Verification.AddressVerificationValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"is_address_verified",b"is_address_verified",u"is_do_not_mail",b"is_do_not_mail",u"is_phone_verified",b"is_phone_verified",u"is_ssn_verified",b"is_ssn_verified",u"is_verified_prospect_data_found",b"is_verified_prospect_data_found",u"name_verified",b"name_verified"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"is_address_verified",b"is_address_verified",u"is_do_not_mail",b"is_do_not_mail",u"is_phone_verified",b"is_phone_verified",u"is_ssn_verified",b"is_ssn_verified",u"is_verified_prospect_data_found",b"is_verified_prospect_data_found",u"name_verified",b"name_verified"]) -> None: ...
type___Verification = Verification

class Demographics(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    GenderValue = typing___NewType('GenderValue', builtin___int)
    type___GenderValue = GenderValue
    Gender: _Gender
    class _Gender(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Demographics.GenderValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_GENDER_DATA = typing___cast(Demographics.GenderValue, 0)
        UNKNOWN_GENDER = typing___cast(Demographics.GenderValue, 1)
        MALE = typing___cast(Demographics.GenderValue, 2)
        FEMALE = typing___cast(Demographics.GenderValue, 3)
    NO_GENDER_DATA = typing___cast(Demographics.GenderValue, 0)
    UNKNOWN_GENDER = typing___cast(Demographics.GenderValue, 1)
    MALE = typing___cast(Demographics.GenderValue, 2)
    FEMALE = typing___cast(Demographics.GenderValue, 3)
    type___Gender = Gender

    CollegeProgramValue = typing___NewType('CollegeProgramValue', builtin___int)
    type___CollegeProgramValue = CollegeProgramValue
    CollegeProgram: _CollegeProgram
    class _CollegeProgram(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Demographics.CollegeProgramValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_COLLEGE_DATA = typing___cast(Demographics.CollegeProgramValue, 0)
        UNKNOWN_COLLEGE_TYPE = typing___cast(Demographics.CollegeProgramValue, 1)
        TWO_YEAR = typing___cast(Demographics.CollegeProgramValue, 2)
        FOUR_YEAR = typing___cast(Demographics.CollegeProgramValue, 3)
        GRADUATE = typing___cast(Demographics.CollegeProgramValue, 4)
    NO_COLLEGE_DATA = typing___cast(Demographics.CollegeProgramValue, 0)
    UNKNOWN_COLLEGE_TYPE = typing___cast(Demographics.CollegeProgramValue, 1)
    TWO_YEAR = typing___cast(Demographics.CollegeProgramValue, 2)
    FOUR_YEAR = typing___cast(Demographics.CollegeProgramValue, 3)
    GRADUATE = typing___cast(Demographics.CollegeProgramValue, 4)
    type___CollegeProgram = CollegeProgram

    BankingExperienceValue = typing___NewType('BankingExperienceValue', builtin___int)
    type___BankingExperienceValue = BankingExperienceValue
    BankingExperience: _BankingExperience
    class _BankingExperience(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Demographics.BankingExperienceValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        LIKELY_UNBANKED = typing___cast(Demographics.BankingExperienceValue, 0)
        LIKELY_UNDERBANKED = typing___cast(Demographics.BankingExperienceValue, 1)
        LIKELY_BANKED = typing___cast(Demographics.BankingExperienceValue, 2)
        LIKELY_OVERBANKED = typing___cast(Demographics.BankingExperienceValue, 3)
    LIKELY_UNBANKED = typing___cast(Demographics.BankingExperienceValue, 0)
    LIKELY_UNDERBANKED = typing___cast(Demographics.BankingExperienceValue, 1)
    LIKELY_BANKED = typing___cast(Demographics.BankingExperienceValue, 2)
    LIKELY_OVERBANKED = typing___cast(Demographics.BankingExperienceValue, 3)
    type___BankingExperience = BankingExperience

    months_on_record: builtin___int = ...
    months_since_last_update: builtin___int = ...
    age: builtin___int = ...
    gender: type___Demographics.GenderValue = ...
    is_married: builtin___bool = ...
    income_range: type___IncomeRangeValue = ...
    is_deceased: builtin___bool = ...
    is_currently_attending_college: builtin___bool = ...
    is_attended_college: builtin___bool = ...
    college_program: type___Demographics.CollegeProgramValue = ...
    is_private_college: builtin___bool = ...
    college_rating: type___CollegeRatingValue = ...
    banking_experience: type___Demographics.BankingExperienceValue = ...

    def __init__(self,
        *,
        months_on_record : typing___Optional[builtin___int] = None,
        months_since_last_update : typing___Optional[builtin___int] = None,
        age : typing___Optional[builtin___int] = None,
        gender : typing___Optional[type___Demographics.GenderValue] = None,
        is_married : typing___Optional[builtin___bool] = None,
        income_range : typing___Optional[type___IncomeRangeValue] = None,
        is_deceased : typing___Optional[builtin___bool] = None,
        is_currently_attending_college : typing___Optional[builtin___bool] = None,
        is_attended_college : typing___Optional[builtin___bool] = None,
        college_program : typing___Optional[type___Demographics.CollegeProgramValue] = None,
        is_private_college : typing___Optional[builtin___bool] = None,
        college_rating : typing___Optional[type___CollegeRatingValue] = None,
        banking_experience : typing___Optional[type___Demographics.BankingExperienceValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"age",b"age",u"banking_experience",b"banking_experience",u"college_program",b"college_program",u"college_rating",b"college_rating",u"gender",b"gender",u"income_range",b"income_range",u"is_attended_college",b"is_attended_college",u"is_currently_attending_college",b"is_currently_attending_college",u"is_deceased",b"is_deceased",u"is_married",b"is_married",u"is_private_college",b"is_private_college",u"months_on_record",b"months_on_record",u"months_since_last_update",b"months_since_last_update"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"age",b"age",u"banking_experience",b"banking_experience",u"college_program",b"college_program",u"college_rating",b"college_rating",u"gender",b"gender",u"income_range",b"income_range",u"is_attended_college",b"is_attended_college",u"is_currently_attending_college",b"is_currently_attending_college",u"is_deceased",b"is_deceased",u"is_married",b"is_married",u"is_private_college",b"is_private_college",u"months_on_record",b"months_on_record",u"months_since_last_update",b"months_since_last_update"]) -> None: ...
type___Demographics = Demographics

class GroupDemographics(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    age_13_to_19: builtin___int = ...
    age_20_to_39: builtin___int = ...
    age_40_to_64: builtin___int = ...
    age_65_to_79: builtin___int = ...
    age_80_or_higher: builtin___int = ...
    total_members: builtin___int = ...
    income_range: type___IncomeRangeValue = ...
    attended_college: builtin___int = ...
    attended_two_year_college: builtin___int = ...
    attended_four_year_college: builtin___int = ...
    attended_graduate_school: builtin___int = ...
    attended_private_college: builtin___int = ...
    highest_rating: type___CollegeRatingValue = ...
    attended_top_tier_college: builtin___int = ...
    attended_mid_tier_college: builtin___int = ...
    attended_low_tier_college: builtin___int = ...

    def __init__(self,
        *,
        age_13_to_19 : typing___Optional[builtin___int] = None,
        age_20_to_39 : typing___Optional[builtin___int] = None,
        age_40_to_64 : typing___Optional[builtin___int] = None,
        age_65_to_79 : typing___Optional[builtin___int] = None,
        age_80_or_higher : typing___Optional[builtin___int] = None,
        total_members : typing___Optional[builtin___int] = None,
        income_range : typing___Optional[type___IncomeRangeValue] = None,
        attended_college : typing___Optional[builtin___int] = None,
        attended_two_year_college : typing___Optional[builtin___int] = None,
        attended_four_year_college : typing___Optional[builtin___int] = None,
        attended_graduate_school : typing___Optional[builtin___int] = None,
        attended_private_college : typing___Optional[builtin___int] = None,
        highest_rating : typing___Optional[type___CollegeRatingValue] = None,
        attended_top_tier_college : typing___Optional[builtin___int] = None,
        attended_mid_tier_college : typing___Optional[builtin___int] = None,
        attended_low_tier_college : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"age_13_to_19",b"age_13_to_19",u"age_20_to_39",b"age_20_to_39",u"age_40_to_64",b"age_40_to_64",u"age_65_to_79",b"age_65_to_79",u"age_80_or_higher",b"age_80_or_higher",u"attended_college",b"attended_college",u"attended_four_year_college",b"attended_four_year_college",u"attended_graduate_school",b"attended_graduate_school",u"attended_low_tier_college",b"attended_low_tier_college",u"attended_mid_tier_college",b"attended_mid_tier_college",u"attended_private_college",b"attended_private_college",u"attended_top_tier_college",b"attended_top_tier_college",u"attended_two_year_college",b"attended_two_year_college",u"highest_rating",b"highest_rating",u"income_range",b"income_range",u"total_members",b"total_members"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"age_13_to_19",b"age_13_to_19",u"age_20_to_39",b"age_20_to_39",u"age_40_to_64",b"age_40_to_64",u"age_65_to_79",b"age_65_to_79",u"age_80_or_higher",b"age_80_or_higher",u"attended_college",b"attended_college",u"attended_four_year_college",b"attended_four_year_college",u"attended_graduate_school",b"attended_graduate_school",u"attended_low_tier_college",b"attended_low_tier_college",u"attended_mid_tier_college",b"attended_mid_tier_college",u"attended_private_college",b"attended_private_college",u"attended_top_tier_college",b"attended_top_tier_college",u"attended_two_year_college",b"attended_two_year_college",u"highest_rating",b"highest_rating",u"income_range",b"income_range",u"total_members",b"total_members"]) -> None: ...
type___GroupDemographics = GroupDemographics

class Assets(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    is_asset_owner: builtin___bool = ...
    is_real_property_owner: builtin___bool = ...
    real_property_count: builtin___int = ...
    total_tax_assessed_value_of_real_properties: builtin___int = ...
    total_avm_assessed_value_of_real_properties: builtin___int = ...
    months_since_last_property_sale: builtin___int = ...
    real_properties_ever_owned: builtin___int = ...
    real_properties_ever_sold: builtin___int = ...
    real_properties_sold_last_year: builtin___int = ...
    property_sold_price_ratio: builtin___float = ...
    real_properties_bought_last_year: builtin___int = ...
    is_personal_property_owner: builtin___bool = ...
    personal_property_count: builtin___int = ...
    automobile_count: builtin___int = ...
    motorcycle_count: builtin___int = ...
    aircraft_count: builtin___int = ...
    watercraft_count: builtin___int = ...

    def __init__(self,
        *,
        is_asset_owner : typing___Optional[builtin___bool] = None,
        is_real_property_owner : typing___Optional[builtin___bool] = None,
        real_property_count : typing___Optional[builtin___int] = None,
        total_tax_assessed_value_of_real_properties : typing___Optional[builtin___int] = None,
        total_avm_assessed_value_of_real_properties : typing___Optional[builtin___int] = None,
        months_since_last_property_sale : typing___Optional[builtin___int] = None,
        real_properties_ever_owned : typing___Optional[builtin___int] = None,
        real_properties_ever_sold : typing___Optional[builtin___int] = None,
        real_properties_sold_last_year : typing___Optional[builtin___int] = None,
        property_sold_price_ratio : typing___Optional[builtin___float] = None,
        real_properties_bought_last_year : typing___Optional[builtin___int] = None,
        is_personal_property_owner : typing___Optional[builtin___bool] = None,
        personal_property_count : typing___Optional[builtin___int] = None,
        automobile_count : typing___Optional[builtin___int] = None,
        motorcycle_count : typing___Optional[builtin___int] = None,
        aircraft_count : typing___Optional[builtin___int] = None,
        watercraft_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aircraft_count",b"aircraft_count",u"automobile_count",b"automobile_count",u"is_asset_owner",b"is_asset_owner",u"is_personal_property_owner",b"is_personal_property_owner",u"is_real_property_owner",b"is_real_property_owner",u"months_since_last_property_sale",b"months_since_last_property_sale",u"motorcycle_count",b"motorcycle_count",u"personal_property_count",b"personal_property_count",u"property_sold_price_ratio",b"property_sold_price_ratio",u"real_properties_bought_last_year",b"real_properties_bought_last_year",u"real_properties_ever_owned",b"real_properties_ever_owned",u"real_properties_ever_sold",b"real_properties_ever_sold",u"real_properties_sold_last_year",b"real_properties_sold_last_year",u"real_property_count",b"real_property_count",u"total_avm_assessed_value_of_real_properties",b"total_avm_assessed_value_of_real_properties",u"total_tax_assessed_value_of_real_properties",b"total_tax_assessed_value_of_real_properties",u"watercraft_count",b"watercraft_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aircraft_count",b"aircraft_count",u"automobile_count",b"automobile_count",u"is_asset_owner",b"is_asset_owner",u"is_personal_property_owner",b"is_personal_property_owner",u"is_real_property_owner",b"is_real_property_owner",u"months_since_last_property_sale",b"months_since_last_property_sale",u"motorcycle_count",b"motorcycle_count",u"personal_property_count",b"personal_property_count",u"property_sold_price_ratio",b"property_sold_price_ratio",u"real_properties_bought_last_year",b"real_properties_bought_last_year",u"real_properties_ever_owned",b"real_properties_ever_owned",u"real_properties_ever_sold",b"real_properties_ever_sold",u"real_properties_sold_last_year",b"real_properties_sold_last_year",u"real_property_count",b"real_property_count",u"total_avm_assessed_value_of_real_properties",b"total_avm_assessed_value_of_real_properties",u"total_tax_assessed_value_of_real_properties",b"total_tax_assessed_value_of_real_properties",u"watercraft_count",b"watercraft_count"]) -> None: ...
type___Assets = Assets

class GroupAssets(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    owners_of_real_property: builtin___int = ...
    real_property_count: builtin___int = ...
    highest_valued_total_ownership_by_one_member: builtin___int = ...
    median_value_of_total_ownership_by_all_members: builtin___int = ...
    personal_property_count: builtin___int = ...
    automobile_count: builtin___int = ...
    motorcycle_count: builtin___int = ...
    aircraft_count: builtin___int = ...
    watercraft_count: builtin___int = ...

    def __init__(self,
        *,
        owners_of_real_property : typing___Optional[builtin___int] = None,
        real_property_count : typing___Optional[builtin___int] = None,
        highest_valued_total_ownership_by_one_member : typing___Optional[builtin___int] = None,
        median_value_of_total_ownership_by_all_members : typing___Optional[builtin___int] = None,
        personal_property_count : typing___Optional[builtin___int] = None,
        automobile_count : typing___Optional[builtin___int] = None,
        motorcycle_count : typing___Optional[builtin___int] = None,
        aircraft_count : typing___Optional[builtin___int] = None,
        watercraft_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aircraft_count",b"aircraft_count",u"automobile_count",b"automobile_count",u"highest_valued_total_ownership_by_one_member",b"highest_valued_total_ownership_by_one_member",u"median_value_of_total_ownership_by_all_members",b"median_value_of_total_ownership_by_all_members",u"motorcycle_count",b"motorcycle_count",u"owners_of_real_property",b"owners_of_real_property",u"personal_property_count",b"personal_property_count",u"real_property_count",b"real_property_count",u"watercraft_count",b"watercraft_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aircraft_count",b"aircraft_count",u"automobile_count",b"automobile_count",u"highest_valued_total_ownership_by_one_member",b"highest_valued_total_ownership_by_one_member",u"median_value_of_total_ownership_by_all_members",b"median_value_of_total_ownership_by_all_members",u"motorcycle_count",b"motorcycle_count",u"owners_of_real_property",b"owners_of_real_property",u"personal_property_count",b"personal_property_count",u"real_property_count",b"real_property_count",u"watercraft_count",b"watercraft_count"]) -> None: ...
type___GroupAssets = GroupAssets

class LifeEvents(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EconomicTrajectoryValue = typing___NewType('EconomicTrajectoryValue', builtin___int)
    type___EconomicTrajectoryValue = EconomicTrajectoryValue
    EconomicTrajectory: _EconomicTrajectory
    class _EconomicTrajectory(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LifeEvents.EconomicTrajectoryValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_ECON_DATA = typing___cast(LifeEvents.EconomicTrajectoryValue, 0)
        UNAVAILABLE = typing___cast(LifeEvents.EconomicTrajectoryValue, 1)
        NO_MOVE_IN_LAST_FIVE_YEARS = typing___cast(LifeEvents.EconomicTrajectoryValue, 2)
        MOVED_FROM_APT_TO_APT = typing___cast(LifeEvents.EconomicTrajectoryValue, 3)
        MOVED_FROM_SFD_TO_APT = typing___cast(LifeEvents.EconomicTrajectoryValue, 4)
        MOVED_FROM_APT_TO_SFD = typing___cast(LifeEvents.EconomicTrajectoryValue, 5)
        MOVED_FROM_SFD_TO_SFD_VALUE_BELOW_150000 = typing___cast(LifeEvents.EconomicTrajectoryValue, 6)
        MOVED_FROM_SFD_TO_SFD_VALUE_ABOVE_150000 = typing___cast(LifeEvents.EconomicTrajectoryValue, 7)
        MOVED_FROM_SFD_TO_SFD_VALUE_0 = typing___cast(LifeEvents.EconomicTrajectoryValue, 8)
        MOVED_FROM_SFD_TO_SFD_WAY_DOWN_OR_STAYED_DOWN = typing___cast(LifeEvents.EconomicTrajectoryValue, 9)
        MOVED_FROM_SFD_TO_SFD_MOVED_DOWN = typing___cast(LifeEvents.EconomicTrajectoryValue, 10)
        MOVED_FROM_SFD_TO_SFD_STAYED_SAME = typing___cast(LifeEvents.EconomicTrajectoryValue, 11)
        MOVED_FROM_SFD_TO_SFD_MOVED_UP = typing___cast(LifeEvents.EconomicTrajectoryValue, 12)
        MOVED_FROM_SFD_TO_SFD_WAY_UP_OR_STAYED_UP = typing___cast(LifeEvents.EconomicTrajectoryValue, 13)
    NO_ECON_DATA = typing___cast(LifeEvents.EconomicTrajectoryValue, 0)
    UNAVAILABLE = typing___cast(LifeEvents.EconomicTrajectoryValue, 1)
    NO_MOVE_IN_LAST_FIVE_YEARS = typing___cast(LifeEvents.EconomicTrajectoryValue, 2)
    MOVED_FROM_APT_TO_APT = typing___cast(LifeEvents.EconomicTrajectoryValue, 3)
    MOVED_FROM_SFD_TO_APT = typing___cast(LifeEvents.EconomicTrajectoryValue, 4)
    MOVED_FROM_APT_TO_SFD = typing___cast(LifeEvents.EconomicTrajectoryValue, 5)
    MOVED_FROM_SFD_TO_SFD_VALUE_BELOW_150000 = typing___cast(LifeEvents.EconomicTrajectoryValue, 6)
    MOVED_FROM_SFD_TO_SFD_VALUE_ABOVE_150000 = typing___cast(LifeEvents.EconomicTrajectoryValue, 7)
    MOVED_FROM_SFD_TO_SFD_VALUE_0 = typing___cast(LifeEvents.EconomicTrajectoryValue, 8)
    MOVED_FROM_SFD_TO_SFD_WAY_DOWN_OR_STAYED_DOWN = typing___cast(LifeEvents.EconomicTrajectoryValue, 9)
    MOVED_FROM_SFD_TO_SFD_MOVED_DOWN = typing___cast(LifeEvents.EconomicTrajectoryValue, 10)
    MOVED_FROM_SFD_TO_SFD_STAYED_SAME = typing___cast(LifeEvents.EconomicTrajectoryValue, 11)
    MOVED_FROM_SFD_TO_SFD_MOVED_UP = typing___cast(LifeEvents.EconomicTrajectoryValue, 12)
    MOVED_FROM_SFD_TO_SFD_WAY_UP_OR_STAYED_UP = typing___cast(LifeEvents.EconomicTrajectoryValue, 13)
    type___EconomicTrajectory = EconomicTrajectory

    months_since_last_move: builtin___int = ...
    has_last_name_ever_changed: builtin___bool = ...
    has_last_name_changed_last_year: builtin___bool = ...
    months_since_first_property_purchase: builtin___int = ...
    months_since_last_property_purchase: builtin___int = ...
    lifetime_unique_residences: builtin___int = ...
    last_move_tax_ratio: builtin___float = ...
    economic_trajectory: type___LifeEvents.EconomicTrajectoryValue = ...

    def __init__(self,
        *,
        months_since_last_move : typing___Optional[builtin___int] = None,
        has_last_name_ever_changed : typing___Optional[builtin___bool] = None,
        has_last_name_changed_last_year : typing___Optional[builtin___bool] = None,
        months_since_first_property_purchase : typing___Optional[builtin___int] = None,
        months_since_last_property_purchase : typing___Optional[builtin___int] = None,
        lifetime_unique_residences : typing___Optional[builtin___int] = None,
        last_move_tax_ratio : typing___Optional[builtin___float] = None,
        economic_trajectory : typing___Optional[type___LifeEvents.EconomicTrajectoryValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"economic_trajectory",b"economic_trajectory",u"has_last_name_changed_last_year",b"has_last_name_changed_last_year",u"has_last_name_ever_changed",b"has_last_name_ever_changed",u"last_move_tax_ratio",b"last_move_tax_ratio",u"lifetime_unique_residences",b"lifetime_unique_residences",u"months_since_first_property_purchase",b"months_since_first_property_purchase",u"months_since_last_move",b"months_since_last_move",u"months_since_last_property_purchase",b"months_since_last_property_purchase"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"economic_trajectory",b"economic_trajectory",u"has_last_name_changed_last_year",b"has_last_name_changed_last_year",u"has_last_name_ever_changed",b"has_last_name_ever_changed",u"last_move_tax_ratio",b"last_move_tax_ratio",u"lifetime_unique_residences",b"lifetime_unique_residences",u"months_since_first_property_purchase",b"months_since_first_property_purchase",u"months_since_last_move",b"months_since_last_move",u"months_since_last_property_purchase",b"months_since_last_property_purchase"]) -> None: ...
type___LifeEvents = LifeEvents

class Residence(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def current_residence(self) -> type___ResidenceDetails: ...

    @property
    def input_residence(self) -> type___ResidenceDetails: ...

    def __init__(self,
        *,
        current_residence : typing___Optional[type___ResidenceDetails] = None,
        input_residence : typing___Optional[type___ResidenceDetails] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_residence",b"current_residence",u"input_residence",b"input_residence"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_residence",b"current_residence",u"input_residence",b"input_residence"]) -> None: ...
type___Residence = Residence

class ResidenceDetails(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    OwnershipLevelValue = typing___NewType('OwnershipLevelValue', builtin___int)
    type___OwnershipLevelValue = OwnershipLevelValue
    OwnershipLevel: _OwnershipLevel
    class _OwnershipLevel(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ResidenceDetails.OwnershipLevelValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_OWNERSHIP_DATA = typing___cast(ResidenceDetails.OwnershipLevelValue, 0)
        UNAVAILABLE_OR_PO_BOX = typing___cast(ResidenceDetails.OwnershipLevelValue, 1)
        NO_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 2)
        PROPERTY_ADDRESS_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 3)
        LAST_NAME_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 4)
        FIRST_AND_LAST_NAME_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 5)
    NO_OWNERSHIP_DATA = typing___cast(ResidenceDetails.OwnershipLevelValue, 0)
    UNAVAILABLE_OR_PO_BOX = typing___cast(ResidenceDetails.OwnershipLevelValue, 1)
    NO_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 2)
    PROPERTY_ADDRESS_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 3)
    LAST_NAME_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 4)
    FIRST_AND_LAST_NAME_MATCH = typing___cast(ResidenceDetails.OwnershipLevelValue, 5)
    type___OwnershipLevel = OwnershipLevel

    DwellingTypeValue = typing___NewType('DwellingTypeValue', builtin___int)
    type___DwellingTypeValue = DwellingTypeValue
    DwellingType: _DwellingType
    class _DwellingType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ResidenceDetails.DwellingTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_DWELLING_DATA = typing___cast(ResidenceDetails.DwellingTypeValue, 0)
        FIRM_OR_BUSINESS = typing___cast(ResidenceDetails.DwellingTypeValue, 1)
        GENERAL_DELIVERY = typing___cast(ResidenceDetails.DwellingTypeValue, 2)
        HIGH_RISE_APARTMENT_OR_OFFICE_BUILDING = typing___cast(ResidenceDetails.DwellingTypeValue, 3)
        POST_OFFICE_BOX = typing___cast(ResidenceDetails.DwellingTypeValue, 4)
        RURAL_ROUTE_OR_HIGHWAY = typing___cast(ResidenceDetails.DwellingTypeValue, 5)
        STREET_OR_SINGLE_FAMILY_DWELLING = typing___cast(ResidenceDetails.DwellingTypeValue, 6)
        UNIQUE = typing___cast(ResidenceDetails.DwellingTypeValue, 7)
    NO_DWELLING_DATA = typing___cast(ResidenceDetails.DwellingTypeValue, 0)
    FIRM_OR_BUSINESS = typing___cast(ResidenceDetails.DwellingTypeValue, 1)
    GENERAL_DELIVERY = typing___cast(ResidenceDetails.DwellingTypeValue, 2)
    HIGH_RISE_APARTMENT_OR_OFFICE_BUILDING = typing___cast(ResidenceDetails.DwellingTypeValue, 3)
    POST_OFFICE_BOX = typing___cast(ResidenceDetails.DwellingTypeValue, 4)
    RURAL_ROUTE_OR_HIGHWAY = typing___cast(ResidenceDetails.DwellingTypeValue, 5)
    STREET_OR_SINGLE_FAMILY_DWELLING = typing___cast(ResidenceDetails.DwellingTypeValue, 6)
    UNIQUE = typing___cast(ResidenceDetails.DwellingTypeValue, 7)
    type___DwellingType = DwellingType

    DwellingTypeIndexValue = typing___NewType('DwellingTypeIndexValue', builtin___int)
    type___DwellingTypeIndexValue = DwellingTypeIndexValue
    DwellingTypeIndex: _DwellingTypeIndex
    class _DwellingTypeIndex(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ResidenceDetails.DwellingTypeIndexValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_DWELLING_TYPE_DATA = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 0)
        UNKNOWN = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 1)
        NONRESIDENTIAL = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 2)
        PO_BOX = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 3)
        RESIDENTIAL = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 4)
    NO_DWELLING_TYPE_DATA = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 0)
    UNKNOWN = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 1)
    NONRESIDENTIAL = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 2)
    PO_BOX = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 3)
    RESIDENTIAL = typing___cast(ResidenceDetails.DwellingTypeIndexValue, 4)
    type___DwellingTypeIndex = DwellingTypeIndex

    MortgageTypeValue = typing___NewType('MortgageTypeValue', builtin___int)
    type___MortgageTypeValue = MortgageTypeValue
    MortgageType: _MortgageType
    class _MortgageType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ResidenceDetails.MortgageTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_MORTGAGE_DATA = typing___cast(ResidenceDetails.MortgageTypeValue, 0)
        CANNOT_CLASSIFY = typing___cast(ResidenceDetails.MortgageTypeValue, 1)
        ADJUSTABLE_RATE = typing___cast(ResidenceDetails.MortgageTypeValue, 2)
        CONVENTIONAL = typing___cast(ResidenceDetails.MortgageTypeValue, 3)
    NO_MORTGAGE_DATA = typing___cast(ResidenceDetails.MortgageTypeValue, 0)
    CANNOT_CLASSIFY = typing___cast(ResidenceDetails.MortgageTypeValue, 1)
    ADJUSTABLE_RATE = typing___cast(ResidenceDetails.MortgageTypeValue, 2)
    CONVENTIONAL = typing___cast(ResidenceDetails.MortgageTypeValue, 3)
    type___MortgageType = MortgageType

    ownership_level: type___ResidenceDetails.OwnershipLevelValue = ...
    dollar_value: builtin___int = ...
    value_one_year_ago: builtin___int = ...
    value_ratio_one_year_ago: builtin___float = ...
    value_five_years_ago: builtin___int = ...
    value_ratio_five_years_ago: builtin___float = ...
    value_ratio_to_county_median: builtin___float = ...
    value_ratio_to_tract_median: builtin___float = ...
    value_ratio_to_block_median: builtin___float = ...
    dwelling_type: type___ResidenceDetails.DwellingTypeValue = ...
    dwelling_type_index: type___ResidenceDetails.DwellingTypeIndexValue = ...
    mortgage_type: type___ResidenceDetails.MortgageTypeValue = ...
    mortgage_amount: builtin___int = ...
    business_registrations_at_residence: builtin___int = ...

    def __init__(self,
        *,
        ownership_level : typing___Optional[type___ResidenceDetails.OwnershipLevelValue] = None,
        dollar_value : typing___Optional[builtin___int] = None,
        value_one_year_ago : typing___Optional[builtin___int] = None,
        value_ratio_one_year_ago : typing___Optional[builtin___float] = None,
        value_five_years_ago : typing___Optional[builtin___int] = None,
        value_ratio_five_years_ago : typing___Optional[builtin___float] = None,
        value_ratio_to_county_median : typing___Optional[builtin___float] = None,
        value_ratio_to_tract_median : typing___Optional[builtin___float] = None,
        value_ratio_to_block_median : typing___Optional[builtin___float] = None,
        dwelling_type : typing___Optional[type___ResidenceDetails.DwellingTypeValue] = None,
        dwelling_type_index : typing___Optional[type___ResidenceDetails.DwellingTypeIndexValue] = None,
        mortgage_type : typing___Optional[type___ResidenceDetails.MortgageTypeValue] = None,
        mortgage_amount : typing___Optional[builtin___int] = None,
        business_registrations_at_residence : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"business_registrations_at_residence",b"business_registrations_at_residence",u"dollar_value",b"dollar_value",u"dwelling_type",b"dwelling_type",u"dwelling_type_index",b"dwelling_type_index",u"mortgage_amount",b"mortgage_amount",u"mortgage_type",b"mortgage_type",u"ownership_level",b"ownership_level",u"value_five_years_ago",b"value_five_years_ago",u"value_one_year_ago",b"value_one_year_ago",u"value_ratio_five_years_ago",b"value_ratio_five_years_ago",u"value_ratio_one_year_ago",b"value_ratio_one_year_ago",u"value_ratio_to_block_median",b"value_ratio_to_block_median",u"value_ratio_to_county_median",b"value_ratio_to_county_median",u"value_ratio_to_tract_median",b"value_ratio_to_tract_median"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"business_registrations_at_residence",b"business_registrations_at_residence",u"dollar_value",b"dollar_value",u"dwelling_type",b"dwelling_type",u"dwelling_type_index",b"dwelling_type_index",u"mortgage_amount",b"mortgage_amount",u"mortgage_type",b"mortgage_type",u"ownership_level",b"ownership_level",u"value_five_years_ago",b"value_five_years_ago",u"value_one_year_ago",b"value_one_year_ago",u"value_ratio_five_years_ago",b"value_ratio_five_years_ago",u"value_ratio_one_year_ago",b"value_ratio_one_year_ago",u"value_ratio_to_block_median",b"value_ratio_to_block_median",u"value_ratio_to_county_median",b"value_ratio_to_county_median",u"value_ratio_to_tract_median",b"value_ratio_to_tract_median"]) -> None: ...
type___ResidenceDetails = ResidenceDetails

class CourtRecords(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    count: builtin___int = ...
    count_last_year: builtin___int = ...
    months_since_most_recent: builtin___int = ...
    felony_count: builtin___int = ...
    felony_count_last_year: builtin___int = ...
    felony_months_since_most_recent: builtin___int = ...
    misdemeanor_count: builtin___int = ...
    misdemeanor_count_last_year: builtin___int = ...
    misdemeanor_months_since_most_recent: builtin___int = ...
    eviction_count: builtin___int = ...
    eviction_count_last_year: builtin___int = ...
    eviction_months_since_most_recent: builtin___int = ...
    lien_count: builtin___int = ...
    lien_count_last_year: builtin___int = ...
    lien_months_since_most_recent: builtin___int = ...
    total_amount_of_liens_and_judgments: builtin___int = ...
    bankruptcy_count: builtin___int = ...
    bankruptcy_count_last_year: builtin___int = ...
    bankruptcy_months_since_most_recent: builtin___int = ...

    def __init__(self,
        *,
        count : typing___Optional[builtin___int] = None,
        count_last_year : typing___Optional[builtin___int] = None,
        months_since_most_recent : typing___Optional[builtin___int] = None,
        felony_count : typing___Optional[builtin___int] = None,
        felony_count_last_year : typing___Optional[builtin___int] = None,
        felony_months_since_most_recent : typing___Optional[builtin___int] = None,
        misdemeanor_count : typing___Optional[builtin___int] = None,
        misdemeanor_count_last_year : typing___Optional[builtin___int] = None,
        misdemeanor_months_since_most_recent : typing___Optional[builtin___int] = None,
        eviction_count : typing___Optional[builtin___int] = None,
        eviction_count_last_year : typing___Optional[builtin___int] = None,
        eviction_months_since_most_recent : typing___Optional[builtin___int] = None,
        lien_count : typing___Optional[builtin___int] = None,
        lien_count_last_year : typing___Optional[builtin___int] = None,
        lien_months_since_most_recent : typing___Optional[builtin___int] = None,
        total_amount_of_liens_and_judgments : typing___Optional[builtin___int] = None,
        bankruptcy_count : typing___Optional[builtin___int] = None,
        bankruptcy_count_last_year : typing___Optional[builtin___int] = None,
        bankruptcy_months_since_most_recent : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bankruptcy_count",b"bankruptcy_count",u"bankruptcy_count_last_year",b"bankruptcy_count_last_year",u"bankruptcy_months_since_most_recent",b"bankruptcy_months_since_most_recent",u"count",b"count",u"count_last_year",b"count_last_year",u"eviction_count",b"eviction_count",u"eviction_count_last_year",b"eviction_count_last_year",u"eviction_months_since_most_recent",b"eviction_months_since_most_recent",u"felony_count",b"felony_count",u"felony_count_last_year",b"felony_count_last_year",u"felony_months_since_most_recent",b"felony_months_since_most_recent",u"lien_count",b"lien_count",u"lien_count_last_year",b"lien_count_last_year",u"lien_months_since_most_recent",b"lien_months_since_most_recent",u"misdemeanor_count",b"misdemeanor_count",u"misdemeanor_count_last_year",b"misdemeanor_count_last_year",u"misdemeanor_months_since_most_recent",b"misdemeanor_months_since_most_recent",u"months_since_most_recent",b"months_since_most_recent",u"total_amount_of_liens_and_judgments",b"total_amount_of_liens_and_judgments"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bankruptcy_count",b"bankruptcy_count",u"bankruptcy_count_last_year",b"bankruptcy_count_last_year",u"bankruptcy_months_since_most_recent",b"bankruptcy_months_since_most_recent",u"count",b"count",u"count_last_year",b"count_last_year",u"eviction_count",b"eviction_count",u"eviction_count_last_year",b"eviction_count_last_year",u"eviction_months_since_most_recent",b"eviction_months_since_most_recent",u"felony_count",b"felony_count",u"felony_count_last_year",b"felony_count_last_year",u"felony_months_since_most_recent",b"felony_months_since_most_recent",u"lien_count",b"lien_count",u"lien_count_last_year",b"lien_count_last_year",u"lien_months_since_most_recent",b"lien_months_since_most_recent",u"misdemeanor_count",b"misdemeanor_count",u"misdemeanor_count_last_year",b"misdemeanor_count_last_year",u"misdemeanor_months_since_most_recent",b"misdemeanor_months_since_most_recent",u"months_since_most_recent",b"months_since_most_recent",u"total_amount_of_liens_and_judgments",b"total_amount_of_liens_and_judgments"]) -> None: ...
type___CourtRecords = CourtRecords

class GroupCourtRecords(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    count: builtin___int = ...
    count_last_year: builtin___int = ...
    felony_count: builtin___int = ...
    felony_count_last_year: builtin___int = ...
    misdemeanor_count: builtin___int = ...
    misdemeanor_count_last_year: builtin___int = ...
    eviction_count: builtin___int = ...
    eviction_count_last_year: builtin___int = ...
    lien_count: builtin___int = ...
    lien_count_last_year: builtin___int = ...
    total_amount_of_liens_and_judgments: builtin___int = ...
    bankruptcy_count: builtin___int = ...
    bankruptcy_count_last_year: builtin___int = ...
    bankruptcy_count_last_two_years: builtin___int = ...
    bankruptcy_count_last_three_years: builtin___int = ...

    def __init__(self,
        *,
        count : typing___Optional[builtin___int] = None,
        count_last_year : typing___Optional[builtin___int] = None,
        felony_count : typing___Optional[builtin___int] = None,
        felony_count_last_year : typing___Optional[builtin___int] = None,
        misdemeanor_count : typing___Optional[builtin___int] = None,
        misdemeanor_count_last_year : typing___Optional[builtin___int] = None,
        eviction_count : typing___Optional[builtin___int] = None,
        eviction_count_last_year : typing___Optional[builtin___int] = None,
        lien_count : typing___Optional[builtin___int] = None,
        lien_count_last_year : typing___Optional[builtin___int] = None,
        total_amount_of_liens_and_judgments : typing___Optional[builtin___int] = None,
        bankruptcy_count : typing___Optional[builtin___int] = None,
        bankruptcy_count_last_year : typing___Optional[builtin___int] = None,
        bankruptcy_count_last_two_years : typing___Optional[builtin___int] = None,
        bankruptcy_count_last_three_years : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bankruptcy_count",b"bankruptcy_count",u"bankruptcy_count_last_three_years",b"bankruptcy_count_last_three_years",u"bankruptcy_count_last_two_years",b"bankruptcy_count_last_two_years",u"bankruptcy_count_last_year",b"bankruptcy_count_last_year",u"count",b"count",u"count_last_year",b"count_last_year",u"eviction_count",b"eviction_count",u"eviction_count_last_year",b"eviction_count_last_year",u"felony_count",b"felony_count",u"felony_count_last_year",b"felony_count_last_year",u"lien_count",b"lien_count",u"lien_count_last_year",b"lien_count_last_year",u"misdemeanor_count",b"misdemeanor_count",u"misdemeanor_count_last_year",b"misdemeanor_count_last_year",u"total_amount_of_liens_and_judgments",b"total_amount_of_liens_and_judgments"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bankruptcy_count",b"bankruptcy_count",u"bankruptcy_count_last_three_years",b"bankruptcy_count_last_three_years",u"bankruptcy_count_last_two_years",b"bankruptcy_count_last_two_years",u"bankruptcy_count_last_year",b"bankruptcy_count_last_year",u"count",b"count",u"count_last_year",b"count_last_year",u"eviction_count",b"eviction_count",u"eviction_count_last_year",b"eviction_count_last_year",u"felony_count",b"felony_count",u"felony_count_last_year",b"felony_count_last_year",u"lien_count",b"lien_count",u"lien_count_last_year",b"lien_count_last_year",u"misdemeanor_count",b"misdemeanor_count",u"misdemeanor_count_last_year",b"misdemeanor_count_last_year",u"total_amount_of_liens_and_judgments",b"total_amount_of_liens_and_judgments"]) -> None: ...
type___GroupCourtRecords = GroupCourtRecords

class Occupational(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    has_professional_license: builtin___bool = ...
    professional_license_category: builtin___int = ...
    has_business_association: builtin___bool = ...
    months_since_first_business_association: builtin___int = ...
    has_business_title_known_leadership_position: builtin___bool = ...

    def __init__(self,
        *,
        has_professional_license : typing___Optional[builtin___bool] = None,
        professional_license_category : typing___Optional[builtin___int] = None,
        has_business_association : typing___Optional[builtin___bool] = None,
        months_since_first_business_association : typing___Optional[builtin___int] = None,
        has_business_title_known_leadership_position : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"has_business_association",b"has_business_association",u"has_business_title_known_leadership_position",b"has_business_title_known_leadership_position",u"has_professional_license",b"has_professional_license",u"months_since_first_business_association",b"months_since_first_business_association",u"professional_license_category",b"professional_license_category"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"has_business_association",b"has_business_association",u"has_business_title_known_leadership_position",b"has_business_title_known_leadership_position",u"has_professional_license",b"has_professional_license",u"months_since_first_business_association",b"months_since_first_business_association",u"professional_license_category",b"professional_license_category"]) -> None: ...
type___Occupational = Occupational

class GroupOccupational(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    professional_license_count: builtin___int = ...
    business_association_count: builtin___int = ...

    def __init__(self,
        *,
        professional_license_count : typing___Optional[builtin___int] = None,
        business_association_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"business_association_count",b"business_association_count",u"professional_license_count",b"professional_license_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"business_association_count",b"business_association_count",u"professional_license_count",b"professional_license_count"]) -> None: ...
type___GroupOccupational = GroupOccupational

class Interests(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    has_outdoor_sports_license: builtin___bool = ...

    def __init__(self,
        *,
        has_outdoor_sports_license : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"has_outdoor_sports_license",b"has_outdoor_sports_license"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"has_outdoor_sports_license",b"has_outdoor_sports_license"]) -> None: ...
type___Interests = Interests

class GroupInterests(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    outdoor_sports_license_count: builtin___int = ...

    def __init__(self,
        *,
        outdoor_sports_license_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"outdoor_sports_license_count",b"outdoor_sports_license_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"outdoor_sports_license_count",b"outdoor_sports_license_count"]) -> None: ...
type___GroupInterests = GroupInterests
