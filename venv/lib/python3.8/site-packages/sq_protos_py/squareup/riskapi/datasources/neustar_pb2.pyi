# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ContinentValue = typing___NewType('ContinentValue', builtin___int)
type___ContinentValue = ContinentValue
Continent: _Continent
class _Continent(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ContinentValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    AFRICA = typing___cast(ContinentValue, 1)
    ANTARCTICA = typing___cast(ContinentValue, 2)
    ASIA = typing___cast(ContinentValue, 3)
    AUSTRALIA = typing___cast(ContinentValue, 4)
    EUROPE = typing___cast(ContinentValue, 5)
    NORTH_AMERICA = typing___cast(ContinentValue, 6)
    OCEANIA = typing___cast(ContinentValue, 7)
    SOUTH_AMERICA = typing___cast(ContinentValue, 8)
AFRICA = typing___cast(ContinentValue, 1)
ANTARCTICA = typing___cast(ContinentValue, 2)
ASIA = typing___cast(ContinentValue, 3)
AUSTRALIA = typing___cast(ContinentValue, 4)
EUROPE = typing___cast(ContinentValue, 5)
NORTH_AMERICA = typing___cast(ContinentValue, 6)
OCEANIA = typing___cast(ContinentValue, 7)
SOUTH_AMERICA = typing___cast(ContinentValue, 8)
type___Continent = Continent

IpRoutingTypeValue = typing___NewType('IpRoutingTypeValue', builtin___int)
type___IpRoutingTypeValue = IpRoutingTypeValue
IpRoutingType: _IpRoutingType
class _IpRoutingType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[IpRoutingTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    FIXED = typing___cast(IpRoutingTypeValue, 1)
    AOL = typing___cast(IpRoutingTypeValue, 2)
    AOLPOP = typing___cast(IpRoutingTypeValue, 3)
    AOLDIALUP = typing___cast(IpRoutingTypeValue, 4)
    AOLPROXY = typing___cast(IpRoutingTypeValue, 5)
    POP = typing___cast(IpRoutingTypeValue, 6)
    SUPERPOP = typing___cast(IpRoutingTypeValue, 7)
    SATELLITE = typing___cast(IpRoutingTypeValue, 8)
    CACHE_PROXY = typing___cast(IpRoutingTypeValue, 9)
    INTERNATIONAL_PROXY = typing___cast(IpRoutingTypeValue, 10)
    REGIONAL_PROXY = typing___cast(IpRoutingTypeValue, 11)
    MOBILE_GATEWAY = typing___cast(IpRoutingTypeValue, 12)
FIXED = typing___cast(IpRoutingTypeValue, 1)
AOL = typing___cast(IpRoutingTypeValue, 2)
AOLPOP = typing___cast(IpRoutingTypeValue, 3)
AOLDIALUP = typing___cast(IpRoutingTypeValue, 4)
AOLPROXY = typing___cast(IpRoutingTypeValue, 5)
POP = typing___cast(IpRoutingTypeValue, 6)
SUPERPOP = typing___cast(IpRoutingTypeValue, 7)
SATELLITE = typing___cast(IpRoutingTypeValue, 8)
CACHE_PROXY = typing___cast(IpRoutingTypeValue, 9)
INTERNATIONAL_PROXY = typing___cast(IpRoutingTypeValue, 10)
REGIONAL_PROXY = typing___cast(IpRoutingTypeValue, 11)
MOBILE_GATEWAY = typing___cast(IpRoutingTypeValue, 12)
type___IpRoutingType = IpRoutingType

ConnectionTypeValue = typing___NewType('ConnectionTypeValue', builtin___int)
type___ConnectionTypeValue = ConnectionTypeValue
ConnectionType: _ConnectionType
class _ConnectionType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ConnectionTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    OCX = typing___cast(ConnectionTypeValue, 1)
    TX = typing___cast(ConnectionTypeValue, 2)
    CONSUMER_SATELLITE = typing___cast(ConnectionTypeValue, 3)
    FRAMERELAY = typing___cast(ConnectionTypeValue, 4)
    DSL = typing___cast(ConnectionTypeValue, 5)
    CABLE = typing___cast(ConnectionTypeValue, 6)
    ISDN = typing___cast(ConnectionTypeValue, 7)
    DIALUP = typing___cast(ConnectionTypeValue, 8)
    FIXED_WIRELESS = typing___cast(ConnectionTypeValue, 9)
    MOBILE_WIRELESS = typing___cast(ConnectionTypeValue, 10)
    UNKNOWN_LOW = typing___cast(ConnectionTypeValue, 11)
    UNKNOWN_MEDIUM = typing___cast(ConnectionTypeValue, 12)
    UNKNOWN_HIGH = typing___cast(ConnectionTypeValue, 13)
OCX = typing___cast(ConnectionTypeValue, 1)
TX = typing___cast(ConnectionTypeValue, 2)
CONSUMER_SATELLITE = typing___cast(ConnectionTypeValue, 3)
FRAMERELAY = typing___cast(ConnectionTypeValue, 4)
DSL = typing___cast(ConnectionTypeValue, 5)
CABLE = typing___cast(ConnectionTypeValue, 6)
ISDN = typing___cast(ConnectionTypeValue, 7)
DIALUP = typing___cast(ConnectionTypeValue, 8)
FIXED_WIRELESS = typing___cast(ConnectionTypeValue, 9)
MOBILE_WIRELESS = typing___cast(ConnectionTypeValue, 10)
UNKNOWN_LOW = typing___cast(ConnectionTypeValue, 11)
UNKNOWN_MEDIUM = typing___cast(ConnectionTypeValue, 12)
UNKNOWN_HIGH = typing___cast(ConnectionTypeValue, 13)
type___ConnectionType = ConnectionType

LineSpeedValue = typing___NewType('LineSpeedValue', builtin___int)
type___LineSpeedValue = LineSpeedValue
LineSpeed: _LineSpeed
class _LineSpeed(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LineSpeedValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    HIGH = typing___cast(LineSpeedValue, 1)
    MEDIUM = typing___cast(LineSpeedValue, 2)
    LOW = typing___cast(LineSpeedValue, 3)
HIGH = typing___cast(LineSpeedValue, 1)
MEDIUM = typing___cast(LineSpeedValue, 2)
LOW = typing___cast(LineSpeedValue, 3)
type___LineSpeed = LineSpeed

AnonymizerStatusValue = typing___NewType('AnonymizerStatusValue', builtin___int)
type___AnonymizerStatusValue = AnonymizerStatusValue
AnonymizerStatus: _AnonymizerStatus
class _AnonymizerStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AnonymizerStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ACTIVE = typing___cast(AnonymizerStatusValue, 1)
    SUSPECT = typing___cast(AnonymizerStatusValue, 2)
    INACTIVE = typing___cast(AnonymizerStatusValue, 3)
    PRIVATE = typing___cast(AnonymizerStatusValue, 4)
ACTIVE = typing___cast(AnonymizerStatusValue, 1)
SUSPECT = typing___cast(AnonymizerStatusValue, 2)
INACTIVE = typing___cast(AnonymizerStatusValue, 3)
PRIVATE = typing___cast(AnonymizerStatusValue, 4)
type___AnonymizerStatus = AnonymizerStatus

ProxyLevelValue = typing___NewType('ProxyLevelValue', builtin___int)
type___ProxyLevelValue = ProxyLevelValue
ProxyLevel: _ProxyLevel
class _ProxyLevel(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ProxyLevelValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ANONYMOUS = typing___cast(ProxyLevelValue, 1)
    DISTORTING = typing___cast(ProxyLevelValue, 2)
    ELITE = typing___cast(ProxyLevelValue, 3)
    TRANSPARENT = typing___cast(ProxyLevelValue, 4)
ANONYMOUS = typing___cast(ProxyLevelValue, 1)
DISTORTING = typing___cast(ProxyLevelValue, 2)
ELITE = typing___cast(ProxyLevelValue, 3)
TRANSPARENT = typing___cast(ProxyLevelValue, 4)
type___ProxyLevel = ProxyLevel

ProxyTypeValue = typing___NewType('ProxyTypeValue', builtin___int)
type___ProxyTypeValue = ProxyTypeValue
ProxyType: _ProxyType
class _ProxyType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ProxyTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    HTTP = typing___cast(ProxyTypeValue, 1)
    SERVICE = typing___cast(ProxyTypeValue, 2)
    SOCKS = typing___cast(ProxyTypeValue, 3)
    SOCKS_HTTP = typing___cast(ProxyTypeValue, 4)
    TOR = typing___cast(ProxyTypeValue, 5)
    UNKNOWN = typing___cast(ProxyTypeValue, 6)
    WEB = typing___cast(ProxyTypeValue, 7)
HTTP = typing___cast(ProxyTypeValue, 1)
SERVICE = typing___cast(ProxyTypeValue, 2)
SOCKS = typing___cast(ProxyTypeValue, 3)
SOCKS_HTTP = typing___cast(ProxyTypeValue, 4)
TOR = typing___cast(ProxyTypeValue, 5)
UNKNOWN = typing___cast(ProxyTypeValue, 6)
WEB = typing___cast(ProxyTypeValue, 7)
type___ProxyType = ProxyType

class NeustarIpRangeInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    start_ip_int: builtin___int = ...
    end_ip_int: builtin___int = ...
    start_ip_oct: typing___Text = ...
    end_ip_oct: typing___Text = ...
    continent: type___ContinentValue = ...
    country: typing___Text = ...
    country_code: squareup___common___countries_pb2___CountryValue = ...
    country_cf: builtin___int = ...
    region: typing___Text = ...
    state: typing___Text = ...
    state_code: typing___Text = ...
    state_cf: builtin___int = ...
    city: typing___Text = ...
    city_cf: builtin___int = ...
    postal_code: typing___Text = ...
    postal_code_cf: builtin___int = ...
    area_code: typing___Text = ...
    time_zone: builtin___float = ...
    latitude: builtin___float = ...
    longitude: builtin___float = ...
    dma: typing___Text = ...
    msa: typing___Text = ...
    connection_type: type___ConnectionTypeValue = ...
    line_speed: type___LineSpeedValue = ...
    ip_routing_type: type___IpRoutingTypeValue = ...
    asn: builtin___int = ...
    sld: typing___Text = ...
    tld: typing___Text = ...
    organization: typing___Text = ...
    carrier: typing___Text = ...
    anonymizer_status: type___AnonymizerStatusValue = ...
    home: builtin___bool = ...
    organization_type: typing___Text = ...
    naics_code: builtin___int = ...
    isic_code: typing___Text = ...
    geonames_id: builtin___int = ...
    state_ref_id: builtin___int = ...
    region_ref_id: builtin___int = ...
    city_ref_id: builtin___int = ...
    proxy_type: type___ProxyTypeValue = ...
    proxy_level: type___ProxyLevelValue = ...
    proxy_last_detected: typing___Text = ...
    hosting_facility: builtin___bool = ...
    consistency_code: builtin___int = ...
    radius: builtin___float = ...

    def __init__(self,
        *,
        start_ip_int : typing___Optional[builtin___int] = None,
        end_ip_int : typing___Optional[builtin___int] = None,
        start_ip_oct : typing___Optional[typing___Text] = None,
        end_ip_oct : typing___Optional[typing___Text] = None,
        continent : typing___Optional[type___ContinentValue] = None,
        country : typing___Optional[typing___Text] = None,
        country_code : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        country_cf : typing___Optional[builtin___int] = None,
        region : typing___Optional[typing___Text] = None,
        state : typing___Optional[typing___Text] = None,
        state_code : typing___Optional[typing___Text] = None,
        state_cf : typing___Optional[builtin___int] = None,
        city : typing___Optional[typing___Text] = None,
        city_cf : typing___Optional[builtin___int] = None,
        postal_code : typing___Optional[typing___Text] = None,
        postal_code_cf : typing___Optional[builtin___int] = None,
        area_code : typing___Optional[typing___Text] = None,
        time_zone : typing___Optional[builtin___float] = None,
        latitude : typing___Optional[builtin___float] = None,
        longitude : typing___Optional[builtin___float] = None,
        dma : typing___Optional[typing___Text] = None,
        msa : typing___Optional[typing___Text] = None,
        connection_type : typing___Optional[type___ConnectionTypeValue] = None,
        line_speed : typing___Optional[type___LineSpeedValue] = None,
        ip_routing_type : typing___Optional[type___IpRoutingTypeValue] = None,
        asn : typing___Optional[builtin___int] = None,
        sld : typing___Optional[typing___Text] = None,
        tld : typing___Optional[typing___Text] = None,
        organization : typing___Optional[typing___Text] = None,
        carrier : typing___Optional[typing___Text] = None,
        anonymizer_status : typing___Optional[type___AnonymizerStatusValue] = None,
        home : typing___Optional[builtin___bool] = None,
        organization_type : typing___Optional[typing___Text] = None,
        naics_code : typing___Optional[builtin___int] = None,
        isic_code : typing___Optional[typing___Text] = None,
        geonames_id : typing___Optional[builtin___int] = None,
        state_ref_id : typing___Optional[builtin___int] = None,
        region_ref_id : typing___Optional[builtin___int] = None,
        city_ref_id : typing___Optional[builtin___int] = None,
        proxy_type : typing___Optional[type___ProxyTypeValue] = None,
        proxy_level : typing___Optional[type___ProxyLevelValue] = None,
        proxy_last_detected : typing___Optional[typing___Text] = None,
        hosting_facility : typing___Optional[builtin___bool] = None,
        consistency_code : typing___Optional[builtin___int] = None,
        radius : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"anonymizer_status",b"anonymizer_status",u"area_code",b"area_code",u"asn",b"asn",u"carrier",b"carrier",u"city",b"city",u"city_cf",b"city_cf",u"city_ref_id",b"city_ref_id",u"connection_type",b"connection_type",u"consistency_code",b"consistency_code",u"continent",b"continent",u"country",b"country",u"country_cf",b"country_cf",u"country_code",b"country_code",u"dma",b"dma",u"end_ip_int",b"end_ip_int",u"end_ip_oct",b"end_ip_oct",u"geonames_id",b"geonames_id",u"home",b"home",u"hosting_facility",b"hosting_facility",u"ip_routing_type",b"ip_routing_type",u"isic_code",b"isic_code",u"latitude",b"latitude",u"line_speed",b"line_speed",u"longitude",b"longitude",u"msa",b"msa",u"naics_code",b"naics_code",u"organization",b"organization",u"organization_type",b"organization_type",u"postal_code",b"postal_code",u"postal_code_cf",b"postal_code_cf",u"proxy_last_detected",b"proxy_last_detected",u"proxy_level",b"proxy_level",u"proxy_type",b"proxy_type",u"radius",b"radius",u"region",b"region",u"region_ref_id",b"region_ref_id",u"sld",b"sld",u"start_ip_int",b"start_ip_int",u"start_ip_oct",b"start_ip_oct",u"state",b"state",u"state_cf",b"state_cf",u"state_code",b"state_code",u"state_ref_id",b"state_ref_id",u"time_zone",b"time_zone",u"tld",b"tld"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"anonymizer_status",b"anonymizer_status",u"area_code",b"area_code",u"asn",b"asn",u"carrier",b"carrier",u"city",b"city",u"city_cf",b"city_cf",u"city_ref_id",b"city_ref_id",u"connection_type",b"connection_type",u"consistency_code",b"consistency_code",u"continent",b"continent",u"country",b"country",u"country_cf",b"country_cf",u"country_code",b"country_code",u"dma",b"dma",u"end_ip_int",b"end_ip_int",u"end_ip_oct",b"end_ip_oct",u"geonames_id",b"geonames_id",u"home",b"home",u"hosting_facility",b"hosting_facility",u"ip_routing_type",b"ip_routing_type",u"isic_code",b"isic_code",u"latitude",b"latitude",u"line_speed",b"line_speed",u"longitude",b"longitude",u"msa",b"msa",u"naics_code",b"naics_code",u"organization",b"organization",u"organization_type",b"organization_type",u"postal_code",b"postal_code",u"postal_code_cf",b"postal_code_cf",u"proxy_last_detected",b"proxy_last_detected",u"proxy_level",b"proxy_level",u"proxy_type",b"proxy_type",u"radius",b"radius",u"region",b"region",u"region_ref_id",b"region_ref_id",u"sld",b"sld",u"start_ip_int",b"start_ip_int",u"start_ip_oct",b"start_ip_oct",u"state",b"state",u"state_cf",b"state_cf",u"state_code",b"state_code",u"state_ref_id",b"state_ref_id",u"time_zone",b"time_zone",u"tld",b"tld"]) -> None: ...
type___NeustarIpRangeInfo = NeustarIpRangeInfo

class NeustarIpInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ip: typing___Text = ...

    @property
    def range_info(self) -> type___NeustarIpRangeInfo: ...

    def __init__(self,
        *,
        ip : typing___Optional[typing___Text] = None,
        range_info : typing___Optional[type___NeustarIpRangeInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ip",b"ip",u"range_info",b"range_info"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ip",b"ip",u"range_info",b"range_info"]) -> None: ...
type___NeustarIpInfo = NeustarIpInfo
