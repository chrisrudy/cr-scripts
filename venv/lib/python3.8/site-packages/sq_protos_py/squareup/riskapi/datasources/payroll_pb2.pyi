# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PayrollEmployerAccountUpdate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PayrollEmployerAccountUpdate.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE = typing___cast(PayrollEmployerAccountUpdate.EventTypeValue, 0)
        CREATE = typing___cast(PayrollEmployerAccountUpdate.EventTypeValue, 1)
        UPDATE = typing___cast(PayrollEmployerAccountUpdate.EventTypeValue, 2)
    DO_NOT_USE = typing___cast(PayrollEmployerAccountUpdate.EventTypeValue, 0)
    CREATE = typing___cast(PayrollEmployerAccountUpdate.EventTypeValue, 1)
    UPDATE = typing___cast(PayrollEmployerAccountUpdate.EventTypeValue, 2)
    type___EventType = EventType

    EmployerPayCadenceValue = typing___NewType('EmployerPayCadenceValue', builtin___int)
    type___EmployerPayCadenceValue = EmployerPayCadenceValue
    EmployerPayCadence: _EmployerPayCadence
    class _EmployerPayCadence(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PayrollEmployerAccountUpdate.EmployerPayCadenceValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        BIWEEKLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 1)
        MONTHLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 2)
        SEMIMONTHLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 3)
        WEEKLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 4)
    BIWEEKLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 1)
    MONTHLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 2)
    SEMIMONTHLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 3)
    WEEKLY = typing___cast(PayrollEmployerAccountUpdate.EmployerPayCadenceValue, 4)
    type___EmployerPayCadence = EmployerPayCadence

    event_type: type___PayrollEmployerAccountUpdate.EventTypeValue = ...
    merchant_token: typing___Text = ...
    visible_name: typing___Text = ...
    merchant_ein: typing___Text = ...
    merchant_ein_verified: builtin___bool = ...
    phone: typing___Text = ...
    has_two_factor_enabled: builtin___bool = ...
    ip_address: typing___Text = ...
    employer_is_contractor_only: builtin___bool = ...
    employer_number_of_employees: builtin___int = ...
    employer_pay_cadence: type___PayrollEmployerAccountUpdate.EmployerPayCadenceValue = ...
    employer_payroll_bank_fidelius_token: typing___Text = ...
    employer_payroll_gringotts_token: typing___Text = ...

    @property
    def employer_created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def employer_next_pay_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def employer_updated_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        event_type : typing___Optional[type___PayrollEmployerAccountUpdate.EventTypeValue] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        visible_name : typing___Optional[typing___Text] = None,
        merchant_ein : typing___Optional[typing___Text] = None,
        merchant_ein_verified : typing___Optional[builtin___bool] = None,
        phone : typing___Optional[typing___Text] = None,
        employer_created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        has_two_factor_enabled : typing___Optional[builtin___bool] = None,
        ip_address : typing___Optional[typing___Text] = None,
        employer_is_contractor_only : typing___Optional[builtin___bool] = None,
        employer_number_of_employees : typing___Optional[builtin___int] = None,
        employer_pay_cadence : typing___Optional[type___PayrollEmployerAccountUpdate.EmployerPayCadenceValue] = None,
        employer_next_pay_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        employer_payroll_bank_fidelius_token : typing___Optional[typing___Text] = None,
        employer_payroll_gringotts_token : typing___Optional[typing___Text] = None,
        employer_updated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"employer_created_at",b"employer_created_at",u"employer_is_contractor_only",b"employer_is_contractor_only",u"employer_next_pay_date",b"employer_next_pay_date",u"employer_number_of_employees",b"employer_number_of_employees",u"employer_pay_cadence",b"employer_pay_cadence",u"employer_payroll_bank_fidelius_token",b"employer_payroll_bank_fidelius_token",u"employer_payroll_gringotts_token",b"employer_payroll_gringotts_token",u"employer_updated_at",b"employer_updated_at",u"event_type",b"event_type",u"has_two_factor_enabled",b"has_two_factor_enabled",u"ip_address",b"ip_address",u"merchant_ein",b"merchant_ein",u"merchant_ein_verified",b"merchant_ein_verified",u"merchant_token",b"merchant_token",u"phone",b"phone",u"visible_name",b"visible_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"employer_created_at",b"employer_created_at",u"employer_is_contractor_only",b"employer_is_contractor_only",u"employer_next_pay_date",b"employer_next_pay_date",u"employer_number_of_employees",b"employer_number_of_employees",u"employer_pay_cadence",b"employer_pay_cadence",u"employer_payroll_bank_fidelius_token",b"employer_payroll_bank_fidelius_token",u"employer_payroll_gringotts_token",b"employer_payroll_gringotts_token",u"employer_updated_at",b"employer_updated_at",u"event_type",b"event_type",u"has_two_factor_enabled",b"has_two_factor_enabled",u"ip_address",b"ip_address",u"merchant_ein",b"merchant_ein",u"merchant_ein_verified",b"merchant_ein_verified",u"merchant_token",b"merchant_token",u"phone",b"phone",u"visible_name",b"visible_name"]) -> None: ...
type___PayrollEmployerAccountUpdate = PayrollEmployerAccountUpdate
