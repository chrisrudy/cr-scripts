# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.client.paper_signature import service_pb2 as squareup_dot_client_dot_paper__signature_dot_service__pb2


class PaperSignatureListingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTendersAwaitingMerchantTip = channel.unary_unary(
                '/squareup.client.paper_signature.PaperSignatureListingService/ListTendersAwaitingMerchantTip',
                request_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.ListTendersAwaitingMerchantTipRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.ListTendersAwaitingMerchantTipResponse.FromString,
                )
        self.CountTendersAwaitingMerchantTip = channel.unary_unary(
                '/squareup.client.paper_signature.PaperSignatureListingService/CountTendersAwaitingMerchantTip',
                request_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.CountTendersAwaitingMerchantTipRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.CountTendersAwaitingMerchantTipResponse.FromString,
                )


class PaperSignatureListingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListTendersAwaitingMerchantTip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CountTendersAwaitingMerchantTip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaperSignatureListingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTendersAwaitingMerchantTip': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTendersAwaitingMerchantTip,
                    request_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.ListTendersAwaitingMerchantTipRequest.FromString,
                    response_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.ListTendersAwaitingMerchantTipResponse.SerializeToString,
            ),
            'CountTendersAwaitingMerchantTip': grpc.unary_unary_rpc_method_handler(
                    servicer.CountTendersAwaitingMerchantTip,
                    request_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.CountTendersAwaitingMerchantTipRequest.FromString,
                    response_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.CountTendersAwaitingMerchantTipResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.client.paper_signature.PaperSignatureListingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaperSignatureListingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListTendersAwaitingMerchantTip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.paper_signature.PaperSignatureListingService/ListTendersAwaitingMerchantTip',
            squareup_dot_client_dot_paper__signature_dot_service__pb2.ListTendersAwaitingMerchantTipRequest.SerializeToString,
            squareup_dot_client_dot_paper__signature_dot_service__pb2.ListTendersAwaitingMerchantTipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CountTendersAwaitingMerchantTip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.paper_signature.PaperSignatureListingService/CountTendersAwaitingMerchantTip',
            squareup_dot_client_dot_paper__signature_dot_service__pb2.CountTendersAwaitingMerchantTipRequest.SerializeToString,
            squareup_dot_client_dot_paper__signature_dot_service__pb2.CountTendersAwaitingMerchantTipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PaperSignatureBatchServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitTipBatch = channel.unary_unary(
                '/squareup.client.paper_signature.PaperSignatureBatchService/SubmitTipBatch',
                request_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipBatchResponse.FromString,
                )
        self.SubmitTipAndSettleBatch = channel.unary_unary(
                '/squareup.client.paper_signature.PaperSignatureBatchService/SubmitTipAndSettleBatch',
                request_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipAndSettleBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipAndSettleBatchResponse.FromString,
                )
        self.TenderStatus = channel.unary_unary(
                '/squareup.client.paper_signature.PaperSignatureBatchService/TenderStatus',
                request_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.TenderStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.TenderStatusResponse.FromString,
                )


class PaperSignatureBatchServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitTipBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitTipAndSettleBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TenderStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaperSignatureBatchServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitTipBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitTipBatch,
                    request_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipBatchRequest.FromString,
                    response_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipBatchResponse.SerializeToString,
            ),
            'SubmitTipAndSettleBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitTipAndSettleBatch,
                    request_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipAndSettleBatchRequest.FromString,
                    response_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipAndSettleBatchResponse.SerializeToString,
            ),
            'TenderStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.TenderStatus,
                    request_deserializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.TenderStatusRequest.FromString,
                    response_serializer=squareup_dot_client_dot_paper__signature_dot_service__pb2.TenderStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.client.paper_signature.PaperSignatureBatchService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaperSignatureBatchService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitTipBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.paper_signature.PaperSignatureBatchService/SubmitTipBatch',
            squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipBatchRequest.SerializeToString,
            squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitTipAndSettleBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.paper_signature.PaperSignatureBatchService/SubmitTipAndSettleBatch',
            squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipAndSettleBatchRequest.SerializeToString,
            squareup_dot_client_dot_paper__signature_dot_service__pb2.SubmitTipAndSettleBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TenderStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.paper_signature.PaperSignatureBatchService/TenderStatus',
            squareup_dot_client_dot_paper__signature_dot_service__pb2.TenderStatusRequest.SerializeToString,
            squareup_dot_client_dot_paper__signature_dot_service__pb2.TenderStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
