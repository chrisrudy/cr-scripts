# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.client.flipper import flipper_pb2 as squareup_dot_client_dot_flipper_dot_flipper__pb2


class FlipperServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ValidateSession = channel.unary_unary(
                '/squareup.client.flipper.FlipperService/ValidateSession',
                request_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.ValidateSessionRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.ValidateSessionResponse.FromString,
                )
        self.GetTicket = channel.unary_unary(
                '/squareup.client.flipper.FlipperService/GetTicket',
                request_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.GetTicketRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.GetTicketResponse.FromString,
                )
        self.SafetyNetStartAttestation = channel.unary_unary(
                '/squareup.client.flipper.FlipperService/SafetyNetStartAttestation',
                request_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetStartAttestationRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetStartAttestationResponse.FromString,
                )
        self.SafetyNetValidateAttestation = channel.unary_unary(
                '/squareup.client.flipper.FlipperService/SafetyNetValidateAttestation',
                request_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetValidateAttestationRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetValidateAttestationResponse.FromString,
                )


class FlipperServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ValidateSession(self, request, context):
        """*
        Ask Flipper to validate a secure session between Register and a smart
        reader (e.g., R6, R12).

        For clients that support tickets: before calling this endpoint, the client
        should have a recent (non-expired) ticket.  If it doesn't, it needs to
        obtain one from the GetTicket endpoint first.

        This operation is NOT idempotent due to the session decoding/encoding steps.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTicket(self, request, context):
        """*
        Ask Flipper for a ticket.  The request includes a Minesweeper frame
        containing results of checks; the response may contain another frame with
        more checks to run, a ticket, or both.

        If the response contains a frame, the client should pass the frame to
        Minesweeper, produce a new frame, and follow up with another
        GetTicketRequest.  If the response contains no frame, the client does not
        need to follow up.

        If the response contains a ticket, the client should save the ticket for
        use with the ValidateSession endpoint.  Only the most recent ticket needs
        to be saved.

        At least one of the frame or ticket will be present, so the last response
        will always contain a ticket.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SafetyNetStartAttestation(self, request, context):
        """*
        Request that the server starts a SafetyNet attestation.
        The response includes a nonce that is to be used by the client.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SafetyNetValidateAttestation(self, request, context):
        """*
        Validate a SafetyNet attestation received from a client running our SafetyNet wrapper.
        This is a client-to-service call. There is a separate server-to-server rpc to validate the
        attestation that can be hit by the internal services. The separation exists so that
        we can provide full details to the internal service while being able to provide the client
        with a PASSED, FAILED, UPDATE_GMS status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FlipperServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ValidateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateSession,
                    request_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.ValidateSessionRequest.FromString,
                    response_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.ValidateSessionResponse.SerializeToString,
            ),
            'GetTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTicket,
                    request_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.GetTicketRequest.FromString,
                    response_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.GetTicketResponse.SerializeToString,
            ),
            'SafetyNetStartAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.SafetyNetStartAttestation,
                    request_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetStartAttestationRequest.FromString,
                    response_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetStartAttestationResponse.SerializeToString,
            ),
            'SafetyNetValidateAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.SafetyNetValidateAttestation,
                    request_deserializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetValidateAttestationRequest.FromString,
                    response_serializer=squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetValidateAttestationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.client.flipper.FlipperService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FlipperService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ValidateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.flipper.FlipperService/ValidateSession',
            squareup_dot_client_dot_flipper_dot_flipper__pb2.ValidateSessionRequest.SerializeToString,
            squareup_dot_client_dot_flipper_dot_flipper__pb2.ValidateSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.flipper.FlipperService/GetTicket',
            squareup_dot_client_dot_flipper_dot_flipper__pb2.GetTicketRequest.SerializeToString,
            squareup_dot_client_dot_flipper_dot_flipper__pb2.GetTicketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SafetyNetStartAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.flipper.FlipperService/SafetyNetStartAttestation',
            squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetStartAttestationRequest.SerializeToString,
            squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetStartAttestationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SafetyNetValidateAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.flipper.FlipperService/SafetyNetValidateAttestation',
            squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetValidateAttestationRequest.SerializeToString,
            squareup_dot_client_dot_flipper_dot_flipper__pb2.SafetyNetValidateAttestationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
