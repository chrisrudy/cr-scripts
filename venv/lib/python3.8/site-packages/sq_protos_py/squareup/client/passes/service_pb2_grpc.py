# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.client.passes import service_pb2 as squareup_dot_client_dot_passes_dot_service__pb2


class PassesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePersonalizableUrl = channel.unary_unary(
                '/squareup.client.passes.PassesService/CreatePersonalizableUrl',
                request_serializer=squareup_dot_client_dot_passes_dot_service__pb2.CreatePersonalizableUrlRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_passes_dot_service__pb2.CreatePersonalizableUrlResponse.FromString,
                )
        self.RegisterPersonalizableUrl = channel.unary_unary(
                '/squareup.client.passes.PassesService/RegisterPersonalizableUrl',
                request_serializer=squareup_dot_client_dot_passes_dot_service__pb2.RegisterPersonalizableUrlRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_passes_dot_service__pb2.RegisterPersonalizableUrlResponse.FromString,
                )
        self.DecryptLoyaltyPass = channel.unary_unary(
                '/squareup.client.passes.PassesService/DecryptLoyaltyPass',
                request_serializer=squareup_dot_client_dot_passes_dot_service__pb2.DecryptLoyaltyPassRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_passes_dot_service__pb2.DecryptLoyaltyPassResponse.FromString,
                )


class PassesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePersonalizableUrl(self, request, context):
        """*
        Create personalizable urls for the for the client to push to a phone
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterPersonalizableUrl(self, request, context):
        """*
        Associates the personalizable url's unique token to a bill server token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecryptLoyaltyPass(self, request, context):
        """*
        Decrypts the payload sent from the Apple pass and returns loyalty information for the buyer
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PassesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePersonalizableUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePersonalizableUrl,
                    request_deserializer=squareup_dot_client_dot_passes_dot_service__pb2.CreatePersonalizableUrlRequest.FromString,
                    response_serializer=squareup_dot_client_dot_passes_dot_service__pb2.CreatePersonalizableUrlResponse.SerializeToString,
            ),
            'RegisterPersonalizableUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterPersonalizableUrl,
                    request_deserializer=squareup_dot_client_dot_passes_dot_service__pb2.RegisterPersonalizableUrlRequest.FromString,
                    response_serializer=squareup_dot_client_dot_passes_dot_service__pb2.RegisterPersonalizableUrlResponse.SerializeToString,
            ),
            'DecryptLoyaltyPass': grpc.unary_unary_rpc_method_handler(
                    servicer.DecryptLoyaltyPass,
                    request_deserializer=squareup_dot_client_dot_passes_dot_service__pb2.DecryptLoyaltyPassRequest.FromString,
                    response_serializer=squareup_dot_client_dot_passes_dot_service__pb2.DecryptLoyaltyPassResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.client.passes.PassesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PassesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePersonalizableUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.passes.PassesService/CreatePersonalizableUrl',
            squareup_dot_client_dot_passes_dot_service__pb2.CreatePersonalizableUrlRequest.SerializeToString,
            squareup_dot_client_dot_passes_dot_service__pb2.CreatePersonalizableUrlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterPersonalizableUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.passes.PassesService/RegisterPersonalizableUrl',
            squareup_dot_client_dot_passes_dot_service__pb2.RegisterPersonalizableUrlRequest.SerializeToString,
            squareup_dot_client_dot_passes_dot_service__pb2.RegisterPersonalizableUrlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecryptLoyaltyPass(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.passes.PassesService/DecryptLoyaltyPass',
            squareup_dot_client_dot_passes_dot_service__pb2.DecryptLoyaltyPassRequest.SerializeToString,
            squareup_dot_client_dot_passes_dot_service__pb2.DecryptLoyaltyPassResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
