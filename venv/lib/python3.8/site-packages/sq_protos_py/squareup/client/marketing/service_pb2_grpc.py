# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.client.marketing import service_pb2 as squareup_dot_client_dot_marketing_dot_service__pb2


class MarketingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeliverCampaign = channel.unary_unary(
                '/squareup.client.marketing.MarketingService/DeliverCampaign',
                request_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.DeliverCampaignRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.DeliverCampaignResponse.FromString,
                )
        self.CreateCampaign = channel.unary_unary(
                '/squareup.client.marketing.MarketingService/CreateCampaign',
                request_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.CreateCampaignRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.CreateCampaignResponse.FromString,
                )
        self.UpdateCampaign = channel.unary_unary(
                '/squareup.client.marketing.MarketingService/UpdateCampaign',
                request_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.UpdateCampaignRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.UpdateCampaignResponse.FromString,
                )
        self.ListCampaigns = channel.unary_unary(
                '/squareup.client.marketing.MarketingService/ListCampaigns',
                request_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListCampaignsRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListCampaignsResponse.FromString,
                )
        self.SendCampaign = channel.unary_unary(
                '/squareup.client.marketing.MarketingService/SendCampaign',
                request_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.SendCampaignRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.SendCampaignResponse.FromString,
                )
        self.ListAudiences = channel.unary_unary(
                '/squareup.client.marketing.MarketingService/ListAudiences',
                request_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListAudiencesRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListAudiencesResponse.FromString,
                )


class MarketingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeliverCampaign(self, request, context):
        """*
        Trigger a campaign to be sent out to buyers
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCampaign(self, request, context):
        """*
        Create a new marketing campaign.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCampaign(self, request, context):
        """*
        Update an existing marketing campaign.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCampaigns(self, request, context):
        """*
        List all existing marketing campaigns.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendCampaign(self, request, context):
        """*
        Send marketing campaign emails to audiences.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAudiences(self, request, context):
        """*
        List all seller audiences.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeliverCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.DeliverCampaign,
                    request_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.DeliverCampaignRequest.FromString,
                    response_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.DeliverCampaignResponse.SerializeToString,
            ),
            'CreateCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCampaign,
                    request_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.CreateCampaignRequest.FromString,
                    response_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.CreateCampaignResponse.SerializeToString,
            ),
            'UpdateCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCampaign,
                    request_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.UpdateCampaignRequest.FromString,
                    response_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.UpdateCampaignResponse.SerializeToString,
            ),
            'ListCampaigns': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCampaigns,
                    request_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListCampaignsRequest.FromString,
                    response_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListCampaignsResponse.SerializeToString,
            ),
            'SendCampaign': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCampaign,
                    request_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.SendCampaignRequest.FromString,
                    response_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.SendCampaignResponse.SerializeToString,
            ),
            'ListAudiences': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAudiences,
                    request_deserializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListAudiencesRequest.FromString,
                    response_serializer=squareup_dot_client_dot_marketing_dot_service__pb2.ListAudiencesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.client.marketing.MarketingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeliverCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.marketing.MarketingService/DeliverCampaign',
            squareup_dot_client_dot_marketing_dot_service__pb2.DeliverCampaignRequest.SerializeToString,
            squareup_dot_client_dot_marketing_dot_service__pb2.DeliverCampaignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.marketing.MarketingService/CreateCampaign',
            squareup_dot_client_dot_marketing_dot_service__pb2.CreateCampaignRequest.SerializeToString,
            squareup_dot_client_dot_marketing_dot_service__pb2.CreateCampaignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.marketing.MarketingService/UpdateCampaign',
            squareup_dot_client_dot_marketing_dot_service__pb2.UpdateCampaignRequest.SerializeToString,
            squareup_dot_client_dot_marketing_dot_service__pb2.UpdateCampaignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCampaigns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.marketing.MarketingService/ListCampaigns',
            squareup_dot_client_dot_marketing_dot_service__pb2.ListCampaignsRequest.SerializeToString,
            squareup_dot_client_dot_marketing_dot_service__pb2.ListCampaignsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendCampaign(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.marketing.MarketingService/SendCampaign',
            squareup_dot_client_dot_marketing_dot_service__pb2.SendCampaignRequest.SerializeToString,
            squareup_dot_client_dot_marketing_dot_service__pb2.SendCampaignResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAudiences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.marketing.MarketingService/ListAudiences',
            squareup_dot_client_dot_marketing_dot_service__pb2.ListAudiencesRequest.SerializeToString,
            squareup_dot_client_dot_marketing_dot_service__pb2.ListAudiencesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
