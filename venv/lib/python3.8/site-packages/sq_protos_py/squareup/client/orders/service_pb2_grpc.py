# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.client.orders import service_pb2 as squareup_dot_client_dot_orders_dot_service__pb2


class OrderServiceStub(object):
    """
    The orders service defines a set of client endpoints for viewing and updating orders.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PerformFulfillmentAction = channel.unary_unary(
                '/squareup.client.orders.OrderService/PerformFulfillmentAction',
                request_serializer=squareup_dot_client_dot_orders_dot_service__pb2.PerformFulfillmentActionRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.PerformFulfillmentActionResponse.FromString,
                )
        self.SearchOrders = channel.unary_unary(
                '/squareup.client.orders.OrderService/SearchOrders',
                request_serializer=squareup_dot_client_dot_orders_dot_service__pb2.SearchOrdersRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.SearchOrdersResponse.FromString,
                )
        self.GetOrder = channel.unary_unary(
                '/squareup.client.orders.OrderService/GetOrder',
                request_serializer=squareup_dot_client_dot_orders_dot_service__pb2.GetOrderRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.GetOrderResponse.FromString,
                )
        self.GetFilters = channel.unary_unary(
                '/squareup.client.orders.OrderService/GetFilters',
                request_serializer=squareup_dot_client_dot_orders_dot_service__pb2.GetFiltersRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.GetFiltersResponse.FromString,
                )
        self.UpdateOrder = channel.unary_unary(
                '/squareup.client.orders.OrderService/UpdateOrder',
                request_serializer=squareup_dot_client_dot_orders_dot_service__pb2.UpdateOrderRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.UpdateOrderResponse.FromString,
                )
        self.GetActiveOrderCount = channel.unary_unary(
                '/squareup.client.orders.OrderService/GetActiveOrderCount',
                request_serializer=squareup_dot_client_dot_orders_dot_service__pb2.GetActiveOrderCountRequest.SerializeToString,
                response_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.GetActiveOrderCountResponse.FromString,
                )


class OrderServiceServicer(object):
    """
    The orders service defines a set of client endpoints for viewing and updating orders.
    """

    def PerformFulfillmentAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchOrders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveOrderCount(self, request, context):
        """
        Endpoint to get active order count as per Dashboard Navigation spec.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PerformFulfillmentAction': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformFulfillmentAction,
                    request_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.PerformFulfillmentActionRequest.FromString,
                    response_serializer=squareup_dot_client_dot_orders_dot_service__pb2.PerformFulfillmentActionResponse.SerializeToString,
            ),
            'SearchOrders': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchOrders,
                    request_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.SearchOrdersRequest.FromString,
                    response_serializer=squareup_dot_client_dot_orders_dot_service__pb2.SearchOrdersResponse.SerializeToString,
            ),
            'GetOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrder,
                    request_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.GetOrderRequest.FromString,
                    response_serializer=squareup_dot_client_dot_orders_dot_service__pb2.GetOrderResponse.SerializeToString,
            ),
            'GetFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilters,
                    request_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.GetFiltersRequest.FromString,
                    response_serializer=squareup_dot_client_dot_orders_dot_service__pb2.GetFiltersResponse.SerializeToString,
            ),
            'UpdateOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOrder,
                    request_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.UpdateOrderRequest.FromString,
                    response_serializer=squareup_dot_client_dot_orders_dot_service__pb2.UpdateOrderResponse.SerializeToString,
            ),
            'GetActiveOrderCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveOrderCount,
                    request_deserializer=squareup_dot_client_dot_orders_dot_service__pb2.GetActiveOrderCountRequest.FromString,
                    response_serializer=squareup_dot_client_dot_orders_dot_service__pb2.GetActiveOrderCountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.client.orders.OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """
    The orders service defines a set of client endpoints for viewing and updating orders.
    """

    @staticmethod
    def PerformFulfillmentAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.orders.OrderService/PerformFulfillmentAction',
            squareup_dot_client_dot_orders_dot_service__pb2.PerformFulfillmentActionRequest.SerializeToString,
            squareup_dot_client_dot_orders_dot_service__pb2.PerformFulfillmentActionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchOrders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.orders.OrderService/SearchOrders',
            squareup_dot_client_dot_orders_dot_service__pb2.SearchOrdersRequest.SerializeToString,
            squareup_dot_client_dot_orders_dot_service__pb2.SearchOrdersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.orders.OrderService/GetOrder',
            squareup_dot_client_dot_orders_dot_service__pb2.GetOrderRequest.SerializeToString,
            squareup_dot_client_dot_orders_dot_service__pb2.GetOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.orders.OrderService/GetFilters',
            squareup_dot_client_dot_orders_dot_service__pb2.GetFiltersRequest.SerializeToString,
            squareup_dot_client_dot_orders_dot_service__pb2.GetFiltersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.orders.OrderService/UpdateOrder',
            squareup_dot_client_dot_orders_dot_service__pb2.UpdateOrderRequest.SerializeToString,
            squareup_dot_client_dot_orders_dot_service__pb2.UpdateOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveOrderCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.client.orders.OrderService/GetActiveOrderCount',
            squareup_dot_client_dot_orders_dot_service__pb2.GetActiveOrderCountRequest.SerializeToString,
            squareup_dot_client_dot_orders_dot_service__pb2.GetActiveOrderCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
