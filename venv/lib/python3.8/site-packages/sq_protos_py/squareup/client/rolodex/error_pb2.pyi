# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Error(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CategoryValue = typing___NewType('CategoryValue', builtin___int)
    type___CategoryValue = CategoryValue
    Category: _Category
    class _Category(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Error.CategoryValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SUCCESS = typing___cast(Error.CategoryValue, 1)
    SUCCESS = typing___cast(Error.CategoryValue, 1)
    type___Category = Category

    CodeValue = typing___NewType('CodeValue', builtin___int)
    type___CodeValue = CodeValue
    Code: _Code
    class _Code(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Error.CodeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SUCCESS_CODE = typing___cast(Error.CodeValue, 1)
    SUCCESS_CODE = typing___cast(Error.CodeValue, 1)
    type___Code = Code

    category: type___Error.CategoryValue = ...
    code: type___Error.CodeValue = ...
    detail: typing___Text = ...
    field: typing___Text = ...

    def __init__(self,
        *,
        category : typing___Optional[type___Error.CategoryValue] = None,
        code : typing___Optional[type___Error.CodeValue] = None,
        detail : typing___Optional[typing___Text] = None,
        field : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"category",b"category",u"code",b"code",u"detail",b"detail",u"field",b"field"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"category",b"category",u"code",b"code",u"detail",b"detail",u"field",b"field"]) -> None: ...
type___Error = Error
