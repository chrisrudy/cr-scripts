# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.client.id_pair_pb2 import (
    IdPair as squareup___client___id_pair_pb2___IdPair,
)

from sq_protos_py.squareup.client.status_pb2 import (
    Status as squareup___client___status_pb2___Status,
)

from sq_protos_py.squareup.client.tickets.data_pb2 import (
    Ticket as squareup___client___tickets___data_pb2___Ticket,
    VectorClock as squareup___client___tickets___data_pb2___VectorClock,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class TicketInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def ticket_id_pair(self) -> squareup___client___id_pair_pb2___IdPair: ...

    @property
    def vector_clock(self) -> squareup___client___tickets___data_pb2___VectorClock: ...

    def __init__(self,
        *,
        ticket_id_pair : typing___Optional[squareup___client___id_pair_pb2___IdPair] = None,
        vector_clock : typing___Optional[squareup___client___tickets___data_pb2___VectorClock] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ticket_id_pair",b"ticket_id_pair",u"vector_clock",b"vector_clock"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ticket_id_pair",b"ticket_id_pair",u"vector_clock",b"vector_clock"]) -> None: ...
type___TicketInfo = TicketInfo

class ListRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    include_omitted_open_tickets: builtin___bool = ...
    data_center_hint: typing___Text = ...

    @property
    def known_ticket_info(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___TicketInfo]: ...

    def __init__(self,
        *,
        known_ticket_info : typing___Optional[typing___Iterable[type___TicketInfo]] = None,
        include_omitted_open_tickets : typing___Optional[builtin___bool] = None,
        data_center_hint : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"data_center_hint",b"data_center_hint",u"include_omitted_open_tickets",b"include_omitted_open_tickets"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"data_center_hint",b"data_center_hint",u"include_omitted_open_tickets",b"include_omitted_open_tickets",u"known_ticket_info",b"known_ticket_info"]) -> None: ...
type___ListRequest = ListRequest

class ListResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    incompatible_ticket_count_fixable_via_upgrade: builtin___int = ...
    incompatible_ticket_count_unfixable: builtin___int = ...
    more_tickets_available: builtin___bool = ...

    @property
    def status(self) -> squareup___client___status_pb2___Status: ...

    @property
    def ticket(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___client___tickets___data_pb2___Ticket]: ...

    def __init__(self,
        *,
        status : typing___Optional[squareup___client___status_pb2___Status] = None,
        ticket : typing___Optional[typing___Iterable[squareup___client___tickets___data_pb2___Ticket]] = None,
        incompatible_ticket_count_fixable_via_upgrade : typing___Optional[builtin___int] = None,
        incompatible_ticket_count_unfixable : typing___Optional[builtin___int] = None,
        more_tickets_available : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"incompatible_ticket_count_fixable_via_upgrade",b"incompatible_ticket_count_fixable_via_upgrade",u"incompatible_ticket_count_unfixable",b"incompatible_ticket_count_unfixable",u"more_tickets_available",b"more_tickets_available",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"incompatible_ticket_count_fixable_via_upgrade",b"incompatible_ticket_count_fixable_via_upgrade",u"incompatible_ticket_count_unfixable",b"incompatible_ticket_count_unfixable",u"more_tickets_available",b"more_tickets_available",u"status",b"status",u"ticket",b"ticket"]) -> None: ...
type___ListResponse = ListResponse

class UpdateRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def ticket(self) -> squareup___client___tickets___data_pb2___Ticket: ...

    def __init__(self,
        *,
        ticket : typing___Optional[squareup___client___tickets___data_pb2___Ticket] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ticket",b"ticket"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ticket",b"ticket"]) -> None: ...
type___UpdateRequest = UpdateRequest

class UpdateResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def status(self) -> squareup___client___status_pb2___Status: ...

    @property
    def ticket(self) -> squareup___client___tickets___data_pb2___Ticket: ...

    def __init__(self,
        *,
        status : typing___Optional[squareup___client___status_pb2___Status] = None,
        ticket : typing___Optional[squareup___client___tickets___data_pb2___Ticket] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"status",b"status",u"ticket",b"ticket"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"status",b"status",u"ticket",b"ticket"]) -> None: ...
type___UpdateResponse = UpdateResponse
