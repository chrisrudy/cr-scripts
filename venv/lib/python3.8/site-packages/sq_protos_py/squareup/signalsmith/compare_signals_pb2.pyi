# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.signalsmith.data_pb2 import (
    ProtoEntityKey as squareup___signalsmith___data_pb2___ProtoEntityKey,
    SignalInput as squareup___signalsmith___data_pb2___SignalInput,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ComparableInput(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    timestamp: builtin___int = ...

    @property
    def signal_input(self) -> squareup___signalsmith___data_pb2___SignalInput: ...

    @property
    def accMap(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ComparableAccMap]: ...

    @property
    def inputKey(self) -> squareup___signalsmith___data_pb2___ProtoEntityKey: ...

    @property
    def queryKey(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___signalsmith___data_pb2___ProtoEntityKey]: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        signal_input : typing___Optional[squareup___signalsmith___data_pb2___SignalInput] = None,
        timestamp : typing___Optional[builtin___int] = None,
        accMap : typing___Optional[typing___Iterable[type___ComparableAccMap]] = None,
        inputKey : typing___Optional[squareup___signalsmith___data_pb2___ProtoEntityKey] = None,
        queryKey : typing___Optional[typing___Iterable[squareup___signalsmith___data_pb2___ProtoEntityKey]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"inputKey",b"inputKey",u"signal_input",b"signal_input",u"timestamp",b"timestamp"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accMap",b"accMap",u"id",b"id",u"inputKey",b"inputKey",u"queryKey",b"queryKey",u"signal_input",b"signal_input",u"timestamp",b"timestamp"]) -> None: ...
type___ComparableInput = ComparableInput

class ComparableAccMap(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    accMap: builtin___bytes = ...

    @property
    def groupKey(self) -> squareup___signalsmith___data_pb2___ProtoEntityKey: ...

    def __init__(self,
        *,
        groupKey : typing___Optional[squareup___signalsmith___data_pb2___ProtoEntityKey] = None,
        accMap : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accMap",b"accMap",u"groupKey",b"groupKey"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accMap",b"accMap",u"groupKey",b"groupKey"]) -> None: ...
type___ComparableAccMap = ComparableAccMap

class CompareResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...

    @property
    def one(self) -> type___ComparableInput: ...

    @property
    def two(self) -> type___ComparableInput: ...

    @property
    def duplicates(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ComparableInput]: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        one : typing___Optional[type___ComparableInput] = None,
        two : typing___Optional[type___ComparableInput] = None,
        duplicates : typing___Optional[typing___Iterable[type___ComparableInput]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"one",b"one",u"two",b"two"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"duplicates",b"duplicates",u"id",b"id",u"one",b"one",u"two",b"two"]) -> None: ...
type___CompareResult = CompareResult
