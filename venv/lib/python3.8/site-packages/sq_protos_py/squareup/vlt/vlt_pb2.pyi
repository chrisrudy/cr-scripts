# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class LoadTestParams(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    samples_per_second: builtin___float = ...
    duration_seconds: builtin___float = ...
    bookend_seconds: builtin___float = ...
    ramp_type: type___RampTypes.RampTypeValue = ...
    max_threads: builtin___int = ...

    @property
    def queries_per_second(self) -> type___Range: ...

    @property
    def active_queries(self) -> type___Range: ...

    def __init__(self,
        *,
        samples_per_second : typing___Optional[builtin___float] = None,
        duration_seconds : typing___Optional[builtin___float] = None,
        bookend_seconds : typing___Optional[builtin___float] = None,
        ramp_type : typing___Optional[type___RampTypes.RampTypeValue] = None,
        queries_per_second : typing___Optional[type___Range] = None,
        active_queries : typing___Optional[type___Range] = None,
        max_threads : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"active_queries",b"active_queries",u"bookend_seconds",b"bookend_seconds",u"duration_seconds",b"duration_seconds",u"max_threads",b"max_threads",u"queries_per_second",b"queries_per_second",u"ramp_type",b"ramp_type",u"samples_per_second",b"samples_per_second",u"test_variable",b"test_variable"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"active_queries",b"active_queries",u"bookend_seconds",b"bookend_seconds",u"duration_seconds",b"duration_seconds",u"max_threads",b"max_threads",u"queries_per_second",b"queries_per_second",u"ramp_type",b"ramp_type",u"samples_per_second",b"samples_per_second",u"test_variable",b"test_variable"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"test_variable",b"test_variable"]) -> typing_extensions___Literal["queries_per_second","active_queries"]: ...
type___LoadTestParams = LoadTestParams

class Range(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    minimum: builtin___float = ...
    maximum: builtin___float = ...

    def __init__(self,
        *,
        minimum : typing___Optional[builtin___float] = None,
        maximum : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"maximum",b"maximum",u"minimum",b"minimum"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"maximum",b"maximum",u"minimum",b"minimum"]) -> None: ...
type___Range = Range

class RampTypes(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    RampTypeValue = typing___NewType('RampTypeValue', builtin___int)
    type___RampTypeValue = RampTypeValue
    RampType: _RampType
    class _RampType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RampTypes.RampTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE = typing___cast(RampTypes.RampTypeValue, 0)
        LINEAR = typing___cast(RampTypes.RampTypeValue, 1)
        EXPONENTIAL = typing___cast(RampTypes.RampTypeValue, 2)
        S_CURVE = typing___cast(RampTypes.RampTypeValue, 3)
        EASE_IN_EASE_OUT = typing___cast(RampTypes.RampTypeValue, 4)
    DO_NOT_USE = typing___cast(RampTypes.RampTypeValue, 0)
    LINEAR = typing___cast(RampTypes.RampTypeValue, 1)
    EXPONENTIAL = typing___cast(RampTypes.RampTypeValue, 2)
    S_CURVE = typing___cast(RampTypes.RampTypeValue, 3)
    EASE_IN_EASE_OUT = typing___cast(RampTypes.RampTypeValue, 4)
    type___RampType = RampType


    def __init__(self,
        ) -> None: ...
type___RampTypes = RampTypes
