# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

RendererValue = typing___NewType('RendererValue', builtin___int)
type___RendererValue = RendererValue
Renderer: _Renderer
class _Renderer(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RendererValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    R_DO_NOT_USE = typing___cast(RendererValue, 0)
    DOC_RAPTOR = typing___cast(RendererValue, 1)
    GOOGLE_CLOUD_FUNCTION = typing___cast(RendererValue, 3)
    AWS_LAMBDA = typing___cast(RendererValue, 4)
R_DO_NOT_USE = typing___cast(RendererValue, 0)
DOC_RAPTOR = typing___cast(RendererValue, 1)
GOOGLE_CLOUD_FUNCTION = typing___cast(RendererValue, 3)
AWS_LAMBDA = typing___cast(RendererValue, 4)
type___Renderer = Renderer

class RenderHtmlToPdfRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    html: typing___Text = ...
    renderer: type___RendererValue = ...
    url: typing___Text = ...

    @property
    def doc_raptor_options(self) -> type___DocRaptorOptions: ...

    @property
    def cloud_function_options(self) -> type___CloudFunctionOptions: ...

    @property
    def aws_lambda_options(self) -> type___AwsLambdaOptions: ...

    def __init__(self,
        *,
        html : typing___Optional[typing___Text] = None,
        renderer : typing___Optional[type___RendererValue] = None,
        url : typing___Optional[typing___Text] = None,
        doc_raptor_options : typing___Optional[type___DocRaptorOptions] = None,
        cloud_function_options : typing___Optional[type___CloudFunctionOptions] = None,
        aws_lambda_options : typing___Optional[type___AwsLambdaOptions] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aws_lambda_options",b"aws_lambda_options",u"cloud_function_options",b"cloud_function_options",u"doc_raptor_options",b"doc_raptor_options",u"html",b"html",u"renderer",b"renderer",u"renderer_options",b"renderer_options",u"url",b"url"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aws_lambda_options",b"aws_lambda_options",u"cloud_function_options",b"cloud_function_options",u"doc_raptor_options",b"doc_raptor_options",u"html",b"html",u"renderer",b"renderer",u"renderer_options",b"renderer_options",u"url",b"url"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"renderer_options",b"renderer_options"]) -> typing_extensions___Literal["doc_raptor_options","cloud_function_options","aws_lambda_options"]: ...
type___RenderHtmlToPdfRequest = RenderHtmlToPdfRequest

class RenderHtmlToPdfResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    pdf: builtin___bytes = ...
    renderer: type___RendererValue = ...

    def __init__(self,
        *,
        pdf : typing___Optional[builtin___bytes] = None,
        renderer : typing___Optional[type___RendererValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"pdf",b"pdf",u"renderer",b"renderer"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"pdf",b"pdf",u"renderer",b"renderer"]) -> None: ...
type___RenderHtmlToPdfResponse = RenderHtmlToPdfResponse

class DocRaptorOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    test: builtin___bool = ...

    def __init__(self,
        *,
        test : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"test",b"test"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"test",b"test"]) -> None: ...
type___DocRaptorOptions = DocRaptorOptions

class CloudFunctionOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Margin(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        top: typing___Text = ...
        right: typing___Text = ...
        bottom: typing___Text = ...
        left: typing___Text = ...

        def __init__(self,
            *,
            top : typing___Optional[typing___Text] = None,
            right : typing___Optional[typing___Text] = None,
            bottom : typing___Optional[typing___Text] = None,
            left : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"bottom",b"bottom",u"left",b"left",u"right",b"right",u"top",b"top"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bottom",b"bottom",u"left",b"left",u"right",b"right",u"top",b"top"]) -> None: ...
    type___Margin = Margin

    width: typing___Text = ...
    height: typing___Text = ...
    force_one_page: builtin___bool = ...
    wait_until: typing___Text = ...

    @property
    def margin(self) -> type___CloudFunctionOptions.Margin: ...

    def __init__(self,
        *,
        margin : typing___Optional[type___CloudFunctionOptions.Margin] = None,
        width : typing___Optional[typing___Text] = None,
        height : typing___Optional[typing___Text] = None,
        force_one_page : typing___Optional[builtin___bool] = None,
        wait_until : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"force_one_page",b"force_one_page",u"height",b"height",u"margin",b"margin",u"wait_until",b"wait_until",u"width",b"width"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"force_one_page",b"force_one_page",u"height",b"height",u"margin",b"margin",u"wait_until",b"wait_until",u"width",b"width"]) -> None: ...
type___CloudFunctionOptions = CloudFunctionOptions

class AwsLambdaOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Margin(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        top: typing___Text = ...
        right: typing___Text = ...
        bottom: typing___Text = ...
        left: typing___Text = ...

        def __init__(self,
            *,
            top : typing___Optional[typing___Text] = None,
            right : typing___Optional[typing___Text] = None,
            bottom : typing___Optional[typing___Text] = None,
            left : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"bottom",b"bottom",u"left",b"left",u"right",b"right",u"top",b"top"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bottom",b"bottom",u"left",b"left",u"right",b"right",u"top",b"top"]) -> None: ...
    type___Margin = Margin

    width: typing___Text = ...
    height: typing___Text = ...
    force_one_page: builtin___bool = ...
    wait_until: typing___Text = ...

    @property
    def margin(self) -> type___AwsLambdaOptions.Margin: ...

    def __init__(self,
        *,
        margin : typing___Optional[type___AwsLambdaOptions.Margin] = None,
        width : typing___Optional[typing___Text] = None,
        height : typing___Optional[typing___Text] = None,
        force_one_page : typing___Optional[builtin___bool] = None,
        wait_until : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"force_one_page",b"force_one_page",u"height",b"height",u"margin",b"margin",u"wait_until",b"wait_until",u"width",b"width"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"force_one_page",b"force_one_page",u"height",b"height",u"margin",b"margin",u"wait_until",b"wait_until",u"width",b"width"]) -> None: ...
type___AwsLambdaOptions = AwsLambdaOptions
