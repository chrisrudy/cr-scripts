# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Type(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def au(self) -> type___AU: ...

    @property
    def us(self) -> type___US: ...

    def __init__(self,
        *,
        au : typing___Optional[type___AU] = None,
        us : typing___Optional[type___US] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"au",b"au",u"tin_type",b"tin_type",u"us",b"us"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"au",b"au",u"tin_type",b"tin_type",u"us",b"us"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"tin_type",b"tin_type"]) -> typing_extensions___Literal["au","us"]: ...
type___Type = Type

class AU(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AU.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE = typing___cast(AU.TypeValue, 0)
        ABN = typing___cast(AU.TypeValue, 1)
        ACN = typing___cast(AU.TypeValue, 2)
    DO_NOT_USE = typing___cast(AU.TypeValue, 0)
    ABN = typing___cast(AU.TypeValue, 1)
    ACN = typing___cast(AU.TypeValue, 2)
    type___Type = Type

    type: type___AU.TypeValue = ...

    def __init__(self,
        *,
        type : typing___Optional[type___AU.TypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> None: ...
type___AU = AU

class US(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[US.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE = typing___cast(US.TypeValue, 0)
        UNKNOWN = typing___cast(US.TypeValue, 1)
        SSN = typing___cast(US.TypeValue, 2)
        EIN = typing___cast(US.TypeValue, 3)
    DO_NOT_USE = typing___cast(US.TypeValue, 0)
    UNKNOWN = typing___cast(US.TypeValue, 1)
    SSN = typing___cast(US.TypeValue, 2)
    EIN = typing___cast(US.TypeValue, 3)
    type___Type = Type

    type: type___US.TypeValue = ...
    ambiguous_match: builtin___bool = ...

    def __init__(self,
        *,
        type : typing___Optional[type___US.TypeValue] = None,
        ambiguous_match : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ambiguous_match",b"ambiguous_match",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ambiguous_match",b"ambiguous_match",u"type",b"type"]) -> None: ...
type___US = US
