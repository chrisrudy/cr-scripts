# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
    YearMonthDay as squareup___common___time_pb2___YearMonthDay,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class W9(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    FederalTaxClassificationValue = typing___NewType('FederalTaxClassificationValue', builtin___int)
    type___FederalTaxClassificationValue = FederalTaxClassificationValue
    FederalTaxClassification: _FederalTaxClassification
    class _FederalTaxClassification(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[W9.FederalTaxClassificationValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE_FEDERAL_TAX_CLASSIFICATION = typing___cast(W9.FederalTaxClassificationValue, 0)
        INDIVIDUAL_SOLE_PROPRIETOR_OR_SINGLE_MEMBER_LLC = typing___cast(W9.FederalTaxClassificationValue, 1)
        C_CORPORATION = typing___cast(W9.FederalTaxClassificationValue, 2)
        S_CORPORATION = typing___cast(W9.FederalTaxClassificationValue, 3)
        PARTNERSHIP = typing___cast(W9.FederalTaxClassificationValue, 4)
        TRUST_ESTATE = typing___cast(W9.FederalTaxClassificationValue, 5)
        LIMITED_LIABILITY_COMPANY = typing___cast(W9.FederalTaxClassificationValue, 6)
        OTHER = typing___cast(W9.FederalTaxClassificationValue, 7)
    DO_NOT_USE_FEDERAL_TAX_CLASSIFICATION = typing___cast(W9.FederalTaxClassificationValue, 0)
    INDIVIDUAL_SOLE_PROPRIETOR_OR_SINGLE_MEMBER_LLC = typing___cast(W9.FederalTaxClassificationValue, 1)
    C_CORPORATION = typing___cast(W9.FederalTaxClassificationValue, 2)
    S_CORPORATION = typing___cast(W9.FederalTaxClassificationValue, 3)
    PARTNERSHIP = typing___cast(W9.FederalTaxClassificationValue, 4)
    TRUST_ESTATE = typing___cast(W9.FederalTaxClassificationValue, 5)
    LIMITED_LIABILITY_COMPANY = typing___cast(W9.FederalTaxClassificationValue, 6)
    OTHER = typing___cast(W9.FederalTaxClassificationValue, 7)
    type___FederalTaxClassification = FederalTaxClassification

    LimitedLiabilityCompanySubtypeValue = typing___NewType('LimitedLiabilityCompanySubtypeValue', builtin___int)
    type___LimitedLiabilityCompanySubtypeValue = LimitedLiabilityCompanySubtypeValue
    LimitedLiabilityCompanySubtype: _LimitedLiabilityCompanySubtype
    class _LimitedLiabilityCompanySubtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[W9.LimitedLiabilityCompanySubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE_LIMITED_LIABILITY_COMPANY_SUBTYPE = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 0)
        LLC_C_CORPORATION = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 1)
        LLC_S_CORPORATION = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 2)
        LLC_PARTNERSHIP = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 3)
    DO_NOT_USE_LIMITED_LIABILITY_COMPANY_SUBTYPE = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 0)
    LLC_C_CORPORATION = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 1)
    LLC_S_CORPORATION = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 2)
    LLC_PARTNERSHIP = typing___cast(W9.LimitedLiabilityCompanySubtypeValue, 3)
    type___LimitedLiabilityCompanySubtype = LimitedLiabilityCompanySubtype

    ExemptPayeeCodeValue = typing___NewType('ExemptPayeeCodeValue', builtin___int)
    type___ExemptPayeeCodeValue = ExemptPayeeCodeValue
    ExemptPayeeCode: _ExemptPayeeCode
    class _ExemptPayeeCode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[W9.ExemptPayeeCodeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE_EXEMPT_PAYEE_CODE = typing___cast(W9.ExemptPayeeCodeValue, 0)
        EPC_1 = typing___cast(W9.ExemptPayeeCodeValue, 1)
        EPC_2 = typing___cast(W9.ExemptPayeeCodeValue, 2)
        EPC_3 = typing___cast(W9.ExemptPayeeCodeValue, 3)
        EPC_4 = typing___cast(W9.ExemptPayeeCodeValue, 4)
        EPC_5 = typing___cast(W9.ExemptPayeeCodeValue, 5)
        EPC_6 = typing___cast(W9.ExemptPayeeCodeValue, 6)
        EPC_7 = typing___cast(W9.ExemptPayeeCodeValue, 7)
        EPC_8 = typing___cast(W9.ExemptPayeeCodeValue, 8)
        EPC_9 = typing___cast(W9.ExemptPayeeCodeValue, 9)
        EPC_10 = typing___cast(W9.ExemptPayeeCodeValue, 10)
        EPC_11 = typing___cast(W9.ExemptPayeeCodeValue, 11)
        EPC_12 = typing___cast(W9.ExemptPayeeCodeValue, 12)
        EPC_13 = typing___cast(W9.ExemptPayeeCodeValue, 13)
    DO_NOT_USE_EXEMPT_PAYEE_CODE = typing___cast(W9.ExemptPayeeCodeValue, 0)
    EPC_1 = typing___cast(W9.ExemptPayeeCodeValue, 1)
    EPC_2 = typing___cast(W9.ExemptPayeeCodeValue, 2)
    EPC_3 = typing___cast(W9.ExemptPayeeCodeValue, 3)
    EPC_4 = typing___cast(W9.ExemptPayeeCodeValue, 4)
    EPC_5 = typing___cast(W9.ExemptPayeeCodeValue, 5)
    EPC_6 = typing___cast(W9.ExemptPayeeCodeValue, 6)
    EPC_7 = typing___cast(W9.ExemptPayeeCodeValue, 7)
    EPC_8 = typing___cast(W9.ExemptPayeeCodeValue, 8)
    EPC_9 = typing___cast(W9.ExemptPayeeCodeValue, 9)
    EPC_10 = typing___cast(W9.ExemptPayeeCodeValue, 10)
    EPC_11 = typing___cast(W9.ExemptPayeeCodeValue, 11)
    EPC_12 = typing___cast(W9.ExemptPayeeCodeValue, 12)
    EPC_13 = typing___cast(W9.ExemptPayeeCodeValue, 13)
    type___ExemptPayeeCode = ExemptPayeeCode

    ExemptionFromFATCACodeValue = typing___NewType('ExemptionFromFATCACodeValue', builtin___int)
    type___ExemptionFromFATCACodeValue = ExemptionFromFATCACodeValue
    ExemptionFromFATCACode: _ExemptionFromFATCACode
    class _ExemptionFromFATCACode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[W9.ExemptionFromFATCACodeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE_EXEMPT_FROM_FATCA_CODE = typing___cast(W9.ExemptionFromFATCACodeValue, 0)
        EFFC_A = typing___cast(W9.ExemptionFromFATCACodeValue, 1)
        EFFC_B = typing___cast(W9.ExemptionFromFATCACodeValue, 2)
        EFFC_C = typing___cast(W9.ExemptionFromFATCACodeValue, 3)
        EFFC_D = typing___cast(W9.ExemptionFromFATCACodeValue, 4)
        EFFC_E = typing___cast(W9.ExemptionFromFATCACodeValue, 5)
        EFFC_F = typing___cast(W9.ExemptionFromFATCACodeValue, 6)
        EFFC_G = typing___cast(W9.ExemptionFromFATCACodeValue, 7)
        EFFC_H = typing___cast(W9.ExemptionFromFATCACodeValue, 8)
        EFFC_I = typing___cast(W9.ExemptionFromFATCACodeValue, 9)
        EFFC_J = typing___cast(W9.ExemptionFromFATCACodeValue, 10)
        EFFC_K = typing___cast(W9.ExemptionFromFATCACodeValue, 11)
        EFFC_L = typing___cast(W9.ExemptionFromFATCACodeValue, 12)
    DO_NOT_USE_EXEMPT_FROM_FATCA_CODE = typing___cast(W9.ExemptionFromFATCACodeValue, 0)
    EFFC_A = typing___cast(W9.ExemptionFromFATCACodeValue, 1)
    EFFC_B = typing___cast(W9.ExemptionFromFATCACodeValue, 2)
    EFFC_C = typing___cast(W9.ExemptionFromFATCACodeValue, 3)
    EFFC_D = typing___cast(W9.ExemptionFromFATCACodeValue, 4)
    EFFC_E = typing___cast(W9.ExemptionFromFATCACodeValue, 5)
    EFFC_F = typing___cast(W9.ExemptionFromFATCACodeValue, 6)
    EFFC_G = typing___cast(W9.ExemptionFromFATCACodeValue, 7)
    EFFC_H = typing___cast(W9.ExemptionFromFATCACodeValue, 8)
    EFFC_I = typing___cast(W9.ExemptionFromFATCACodeValue, 9)
    EFFC_J = typing___cast(W9.ExemptionFromFATCACodeValue, 10)
    EFFC_K = typing___cast(W9.ExemptionFromFATCACodeValue, 11)
    EFFC_L = typing___cast(W9.ExemptionFromFATCACodeValue, 12)
    type___ExemptionFromFATCACode = ExemptionFromFATCACode

    class PenaltyOfPerjuryCertification(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        signature_text: typing___Text = ...

        @property
        def signature_time(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def signature_date(self) -> squareup___common___time_pb2___YearMonthDay: ...

        def __init__(self,
            *,
            signature_text : typing___Optional[typing___Text] = None,
            signature_time : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            signature_date : typing___Optional[squareup___common___time_pb2___YearMonthDay] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"signature_date",b"signature_date",u"signature_text",b"signature_text",u"signature_time",b"signature_time",u"signed_at",b"signed_at"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"signature_date",b"signature_date",u"signature_text",b"signature_text",u"signature_time",b"signature_time",u"signed_at",b"signed_at"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"signed_at",b"signed_at"]) -> typing_extensions___Literal["signature_time","signature_date"]: ...
    type___PenaltyOfPerjuryCertification = PenaltyOfPerjuryCertification

    federal_tax_classification: type___W9.FederalTaxClassificationValue = ...
    llc_subtype: type___W9.LimitedLiabilityCompanySubtypeValue = ...
    federal_tax_classification_other: typing___Text = ...
    exempt_payee_code: type___W9.ExemptPayeeCodeValue = ...
    exemption_from_fatca_code: type___W9.ExemptionFromFATCACodeValue = ...
    requester_name_and_address_lines: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    account_numbers: typing___Text = ...

    @property
    def penalty_of_perjury_certification(self) -> type___W9.PenaltyOfPerjuryCertification: ...

    def __init__(self,
        *,
        federal_tax_classification : typing___Optional[type___W9.FederalTaxClassificationValue] = None,
        llc_subtype : typing___Optional[type___W9.LimitedLiabilityCompanySubtypeValue] = None,
        federal_tax_classification_other : typing___Optional[typing___Text] = None,
        exempt_payee_code : typing___Optional[type___W9.ExemptPayeeCodeValue] = None,
        exemption_from_fatca_code : typing___Optional[type___W9.ExemptionFromFATCACodeValue] = None,
        requester_name_and_address_lines : typing___Optional[typing___Iterable[typing___Text]] = None,
        account_numbers : typing___Optional[typing___Text] = None,
        penalty_of_perjury_certification : typing___Optional[type___W9.PenaltyOfPerjuryCertification] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_numbers",b"account_numbers",u"exempt_payee_code",b"exempt_payee_code",u"exemption_from_fatca_code",b"exemption_from_fatca_code",u"federal_tax_classification",b"federal_tax_classification",u"federal_tax_classification_other",b"federal_tax_classification_other",u"llc_subtype",b"llc_subtype",u"penalty_of_perjury_certification",b"penalty_of_perjury_certification"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_numbers",b"account_numbers",u"exempt_payee_code",b"exempt_payee_code",u"exemption_from_fatca_code",b"exemption_from_fatca_code",u"federal_tax_classification",b"federal_tax_classification",u"federal_tax_classification_other",b"federal_tax_classification_other",u"llc_subtype",b"llc_subtype",u"penalty_of_perjury_certification",b"penalty_of_perjury_certification",u"requester_name_and_address_lines",b"requester_name_and_address_lines"]) -> None: ...
type___W9 = W9
