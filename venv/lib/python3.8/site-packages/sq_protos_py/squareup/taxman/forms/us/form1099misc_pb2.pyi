# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Optional as typing___Optional,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Form1099Misc(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    fatca_filing_requirement: builtin___bool = ...
    direct_sales_for_resale: builtin___bool = ...
    foreign_country: squareup___common___countries_pb2___CountryValue = ...

    @property
    def rents(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def royalties(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def other_income(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def federal_income_tax_withheld(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def fishing_boat_proceeds(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def medical_and_healthcare_payments(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def nonemployee_compensation(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def substitute_payments(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def crop_insurance_proceeds(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def foreign_tax_paid(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def excess_golden_parachute_payments(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def gross_proceeds_paid_to_an_attorney(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def section_409a_deferrals(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def section_409a_income(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        fatca_filing_requirement : typing___Optional[builtin___bool] = None,
        rents : typing___Optional[squareup___common___currency_pb2___Money] = None,
        royalties : typing___Optional[squareup___common___currency_pb2___Money] = None,
        other_income : typing___Optional[squareup___common___currency_pb2___Money] = None,
        federal_income_tax_withheld : typing___Optional[squareup___common___currency_pb2___Money] = None,
        fishing_boat_proceeds : typing___Optional[squareup___common___currency_pb2___Money] = None,
        medical_and_healthcare_payments : typing___Optional[squareup___common___currency_pb2___Money] = None,
        nonemployee_compensation : typing___Optional[squareup___common___currency_pb2___Money] = None,
        substitute_payments : typing___Optional[squareup___common___currency_pb2___Money] = None,
        direct_sales_for_resale : typing___Optional[builtin___bool] = None,
        crop_insurance_proceeds : typing___Optional[squareup___common___currency_pb2___Money] = None,
        foreign_tax_paid : typing___Optional[squareup___common___currency_pb2___Money] = None,
        foreign_country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        excess_golden_parachute_payments : typing___Optional[squareup___common___currency_pb2___Money] = None,
        gross_proceeds_paid_to_an_attorney : typing___Optional[squareup___common___currency_pb2___Money] = None,
        section_409a_deferrals : typing___Optional[squareup___common___currency_pb2___Money] = None,
        section_409a_income : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"crop_insurance_proceeds",b"crop_insurance_proceeds",u"direct_sales_for_resale",b"direct_sales_for_resale",u"excess_golden_parachute_payments",b"excess_golden_parachute_payments",u"fatca_filing_requirement",b"fatca_filing_requirement",u"federal_income_tax_withheld",b"federal_income_tax_withheld",u"fishing_boat_proceeds",b"fishing_boat_proceeds",u"foreign_country",b"foreign_country",u"foreign_tax_paid",b"foreign_tax_paid",u"gross_proceeds_paid_to_an_attorney",b"gross_proceeds_paid_to_an_attorney",u"medical_and_healthcare_payments",b"medical_and_healthcare_payments",u"nonemployee_compensation",b"nonemployee_compensation",u"other_income",b"other_income",u"rents",b"rents",u"royalties",b"royalties",u"section_409a_deferrals",b"section_409a_deferrals",u"section_409a_income",b"section_409a_income",u"substitute_payments",b"substitute_payments"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"crop_insurance_proceeds",b"crop_insurance_proceeds",u"direct_sales_for_resale",b"direct_sales_for_resale",u"excess_golden_parachute_payments",b"excess_golden_parachute_payments",u"fatca_filing_requirement",b"fatca_filing_requirement",u"federal_income_tax_withheld",b"federal_income_tax_withheld",u"fishing_boat_proceeds",b"fishing_boat_proceeds",u"foreign_country",b"foreign_country",u"foreign_tax_paid",b"foreign_tax_paid",u"gross_proceeds_paid_to_an_attorney",b"gross_proceeds_paid_to_an_attorney",u"medical_and_healthcare_payments",b"medical_and_healthcare_payments",u"nonemployee_compensation",b"nonemployee_compensation",u"other_income",b"other_income",u"rents",b"rents",u"royalties",b"royalties",u"section_409a_deferrals",b"section_409a_deferrals",u"section_409a_income",b"section_409a_income",u"substitute_payments",b"substitute_payments"]) -> None: ...
type___Form1099Misc = Form1099Misc
