# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.taxman.service import reporting_pb2 as squareup_dot_taxman_dot_service_dot_reporting__pb2


class TaxmanReportingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckUSReportingJobStatus = channel.unary_unary(
                '/squareup.taxman.service.TaxmanReportingService/CheckUSReportingJobStatus',
                request_serializer=squareup_dot_taxman_dot_service_dot_reporting__pb2.CheckUSReportingJobStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_taxman_dot_service_dot_reporting__pb2.CheckUSReportingJobStatusResponse.FromString,
                )


class TaxmanReportingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckUSReportingJobStatus(self, request, context):
        """*
        Check on the status of the US end-of-year reporting jobs. Once they've
        started, issuing forms via IssueTaxForm is no longer possible. Once the
        forms are prepared, any forms generated by Taxman will be available as
        pending forms. Once ready, they can be downloaded.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaxmanReportingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckUSReportingJobStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUSReportingJobStatus,
                    request_deserializer=squareup_dot_taxman_dot_service_dot_reporting__pb2.CheckUSReportingJobStatusRequest.FromString,
                    response_serializer=squareup_dot_taxman_dot_service_dot_reporting__pb2.CheckUSReportingJobStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.taxman.service.TaxmanReportingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TaxmanReportingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckUSReportingJobStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.taxman.service.TaxmanReportingService/CheckUSReportingJobStatus',
            squareup_dot_taxman_dot_service_dot_reporting__pb2.CheckUSReportingJobStatusRequest.SerializeToString,
            squareup_dot_taxman_dot_service_dot_reporting__pb2.CheckUSReportingJobStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
