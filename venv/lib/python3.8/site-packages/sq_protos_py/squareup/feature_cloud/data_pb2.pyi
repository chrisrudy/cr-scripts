# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.feature_store.entity_pb2 import (
    EntityValue as squareup___feature_store___entity_pb2___EntityValue,
)

from sq_protos_py.squareup.modeltransput.data_pb2 import (
    ValueTypeValue as squareup___modeltransput___data_pb2___ValueTypeValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

DagTypeValue = typing___NewType('DagTypeValue', builtin___int)
type___DagTypeValue = DagTypeValue
DagType: _DagType
class _DagType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DagTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PREVIEW = typing___cast(DagTypeValue, 1)
    SCHEDULED = typing___cast(DagTypeValue, 2)
    HISTORICAL = typing___cast(DagTypeValue, 3)
    BATCH_QUERY = typing___cast(DagTypeValue, 4)
PREVIEW = typing___cast(DagTypeValue, 1)
SCHEDULED = typing___cast(DagTypeValue, 2)
HISTORICAL = typing___cast(DagTypeValue, 3)
BATCH_QUERY = typing___cast(DagTypeValue, 4)
type___DagType = DagType

DagRunStateValue = typing___NewType('DagRunStateValue', builtin___int)
type___DagRunStateValue = DagRunStateValue
DagRunState: _DagRunState
class _DagRunState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DagRunStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DO_NOT_USE = typing___cast(DagRunStateValue, 0)
    SUCCESS = typing___cast(DagRunStateValue, 1)
    RUNNING = typing___cast(DagRunStateValue, 2)
    FAILED = typing___cast(DagRunStateValue, 3)
    QUEUED = typing___cast(DagRunStateValue, 4)
    UNKNOWN = typing___cast(DagRunStateValue, 5)
    NOT_FOUND = typing___cast(DagRunStateValue, 6)
DO_NOT_USE = typing___cast(DagRunStateValue, 0)
SUCCESS = typing___cast(DagRunStateValue, 1)
RUNNING = typing___cast(DagRunStateValue, 2)
FAILED = typing___cast(DagRunStateValue, 3)
QUEUED = typing___cast(DagRunStateValue, 4)
UNKNOWN = typing___cast(DagRunStateValue, 5)
NOT_FOUND = typing___cast(DagRunStateValue, 6)
type___DagRunState = DagRunState

class FeatureMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature_name: typing___Text = ...
    id: builtin___int = ...
    etl_name: typing___Text = ...
    removed: builtin___bool = ...
    acl_category: typing___Text = ...
    value_type: squareup___modeltransput___data_pb2___ValueTypeValue = ...
    description: typing___Text = ...
    entity: squareup___feature_store___entity_pb2___EntityValue = ...
    prev_etl_name: typing___Text = ...

    def __init__(self,
        *,
        feature_name : typing___Optional[typing___Text] = None,
        id : typing___Optional[builtin___int] = None,
        etl_name : typing___Optional[typing___Text] = None,
        removed : typing___Optional[builtin___bool] = None,
        acl_category : typing___Optional[typing___Text] = None,
        value_type : typing___Optional[squareup___modeltransput___data_pb2___ValueTypeValue] = None,
        description : typing___Optional[typing___Text] = None,
        entity : typing___Optional[squareup___feature_store___entity_pb2___EntityValue] = None,
        prev_etl_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acl_category",b"acl_category",u"description",b"description",u"entity",b"entity",u"etl_name",b"etl_name",u"feature_name",b"feature_name",u"id",b"id",u"prev_etl_name",b"prev_etl_name",u"removed",b"removed",u"value_type",b"value_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acl_category",b"acl_category",u"description",b"description",u"entity",b"entity",u"etl_name",b"etl_name",u"feature_name",b"feature_name",u"id",b"id",u"prev_etl_name",b"prev_etl_name",u"removed",b"removed",u"value_type",b"value_type"]) -> None: ...
type___FeatureMetadata = FeatureMetadata

class FeatureDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def feature_metadata(self) -> type___FeatureMetadata: ...

    @property
    def feature_def(self) -> type___FeatureDef: ...

    def __init__(self,
        *,
        feature_metadata : typing___Optional[type___FeatureMetadata] = None,
        feature_def : typing___Optional[type___FeatureDef] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"feature_def",b"feature_def",u"feature_metadata",b"feature_metadata"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"feature_def",b"feature_def",u"feature_metadata",b"feature_metadata"]) -> None: ...
type___FeatureDetail = FeatureDetail

class FeatureDef(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature_name: typing___Text = ...
    description: typing___Text = ...
    acl_category: typing___Text = ...
    value_type: squareup___modeltransput___data_pb2___ValueTypeValue = ...

    def __init__(self,
        *,
        feature_name : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        acl_category : typing___Optional[typing___Text] = None,
        value_type : typing___Optional[squareup___modeltransput___data_pb2___ValueTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acl_category",b"acl_category",u"description",b"description",u"feature_name",b"feature_name",u"value_type",b"value_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acl_category",b"acl_category",u"description",b"description",u"feature_name",b"feature_name",u"value_type",b"value_type"]) -> None: ...
type___FeatureDef = FeatureDef

class DoubleList(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    double_values: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...

    def __init__(self,
        *,
        double_values : typing___Optional[typing___Iterable[builtin___float]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"double_values",b"double_values"]) -> None: ...
type___DoubleList = DoubleList

class StringList(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    string_values: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        string_values : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"string_values",b"string_values"]) -> None: ...
type___StringList = StringList

class FeatureValue(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    double_value: builtin___float = ...
    string_value: typing___Text = ...

    @property
    def double_list_value(self) -> type___DoubleList: ...

    @property
    def string_list_value(self) -> type___StringList: ...

    def __init__(self,
        *,
        double_value : typing___Optional[builtin___float] = None,
        string_value : typing___Optional[typing___Text] = None,
        double_list_value : typing___Optional[type___DoubleList] = None,
        string_list_value : typing___Optional[type___StringList] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"double_list_value",b"double_list_value",u"double_value",b"double_value",u"string_list_value",b"string_list_value",u"string_value",b"string_value",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"double_list_value",b"double_list_value",u"double_value",b"double_value",u"string_list_value",b"string_list_value",u"string_value",b"string_value",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"value",b"value"]) -> typing_extensions___Literal["double_value","string_value","double_list_value","string_list_value"]: ...
type___FeatureValue = FeatureValue

class FeatureSet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def featureValue(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___FeatureValue]: ...

    def __init__(self,
        *,
        featureValue : typing___Optional[typing___Iterable[type___FeatureValue]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"featureValue",b"featureValue"]) -> None: ...
type___FeatureSet = FeatureSet

class FeatureNameSet(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    featureNames: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        featureNames : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"featureNames",b"featureNames"]) -> None: ...
type___FeatureNameSet = FeatureNameSet

class EtlDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    etl_name: typing___Text = ...
    schedule: typing___Text = ...
    slack_channel: typing___Text = ...
    is_online: builtin___bool = ...
    acl_category: typing___Text = ...
    entity: squareup___feature_store___entity_pb2___EntityValue = ...

    @property
    def feature_def(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___FeatureDef]: ...

    def __init__(self,
        *,
        etl_name : typing___Optional[typing___Text] = None,
        schedule : typing___Optional[typing___Text] = None,
        slack_channel : typing___Optional[typing___Text] = None,
        is_online : typing___Optional[builtin___bool] = None,
        acl_category : typing___Optional[typing___Text] = None,
        entity : typing___Optional[squareup___feature_store___entity_pb2___EntityValue] = None,
        feature_def : typing___Optional[typing___Iterable[type___FeatureDef]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acl_category",b"acl_category",u"entity",b"entity",u"etl_name",b"etl_name",u"is_online",b"is_online",u"schedule",b"schedule",u"slack_channel",b"slack_channel"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acl_category",b"acl_category",u"entity",b"entity",u"etl_name",b"etl_name",u"feature_def",b"feature_def",u"is_online",b"is_online",u"schedule",b"schedule",u"slack_channel",b"slack_channel"]) -> None: ...
type___EtlDetail = EtlDetail

class DagRunMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    dag_id: typing___Text = ...
    dag_run_url: typing___Text = ...
    execution_date: typing___Text = ...
    id: typing___Text = ...
    run_id: typing___Text = ...
    start_date: typing___Text = ...
    state: type___DagRunStateValue = ...

    def __init__(self,
        *,
        dag_id : typing___Optional[typing___Text] = None,
        dag_run_url : typing___Optional[typing___Text] = None,
        execution_date : typing___Optional[typing___Text] = None,
        id : typing___Optional[typing___Text] = None,
        run_id : typing___Optional[typing___Text] = None,
        start_date : typing___Optional[typing___Text] = None,
        state : typing___Optional[type___DagRunStateValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dag_id",b"dag_id",u"dag_run_url",b"dag_run_url",u"execution_date",b"execution_date",u"id",b"id",u"run_id",b"run_id",u"start_date",b"start_date",u"state",b"state"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dag_id",b"dag_id",u"dag_run_url",b"dag_run_url",u"execution_date",b"execution_date",u"id",b"id",u"run_id",b"run_id",u"start_date",b"start_date",u"state",b"state"]) -> None: ...
type___DagRunMetadata = DagRunMetadata

class FeatureInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature_name: typing___Text = ...
    last_update_timestamp: builtin___int = ...

    @property
    def feature_value(self) -> type___FeatureValue: ...

    def __init__(self,
        *,
        feature_name : typing___Optional[typing___Text] = None,
        last_update_timestamp : typing___Optional[builtin___int] = None,
        feature_value : typing___Optional[type___FeatureValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"feature_name",b"feature_name",u"feature_value",b"feature_value",u"last_update_timestamp",b"last_update_timestamp"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"feature_name",b"feature_name",u"feature_value",b"feature_value",u"last_update_timestamp",b"last_update_timestamp"]) -> None: ...
type___FeatureInfo = FeatureInfo

class EtlRunMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature_names: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    active_column: typing___Text = ...
    run_id: typing___Text = ...

    def __init__(self,
        *,
        feature_names : typing___Optional[typing___Iterable[typing___Text]] = None,
        active_column : typing___Optional[typing___Text] = None,
        run_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"active_column",b"active_column",u"run_id",b"run_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"active_column",b"active_column",u"feature_names",b"feature_names",u"run_id",b"run_id"]) -> None: ...
type___EtlRunMetadata = EtlRunMetadata

class HistoricalQueryJoinKey(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entity_token: typing___Text = ...
    string_timestamp: typing___Text = ...
    long_timestamp: builtin___int = ...

    def __init__(self,
        *,
        entity_token : typing___Optional[typing___Text] = None,
        string_timestamp : typing___Optional[typing___Text] = None,
        long_timestamp : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"entity_token",b"entity_token",u"feature_timestamp",b"feature_timestamp",u"long_timestamp",b"long_timestamp",u"string_timestamp",b"string_timestamp"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"entity_token",b"entity_token",u"feature_timestamp",b"feature_timestamp",u"long_timestamp",b"long_timestamp",u"string_timestamp",b"string_timestamp"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"feature_timestamp",b"feature_timestamp"]) -> typing_extensions___Literal["string_timestamp","long_timestamp"]: ...
type___HistoricalQueryJoinKey = HistoricalQueryJoinKey
