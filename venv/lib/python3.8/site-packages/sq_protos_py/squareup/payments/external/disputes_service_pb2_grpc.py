# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payments.external import disputes_evidence_pb2 as squareup_dot_payments_dot_external_dot_disputes__evidence__pb2
from sq_protos_py.squareup.payments.external import disputes_pb2 as squareup_dot_payments_dot_external_dot_disputes__pb2


class DisputesApiServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RetrieveDispute = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/RetrieveDispute',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.RetrieveDisputeRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.RetrieveDisputeResponse.FromString,
                )
        self.ListDisputes = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/ListDisputes',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.ListDisputesRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.ListDisputesResponse.FromString,
                )
        self.AcceptDispute = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/AcceptDispute',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.AcceptDisputeRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.AcceptDisputeResponse.FromString,
                )
        self.SubmitEvidence = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/SubmitEvidence',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.SubmitEvidenceRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.SubmitEvidenceResponse.FromString,
                )
        self.CreateDisputeEvidenceFile = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/CreateDisputeEvidenceFile',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceFileRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceFileResponse.FromString,
                )
        self.CreateDisputeEvidenceText = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/CreateDisputeEvidenceText',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceTextRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceTextResponse.FromString,
                )
        self.RetrieveDisputeEvidence = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/RetrieveDisputeEvidence',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RetrieveDisputeEvidenceRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RetrieveDisputeEvidenceResponse.FromString,
                )
        self.ListDisputeEvidence = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/ListDisputeEvidence',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.ListDisputeEvidenceRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.ListDisputeEvidenceResponse.FromString,
                )
        self.RemoveDisputeEvidence = channel.unary_unary(
                '/squareup.connect.v2.DisputesApiService/RemoveDisputeEvidence',
                request_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RemoveDisputeEvidenceRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RemoveDisputeEvidenceResponse.FromString,
                )


class DisputesApiServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RetrieveDispute(self, request, context):
        """--
        @desc Returns details about a specific dispute.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDisputes(self, request, context):
        """--
        @desc Returns a list of disputes associated with a particular account.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptDispute(self, request, context):
        """--
        @desc Accepts the loss on a dispute. Square returns the disputed amount to the cardholder and
        updates the dispute state to ACCEPTED.

        Square debits the disputed amount from the sellerâ€™s Square account. If the Square account
        does not have sufficient funds, Square debits the associated bank account.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitEvidence(self, request, context):
        """--
        @desc Submits evidence to the cardholder's bank.

        Before submitting evidence, Square compiles all available evidence. This includes evidence uploaded
        using the [CreateDisputeEvidenceFile](/reference/square/disputes-api/create-dispute-evidence-file) and
        [CreateDisputeEvidenceText](/reference/square/disputes-api/create-dispute-evidence-text) endpoints and
        evidence automatically provided by Square, when available.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDisputeEvidenceFile(self, request, context):
        """*
        Evidence File API.

        Modeling evidence as a subresource of disputes. An evidence file can exist independently of
        of a dispute, but not outside the context of the Disputes API.

        --
        @desc Uploads a file to use as evidence in a dispute challenge. The endpoint accepts HTTP
        multipart/form-data file uploads in HEIC, HEIF, JPEG, PDF, PNG, and TIFF formats.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDisputeEvidenceText(self, request, context):
        """--
        @desc Uploads text to use as evidence for a dispute challenge.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveDisputeEvidence(self, request, context):
        """--
        @desc Returns the specific evidence metadata associated with a specific dispute.

        You must maintain a copy of the evidence you upload if you want to reference it later. You cannot
        download the evidence after you upload it.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDisputeEvidence(self, request, context):
        """--
        @desc Returns a list of evidence associated with a dispute.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDisputeEvidence(self, request, context):
        """--
        @desc Removes specified evidence from a dispute.

        Square does not send the bank any evidence that is removed. Also, you cannot remove evidence after
        submitting it to the bank using [SubmitEvidence](/reference/square/disputes-api/submit-evidence).
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DisputesApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RetrieveDispute': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveDispute,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.RetrieveDisputeRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.RetrieveDisputeResponse.SerializeToString,
            ),
            'ListDisputes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDisputes,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.ListDisputesRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.ListDisputesResponse.SerializeToString,
            ),
            'AcceptDispute': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptDispute,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.AcceptDisputeRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.AcceptDisputeResponse.SerializeToString,
            ),
            'SubmitEvidence': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitEvidence,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__pb2.SubmitEvidenceRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__pb2.SubmitEvidenceResponse.SerializeToString,
            ),
            'CreateDisputeEvidenceFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDisputeEvidenceFile,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceFileRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceFileResponse.SerializeToString,
            ),
            'CreateDisputeEvidenceText': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDisputeEvidenceText,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceTextRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceTextResponse.SerializeToString,
            ),
            'RetrieveDisputeEvidence': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveDisputeEvidence,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RetrieveDisputeEvidenceRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RetrieveDisputeEvidenceResponse.SerializeToString,
            ),
            'ListDisputeEvidence': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDisputeEvidence,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.ListDisputeEvidenceRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.ListDisputeEvidenceResponse.SerializeToString,
            ),
            'RemoveDisputeEvidence': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDisputeEvidence,
                    request_deserializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RemoveDisputeEvidenceRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RemoveDisputeEvidenceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.DisputesApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DisputesApiService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RetrieveDispute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/RetrieveDispute',
            squareup_dot_payments_dot_external_dot_disputes__pb2.RetrieveDisputeRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__pb2.RetrieveDisputeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDisputes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/ListDisputes',
            squareup_dot_payments_dot_external_dot_disputes__pb2.ListDisputesRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__pb2.ListDisputesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptDispute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/AcceptDispute',
            squareup_dot_payments_dot_external_dot_disputes__pb2.AcceptDisputeRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__pb2.AcceptDisputeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitEvidence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/SubmitEvidence',
            squareup_dot_payments_dot_external_dot_disputes__pb2.SubmitEvidenceRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__pb2.SubmitEvidenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDisputeEvidenceFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/CreateDisputeEvidenceFile',
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceFileRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDisputeEvidenceText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/CreateDisputeEvidenceText',
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceTextRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.CreateDisputeEvidenceTextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveDisputeEvidence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/RetrieveDisputeEvidence',
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RetrieveDisputeEvidenceRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RetrieveDisputeEvidenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDisputeEvidence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/ListDisputeEvidence',
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.ListDisputeEvidenceRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.ListDisputeEvidenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveDisputeEvidence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.DisputesApiService/RemoveDisputeEvidence',
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RemoveDisputeEvidenceRequest.SerializeToString,
            squareup_dot_payments_dot_external_dot_disputes__evidence__pb2.RemoveDisputeEvidenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
