# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.location_pb2 import (
    Address as squareup___common___location_pb2___Address,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

SourceOfFundsValue = typing___NewType('SourceOfFundsValue', builtin___int)
type___SourceOfFundsValue = SourceOfFundsValue
SourceOfFunds: _SourceOfFunds
class _SourceOfFunds(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SourceOfFundsValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_ENUM_DO_NOT_USE = typing___cast(SourceOfFundsValue, 0)
    VISA_CREDIT = typing___cast(SourceOfFundsValue, 1)
    VISA_DEBIT = typing___cast(SourceOfFundsValue, 2)
    VISA_PREPAID = typing___cast(SourceOfFundsValue, 3)
    CASH = typing___cast(SourceOfFundsValue, 4)
    OTHER_DEBIT = typing___cast(SourceOfFundsValue, 5)
    OTHER_CREDIT = typing___cast(SourceOfFundsValue, 6)
DEFAULT_ENUM_DO_NOT_USE = typing___cast(SourceOfFundsValue, 0)
VISA_CREDIT = typing___cast(SourceOfFundsValue, 1)
VISA_DEBIT = typing___cast(SourceOfFundsValue, 2)
VISA_PREPAID = typing___cast(SourceOfFundsValue, 3)
CASH = typing___cast(SourceOfFundsValue, 4)
OTHER_DEBIT = typing___cast(SourceOfFundsValue, 5)
OTHER_CREDIT = typing___cast(SourceOfFundsValue, 6)
type___SourceOfFunds = SourceOfFunds

PushMoneyErrorValue = typing___NewType('PushMoneyErrorValue', builtin___int)
type___PushMoneyErrorValue = PushMoneyErrorValue
PushMoneyError: _PushMoneyError
class _PushMoneyError(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PushMoneyErrorValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_PUSH_MONEY_ERROR_ENUM_DO_NOT_USE = typing___cast(PushMoneyErrorValue, 0)
    OTHER = typing___cast(PushMoneyErrorValue, 1)
    INVALID_ACCOUNT = typing___cast(PushMoneyErrorValue, 2)
    CARD_EXPIRED = typing___cast(PushMoneyErrorValue, 3)
    CURRENCY_MISMATCH = typing___cast(PushMoneyErrorValue, 4)
    BLACKLISTED_ACCOUNT = typing___cast(PushMoneyErrorValue, 5)
    INCORRECT_EXPIRATION = typing___cast(PushMoneyErrorValue, 6)
    GATEWAY_TIMEOUT = typing___cast(PushMoneyErrorValue, 7)
    EXCEEDS_APPROVAL_AMOUNT_LIMIT = typing___cast(PushMoneyErrorValue, 8)
    NOT_FULFILL_AML_REQUIREMENT = typing___cast(PushMoneyErrorValue, 9)
    EXCEEDS_WITHDRAWAL_FREQUENCY_LIMIT = typing___cast(PushMoneyErrorValue, 10)
    ISSUER_UNAVAILABLE = typing___cast(PushMoneyErrorValue, 11)
    INSUFFICIENT_FUNDS = typing___cast(PushMoneyErrorValue, 12)
    CAPTURE_CARD = typing___cast(PushMoneyErrorValue, 13)
    DECLINED_REFER_TO_ISSUER = typing___cast(PushMoneyErrorValue, 14)
    COULD_NOT_LOCATE_PAYMENT_FOR_REPLAY = typing___cast(PushMoneyErrorValue, 15)
    NO_ROUTE_FOUND = typing___cast(PushMoneyErrorValue, 16)
    COMPLIANCE_FAILURE = typing___cast(PushMoneyErrorValue, 17)
    AMOUNT_TOO_HIGH = typing___cast(PushMoneyErrorValue, 18)
DEFAULT_PUSH_MONEY_ERROR_ENUM_DO_NOT_USE = typing___cast(PushMoneyErrorValue, 0)
OTHER = typing___cast(PushMoneyErrorValue, 1)
INVALID_ACCOUNT = typing___cast(PushMoneyErrorValue, 2)
CARD_EXPIRED = typing___cast(PushMoneyErrorValue, 3)
CURRENCY_MISMATCH = typing___cast(PushMoneyErrorValue, 4)
BLACKLISTED_ACCOUNT = typing___cast(PushMoneyErrorValue, 5)
INCORRECT_EXPIRATION = typing___cast(PushMoneyErrorValue, 6)
GATEWAY_TIMEOUT = typing___cast(PushMoneyErrorValue, 7)
EXCEEDS_APPROVAL_AMOUNT_LIMIT = typing___cast(PushMoneyErrorValue, 8)
NOT_FULFILL_AML_REQUIREMENT = typing___cast(PushMoneyErrorValue, 9)
EXCEEDS_WITHDRAWAL_FREQUENCY_LIMIT = typing___cast(PushMoneyErrorValue, 10)
ISSUER_UNAVAILABLE = typing___cast(PushMoneyErrorValue, 11)
INSUFFICIENT_FUNDS = typing___cast(PushMoneyErrorValue, 12)
CAPTURE_CARD = typing___cast(PushMoneyErrorValue, 13)
DECLINED_REFER_TO_ISSUER = typing___cast(PushMoneyErrorValue, 14)
COULD_NOT_LOCATE_PAYMENT_FOR_REPLAY = typing___cast(PushMoneyErrorValue, 15)
NO_ROUTE_FOUND = typing___cast(PushMoneyErrorValue, 16)
COMPLIANCE_FAILURE = typing___cast(PushMoneyErrorValue, 17)
AMOUNT_TOO_HIGH = typing___cast(PushMoneyErrorValue, 18)
type___PushMoneyError = PushMoneyError

class SenderInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    sender_name: typing___Text = ...
    account_number: typing___Text = ...
    source_of_funds: type___SourceOfFundsValue = ...
    sender_notes: typing___Text = ...
    sender_reference_number: typing___Text = ...
    soft_descriptor: typing___Text = ...
    pan_fidelius_token: typing___Text = ...

    @property
    def address(self) -> squareup___common___location_pb2___Address: ...

    def __init__(self,
        *,
        sender_name : typing___Optional[typing___Text] = None,
        account_number : typing___Optional[typing___Text] = None,
        address : typing___Optional[squareup___common___location_pb2___Address] = None,
        source_of_funds : typing___Optional[type___SourceOfFundsValue] = None,
        sender_notes : typing___Optional[typing___Text] = None,
        sender_reference_number : typing___Optional[typing___Text] = None,
        soft_descriptor : typing___Optional[typing___Text] = None,
        pan_fidelius_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_number",b"account_number",u"address",b"address",u"pan_fidelius_token",b"pan_fidelius_token",u"sender_name",b"sender_name",u"sender_notes",b"sender_notes",u"sender_reference_number",b"sender_reference_number",u"soft_descriptor",b"soft_descriptor",u"source_of_funds",b"source_of_funds"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_number",b"account_number",u"address",b"address",u"pan_fidelius_token",b"pan_fidelius_token",u"sender_name",b"sender_name",u"sender_notes",b"sender_notes",u"sender_reference_number",b"sender_reference_number",u"soft_descriptor",b"soft_descriptor",u"source_of_funds",b"source_of_funds"]) -> None: ...
type___SenderInfo = SenderInfo
