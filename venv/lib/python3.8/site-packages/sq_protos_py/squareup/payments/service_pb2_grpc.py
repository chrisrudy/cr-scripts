# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payments import record_failed_authorization_pb2 as squareup_dot_payments_dot_record__failed__authorization__pb2
from sq_protos_py.squareup.payments import set_metadata_pb2 as squareup_dot_payments_dot_set__metadata__pb2


class EdjeServiceStub(object):
    """*
    RPC service for edje. Only contains delayed capture endpoint, as other endpoints
    exist as HTTP endpoints. Also implemented in esperanto's internal service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetMetadata = channel.unary_unary(
                '/squareup.payments.api.EdjeService/SetMetadata',
                request_serializer=squareup_dot_payments_dot_set__metadata__pb2.SetMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_set__metadata__pb2.SetMetadataResponse.FromString,
                )
        self.RecordFailedAuthorization = channel.unary_unary(
                '/squareup.payments.api.EdjeService/RecordFailedAuthorization',
                request_serializer=squareup_dot_payments_dot_record__failed__authorization__pb2.RecordFailedAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_payments_dot_record__failed__authorization__pb2.RecordFailedAuthorizationResponse.FromString,
                )


class EdjeServiceServicer(object):
    """*
    RPC service for edje. Only contains delayed capture endpoint, as other endpoints
    exist as HTTP endpoints. Also implemented in esperanto's internal service.
    """

    def SetMetadata(self, request, context):
        """* Set metadata on the payment. Currently used for setting delay_capture_reason. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordFailedAuthorization(self, request, context):
        """* Record a failed authorization that failed front-end (regis) validation. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EdjeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMetadata,
                    request_deserializer=squareup_dot_payments_dot_set__metadata__pb2.SetMetadataRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_set__metadata__pb2.SetMetadataResponse.SerializeToString,
            ),
            'RecordFailedAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordFailedAuthorization,
                    request_deserializer=squareup_dot_payments_dot_record__failed__authorization__pb2.RecordFailedAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_payments_dot_record__failed__authorization__pb2.RecordFailedAuthorizationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payments.api.EdjeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EdjeService(object):
    """*
    RPC service for edje. Only contains delayed capture endpoint, as other endpoints
    exist as HTTP endpoints. Also implemented in esperanto's internal service.
    """

    @staticmethod
    def SetMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payments.api.EdjeService/SetMetadata',
            squareup_dot_payments_dot_set__metadata__pb2.SetMetadataRequest.SerializeToString,
            squareup_dot_payments_dot_set__metadata__pb2.SetMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordFailedAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payments.api.EdjeService/RecordFailedAuthorization',
            squareup_dot_payments_dot_record__failed__authorization__pb2.RecordFailedAuthorizationRequest.SerializeToString,
            squareup_dot_payments_dot_record__failed__authorization__pb2.RecordFailedAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
