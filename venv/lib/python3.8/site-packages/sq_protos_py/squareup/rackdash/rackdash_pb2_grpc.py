# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.rackdash import rackdash_pb2 as squareup_dot_rackdash_dot_rackdash__pb2


class RackdashServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LaunchTestBatch = channel.unary_unary(
                '/squareup.rackdash.RackdashService/LaunchTestBatch',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchTestBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchTestBatchResponse.FromString,
                )
        self.GetTestBatchResult = channel.unary_unary(
                '/squareup.rackdash.RackdashService/GetTestBatchResult',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.GetTestBatchResultRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.GetTestBatchResultResponse.FromString,
                )
        self.LaunchBuildBatch = channel.unary_unary(
                '/squareup.rackdash.RackdashService/LaunchBuildBatch',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchBuildBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchBuildBatchResponse.FromString,
                )
        self.GetBuildBatchResult = channel.unary_unary(
                '/squareup.rackdash.RackdashService/GetBuildBatchResult',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.GetBuildBatchResultRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.GetBuildBatchResultResponse.FromString,
                )
        self.PostTaskStatus = channel.unary_unary(
                '/squareup.rackdash.RackdashService/PostTaskStatus',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.PostTaskStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.PostTaskStatusResponse.FromString,
                )
        self.RegisterTaskCreation = channel.unary_unary(
                '/squareup.rackdash.RackdashService/RegisterTaskCreation',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCreationRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCreationResponse.FromString,
                )
        self.RegisterTaskCompletion = channel.unary_unary(
                '/squareup.rackdash.RackdashService/RegisterTaskCompletion',
                request_serializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCompletionRequest.SerializeToString,
                response_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCompletionResponse.FromString,
                )


class RackdashServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LaunchTestBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTestBatchResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LaunchBuildBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuildBatchResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostTaskStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterTaskCreation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterTaskCompletion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RackdashServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LaunchTestBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.LaunchTestBatch,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchTestBatchRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchTestBatchResponse.SerializeToString,
            ),
            'GetTestBatchResult': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTestBatchResult,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.GetTestBatchResultRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.GetTestBatchResultResponse.SerializeToString,
            ),
            'LaunchBuildBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.LaunchBuildBatch,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchBuildBatchRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.LaunchBuildBatchResponse.SerializeToString,
            ),
            'GetBuildBatchResult': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuildBatchResult,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.GetBuildBatchResultRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.GetBuildBatchResultResponse.SerializeToString,
            ),
            'PostTaskStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PostTaskStatus,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.PostTaskStatusRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.PostTaskStatusResponse.SerializeToString,
            ),
            'RegisterTaskCreation': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterTaskCreation,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCreationRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCreationResponse.SerializeToString,
            ),
            'RegisterTaskCompletion': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterTaskCompletion,
                    request_deserializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCompletionRequest.FromString,
                    response_serializer=squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCompletionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rackdash.RackdashService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RackdashService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LaunchTestBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/LaunchTestBatch',
            squareup_dot_rackdash_dot_rackdash__pb2.LaunchTestBatchRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.LaunchTestBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTestBatchResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/GetTestBatchResult',
            squareup_dot_rackdash_dot_rackdash__pb2.GetTestBatchResultRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.GetTestBatchResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LaunchBuildBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/LaunchBuildBatch',
            squareup_dot_rackdash_dot_rackdash__pb2.LaunchBuildBatchRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.LaunchBuildBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBuildBatchResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/GetBuildBatchResult',
            squareup_dot_rackdash_dot_rackdash__pb2.GetBuildBatchResultRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.GetBuildBatchResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostTaskStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/PostTaskStatus',
            squareup_dot_rackdash_dot_rackdash__pb2.PostTaskStatusRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.PostTaskStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterTaskCreation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/RegisterTaskCreation',
            squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCreationRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCreationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterTaskCompletion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rackdash.RackdashService/RegisterTaskCompletion',
            squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCompletionRequest.SerializeToString,
            squareup_dot_rackdash_dot_rackdash__pb2.RegisterTaskCompletionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
