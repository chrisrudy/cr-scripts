# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.rolodexdiscovery.filters_pb2 import (
    FilterConditions as squareup___rolodexdiscovery___filters_pb2___FilterConditions,
)

from sq_protos_py.squareup.rolodexdiscovery.sort_pb2 import (
    Sort as squareup___rolodexdiscovery___sort_pb2___Sort,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CacheScrollCustomersJob(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...
    cache_key: typing___Text = ...
    query: typing___Text = ...

    @property
    def conditions(self) -> squareup___rolodexdiscovery___filters_pb2___FilterConditions: ...

    @property
    def sort(self) -> squareup___rolodexdiscovery___sort_pb2___Sort: ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        cache_key : typing___Optional[typing___Text] = None,
        query : typing___Optional[typing___Text] = None,
        conditions : typing___Optional[squareup___rolodexdiscovery___filters_pb2___FilterConditions] = None,
        sort : typing___Optional[squareup___rolodexdiscovery___sort_pb2___Sort] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cache_key",b"cache_key",u"conditions",b"conditions",u"merchant_token",b"merchant_token",u"query",b"query",u"sort",b"sort"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cache_key",b"cache_key",u"conditions",b"conditions",u"merchant_token",b"merchant_token",u"query",b"query",u"sort",b"sort"]) -> None: ...
type___CacheScrollCustomersJob = CacheScrollCustomersJob
