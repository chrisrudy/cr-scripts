# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.rolodexdiscovery.requests.admin import create_index_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.admin import create_indexing_backfill_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.admin import list_clusters_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.admin import update_index_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.internal import batch_synchronize_customer_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.internal import match_customer_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.internal import retrieve_customer_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2
from sq_protos_py.squareup.rolodexdiscovery.requests.internal import search_customers_pb2 as squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2


class RolodexDiscoveryServiceStub(object):
    """Internal service that provides basic operation on customers: ability to request data to be
    synchronized and data to be searched.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchCustomers = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/SearchCustomers',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2.SearchCustomerRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2.SearchCustomerResponse.FromString,
                )
        self.BatchSynchronizeCustomer = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/BatchSynchronizeCustomer',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2.BatchSynchronizeCustomerRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2.BatchSynchronizeCustomerResponse.FromString,
                )
        self.RetrieveCustomer = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/RetrieveCustomer',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2.RetrieveCustomerRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2.RetrieveCustomerResponse.FromString,
                )
        self.BulkMatchCustomer = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/BulkMatchCustomer',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2.BulkMatchCustomerRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2.BulkMatchCustomerResponse.FromString,
                )


class RolodexDiscoveryServiceServicer(object):
    """Internal service that provides basic operation on customers: ability to request data to be
    synchronized and data to be searched.
    """

    def SearchCustomers(self, request, context):
        """The search endpoint is responsible for handling requests that are meant to find customers given
        specific filters and terms. It behaves similarly to endpoints that list resources, as such even
        if no results are retrieved, the request will always be successful. It means the request was
        properly processed.

        Limitations: the dataset of a merchant changes frequently. As such, we will limit the maximum
        number of items a merchant can retrieve from a search operation to 10,000. If a consumer needs to
        have access to all results - beyond the 10,000 limit, they will need to use the scan endpoint.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchSynchronizeCustomer(self, request, context):
        """This endpoint is responsible to process requests from other services for critical customer
        modifications, i.e., RolodexDiscovery should make the updates of customers in the
        BatchSynchronizeCustomerRequest be indexed and searchable as soon as possible.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveCustomer(self, request, context):
        """This endpoint is responsible for finding the definition of a customer in our different
        indexes. It is meant to be only used for administrative or troubleshooting purposes and should
        not be used for anything else.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkMatchCustomer(self, request, context):
        """This endpoint is responsible for determining if customers match the requested searches. It is
        meant to be used to determine the smart groups that the given customers belong to.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RolodexDiscoveryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchCustomers': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchCustomers,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2.SearchCustomerRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2.SearchCustomerResponse.SerializeToString,
            ),
            'BatchSynchronizeCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchSynchronizeCustomer,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2.BatchSynchronizeCustomerRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2.BatchSynchronizeCustomerResponse.SerializeToString,
            ),
            'RetrieveCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveCustomer,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2.RetrieveCustomerRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2.RetrieveCustomerResponse.SerializeToString,
            ),
            'BulkMatchCustomer': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkMatchCustomer,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2.BulkMatchCustomerRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2.BulkMatchCustomerResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rolodexdiscovery.service.RolodexDiscoveryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RolodexDiscoveryService(object):
    """Internal service that provides basic operation on customers: ability to request data to be
    synchronized and data to be searched.
    """

    @staticmethod
    def SearchCustomers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/SearchCustomers',
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2.SearchCustomerRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_search__customers__pb2.SearchCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchSynchronizeCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/BatchSynchronizeCustomer',
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2.BatchSynchronizeCustomerRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_batch__synchronize__customer__pb2.BatchSynchronizeCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/RetrieveCustomer',
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2.RetrieveCustomerRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_retrieve__customer__pb2.RetrieveCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkMatchCustomer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryService/BulkMatchCustomer',
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2.BulkMatchCustomerRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_internal_dot_match__customer__pb2.BulkMatchCustomerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RolodexDiscoveryAdminServiceStub(object):
    """Administrative service for Rolodex Discovery: provides endpoints to manage our different
    clusters, retrieve metrics and create backfills.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListClusters = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/ListClusters',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2.ListClustersRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2.ListClustersResponse.FromString,
                )
        self.CreateIndex = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/CreateIndex',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2.CreateIndexResponse.FromString,
                )
        self.CreateIndexingBackfill = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/CreateIndexingBackfill',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2.CreateIndexingBackfillRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2.CreateIndexingBackfillResponse.FromString,
                )
        self.UpdateIndex = channel.unary_unary(
                '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/UpdateIndex',
                request_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2.UpdateIndexRequest.SerializeToString,
                response_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2.UpdateIndexResponse.FromString,
                )


class RolodexDiscoveryAdminServiceServicer(object):
    """Administrative service for Rolodex Discovery: provides endpoints to manage our different
    clusters, retrieve metrics and create backfills.
    """

    def ListClusters(self, request, context):
        """This endpoint is responsible for retrieving all the cluster configuration and returning their
        state along with the different indices they contain.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIndex(self, request, context):
        """This endpoint is responsible for creating an index (given its configuration) on the cluster it
        has been assigned to. For more details on which indexes and versions are available, see the
        application yaml's file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIndexingBackfill(self, request, context):
        """This endpoint is responsible for creating the backfill of an index (defined by its name and
        its version), a date (defaulting to now if missing) and a merchant (in case the backfill is
        only for a given merchant). This creates all the necessary backfills in the /_admin panel.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIndex(self, request, context):
        """This endpoint is responsible for updating an index (given its configuration) on the cluster it
        has been assigned to. For more details on which indexes and versions are available, see the
        application yaml's file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RolodexDiscoveryAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListClusters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClusters,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2.ListClustersRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2.ListClustersResponse.SerializeToString,
            ),
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2.CreateIndexRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2.CreateIndexResponse.SerializeToString,
            ),
            'CreateIndexingBackfill': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndexingBackfill,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2.CreateIndexingBackfillRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2.CreateIndexingBackfillResponse.SerializeToString,
            ),
            'UpdateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIndex,
                    request_deserializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2.UpdateIndexRequest.FromString,
                    response_serializer=squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2.UpdateIndexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RolodexDiscoveryAdminService(object):
    """Administrative service for Rolodex Discovery: provides endpoints to manage our different
    clusters, retrieve metrics and create backfills.
    """

    @staticmethod
    def ListClusters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/ListClusters',
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2.ListClustersRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_list__clusters__pb2.ListClustersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/CreateIndex',
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2.CreateIndexRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__index__pb2.CreateIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIndexingBackfill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/CreateIndexingBackfill',
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2.CreateIndexingBackfillRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_create__indexing__backfill__pb2.CreateIndexingBackfillResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.rolodexdiscovery.service.RolodexDiscoveryAdminService/UpdateIndex',
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2.UpdateIndexRequest.SerializeToString,
            squareup_dot_rolodexdiscovery_dot_requests_dot_admin_dot_update__index__pb2.UpdateIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
