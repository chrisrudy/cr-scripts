# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.regulator.v2.cases import core_cases_service_pb2 as squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2


class CoreCasesServiceStub(object):
    """Regulator Core Cases Service.

    - Should not contain any APIs not owned by REGPLAT.
    - Should not contain any APIs which are case type specific.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/CreateCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.CreateCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.CreateCaseResponse.FromString,
                )
        self.GetCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/GetCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetCaseResponse.FromString,
                )
        self.BatchGetCases = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/BatchGetCases',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.BatchGetCasesRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.BatchGetCasesResponse.FromString,
                )
        self.UpdateCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/UpdateCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.UpdateCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.UpdateCaseResponse.FromString,
                )
        self.AddLabelsToCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/AddLabelsToCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddLabelsToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddLabelsToCaseResponse.FromString,
                )
        self.AddAssociatedTargetsToCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/AddAssociatedTargetsToCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddAssociatedTargetsToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddAssociatedTargetsToCaseResponse.FromString,
                )
        self.LinkIrfToCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/LinkIrfToCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkIrfToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkIrfToCaseResponse.FromString,
                )
        self.LinkSspRequestToCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/LinkSspRequestToCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkSspRequestToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkSspRequestToCaseResponse.FromString,
                )
        self.GetSspRequestTokenForCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/GetSspRequestTokenForCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetSspRequestTokenForCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetSspRequestTokenForCaseResponse.FromString,
                )
        self.LinkPreviousCaseToCase = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/LinkPreviousCaseToCase',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkPreviousCaseToCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkPreviousCaseToCaseResponse.FromString,
                )
        self.FindCases = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/FindCases',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCasesRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCasesResponse.FromString,
                )
        self.FindCaseTokens = channel.unary_unary(
                '/squareup.regulator.v2.cases.service.CoreCasesService/FindCaseTokens',
                request_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCaseTokensRequest.SerializeToString,
                response_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCaseTokensResponse.FromString,
                )


class CoreCasesServiceServicer(object):
    """Regulator Core Cases Service.

    - Should not contain any APIs not owned by REGPLAT.
    - Should not contain any APIs which are case type specific.
    """

    def CreateCase(self, request, context):
        """Create a new case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCase(self, request, context):
        """Get a case by its token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetCases(self, request, context):
        """Get cases by their tokens in a batch of up to 100.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCase(self, request, context):
        """Update a case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddLabelsToCase(self, request, context):
        """Add labels to a case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAssociatedTargetsToCase(self, request, context):
        """Add associated targets to a case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkIrfToCase(self, request, context):
        """Link an IRF to a case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkSspRequestToCase(self, request, context):
        """Link an SSP request to a case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSspRequestTokenForCase(self, request, context):
        """Get the SSP request token associated with a Case, if it exists.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkPreviousCaseToCase(self, request, context):
        """Links a previous case to a response case.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCases(self, request, context):
        """Query for cases. Supports pagination up to a limit of 100 cases at a time.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCaseTokens(self, request, context):
        """Query for case tokens. Supports pagination up to a limit of 100 cases at a time.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoreCasesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.CreateCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.CreateCaseResponse.SerializeToString,
            ),
            'GetCase': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetCaseResponse.SerializeToString,
            ),
            'BatchGetCases': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetCases,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.BatchGetCasesRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.BatchGetCasesResponse.SerializeToString,
            ),
            'UpdateCase': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.UpdateCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.UpdateCaseResponse.SerializeToString,
            ),
            'AddLabelsToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.AddLabelsToCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddLabelsToCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddLabelsToCaseResponse.SerializeToString,
            ),
            'AddAssociatedTargetsToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAssociatedTargetsToCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddAssociatedTargetsToCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddAssociatedTargetsToCaseResponse.SerializeToString,
            ),
            'LinkIrfToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkIrfToCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkIrfToCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkIrfToCaseResponse.SerializeToString,
            ),
            'LinkSspRequestToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkSspRequestToCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkSspRequestToCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkSspRequestToCaseResponse.SerializeToString,
            ),
            'GetSspRequestTokenForCase': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSspRequestTokenForCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetSspRequestTokenForCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetSspRequestTokenForCaseResponse.SerializeToString,
            ),
            'LinkPreviousCaseToCase': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkPreviousCaseToCase,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkPreviousCaseToCaseRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkPreviousCaseToCaseResponse.SerializeToString,
            ),
            'FindCases': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCases,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCasesRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCasesResponse.SerializeToString,
            ),
            'FindCaseTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCaseTokens,
                    request_deserializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCaseTokensRequest.FromString,
                    response_serializer=squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCaseTokensResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.regulator.v2.cases.service.CoreCasesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoreCasesService(object):
    """Regulator Core Cases Service.

    - Should not contain any APIs not owned by REGPLAT.
    - Should not contain any APIs which are case type specific.
    """

    @staticmethod
    def CreateCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/CreateCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.CreateCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.CreateCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/GetCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetCases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/BatchGetCases',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.BatchGetCasesRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.BatchGetCasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/UpdateCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.UpdateCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.UpdateCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddLabelsToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/AddLabelsToCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddLabelsToCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddLabelsToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAssociatedTargetsToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/AddAssociatedTargetsToCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddAssociatedTargetsToCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.AddAssociatedTargetsToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkIrfToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/LinkIrfToCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkIrfToCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkIrfToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkSspRequestToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/LinkSspRequestToCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkSspRequestToCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkSspRequestToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSspRequestTokenForCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/GetSspRequestTokenForCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetSspRequestTokenForCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.GetSspRequestTokenForCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkPreviousCaseToCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/LinkPreviousCaseToCase',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkPreviousCaseToCaseRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.LinkPreviousCaseToCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/FindCases',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCasesRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCasesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCaseTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.regulator.v2.cases.service.CoreCasesService/FindCaseTokens',
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCaseTokensRequest.SerializeToString,
            squareup_dot_regulator_dot_v2_dot_cases_dot_core__cases__service__pb2.FindCaseTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
