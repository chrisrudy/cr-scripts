# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.feedsync.service import service_pb2 as squareup_dot_feedsync_dot_service_dot_service__pb2
from sq_protos_py.squareup.roster import admin_pb2 as squareup_dot_roster_dot_admin__pb2
from sq_protos_py.squareup.roster import cache_pb2 as squareup_dot_roster_dot_cache__pb2


class AdminServiceStub(object):
    """* Administrative actions for Roster service clusters 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteCacheItem = channel.unary_unary(
                '/squareup.roster.admin.AdminService/DeleteCacheItem',
                request_serializer=squareup_dot_roster_dot_admin__pb2.DeleteCacheItemRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.DeleteCacheItemResponse.FromString,
                )
        self.GetCachedData = channel.unary_unary(
                '/squareup.roster.admin.AdminService/GetCachedData',
                request_serializer=squareup_dot_roster_dot_admin__pb2.GetCachedDataRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.GetCachedDataBatchResponse.FromString,
                )
        self.GetShardInvalidationTimestamps = channel.unary_unary(
                '/squareup.roster.admin.AdminService/GetShardInvalidationTimestamps',
                request_serializer=squareup_dot_roster_dot_admin__pb2.GetShardInvalidationTimestampsRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.GetShardInvalidationTimestampsResponse.FromString,
                )
        self.UpdateShardInvalidationTimestamps = channel.unary_unary(
                '/squareup.roster.admin.AdminService/UpdateShardInvalidationTimestamps',
                request_serializer=squareup_dot_roster_dot_admin__pb2.UpdateShardInvalidationTimestampsRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.UpdateShardInvalidationTimestampsResponse.FromString,
                )
        self.CachingPolicyGet = channel.unary_unary(
                '/squareup.roster.admin.AdminService/CachingPolicyGet',
                request_serializer=squareup_dot_roster_dot_admin__pb2.CachingPolicyGetRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_cache__pb2.CachingPolicy.FromString,
                )
        self.CachingPolicySet = channel.unary_unary(
                '/squareup.roster.admin.AdminService/CachingPolicySet',
                request_serializer=squareup_dot_roster_dot_admin__pb2.CachingPolicySetRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.CachingPolicySetResponse.FromString,
                )
        self.Ping = channel.unary_unary(
                '/squareup.roster.admin.AdminService/Ping',
                request_serializer=squareup_dot_roster_dot_admin__pb2.PingRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.PongResponse.FromString,
                )
        self.SleepQuery = channel.unary_unary(
                '/squareup.roster.admin.AdminService/SleepQuery',
                request_serializer=squareup_dot_roster_dot_admin__pb2.SleepQueryRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.SleepQueryResponse.FromString,
                )
        self.GetDecodedMdsAppData = channel.unary_unary(
                '/squareup.roster.admin.AdminService/GetDecodedMdsAppData',
                request_serializer=squareup_dot_roster_dot_admin__pb2.GetDecodedMdsAppDataRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.GetDecodedMdsAppDataResponse.FromString,
                )
        self.GetDecodedFeedItems = channel.unary_unary(
                '/squareup.roster.admin.AdminService/GetDecodedFeedItems',
                request_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.GetDecodedFeedItemsResponse.FromString,
                )
        self.DecodeMdsAppData = channel.unary_unary(
                '/squareup.roster.admin.AdminService/DecodeMdsAppData',
                request_serializer=squareup_dot_roster_dot_admin__pb2.DecodeMdsAppDataRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.DecodeMdsAppDataResponse.FromString,
                )
        self.UpsertEntity = channel.unary_unary(
                '/squareup.roster.admin.AdminService/UpsertEntity',
                request_serializer=squareup_dot_roster_dot_admin__pb2.UpsertEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.UpsertEntityResponse.FromString,
                )


class AdminServiceServicer(object):
    """* Administrative actions for Roster service clusters 
    """

    def DeleteCacheItem(self, request, context):
        """*
        Delete individual CacheItem(s) from all shards in the cache. This
        is useful for debugging.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCachedData(self, request, context):
        """*
        Get cached entries from Roster's cache
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShardInvalidationTimestamps(self, request, context):
        """*
        Get shard invalidation timestamps (for the datacenter)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateShardInvalidationTimestamps(self, request, context):
        """*
        Set all of the shard invalidation timestamps (for the datacenter)
        to the same value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CachingPolicyGet(self, request, context):
        """* Get the caching policy for an endpoint. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CachingPolicySet(self, request, context):
        """* Set the caching policy for an endpoint. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        """*
        A simple, no-op endpoint used for load testing an endpoint that
        does no work, ie. it tests the performance of the framework.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SleepQuery(self, request, context):
        """* An endpoint that starts a long query to verify the query sniper kills it. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDecodedMdsAppData(self, request, context):
        """* Call the appropriate MDS endpoint and return with decoded app data. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDecodedFeedItems(self, request, context):
        """* Forward the request to FeedSourceFetch and decode the results in the response. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecodeMdsAppData(self, request, context):
        """* Decode a base64-encoded string representing MDS app data to a readable representation. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertEntity(self, request, context):
        """* Manually upsert a proto into the database for a given entity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteCacheItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCacheItem,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.DeleteCacheItemRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.DeleteCacheItemResponse.SerializeToString,
            ),
            'GetCachedData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCachedData,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.GetCachedDataRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.GetCachedDataBatchResponse.SerializeToString,
            ),
            'GetShardInvalidationTimestamps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShardInvalidationTimestamps,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.GetShardInvalidationTimestampsRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.GetShardInvalidationTimestampsResponse.SerializeToString,
            ),
            'UpdateShardInvalidationTimestamps': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateShardInvalidationTimestamps,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.UpdateShardInvalidationTimestampsRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.UpdateShardInvalidationTimestampsResponse.SerializeToString,
            ),
            'CachingPolicyGet': grpc.unary_unary_rpc_method_handler(
                    servicer.CachingPolicyGet,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.CachingPolicyGetRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_cache__pb2.CachingPolicy.SerializeToString,
            ),
            'CachingPolicySet': grpc.unary_unary_rpc_method_handler(
                    servicer.CachingPolicySet,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.CachingPolicySetRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.CachingPolicySetResponse.SerializeToString,
            ),
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.PingRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.PongResponse.SerializeToString,
            ),
            'SleepQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.SleepQuery,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.SleepQueryRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.SleepQueryResponse.SerializeToString,
            ),
            'GetDecodedMdsAppData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDecodedMdsAppData,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.GetDecodedMdsAppDataRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.GetDecodedMdsAppDataResponse.SerializeToString,
            ),
            'GetDecodedFeedItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDecodedFeedItems,
                    request_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.GetDecodedFeedItemsResponse.SerializeToString,
            ),
            'DecodeMdsAppData': grpc.unary_unary_rpc_method_handler(
                    servicer.DecodeMdsAppData,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.DecodeMdsAppDataRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.DecodeMdsAppDataResponse.SerializeToString,
            ),
            'UpsertEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertEntity,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.UpsertEntityRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.UpsertEntityResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.roster.admin.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """* Administrative actions for Roster service clusters 
    """

    @staticmethod
    def DeleteCacheItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/DeleteCacheItem',
            squareup_dot_roster_dot_admin__pb2.DeleteCacheItemRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.DeleteCacheItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCachedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/GetCachedData',
            squareup_dot_roster_dot_admin__pb2.GetCachedDataRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.GetCachedDataBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetShardInvalidationTimestamps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/GetShardInvalidationTimestamps',
            squareup_dot_roster_dot_admin__pb2.GetShardInvalidationTimestampsRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.GetShardInvalidationTimestampsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateShardInvalidationTimestamps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/UpdateShardInvalidationTimestamps',
            squareup_dot_roster_dot_admin__pb2.UpdateShardInvalidationTimestampsRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.UpdateShardInvalidationTimestampsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CachingPolicyGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/CachingPolicyGet',
            squareup_dot_roster_dot_admin__pb2.CachingPolicyGetRequest.SerializeToString,
            squareup_dot_roster_dot_cache__pb2.CachingPolicy.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CachingPolicySet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/CachingPolicySet',
            squareup_dot_roster_dot_admin__pb2.CachingPolicySetRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.CachingPolicySetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/Ping',
            squareup_dot_roster_dot_admin__pb2.PingRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.PongResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SleepQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/SleepQuery',
            squareup_dot_roster_dot_admin__pb2.SleepQueryRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.SleepQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDecodedMdsAppData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/GetDecodedMdsAppData',
            squareup_dot_roster_dot_admin__pb2.GetDecodedMdsAppDataRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.GetDecodedMdsAppDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDecodedFeedItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/GetDecodedFeedItems',
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.GetDecodedFeedItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecodeMdsAppData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/DecodeMdsAppData',
            squareup_dot_roster_dot_admin__pb2.DecodeMdsAppDataRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.DecodeMdsAppDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.AdminService/UpsertEntity',
            squareup_dot_roster_dot_admin__pb2.UpsertEntityRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.UpsertEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RosterJobsAdminServiceStub(object):
    """* Administrative actions for Roster jobs clusters 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ScheduleInvalidations = channel.unary_unary(
                '/squareup.roster.admin.RosterJobsAdminService/ScheduleInvalidations',
                request_serializer=squareup_dot_roster_dot_admin__pb2.ScheduleInvalidationsRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_admin__pb2.ScheduleInvalidationsResponse.FromString,
                )


class RosterJobsAdminServiceServicer(object):
    """* Administrative actions for Roster jobs clusters 
    """

    def ScheduleInvalidations(self, request, context):
        """* Schedule the on-demand invalidator to be run. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RosterJobsAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ScheduleInvalidations': grpc.unary_unary_rpc_method_handler(
                    servicer.ScheduleInvalidations,
                    request_deserializer=squareup_dot_roster_dot_admin__pb2.ScheduleInvalidationsRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_admin__pb2.ScheduleInvalidationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.roster.admin.RosterJobsAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RosterJobsAdminService(object):
    """* Administrative actions for Roster jobs clusters 
    """

    @staticmethod
    def ScheduleInvalidations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.admin.RosterJobsAdminService/ScheduleInvalidations',
            squareup_dot_roster_dot_admin__pb2.ScheduleInvalidationsRequest.SerializeToString,
            squareup_dot_roster_dot_admin__pb2.ScheduleInvalidationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
