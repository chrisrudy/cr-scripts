# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.common import messages_pb2 as squareup_dot_common_dot_messages__pb2
from sq_protos_py.squareup.roster import internal_pb2 as squareup_dot_roster_dot_internal__pb2


class RosterInternalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AccountStatusUserLookup = channel.unary_unary(
                '/squareup.roster.internal.RosterInternalService/AccountStatusUserLookup',
                request_serializer=squareup_dot_roster_dot_internal__pb2.AccountStatusUserLookupRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_internal__pb2.AccountStatusUserLookupResponse.FromString,
                )
        self.ForgetMerchant = channel.unary_unary(
                '/squareup.roster.internal.RosterInternalService/ForgetMerchant',
                request_serializer=squareup_dot_roster_dot_internal__pb2.ForgetMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_internal__pb2.ForgetMerchantResponse.FromString,
                )
        self.ForgetPerson = channel.unary_unary(
                '/squareup.roster.internal.RosterInternalService/ForgetPerson',
                request_serializer=squareup_dot_roster_dot_internal__pb2.ForgetPersonRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_internal__pb2.ForgetPersonResponse.FromString,
                )
        self.MerchantEmployeeRolesLookup = channel.unary_unary(
                '/squareup.roster.internal.RosterInternalService/MerchantEmployeeRolesLookup',
                request_serializer=squareup_dot_roster_dot_internal__pb2.MerchantEmployeeRolesLookupRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_internal__pb2.MerchantEmployeeRolesLookupResponse.FromString,
                )
        self.LogIdentitiesDashboardAudit = channel.unary_unary(
                '/squareup.roster.internal.RosterInternalService/LogIdentitiesDashboardAudit',
                request_serializer=squareup_dot_roster_dot_internal__pb2.LogIdentitiesDashboardAuditRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )
        self.UpdateCache = channel.unary_unary(
                '/squareup.roster.internal.RosterInternalService/UpdateCache',
                request_serializer=squareup_dot_roster_dot_internal__pb2.UpdateCacheRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_internal__pb2.UpdateCacheResponse.FromString,
                )


class RosterInternalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AccountStatusUserLookup(self, request, context):
        """* Queries the User-specific portion of AccountStatusLookup 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgetMerchant(self, request, context):
        """*
        Handles the Roster-related specifics of forgetting merchants for GDPR. You should call
        RosterGdpr.ForgetAllMerchant instead of using this directly.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgetPerson(self, request, context):
        """*
        Handles the Roster-related specifics of forgetting persons for GDPR. You should call
        RosterGdpr.ForgetAllPerson instead of using this directly.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MerchantEmployeeRolesLookup(self, request, context):
        """* Queries the employee roles defined by a single merchant 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogIdentitiesDashboardAudit(self, request, context):
        """* Logs an audit message 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCache(self, request, context):
        """* Updates the cache 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RosterInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AccountStatusUserLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.AccountStatusUserLookup,
                    request_deserializer=squareup_dot_roster_dot_internal__pb2.AccountStatusUserLookupRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_internal__pb2.AccountStatusUserLookupResponse.SerializeToString,
            ),
            'ForgetMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgetMerchant,
                    request_deserializer=squareup_dot_roster_dot_internal__pb2.ForgetMerchantRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_internal__pb2.ForgetMerchantResponse.SerializeToString,
            ),
            'ForgetPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgetPerson,
                    request_deserializer=squareup_dot_roster_dot_internal__pb2.ForgetPersonRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_internal__pb2.ForgetPersonResponse.SerializeToString,
            ),
            'MerchantEmployeeRolesLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.MerchantEmployeeRolesLookup,
                    request_deserializer=squareup_dot_roster_dot_internal__pb2.MerchantEmployeeRolesLookupRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_internal__pb2.MerchantEmployeeRolesLookupResponse.SerializeToString,
            ),
            'LogIdentitiesDashboardAudit': grpc.unary_unary_rpc_method_handler(
                    servicer.LogIdentitiesDashboardAudit,
                    request_deserializer=squareup_dot_roster_dot_internal__pb2.LogIdentitiesDashboardAuditRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
            'UpdateCache': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCache,
                    request_deserializer=squareup_dot_roster_dot_internal__pb2.UpdateCacheRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_internal__pb2.UpdateCacheResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.roster.internal.RosterInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RosterInternalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AccountStatusUserLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.internal.RosterInternalService/AccountStatusUserLookup',
            squareup_dot_roster_dot_internal__pb2.AccountStatusUserLookupRequest.SerializeToString,
            squareup_dot_roster_dot_internal__pb2.AccountStatusUserLookupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForgetMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.internal.RosterInternalService/ForgetMerchant',
            squareup_dot_roster_dot_internal__pb2.ForgetMerchantRequest.SerializeToString,
            squareup_dot_roster_dot_internal__pb2.ForgetMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForgetPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.internal.RosterInternalService/ForgetPerson',
            squareup_dot_roster_dot_internal__pb2.ForgetPersonRequest.SerializeToString,
            squareup_dot_roster_dot_internal__pb2.ForgetPersonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MerchantEmployeeRolesLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.internal.RosterInternalService/MerchantEmployeeRolesLookup',
            squareup_dot_roster_dot_internal__pb2.MerchantEmployeeRolesLookupRequest.SerializeToString,
            squareup_dot_roster_dot_internal__pb2.MerchantEmployeeRolesLookupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LogIdentitiesDashboardAudit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.internal.RosterInternalService/LogIdentitiesDashboardAudit',
            squareup_dot_roster_dot_internal__pb2.LogIdentitiesDashboardAuditRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCache(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.internal.RosterInternalService/UpdateCache',
            squareup_dot_roster_dot_internal__pb2.UpdateCacheRequest.SerializeToString,
            squareup_dot_roster_dot_internal__pb2.UpdateCacheResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
