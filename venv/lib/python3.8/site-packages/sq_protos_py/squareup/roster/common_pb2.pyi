# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.sub2.common_pb2 import (
    SubscriptionStatusValue as squareup___sub2___common_pb2___SubscriptionStatusValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class SubscriptionFeatureStatus(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    feature: typing___Text = ...
    status: squareup___sub2___common_pb2___SubscriptionStatusValue = ...
    subscription_token: typing___Text = ...

    def __init__(self,
        *,
        feature : typing___Optional[typing___Text] = None,
        status : typing___Optional[squareup___sub2___common_pb2___SubscriptionStatusValue] = None,
        subscription_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"feature",b"feature",u"status",b"status",u"subscription_token",b"subscription_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"feature",b"feature",u"status",b"status",u"subscription_token",b"subscription_token"]) -> None: ...
type___SubscriptionFeatureStatus = SubscriptionFeatureStatus

class TippingPreference(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CalculationPhaseValue = typing___NewType('CalculationPhaseValue', builtin___int)
    type___CalculationPhaseValue = CalculationPhaseValue
    CalculationPhase: _CalculationPhase
    class _CalculationPhase(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TippingPreference.CalculationPhaseValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        POST_TAX_TIP_CALCULATION = typing___cast(TippingPreference.CalculationPhaseValue, 0)
        PRE_TAX_TIP_CALCULATION = typing___cast(TippingPreference.CalculationPhaseValue, 1)
    POST_TAX_TIP_CALCULATION = typing___cast(TippingPreference.CalculationPhaseValue, 0)
    PRE_TAX_TIP_CALCULATION = typing___cast(TippingPreference.CalculationPhaseValue, 1)
    type___CalculationPhase = CalculationPhase

    enabled: builtin___bool = ...
    use_custom_percentages: builtin___bool = ...
    custom_percentages: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...
    use_manual_tip_entry: builtin___bool = ...
    calculation_phase: type___TippingPreference.CalculationPhaseValue = ...

    def __init__(self,
        *,
        enabled : typing___Optional[builtin___bool] = None,
        use_custom_percentages : typing___Optional[builtin___bool] = None,
        custom_percentages : typing___Optional[typing___Iterable[builtin___float]] = None,
        use_manual_tip_entry : typing___Optional[builtin___bool] = None,
        calculation_phase : typing___Optional[type___TippingPreference.CalculationPhaseValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"calculation_phase",b"calculation_phase",u"enabled",b"enabled",u"use_custom_percentages",b"use_custom_percentages",u"use_manual_tip_entry",b"use_manual_tip_entry"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"calculation_phase",b"calculation_phase",u"custom_percentages",b"custom_percentages",u"enabled",b"enabled",u"use_custom_percentages",b"use_custom_percentages",u"use_manual_tip_entry",b"use_manual_tip_entry"]) -> None: ...
type___TippingPreference = TippingPreference
