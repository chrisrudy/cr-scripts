# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.roster import platform_pb2 as squareup_dot_roster_dot_platform__pb2


class PlatformServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPlatformAccount = channel.unary_unary(
                '/squareup.roster.platform.PlatformService/GetPlatformAccount',
                request_serializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountResponse.FromString,
                )
        self.BatchGetLegalEntityToken = channel.unary_unary(
                '/squareup.roster.platform.PlatformService/BatchGetLegalEntityToken',
                request_serializer=squareup_dot_roster_dot_platform__pb2.BatchGetLegalEntityTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_platform__pb2.BatchGetLegalEntityTokenResponse.FromString,
                )
        self.UpdatePlatformAccount = channel.unary_unary(
                '/squareup.roster.platform.PlatformService/UpdatePlatformAccount',
                request_serializer=squareup_dot_roster_dot_platform__pb2.UpdatePlatformAccountRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_platform__pb2.UpdatePlatformAccountResponse.FromString,
                )
        self.CreatePlatformAccount = channel.unary_unary(
                '/squareup.roster.platform.PlatformService/CreatePlatformAccount',
                request_serializer=squareup_dot_roster_dot_platform__pb2.CreatePlatformAccountRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_platform__pb2.CreatePlatformAccountResponse.FromString,
                )
        self.GetPlatformAccountsForLegalEntity = channel.unary_unary(
                '/squareup.roster.platform.PlatformService/GetPlatformAccountsForLegalEntity',
                request_serializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForLegalEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForLegalEntityResponse.FromString,
                )
        self.GetPlatformAccountsForCreator = channel.unary_unary(
                '/squareup.roster.platform.PlatformService/GetPlatformAccountsForCreator',
                request_serializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForCreatorRequest.SerializeToString,
                response_deserializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForCreatorResponse.FromString,
                )


class PlatformServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPlatformAccount(self, request, context):
        """Reads an existing platform account
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetLegalEntityToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePlatformAccount(self, request, context):
        """The provided PlatformAccount must specify:
        token
        version (amd must match the current version of the platform account)
        status
        and will ignore values for:
        modified_ts
        created_ts
        These fields will be set by the server appropriately and returned.
        Will return the updated platform account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePlatformAccount(self, request, context):
        """The provided CreatePlatformAccountRequest must specify:
        status
        Will return the newly created platform account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlatformAccountsForLegalEntity(self, request, context):
        """Returns all PlatformAccounts that are associated with a given LegalEntity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlatformAccountsForCreator(self, request, context):
        """Returns all PlatformAccounts that are associated with a given Creator
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlatformServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPlatformAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatformAccount,
                    request_deserializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountResponse.SerializeToString,
            ),
            'BatchGetLegalEntityToken': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetLegalEntityToken,
                    request_deserializer=squareup_dot_roster_dot_platform__pb2.BatchGetLegalEntityTokenRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_platform__pb2.BatchGetLegalEntityTokenResponse.SerializeToString,
            ),
            'UpdatePlatformAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePlatformAccount,
                    request_deserializer=squareup_dot_roster_dot_platform__pb2.UpdatePlatformAccountRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_platform__pb2.UpdatePlatformAccountResponse.SerializeToString,
            ),
            'CreatePlatformAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlatformAccount,
                    request_deserializer=squareup_dot_roster_dot_platform__pb2.CreatePlatformAccountRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_platform__pb2.CreatePlatformAccountResponse.SerializeToString,
            ),
            'GetPlatformAccountsForLegalEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatformAccountsForLegalEntity,
                    request_deserializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForLegalEntityRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForLegalEntityResponse.SerializeToString,
            ),
            'GetPlatformAccountsForCreator': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlatformAccountsForCreator,
                    request_deserializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForCreatorRequest.FromString,
                    response_serializer=squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForCreatorResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.roster.platform.PlatformService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PlatformService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPlatformAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.platform.PlatformService/GetPlatformAccount',
            squareup_dot_roster_dot_platform__pb2.GetPlatformAccountRequest.SerializeToString,
            squareup_dot_roster_dot_platform__pb2.GetPlatformAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetLegalEntityToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.platform.PlatformService/BatchGetLegalEntityToken',
            squareup_dot_roster_dot_platform__pb2.BatchGetLegalEntityTokenRequest.SerializeToString,
            squareup_dot_roster_dot_platform__pb2.BatchGetLegalEntityTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePlatformAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.platform.PlatformService/UpdatePlatformAccount',
            squareup_dot_roster_dot_platform__pb2.UpdatePlatformAccountRequest.SerializeToString,
            squareup_dot_roster_dot_platform__pb2.UpdatePlatformAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePlatformAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.platform.PlatformService/CreatePlatformAccount',
            squareup_dot_roster_dot_platform__pb2.CreatePlatformAccountRequest.SerializeToString,
            squareup_dot_roster_dot_platform__pb2.CreatePlatformAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlatformAccountsForLegalEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.platform.PlatformService/GetPlatformAccountsForLegalEntity',
            squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForLegalEntityRequest.SerializeToString,
            squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForLegalEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlatformAccountsForCreator(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.roster.platform.PlatformService/GetPlatformAccountsForCreator',
            squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForCreatorRequest.SerializeToString,
            squareup_dot_roster_dot_platform__pb2.GetPlatformAccountsForCreatorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
