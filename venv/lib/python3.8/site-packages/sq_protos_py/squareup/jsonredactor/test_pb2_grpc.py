# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.jsonredactor import test_pb2 as squareup_dot_jsonredactor_dot_test__pb2


class RedactedTestServiceStub(object):
    """Sets up a fake service so that we can test redacted annotations
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RedactedTestMethod = channel.unary_unary(
                '/squareup.jsonredactor.test.RedactedTestService/RedactedTestMethod',
                request_serializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedTestRequest.SerializeToString,
                response_deserializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedTestResponse.FromString,
                )
        self.RedactedFieldNestedTestMethod = channel.unary_unary(
                '/squareup.jsonredactor.test.RedactedTestService/RedactedFieldNestedTestMethod',
                request_serializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedFieldNestedTestRequest.SerializeToString,
                response_deserializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedFieldNestedTestResponse.FromString,
                )
        self.NotRedactedTestMethod = channel.unary_unary(
                '/squareup.jsonredactor.test.RedactedTestService/NotRedactedTestMethod',
                request_serializer=squareup_dot_jsonredactor_dot_test__pb2.NotRedactedTestRequest.SerializeToString,
                response_deserializer=squareup_dot_jsonredactor_dot_test__pb2.NotRedactedTestResponse.FromString,
                )


class RedactedTestServiceServicer(object):
    """Sets up a fake service so that we can test redacted annotations
    """

    def RedactedTestMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedactedFieldNestedTestMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotRedactedTestMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RedactedTestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RedactedTestMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.RedactedTestMethod,
                    request_deserializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedTestRequest.FromString,
                    response_serializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedTestResponse.SerializeToString,
            ),
            'RedactedFieldNestedTestMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.RedactedFieldNestedTestMethod,
                    request_deserializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedFieldNestedTestRequest.FromString,
                    response_serializer=squareup_dot_jsonredactor_dot_test__pb2.RedactedFieldNestedTestResponse.SerializeToString,
            ),
            'NotRedactedTestMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.NotRedactedTestMethod,
                    request_deserializer=squareup_dot_jsonredactor_dot_test__pb2.NotRedactedTestRequest.FromString,
                    response_serializer=squareup_dot_jsonredactor_dot_test__pb2.NotRedactedTestResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.jsonredactor.test.RedactedTestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RedactedTestService(object):
    """Sets up a fake service so that we can test redacted annotations
    """

    @staticmethod
    def RedactedTestMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jsonredactor.test.RedactedTestService/RedactedTestMethod',
            squareup_dot_jsonredactor_dot_test__pb2.RedactedTestRequest.SerializeToString,
            squareup_dot_jsonredactor_dot_test__pb2.RedactedTestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedactedFieldNestedTestMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jsonredactor.test.RedactedTestService/RedactedFieldNestedTestMethod',
            squareup_dot_jsonredactor_dot_test__pb2.RedactedFieldNestedTestRequest.SerializeToString,
            squareup_dot_jsonredactor_dot_test__pb2.RedactedFieldNestedTestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotRedactedTestMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jsonredactor.test.RedactedTestService/NotRedactedTestMethod',
            squareup_dot_jsonredactor_dot_test__pb2.NotRedactedTestRequest.SerializeToString,
            squareup_dot_jsonredactor_dot_test__pb2.NotRedactedTestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
