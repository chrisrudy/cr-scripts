# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.experiments import service_pb2 as squareup_dot_experiments_dot_service__pb2


class ExperimentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetExperiment = channel.unary_unary(
                '/squareup.experiments.service.ExperimentsService/GetExperiment',
                request_serializer=squareup_dot_experiments_dot_service__pb2.GetExperimentRequest.SerializeToString,
                response_deserializer=squareup_dot_experiments_dot_service__pb2.GetExperimentResponse.FromString,
                )
        self.GetAllExperiments = channel.unary_unary(
                '/squareup.experiments.service.ExperimentsService/GetAllExperiments',
                request_serializer=squareup_dot_experiments_dot_service__pb2.GetAllExperimentsRequest.SerializeToString,
                response_deserializer=squareup_dot_experiments_dot_service__pb2.GetAllExperimentsResponse.FromString,
                )
        self.UpdateExperiment = channel.unary_unary(
                '/squareup.experiments.service.ExperimentsService/UpdateExperiment',
                request_serializer=squareup_dot_experiments_dot_service__pb2.UpdateExperimentRequest.SerializeToString,
                response_deserializer=squareup_dot_experiments_dot_service__pb2.UpdateExperimentResponse.FromString,
                )


class ExperimentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetExperiment(self, request, context):
        """*
        Gets an experiment. An error is returned when a specified experiment is not found.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllExperiments(self, request, context):
        """*
        Gets details on all existing experiments.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExperiment(self, request, context):
        """*
        Updates an experiment. An error is returned when a specified experiment is not found.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiment,
                    request_deserializer=squareup_dot_experiments_dot_service__pb2.GetExperimentRequest.FromString,
                    response_serializer=squareup_dot_experiments_dot_service__pb2.GetExperimentResponse.SerializeToString,
            ),
            'GetAllExperiments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllExperiments,
                    request_deserializer=squareup_dot_experiments_dot_service__pb2.GetAllExperimentsRequest.FromString,
                    response_serializer=squareup_dot_experiments_dot_service__pb2.GetAllExperimentsResponse.SerializeToString,
            ),
            'UpdateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExperiment,
                    request_deserializer=squareup_dot_experiments_dot_service__pb2.UpdateExperimentRequest.FromString,
                    response_serializer=squareup_dot_experiments_dot_service__pb2.UpdateExperimentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.experiments.service.ExperimentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.experiments.service.ExperimentsService/GetExperiment',
            squareup_dot_experiments_dot_service__pb2.GetExperimentRequest.SerializeToString,
            squareup_dot_experiments_dot_service__pb2.GetExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllExperiments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.experiments.service.ExperimentsService/GetAllExperiments',
            squareup_dot_experiments_dot_service__pb2.GetAllExperimentsRequest.SerializeToString,
            squareup_dot_experiments_dot_service__pb2.GetAllExperimentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.experiments.service.ExperimentsService/UpdateExperiment',
            squareup_dot_experiments_dot_service__pb2.UpdateExperimentRequest.SerializeToString,
            squareup_dot_experiments_dot_service__pb2.UpdateExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
