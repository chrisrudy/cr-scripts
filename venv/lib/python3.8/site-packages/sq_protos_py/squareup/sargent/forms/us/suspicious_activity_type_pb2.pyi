# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class SuspiciousActivityType(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def fraud(self) -> type___FraudActivity: ...

    @property
    def identity_fraud(self) -> type___IdentificationFraudActivity: ...

    @property
    def insurance_fraud(self) -> type___InsuranceFraudActivity: ...

    @property
    def laundering(self) -> type___LaunderingActivity: ...

    @property
    def miscellaneous(self) -> type___MiscellaneousActivity: ...

    @property
    def product(self) -> type___ProductFraudActivity: ...

    @property
    def securities(self) -> type___SecuritiesFraudActivity: ...

    @property
    def structuring(self) -> type___StructuringActivity: ...

    @property
    def terrorism(self) -> type___TerroristFinancingActivity: ...

    @property
    def cyber(self) -> type___CyberActivity: ...

    @property
    def gaming(self) -> type___GamingFraudActivity: ...

    @property
    def mortgage(self) -> type___MortgageFraudActivity: ...

    @property
    def instruments(self) -> type___InstrumentsFraudActivity: ...

    def __init__(self,
        *,
        fraud : typing___Optional[type___FraudActivity] = None,
        identity_fraud : typing___Optional[type___IdentificationFraudActivity] = None,
        insurance_fraud : typing___Optional[type___InsuranceFraudActivity] = None,
        laundering : typing___Optional[type___LaunderingActivity] = None,
        miscellaneous : typing___Optional[type___MiscellaneousActivity] = None,
        product : typing___Optional[type___ProductFraudActivity] = None,
        securities : typing___Optional[type___SecuritiesFraudActivity] = None,
        structuring : typing___Optional[type___StructuringActivity] = None,
        terrorism : typing___Optional[type___TerroristFinancingActivity] = None,
        cyber : typing___Optional[type___CyberActivity] = None,
        gaming : typing___Optional[type___GamingFraudActivity] = None,
        mortgage : typing___Optional[type___MortgageFraudActivity] = None,
        instruments : typing___Optional[type___InstrumentsFraudActivity] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cyber",b"cyber",u"fraud",b"fraud",u"gaming",b"gaming",u"identity_fraud",b"identity_fraud",u"instruments",b"instruments",u"insurance_fraud",b"insurance_fraud",u"laundering",b"laundering",u"miscellaneous",b"miscellaneous",u"mortgage",b"mortgage",u"product",b"product",u"securities",b"securities",u"structuring",b"structuring",u"terrorism",b"terrorism",u"type_information",b"type_information"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cyber",b"cyber",u"fraud",b"fraud",u"gaming",b"gaming",u"identity_fraud",b"identity_fraud",u"instruments",b"instruments",u"insurance_fraud",b"insurance_fraud",u"laundering",b"laundering",u"miscellaneous",b"miscellaneous",u"mortgage",b"mortgage",u"product",b"product",u"securities",b"securities",u"structuring",b"structuring",u"terrorism",b"terrorism",u"type_information",b"type_information"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"type_information",b"type_information"]) -> typing_extensions___Literal["fraud","identity_fraud","insurance_fraud","laundering","miscellaneous","product","securities","structuring","terrorism","cyber","gaming","mortgage","instruments"]: ...
type___SuspiciousActivityType = SuspiciousActivityType

class CyberActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CyberActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_CYBER = typing___cast(CyberActivity.SubtypeValue, 0)
        AGAINST_FINANCIAL_INSTITUTION = typing___cast(CyberActivity.SubtypeValue, 1)
        AGAINST_FINANCIAL_CUSTOMER = typing___cast(CyberActivity.SubtypeValue, 2)
    OTHER_CYBER = typing___cast(CyberActivity.SubtypeValue, 0)
    AGAINST_FINANCIAL_INSTITUTION = typing___cast(CyberActivity.SubtypeValue, 1)
    AGAINST_FINANCIAL_CUSTOMER = typing___cast(CyberActivity.SubtypeValue, 2)
    type___Subtype = Subtype

    subtype: type___CyberActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___CyberActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___CyberActivity = CyberActivity

class FraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_FRAUD = typing___cast(FraudActivity.SubtypeValue, 0)
        CARD = typing___cast(FraudActivity.SubtypeValue, 1)
        ACH = typing___cast(FraudActivity.SubtypeValue, 2)
        BUSINESS_LOAN = typing___cast(FraudActivity.SubtypeValue, 3)
        CHECK = typing___cast(FraudActivity.SubtypeValue, 4)
        CONSUMER_LOAN = typing___cast(FraudActivity.SubtypeValue, 5)
        HEALTHCARE = typing___cast(FraudActivity.SubtypeValue, 6)
        MAIL = typing___cast(FraudActivity.SubtypeValue, 7)
        MASS_MARKETING = typing___cast(FraudActivity.SubtypeValue, 8)
        PYRAMID_SCHEME = typing___cast(FraudActivity.SubtypeValue, 9)
        WIRE = typing___cast(FraudActivity.SubtypeValue, 10)
        ADVANCE_FEE = typing___cast(FraudActivity.SubtypeValue, 11)
        PONZI_SCHEME = typing___cast(FraudActivity.SubtypeValue, 12)
        SECURITIES_FRAUD = typing___cast(FraudActivity.SubtypeValue, 13)
    OTHER_FRAUD = typing___cast(FraudActivity.SubtypeValue, 0)
    CARD = typing___cast(FraudActivity.SubtypeValue, 1)
    ACH = typing___cast(FraudActivity.SubtypeValue, 2)
    BUSINESS_LOAN = typing___cast(FraudActivity.SubtypeValue, 3)
    CHECK = typing___cast(FraudActivity.SubtypeValue, 4)
    CONSUMER_LOAN = typing___cast(FraudActivity.SubtypeValue, 5)
    HEALTHCARE = typing___cast(FraudActivity.SubtypeValue, 6)
    MAIL = typing___cast(FraudActivity.SubtypeValue, 7)
    MASS_MARKETING = typing___cast(FraudActivity.SubtypeValue, 8)
    PYRAMID_SCHEME = typing___cast(FraudActivity.SubtypeValue, 9)
    WIRE = typing___cast(FraudActivity.SubtypeValue, 10)
    ADVANCE_FEE = typing___cast(FraudActivity.SubtypeValue, 11)
    PONZI_SCHEME = typing___cast(FraudActivity.SubtypeValue, 12)
    SECURITIES_FRAUD = typing___cast(FraudActivity.SubtypeValue, 13)
    type___Subtype = Subtype

    subtype: type___FraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___FraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___FraudActivity = FraudActivity

class GamingFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GamingFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_GAMING = typing___cast(GamingFraudActivity.SubtypeValue, 0)
        CHIP_WALKING = typing___cast(GamingFraudActivity.SubtypeValue, 1)
        MINIMAL_GAMING_LARGE_TRANSACTIONS = typing___cast(GamingFraudActivity.SubtypeValue, 2)
        SUSPICIOUS_CHECKS_MARKERS = typing___cast(GamingFraudActivity.SubtypeValue, 3)
        UNKNOWN_SOURCE_CHIPS = typing___cast(GamingFraudActivity.SubtypeValue, 4)
    OTHER_GAMING = typing___cast(GamingFraudActivity.SubtypeValue, 0)
    CHIP_WALKING = typing___cast(GamingFraudActivity.SubtypeValue, 1)
    MINIMAL_GAMING_LARGE_TRANSACTIONS = typing___cast(GamingFraudActivity.SubtypeValue, 2)
    SUSPICIOUS_CHECKS_MARKERS = typing___cast(GamingFraudActivity.SubtypeValue, 3)
    UNKNOWN_SOURCE_CHIPS = typing___cast(GamingFraudActivity.SubtypeValue, 4)
    type___Subtype = Subtype

    subtype: type___GamingFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___GamingFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___GamingFraudActivity = GamingFraudActivity

class IdentificationFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[IdentificationFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_IDENTIFICATION_FRAUD = typing___cast(IdentificationFraudActivity.SubtypeValue, 0)
        SPELLING_CHANGES = typing___cast(IdentificationFraudActivity.SubtypeValue, 1)
        QUESTIONABLE_DOCUMENTATION = typing___cast(IdentificationFraudActivity.SubtypeValue, 2)
        MULTIPLE_IDENTITIES = typing___cast(IdentificationFraudActivity.SubtypeValue, 3)
        SIMILAR_IDENTITIES = typing___cast(IdentificationFraudActivity.SubtypeValue, 4)
        REFUSED_DOCUMENTATION = typing___cast(IdentificationFraudActivity.SubtypeValue, 5)
        QUESTIONABLE_IDENTIFICATION = typing___cast(IdentificationFraudActivity.SubtypeValue, 6)
    OTHER_IDENTIFICATION_FRAUD = typing___cast(IdentificationFraudActivity.SubtypeValue, 0)
    SPELLING_CHANGES = typing___cast(IdentificationFraudActivity.SubtypeValue, 1)
    QUESTIONABLE_DOCUMENTATION = typing___cast(IdentificationFraudActivity.SubtypeValue, 2)
    MULTIPLE_IDENTITIES = typing___cast(IdentificationFraudActivity.SubtypeValue, 3)
    SIMILAR_IDENTITIES = typing___cast(IdentificationFraudActivity.SubtypeValue, 4)
    REFUSED_DOCUMENTATION = typing___cast(IdentificationFraudActivity.SubtypeValue, 5)
    QUESTIONABLE_IDENTIFICATION = typing___cast(IdentificationFraudActivity.SubtypeValue, 6)
    type___Subtype = Subtype

    subtype: type___IdentificationFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___IdentificationFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___IdentificationFraudActivity = IdentificationFraudActivity

class InstrumentsFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[InstrumentsFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_INSTRUMENTS_FRAUD = typing___cast(InstrumentsFraudActivity.SubtypeValue, 0)
        FUNDS_TRANSFER = typing___cast(InstrumentsFraudActivity.SubtypeValue, 1)
        CASHIERS_CHECK = typing___cast(InstrumentsFraudActivity.SubtypeValue, 2)
        FOREIGN_CURRENCY = typing___cast(InstrumentsFraudActivity.SubtypeValue, 3)
        GAMING = typing___cast(InstrumentsFraudActivity.SubtypeValue, 4)
        GOVERNMENT_PAYMENTS = typing___cast(InstrumentsFraudActivity.SubtypeValue, 5)
        MONEY_ORDERS = typing___cast(InstrumentsFraudActivity.SubtypeValue, 6)
        PERSONAL_BUSINESS_CHECK = typing___cast(InstrumentsFraudActivity.SubtypeValue, 7)
        TRAVELERS_CHECK = typing___cast(InstrumentsFraudActivity.SubtypeValue, 8)
        US_CURRENCY = typing___cast(InstrumentsFraudActivity.SubtypeValue, 9)
    OTHER_INSTRUMENTS_FRAUD = typing___cast(InstrumentsFraudActivity.SubtypeValue, 0)
    FUNDS_TRANSFER = typing___cast(InstrumentsFraudActivity.SubtypeValue, 1)
    CASHIERS_CHECK = typing___cast(InstrumentsFraudActivity.SubtypeValue, 2)
    FOREIGN_CURRENCY = typing___cast(InstrumentsFraudActivity.SubtypeValue, 3)
    GAMING = typing___cast(InstrumentsFraudActivity.SubtypeValue, 4)
    GOVERNMENT_PAYMENTS = typing___cast(InstrumentsFraudActivity.SubtypeValue, 5)
    MONEY_ORDERS = typing___cast(InstrumentsFraudActivity.SubtypeValue, 6)
    PERSONAL_BUSINESS_CHECK = typing___cast(InstrumentsFraudActivity.SubtypeValue, 7)
    TRAVELERS_CHECK = typing___cast(InstrumentsFraudActivity.SubtypeValue, 8)
    US_CURRENCY = typing___cast(InstrumentsFraudActivity.SubtypeValue, 9)
    type___Subtype = Subtype

    subtype: type___InstrumentsFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___InstrumentsFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___InstrumentsFraudActivity = InstrumentsFraudActivity

class InsuranceFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[InsuranceFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_INSURANCE_FRAUD = typing___cast(InsuranceFraudActivity.SubtypeValue, 0)
        EXCESSIVE = typing___cast(InsuranceFraudActivity.SubtypeValue, 1)
        CASH_BORROWING = typing___cast(InsuranceFraudActivity.SubtypeValue, 2)
        UNRELATED_THIRD_PARTY = typing___cast(InsuranceFraudActivity.SubtypeValue, 3)
        LIFE_SETTLEMENT = typing___cast(InsuranceFraudActivity.SubtypeValue, 4)
        TERMINATION = typing___cast(InsuranceFraudActivity.SubtypeValue, 5)
        UNCLEAR_INTEREST = typing___cast(InsuranceFraudActivity.SubtypeValue, 6)
    OTHER_INSURANCE_FRAUD = typing___cast(InsuranceFraudActivity.SubtypeValue, 0)
    EXCESSIVE = typing___cast(InsuranceFraudActivity.SubtypeValue, 1)
    CASH_BORROWING = typing___cast(InsuranceFraudActivity.SubtypeValue, 2)
    UNRELATED_THIRD_PARTY = typing___cast(InsuranceFraudActivity.SubtypeValue, 3)
    LIFE_SETTLEMENT = typing___cast(InsuranceFraudActivity.SubtypeValue, 4)
    TERMINATION = typing___cast(InsuranceFraudActivity.SubtypeValue, 5)
    UNCLEAR_INTEREST = typing___cast(InsuranceFraudActivity.SubtypeValue, 6)
    type___Subtype = Subtype

    subtype: type___InsuranceFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___InsuranceFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___InsuranceFraudActivity = InsuranceFraudActivity

class LaunderingActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LaunderingActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_LAUNDERING = typing___cast(LaunderingActivity.SubtypeValue, 0)
        SOURCE_OF_FUNDS = typing___cast(LaunderingActivity.SubtypeValue, 1)
        EXCHANGE_OF_CURRENCIES = typing___cast(LaunderingActivity.SubtypeValue, 2)
        USE_OF_MULTIPLE_ACCOUNTS = typing___cast(LaunderingActivity.SubtypeValue, 3)
        TRANSACTION_OUT_OF_PATTERN = typing___cast(LaunderingActivity.SubtypeValue, 4)
        EXCHANGE_OF_BILLS = typing___cast(LaunderingActivity.SubtypeValue, 5)
        PHYSICAL_CONDITION_OF_FUNDS = typing___cast(LaunderingActivity.SubtypeValue, 6)
        DESIGNATION_OF_BENEFICIARIES = typing___cast(LaunderingActivity.SubtypeValue, 7)
        WIRE_TRANSFERS = typing___cast(LaunderingActivity.SubtypeValue, 8)
        GOVERNMENT_PAYMENTS = typing___cast(LaunderingActivity.SubtypeValue, 9)
        NONCASH_INSTRUMENTS = typing___cast(LaunderingActivity.SubtypeValue, 10)
        THIRD_PARTY_TRANSACTORS = typing___cast(LaunderingActivity.SubtypeValue, 11)
        TRADE_BASED = typing___cast(LaunderingActivity.SubtypeValue, 12)
        FUNNEL_ACCOUNT = typing___cast(LaunderingActivity.SubtypeValue, 13)
    OTHER_LAUNDERING = typing___cast(LaunderingActivity.SubtypeValue, 0)
    SOURCE_OF_FUNDS = typing___cast(LaunderingActivity.SubtypeValue, 1)
    EXCHANGE_OF_CURRENCIES = typing___cast(LaunderingActivity.SubtypeValue, 2)
    USE_OF_MULTIPLE_ACCOUNTS = typing___cast(LaunderingActivity.SubtypeValue, 3)
    TRANSACTION_OUT_OF_PATTERN = typing___cast(LaunderingActivity.SubtypeValue, 4)
    EXCHANGE_OF_BILLS = typing___cast(LaunderingActivity.SubtypeValue, 5)
    PHYSICAL_CONDITION_OF_FUNDS = typing___cast(LaunderingActivity.SubtypeValue, 6)
    DESIGNATION_OF_BENEFICIARIES = typing___cast(LaunderingActivity.SubtypeValue, 7)
    WIRE_TRANSFERS = typing___cast(LaunderingActivity.SubtypeValue, 8)
    GOVERNMENT_PAYMENTS = typing___cast(LaunderingActivity.SubtypeValue, 9)
    NONCASH_INSTRUMENTS = typing___cast(LaunderingActivity.SubtypeValue, 10)
    THIRD_PARTY_TRANSACTORS = typing___cast(LaunderingActivity.SubtypeValue, 11)
    TRADE_BASED = typing___cast(LaunderingActivity.SubtypeValue, 12)
    FUNNEL_ACCOUNT = typing___cast(LaunderingActivity.SubtypeValue, 13)
    type___Subtype = Subtype

    subtype: type___LaunderingActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___LaunderingActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___LaunderingActivity = LaunderingActivity

class MiscellaneousActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[MiscellaneousActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_MISCELLANEOUS = typing___cast(MiscellaneousActivity.SubtypeValue, 0)
        ACCOUNT_TAKEOVER = typing___cast(MiscellaneousActivity.SubtypeValue, 1)
        IDENTITY_THEFT = typing___cast(MiscellaneousActivity.SubtypeValue, 2)
        MULTIPLE_TRANSACTION_LOCATIONS = typing___cast(MiscellaneousActivity.SubtypeValue, 3)
        PURPOSELESS_TRANSACTION = typing___cast(MiscellaneousActivity.SubtypeValue, 4)
        INDIVIDUALS_WORKING_TOGETHER = typing___cast(MiscellaneousActivity.SubtypeValue, 5)
        EMBEZZLEMENT = typing___cast(MiscellaneousActivity.SubtypeValue, 6)
        BRIBERY = typing___cast(MiscellaneousActivity.SubtypeValue, 7)
        COUNTERFEIT = typing___cast(MiscellaneousActivity.SubtypeValue, 8)
        ELDER_EXPLOITATION = typing___cast(MiscellaneousActivity.SubtypeValue, 9)
        FORGERIES = typing___cast(MiscellaneousActivity.SubtypeValue, 10)
        NO_CONCERN_FOR_PENALTIES = typing___cast(MiscellaneousActivity.SubtypeValue, 11)
        FREE_LOOK_MISUSE = typing___cast(MiscellaneousActivity.SubtypeValue, 12)
        SELF_DEALING = typing___cast(MiscellaneousActivity.SubtypeValue, 13)
        DOMESTIC_CORRUPTION = typing___cast(MiscellaneousActivity.SubtypeValue, 14)
        FOREIGN_CORRUPTION = typing___cast(MiscellaneousActivity.SubtypeValue, 15)
        INFORMAL_VALUE_TRANSFER = typing___cast(MiscellaneousActivity.SubtypeValue, 16)
        ELECTRONIC_INTRUSION = typing___cast(MiscellaneousActivity.SubtypeValue, 17)
        UNLICENSED_MSB = typing___cast(MiscellaneousActivity.SubtypeValue, 18)
        HUMAN_SMUGGLING = typing___cast(MiscellaneousActivity.SubtypeValue, 19)
        HUMAN_TRAFFICKING = typing___cast(MiscellaneousActivity.SubtypeValue, 20)
        MISUSE_POSITION = typing___cast(MiscellaneousActivity.SubtypeValue, 21)
        FOREIGN_HIGHRISK_TRANSACTION = typing___cast(MiscellaneousActivity.SubtypeValue, 22)
    OTHER_MISCELLANEOUS = typing___cast(MiscellaneousActivity.SubtypeValue, 0)
    ACCOUNT_TAKEOVER = typing___cast(MiscellaneousActivity.SubtypeValue, 1)
    IDENTITY_THEFT = typing___cast(MiscellaneousActivity.SubtypeValue, 2)
    MULTIPLE_TRANSACTION_LOCATIONS = typing___cast(MiscellaneousActivity.SubtypeValue, 3)
    PURPOSELESS_TRANSACTION = typing___cast(MiscellaneousActivity.SubtypeValue, 4)
    INDIVIDUALS_WORKING_TOGETHER = typing___cast(MiscellaneousActivity.SubtypeValue, 5)
    EMBEZZLEMENT = typing___cast(MiscellaneousActivity.SubtypeValue, 6)
    BRIBERY = typing___cast(MiscellaneousActivity.SubtypeValue, 7)
    COUNTERFEIT = typing___cast(MiscellaneousActivity.SubtypeValue, 8)
    ELDER_EXPLOITATION = typing___cast(MiscellaneousActivity.SubtypeValue, 9)
    FORGERIES = typing___cast(MiscellaneousActivity.SubtypeValue, 10)
    NO_CONCERN_FOR_PENALTIES = typing___cast(MiscellaneousActivity.SubtypeValue, 11)
    FREE_LOOK_MISUSE = typing___cast(MiscellaneousActivity.SubtypeValue, 12)
    SELF_DEALING = typing___cast(MiscellaneousActivity.SubtypeValue, 13)
    DOMESTIC_CORRUPTION = typing___cast(MiscellaneousActivity.SubtypeValue, 14)
    FOREIGN_CORRUPTION = typing___cast(MiscellaneousActivity.SubtypeValue, 15)
    INFORMAL_VALUE_TRANSFER = typing___cast(MiscellaneousActivity.SubtypeValue, 16)
    ELECTRONIC_INTRUSION = typing___cast(MiscellaneousActivity.SubtypeValue, 17)
    UNLICENSED_MSB = typing___cast(MiscellaneousActivity.SubtypeValue, 18)
    HUMAN_SMUGGLING = typing___cast(MiscellaneousActivity.SubtypeValue, 19)
    HUMAN_TRAFFICKING = typing___cast(MiscellaneousActivity.SubtypeValue, 20)
    MISUSE_POSITION = typing___cast(MiscellaneousActivity.SubtypeValue, 21)
    FOREIGN_HIGHRISK_TRANSACTION = typing___cast(MiscellaneousActivity.SubtypeValue, 22)
    type___Subtype = Subtype

    subtype: type___MiscellaneousActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___MiscellaneousActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___MiscellaneousActivity = MiscellaneousActivity

class MortgageFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[MortgageFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_MORTGAGE = typing___cast(MortgageFraudActivity.SubtypeValue, 0)
        APPRAISAL = typing___cast(MortgageFraudActivity.SubtypeValue, 1)
        FORECLOSURE = typing___cast(MortgageFraudActivity.SubtypeValue, 2)
        LOAN_MODIFICATION = typing___cast(MortgageFraudActivity.SubtypeValue, 3)
        APPLICATION = typing___cast(MortgageFraudActivity.SubtypeValue, 5)
        ORIGINATION = typing___cast(MortgageFraudActivity.SubtypeValue, 6)
    OTHER_MORTGAGE = typing___cast(MortgageFraudActivity.SubtypeValue, 0)
    APPRAISAL = typing___cast(MortgageFraudActivity.SubtypeValue, 1)
    FORECLOSURE = typing___cast(MortgageFraudActivity.SubtypeValue, 2)
    LOAN_MODIFICATION = typing___cast(MortgageFraudActivity.SubtypeValue, 3)
    APPLICATION = typing___cast(MortgageFraudActivity.SubtypeValue, 5)
    ORIGINATION = typing___cast(MortgageFraudActivity.SubtypeValue, 6)
    type___Subtype = Subtype

    subtype: type___MortgageFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___MortgageFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___MortgageFraudActivity = MortgageFraudActivity

class ProductFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ProductFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_PRODUCT_FRAUD = typing___cast(ProductFraudActivity.SubtypeValue, 0)
        CREDIT_CARD = typing___cast(ProductFraudActivity.SubtypeValue, 1)
        DEBIT_CARD = typing___cast(ProductFraudActivity.SubtypeValue, 2)
        PREPAID = typing___cast(ProductFraudActivity.SubtypeValue, 3)
        BONDS_NOTES = typing___cast(ProductFraudActivity.SubtypeValue, 4)
        COMMERCIAL_MORTGAGE = typing___cast(ProductFraudActivity.SubtypeValue, 5)
        COMMERCIAL_PAPER = typing___cast(ProductFraudActivity.SubtypeValue, 6)
        FOREX_TRANSACTIONS = typing___cast(ProductFraudActivity.SubtypeValue, 7)
        FUTURES = typing___cast(ProductFraudActivity.SubtypeValue, 8)
        HEDGE_FUND = typing___cast(ProductFraudActivity.SubtypeValue, 9)
        HOME_EQUITY_LOAN = typing___cast(ProductFraudActivity.SubtypeValue, 10)
        HOME_EQUITY_LINE_OF_CREDIT = typing___cast(ProductFraudActivity.SubtypeValue, 11)
        INSURANCE = typing___cast(ProductFraudActivity.SubtypeValue, 12)
        MUTUAL_FUND = typing___cast(ProductFraudActivity.SubtypeValue, 13)
        SECURITIES_OPTIONS = typing___cast(ProductFraudActivity.SubtypeValue, 14)
        PENNY_STOCKS = typing___cast(ProductFraudActivity.SubtypeValue, 15)
        RESIDENTIAL_MORTGAGE = typing___cast(ProductFraudActivity.SubtypeValue, 16)
        SECURITY_FUTURES = typing___cast(ProductFraudActivity.SubtypeValue, 17)
        STOCKS = typing___cast(ProductFraudActivity.SubtypeValue, 18)
        OTHER_DERIVATIVES = typing___cast(ProductFraudActivity.SubtypeValue, 19)
    OTHER_PRODUCT_FRAUD = typing___cast(ProductFraudActivity.SubtypeValue, 0)
    CREDIT_CARD = typing___cast(ProductFraudActivity.SubtypeValue, 1)
    DEBIT_CARD = typing___cast(ProductFraudActivity.SubtypeValue, 2)
    PREPAID = typing___cast(ProductFraudActivity.SubtypeValue, 3)
    BONDS_NOTES = typing___cast(ProductFraudActivity.SubtypeValue, 4)
    COMMERCIAL_MORTGAGE = typing___cast(ProductFraudActivity.SubtypeValue, 5)
    COMMERCIAL_PAPER = typing___cast(ProductFraudActivity.SubtypeValue, 6)
    FOREX_TRANSACTIONS = typing___cast(ProductFraudActivity.SubtypeValue, 7)
    FUTURES = typing___cast(ProductFraudActivity.SubtypeValue, 8)
    HEDGE_FUND = typing___cast(ProductFraudActivity.SubtypeValue, 9)
    HOME_EQUITY_LOAN = typing___cast(ProductFraudActivity.SubtypeValue, 10)
    HOME_EQUITY_LINE_OF_CREDIT = typing___cast(ProductFraudActivity.SubtypeValue, 11)
    INSURANCE = typing___cast(ProductFraudActivity.SubtypeValue, 12)
    MUTUAL_FUND = typing___cast(ProductFraudActivity.SubtypeValue, 13)
    SECURITIES_OPTIONS = typing___cast(ProductFraudActivity.SubtypeValue, 14)
    PENNY_STOCKS = typing___cast(ProductFraudActivity.SubtypeValue, 15)
    RESIDENTIAL_MORTGAGE = typing___cast(ProductFraudActivity.SubtypeValue, 16)
    SECURITY_FUTURES = typing___cast(ProductFraudActivity.SubtypeValue, 17)
    STOCKS = typing___cast(ProductFraudActivity.SubtypeValue, 18)
    OTHER_DERIVATIVES = typing___cast(ProductFraudActivity.SubtypeValue, 19)
    type___Subtype = Subtype

    subtype: type___ProductFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___ProductFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___ProductFraudActivity = ProductFraudActivity

class SecuritiesFraudActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SecuritiesFraudActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_SECURITIES_FRAUD = typing___cast(SecuritiesFraudActivity.SubtypeValue, 0)
        INSIDER_TRADING = typing___cast(SecuritiesFraudActivity.SubtypeValue, 1)
        MARKET_MANIPULATION = typing___cast(SecuritiesFraudActivity.SubtypeValue, 2)
        MISAPPROPRIATION = typing___cast(SecuritiesFraudActivity.SubtypeValue, 3)
        UNAUTHORIZED_POOLING = typing___cast(SecuritiesFraudActivity.SubtypeValue, 4)
        WASH_TRADING = typing___cast(SecuritiesFraudActivity.SubtypeValue, 5)
    OTHER_SECURITIES_FRAUD = typing___cast(SecuritiesFraudActivity.SubtypeValue, 0)
    INSIDER_TRADING = typing___cast(SecuritiesFraudActivity.SubtypeValue, 1)
    MARKET_MANIPULATION = typing___cast(SecuritiesFraudActivity.SubtypeValue, 2)
    MISAPPROPRIATION = typing___cast(SecuritiesFraudActivity.SubtypeValue, 3)
    UNAUTHORIZED_POOLING = typing___cast(SecuritiesFraudActivity.SubtypeValue, 4)
    WASH_TRADING = typing___cast(SecuritiesFraudActivity.SubtypeValue, 5)
    type___Subtype = Subtype

    subtype: type___SecuritiesFraudActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___SecuritiesFraudActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___SecuritiesFraudActivity = SecuritiesFraudActivity

class StructuringActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[StructuringActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_STRUCTURING_ACTIVITY = typing___cast(StructuringActivity.SubtypeValue, 0)
        ALTER_TO_AVOID_BSA = typing___cast(StructuringActivity.SubtypeValue, 1)
        ALTER_TO_AVOID_CTR = typing___cast(StructuringActivity.SubtypeValue, 2)
        CANCEL_TO_AVOID_BSA = typing___cast(StructuringActivity.SubtypeValue, 3)
        MULTIPLES_TO_AVOID_BSA = typing___cast(StructuringActivity.SubtypeValue, 4)
        MULTIPLES_TO_AVOID_CTR = typing___cast(StructuringActivity.SubtypeValue, 5)
        INQUIRY_REGARDING_BSA = typing___cast(StructuringActivity.SubtypeValue, 6)
        THRESHOLD_BELOW_BSA = typing___cast(StructuringActivity.SubtypeValue, 7)
        THRESHOLD_BELOW_CTR = typing___cast(StructuringActivity.SubtypeValue, 8)
    OTHER_STRUCTURING_ACTIVITY = typing___cast(StructuringActivity.SubtypeValue, 0)
    ALTER_TO_AVOID_BSA = typing___cast(StructuringActivity.SubtypeValue, 1)
    ALTER_TO_AVOID_CTR = typing___cast(StructuringActivity.SubtypeValue, 2)
    CANCEL_TO_AVOID_BSA = typing___cast(StructuringActivity.SubtypeValue, 3)
    MULTIPLES_TO_AVOID_BSA = typing___cast(StructuringActivity.SubtypeValue, 4)
    MULTIPLES_TO_AVOID_CTR = typing___cast(StructuringActivity.SubtypeValue, 5)
    INQUIRY_REGARDING_BSA = typing___cast(StructuringActivity.SubtypeValue, 6)
    THRESHOLD_BELOW_BSA = typing___cast(StructuringActivity.SubtypeValue, 7)
    THRESHOLD_BELOW_CTR = typing___cast(StructuringActivity.SubtypeValue, 8)
    type___Subtype = Subtype

    subtype: type___StructuringActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___StructuringActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___StructuringActivity = StructuringActivity

class TerroristFinancingActivity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SubtypeValue = typing___NewType('SubtypeValue', builtin___int)
    type___SubtypeValue = SubtypeValue
    Subtype: _Subtype
    class _Subtype(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TerroristFinancingActivity.SubtypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OTHER_TERRORISM = typing___cast(TerroristFinancingActivity.SubtypeValue, 0)
        KNOWN_OR_SUSPECTED = typing___cast(TerroristFinancingActivity.SubtypeValue, 1)
    OTHER_TERRORISM = typing___cast(TerroristFinancingActivity.SubtypeValue, 0)
    KNOWN_OR_SUSPECTED = typing___cast(TerroristFinancingActivity.SubtypeValue, 1)
    type___Subtype = Subtype

    subtype: type___TerroristFinancingActivity.SubtypeValue = ...
    other_data: typing___Text = ...

    def __init__(self,
        *,
        subtype : typing___Optional[type___TerroristFinancingActivity.SubtypeValue] = None,
        other_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"details",b"details",u"other_data",b"other_data",u"subtype",b"subtype"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"details",b"details"]) -> typing_extensions___Literal["subtype","other_data"]: ...
type___TerroristFinancingActivity = TerroristFinancingActivity
