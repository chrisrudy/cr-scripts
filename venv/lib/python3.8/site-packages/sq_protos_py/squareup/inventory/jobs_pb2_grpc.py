# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.inventory import jobs_pb2 as squareup_dot_inventory_dot_jobs__pb2
from sq_protos_py.squareup.inventory.webhooks import countUpdated_pb2 as squareup_dot_inventory_dot_webhooks_dot_countUpdated__pb2
from sq_protos_py.squareup.jobqueue import options_pb2 as squareup_dot_jobqueue_dot_options__pb2


class BackfillProductIdentifierJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BackfillProductIdentifier = channel.unary_unary(
                '/squareup.inventory.v3.BackfillProductIdentifierJobService/BackfillProductIdentifier',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.BackfillProductIdentifierRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class BackfillProductIdentifierJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BackfillProductIdentifier(self, request, context):
        """BackfillProductIdentifier queues an inventory user id to backfill its product token and cogs ID,
        if the inventory user's max_backfilled_current_count_id is smaller than its max currenct count id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BackfillProductIdentifierJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BackfillProductIdentifier': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillProductIdentifier,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.BackfillProductIdentifierRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.BackfillProductIdentifierJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BackfillProductIdentifierJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BackfillProductIdentifier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.BackfillProductIdentifierJobService/BackfillProductIdentifier',
            squareup_dot_inventory_dot_jobs__pb2.BackfillProductIdentifierRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class EmailJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendEmail = channel.unary_unary(
                '/squareup.inventory.v3.EmailJobService/SendEmail',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.EmailJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class EmailJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendEmail(self, request, context):
        """SendEmail sends email event for the merchant provided in the request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmailJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.SendEmail,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.EmailJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.EmailJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmailJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.EmailJobService/SendEmail',
            squareup_dot_inventory_dot_jobs__pb2.EmailJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BillEventJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessBillEventBackfillJob = channel.unary_unary(
                '/squareup.inventory.v3.BillEventJobService/ProcessBillEventBackfillJob',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.BillEventJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.ProcessRefundBillEventBackfillJob = channel.unary_unary(
                '/squareup.inventory.v3.BillEventJobService/ProcessRefundBillEventBackfillJob',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.RefundBillEventJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.ProcessBillEventCommonJob = channel.unary_unary(
                '/squareup.inventory.v3.BillEventJobService/ProcessBillEventCommonJob',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.BillEventCommonJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class BillEventJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ProcessBillEventBackfillJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessRefundBillEventBackfillJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessBillEventCommonJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BillEventJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessBillEventBackfillJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessBillEventBackfillJob,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.BillEventJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'ProcessRefundBillEventBackfillJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessRefundBillEventBackfillJob,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.RefundBillEventJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'ProcessBillEventCommonJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessBillEventCommonJob,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.BillEventCommonJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.BillEventJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BillEventJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ProcessBillEventBackfillJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.BillEventJobService/ProcessBillEventBackfillJob',
            squareup_dot_inventory_dot_jobs__pb2.BillEventJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessRefundBillEventBackfillJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.BillEventJobService/ProcessRefundBillEventBackfillJob',
            squareup_dot_inventory_dot_jobs__pb2.RefundBillEventJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessBillEventCommonJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.BillEventJobService/ProcessBillEventCommonJob',
            squareup_dot_inventory_dot_jobs__pb2.BillEventCommonJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ComputeCostLotServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ComputeCostLotJob = channel.unary_unary(
                '/squareup.inventory.v3.ComputeCostLotService/ComputeCostLotJob',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.ComputeCostLotJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class ComputeCostLotServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ComputeCostLotJob(self, request, context):
        """ComputeCostLot recomputes cost lots for the supplied product token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ComputeCostLotServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ComputeCostLotJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ComputeCostLotJob,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.ComputeCostLotJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.ComputeCostLotService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ComputeCostLotService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ComputeCostLotJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.ComputeCostLotService/ComputeCostLotJob',
            squareup_dot_inventory_dot_jobs__pb2.ComputeCostLotJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class WaiterFeedJobServiceStub(object):
    """WaiterFeedJobService is the job that handles information extracted from waiter feeds.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessWaiterFeedJob = channel.unary_unary(
                '/squareup.inventory.v3.WaiterFeedJobService/ProcessWaiterFeedJob',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.WaiterFeedJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class WaiterFeedJobServiceServicer(object):
    """WaiterFeedJobService is the job that handles information extracted from waiter feeds.
    """

    def ProcessWaiterFeedJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WaiterFeedJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessWaiterFeedJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessWaiterFeedJob,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.WaiterFeedJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.WaiterFeedJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WaiterFeedJobService(object):
    """WaiterFeedJobService is the job that handles information extracted from waiter feeds.
    """

    @staticmethod
    def ProcessWaiterFeedJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.WaiterFeedJobService/ProcessWaiterFeedJob',
            squareup_dot_inventory_dot_jobs__pb2.WaiterFeedJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BackfillInferredAdjustmentJobServiceStub(object):
    """BackfillInferredAdjustmentJobService is for backfilling inferred adjustments for merchants subscribed
    to advanced inventory.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BackfillInferredAdjustmentJob = channel.unary_unary(
                '/squareup.inventory.v3.BackfillInferredAdjustmentJobService/BackfillInferredAdjustmentJob',
                request_serializer=squareup_dot_inventory_dot_jobs__pb2.BackfillInferredAdjustmentJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class BackfillInferredAdjustmentJobServiceServicer(object):
    """BackfillInferredAdjustmentJobService is for backfilling inferred adjustments for merchants subscribed
    to advanced inventory.
    """

    def BackfillInferredAdjustmentJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BackfillInferredAdjustmentJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BackfillInferredAdjustmentJob': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillInferredAdjustmentJob,
                    request_deserializer=squareup_dot_inventory_dot_jobs__pb2.BackfillInferredAdjustmentJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.BackfillInferredAdjustmentJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BackfillInferredAdjustmentJobService(object):
    """BackfillInferredAdjustmentJobService is for backfilling inferred adjustments for merchants subscribed
    to advanced inventory.
    """

    @staticmethod
    def BackfillInferredAdjustmentJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.BackfillInferredAdjustmentJobService/BackfillInferredAdjustmentJob',
            squareup_dot_inventory_dot_jobs__pb2.BackfillInferredAdjustmentJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class JobQueuesStub(object):
    """Future jobqueues can be added to this service to prevent having to create more boilerplate code
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendCountUpdatedWebhook = channel.unary_unary(
                '/squareup.inventory.v3.JobQueues/SendCountUpdatedWebhook',
                request_serializer=squareup_dot_inventory_dot_webhooks_dot_countUpdated__pb2.Body.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class JobQueuesServicer(object):
    """Future jobqueues can be added to this service to prevent having to create more boilerplate code
    """

    def SendCountUpdatedWebhook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobQueuesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendCountUpdatedWebhook': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCountUpdatedWebhook,
                    request_deserializer=squareup_dot_inventory_dot_webhooks_dot_countUpdated__pb2.Body.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.v3.JobQueues', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class JobQueues(object):
    """Future jobqueues can be added to this service to prevent having to create more boilerplate code
    """

    @staticmethod
    def SendCountUpdatedWebhook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.v3.JobQueues/SendCountUpdatedWebhook',
            squareup_dot_inventory_dot_webhooks_dot_countUpdated__pb2.Body.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
