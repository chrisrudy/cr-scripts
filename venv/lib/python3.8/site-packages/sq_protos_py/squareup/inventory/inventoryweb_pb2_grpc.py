# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.inventory import adjustment_pb2 as squareup_dot_inventory_dot_adjustment__pb2
from sq_protos_py.squareup.inventory import inventoryweb_pb2 as squareup_dot_inventory_dot_inventoryweb__pb2


class InventoryWebApiServiceStub(object):
    """* HTTP web service that defines apis for programmatic inventory updates 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListInventory = channel.unary_unary(
                '/squareup.inventory.InventoryWebApiService/ListInventory',
                request_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryResponse.FromString,
                )
        self.RecordInventoryAdjustment = channel.unary_unary(
                '/squareup.inventory.InventoryWebApiService/RecordInventoryAdjustment',
                request_serializer=squareup_dot_inventory_dot_adjustment__pb2.RecordInventoryAdjustmentRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
                )
        self.UpdateSettings = channel.unary_unary(
                '/squareup.inventory.InventoryWebApiService/UpdateSettings',
                request_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.UpdateSettingsRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.UpdateSettingsResponse.FromString,
                )
        self.InternalListInventory = channel.unary_unary(
                '/squareup.inventory.InventoryWebApiService/InternalListInventory',
                request_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryResponse.FromString,
                )


class InventoryWebApiServiceServicer(object):
    """* HTTP web service that defines apis for programmatic inventory updates 
    """

    def ListInventory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordInventoryAdjustment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InternalListInventory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryWebApiServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInventory,
                    request_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryResponse.SerializeToString,
            ),
            'RecordInventoryAdjustment': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordInventoryAdjustment,
                    request_deserializer=squareup_dot_inventory_dot_adjustment__pb2.RecordInventoryAdjustmentRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.SerializeToString,
            ),
            'UpdateSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSettings,
                    request_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.UpdateSettingsRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.UpdateSettingsResponse.SerializeToString,
            ),
            'InternalListInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.InternalListInventory,
                    request_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.InventoryWebApiService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryWebApiService(object):
    """* HTTP web service that defines apis for programmatic inventory updates 
    """

    @staticmethod
    def ListInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryWebApiService/ListInventory',
            squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordInventoryAdjustment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryWebApiService/RecordInventoryAdjustment',
            squareup_dot_inventory_dot_adjustment__pb2.RecordInventoryAdjustmentRequest.SerializeToString,
            squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryWebApiService/UpdateSettings',
            squareup_dot_inventory_dot_inventoryweb__pb2.UpdateSettingsRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryweb__pb2.UpdateSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InternalListInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryWebApiService/InternalListInventory',
            squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryweb__pb2.ListInventoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InventoryBulkServiceStub(object):
    """* HTTP web service that defines the inventory bulk import/export 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Export = channel.unary_unary(
                '/squareup.inventory.InventoryBulkService/Export',
                request_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ExportRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.InventoryBulkTable.FromString,
                )
        self.ImportPrepare = channel.unary_unary(
                '/squareup.inventory.InventoryBulkService/ImportPrepare',
                request_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportPrepareRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportPrepareResponse.FromString,
                )
        self.ImportCommit = channel.unary_unary(
                '/squareup.inventory.InventoryBulkService/ImportCommit',
                request_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportCommitRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportCommitResponse.FromString,
                )


class InventoryBulkServiceServicer(object):
    """* HTTP web service that defines the inventory bulk import/export 
    """

    def Export(self, request, context):
        """* Returns the CSV template with current counts to be reused for importing 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportPrepare(self, request, context):
        """*
        Upload a CSV as a multipart.
        A import_token is returned that should be included in the import/commit method
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportCommit(self, request, context):
        """*
        Commit a previously prepared CSV import.  This will finalize the import.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryBulkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ExportRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.InventoryBulkTable.SerializeToString,
            ),
            'ImportPrepare': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportPrepare,
                    request_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportPrepareRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportPrepareResponse.SerializeToString,
            ),
            'ImportCommit': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportCommit,
                    request_deserializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportCommitRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryweb__pb2.ImportCommitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.InventoryBulkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryBulkService(object):
    """* HTTP web service that defines the inventory bulk import/export 
    """

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryBulkService/Export',
            squareup_dot_inventory_dot_inventoryweb__pb2.ExportRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryweb__pb2.InventoryBulkTable.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportPrepare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryBulkService/ImportPrepare',
            squareup_dot_inventory_dot_inventoryweb__pb2.ImportPrepareRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryweb__pb2.ImportPrepareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportCommit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InventoryBulkService/ImportCommit',
            squareup_dot_inventory_dot_inventoryweb__pb2.ImportCommitRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryweb__pb2.ImportCommitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
