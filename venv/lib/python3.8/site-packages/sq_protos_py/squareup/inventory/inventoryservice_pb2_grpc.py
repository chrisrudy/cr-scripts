# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.inventory import adjustment_pb2 as squareup_dot_inventory_dot_adjustment__pb2
from sq_protos_py.squareup.inventory import inventoryservice_pb2 as squareup_dot_inventory_dot_inventoryservice__pb2


class InternalInventoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RecordInventoryAdjustment = channel.unary_unary(
                '/squareup.inventory.InternalInventoryService/RecordInventoryAdjustment',
                request_serializer=squareup_dot_inventory_dot_adjustment__pb2.RecordInventoryAdjustmentRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
                )
        self.OverrideInventoryQuantities = channel.unary_unary(
                '/squareup.inventory.InternalInventoryService/OverrideInventoryQuantities',
                request_serializer=squareup_dot_inventory_dot_inventoryservice__pb2.OverrideInventoryQuantitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
                )
        self.GetCurrentInventoryQuantities = channel.unary_unary(
                '/squareup.inventory.InternalInventoryService/GetCurrentInventoryQuantities',
                request_serializer=squareup_dot_inventory_dot_inventoryservice__pb2.GetCurrentInventoryQuantitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
                )
        self.CreateSalesOrder = channel.unary_unary(
                '/squareup.inventory.InternalInventoryService/CreateSalesOrder',
                request_serializer=squareup_dot_inventory_dot_inventoryservice__pb2.CreateSalesOrderRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryservice__pb2.CreateSalesOrderResponse.FromString,
                )
        self.FinalizeSalesOrder = channel.unary_unary(
                '/squareup.inventory.InternalInventoryService/FinalizeSalesOrder',
                request_serializer=squareup_dot_inventory_dot_inventoryservice__pb2.FinalizeSalesOrderRequest.SerializeToString,
                response_deserializer=squareup_dot_inventory_dot_inventoryservice__pb2.FinalizeSalesOrderResponse.FromString,
                )


class InternalInventoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RecordInventoryAdjustment(self, request, context):
        """* The items service will call this after receiving inventory adjustment requests 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OverrideInventoryQuantities(self, request, context):
        """*
        Only items service should use this to migrate to ledger service.
        This will get the current quantities and apply an adjustment to make them what they should be
        These will be seen as MANUAL_ADJUST types
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentInventoryQuantities(self, request, context):
        """*
        Gets counts of inventory for specified user. Currently returns all items.
        We should allow specifying items in the future
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSalesOrder(self, request, context):
        """Sales Order Support

        *
        Will create a sales order if there is enough quantity in stock. Otherwise
        it will return "inventory_reserved = false, sales_order_state = INVALID"
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinalizeSalesOrder(self, request, context):
        """*
        Moves a sales order into its final state. This can be either canceling it or applying it.

        A sales order can only be finalized once
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalInventoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RecordInventoryAdjustment': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordInventoryAdjustment,
                    request_deserializer=squareup_dot_inventory_dot_adjustment__pb2.RecordInventoryAdjustmentRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.SerializeToString,
            ),
            'OverrideInventoryQuantities': grpc.unary_unary_rpc_method_handler(
                    servicer.OverrideInventoryQuantities,
                    request_deserializer=squareup_dot_inventory_dot_inventoryservice__pb2.OverrideInventoryQuantitiesRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.SerializeToString,
            ),
            'GetCurrentInventoryQuantities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentInventoryQuantities,
                    request_deserializer=squareup_dot_inventory_dot_inventoryservice__pb2.GetCurrentInventoryQuantitiesRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.SerializeToString,
            ),
            'CreateSalesOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSalesOrder,
                    request_deserializer=squareup_dot_inventory_dot_inventoryservice__pb2.CreateSalesOrderRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryservice__pb2.CreateSalesOrderResponse.SerializeToString,
            ),
            'FinalizeSalesOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.FinalizeSalesOrder,
                    request_deserializer=squareup_dot_inventory_dot_inventoryservice__pb2.FinalizeSalesOrderRequest.FromString,
                    response_serializer=squareup_dot_inventory_dot_inventoryservice__pb2.FinalizeSalesOrderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inventory.InternalInventoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalInventoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RecordInventoryAdjustment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InternalInventoryService/RecordInventoryAdjustment',
            squareup_dot_inventory_dot_adjustment__pb2.RecordInventoryAdjustmentRequest.SerializeToString,
            squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OverrideInventoryQuantities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InternalInventoryService/OverrideInventoryQuantities',
            squareup_dot_inventory_dot_inventoryservice__pb2.OverrideInventoryQuantitiesRequest.SerializeToString,
            squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentInventoryQuantities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InternalInventoryService/GetCurrentInventoryQuantities',
            squareup_dot_inventory_dot_inventoryservice__pb2.GetCurrentInventoryQuantitiesRequest.SerializeToString,
            squareup_dot_inventory_dot_adjustment__pb2.CurrentItemInventoryInfoList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSalesOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InternalInventoryService/CreateSalesOrder',
            squareup_dot_inventory_dot_inventoryservice__pb2.CreateSalesOrderRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryservice__pb2.CreateSalesOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinalizeSalesOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inventory.InternalInventoryService/FinalizeSalesOrder',
            squareup_dot_inventory_dot_inventoryservice__pb2.FinalizeSalesOrderRequest.SerializeToString,
            squareup_dot_inventory_dot_inventoryservice__pb2.FinalizeSalesOrderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
