# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.service.container.exemplardb import example_streaming_pb2 as squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2


class ExampleStreamingServiceStub(object):
    """*
    Service used to test gRPC streaming.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ServerToClient = channel.unary_stream(
                '/squareup.service.container.exemplardb.ExampleStreamingService/ServerToClient',
                request_serializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ServerToClientRequest.SerializeToString,
                response_deserializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ServerToClientResponse.FromString,
                )
        self.ClientToServer = channel.stream_unary(
                '/squareup.service.container.exemplardb.ExampleStreamingService/ClientToServer',
                request_serializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ClientToServerRequest.SerializeToString,
                response_deserializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ClientToServerResponse.FromString,
                )
        self.Bidi = channel.stream_stream(
                '/squareup.service.container.exemplardb.ExampleStreamingService/Bidi',
                request_serializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.BidiRequest.SerializeToString,
                response_deserializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.BidiResponse.FromString,
                )


class ExampleStreamingServiceServicer(object):
    """*
    Service used to test gRPC streaming.
    """

    def ServerToClient(self, request, context):
        """* A server-to-client streaming RPC. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClientToServer(self, request_iterator, context):
        """* A client-to-server streaming RPC. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Bidi(self, request_iterator, context):
        """* A Bidirectional streaming RPC. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExampleStreamingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ServerToClient': grpc.unary_stream_rpc_method_handler(
                    servicer.ServerToClient,
                    request_deserializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ServerToClientRequest.FromString,
                    response_serializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ServerToClientResponse.SerializeToString,
            ),
            'ClientToServer': grpc.stream_unary_rpc_method_handler(
                    servicer.ClientToServer,
                    request_deserializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ClientToServerRequest.FromString,
                    response_serializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ClientToServerResponse.SerializeToString,
            ),
            'Bidi': grpc.stream_stream_rpc_method_handler(
                    servicer.Bidi,
                    request_deserializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.BidiRequest.FromString,
                    response_serializer=squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.BidiResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.service.container.exemplardb.ExampleStreamingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExampleStreamingService(object):
    """*
    Service used to test gRPC streaming.
    """

    @staticmethod
    def ServerToClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squareup.service.container.exemplardb.ExampleStreamingService/ServerToClient',
            squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ServerToClientRequest.SerializeToString,
            squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ServerToClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClientToServer(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/squareup.service.container.exemplardb.ExampleStreamingService/ClientToServer',
            squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ClientToServerRequest.SerializeToString,
            squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.ClientToServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Bidi(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/squareup.service.container.exemplardb.ExampleStreamingService/Bidi',
            squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.BidiRequest.SerializeToString,
            squareup_dot_service_dot_container_dot_exemplardb_dot_example__streaming__pb2.BidiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
