# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cardr import service_pb2 as squareup_dot_cardr_dot_service__pb2


class CardrServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBalance = channel.unary_unary(
                '/squareup.cardr.CardrService/GetBalance',
                request_serializer=squareup_dot_cardr_dot_service__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.GetBalanceResponse.FromString,
                )
        self.GetTransaction = channel.unary_unary(
                '/squareup.cardr.CardrService/GetTransaction',
                request_serializer=squareup_dot_cardr_dot_service__pb2.GetTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.GetTransactionResponse.FromString,
                )
        self.ListTransactions = channel.unary_unary(
                '/squareup.cardr.CardrService/ListTransactions',
                request_serializer=squareup_dot_cardr_dot_service__pb2.ListTransactionsRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.ListTransactionsResponse.FromString,
                )
        self.ListTransactionEvents = channel.unary_unary(
                '/squareup.cardr.CardrService/ListTransactionEvents',
                request_serializer=squareup_dot_cardr_dot_service__pb2.ListTransactionEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.ListTransactionEventsResponse.FromString,
                )
        self.VoidRemainingAuth = channel.unary_unary(
                '/squareup.cardr.CardrService/VoidRemainingAuth',
                request_serializer=squareup_dot_cardr_dot_service__pb2.VoidRemainingAuthRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.VoidRemainingAuthResponse.FromString,
                )
        self.ConsistencyCheck = channel.unary_unary(
                '/squareup.cardr.CardrService/ConsistencyCheck',
                request_serializer=squareup_dot_cardr_dot_service__pb2.ConsistencyCheckRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.ConsistencyCheckResponse.FromString,
                )
        self.Reward = channel.unary_unary(
                '/squareup.cardr.CardrService/Reward',
                request_serializer=squareup_dot_cardr_dot_service__pb2.RewardRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.RewardResponse.FromString,
                )
        self.ReverseReward = channel.unary_unary(
                '/squareup.cardr.CardrService/ReverseReward',
                request_serializer=squareup_dot_cardr_dot_service__pb2.ReverseRewardRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.ReverseRewardResponse.FromString,
                )
        self.GetRoutingStrategy = channel.unary_unary(
                '/squareup.cardr.CardrService/GetRoutingStrategy',
                request_serializer=squareup_dot_cardr_dot_service__pb2.GetRoutingStrategyRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.GetRoutingStrategyResponse.FromString,
                )
        self.GetCard = channel.unary_unary(
                '/squareup.cardr.CardrService/GetCard',
                request_serializer=squareup_dot_cardr_dot_service__pb2.GetCardRequest.SerializeToString,
                response_deserializer=squareup_dot_cardr_dot_service__pb2.GetCardResponse.FromString,
                )


class CardrServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTransactionEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoidRemainingAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConsistencyCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReverseReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoutingStrategy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CardrServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.GetBalanceRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.GetBalanceResponse.SerializeToString,
            ),
            'GetTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransaction,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.GetTransactionRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.GetTransactionResponse.SerializeToString,
            ),
            'ListTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTransactions,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.ListTransactionsRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.ListTransactionsResponse.SerializeToString,
            ),
            'ListTransactionEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTransactionEvents,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.ListTransactionEventsRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.ListTransactionEventsResponse.SerializeToString,
            ),
            'VoidRemainingAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.VoidRemainingAuth,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.VoidRemainingAuthRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.VoidRemainingAuthResponse.SerializeToString,
            ),
            'ConsistencyCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.ConsistencyCheck,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.ConsistencyCheckRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.ConsistencyCheckResponse.SerializeToString,
            ),
            'Reward': grpc.unary_unary_rpc_method_handler(
                    servicer.Reward,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.RewardRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.RewardResponse.SerializeToString,
            ),
            'ReverseReward': grpc.unary_unary_rpc_method_handler(
                    servicer.ReverseReward,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.ReverseRewardRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.ReverseRewardResponse.SerializeToString,
            ),
            'GetRoutingStrategy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoutingStrategy,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.GetRoutingStrategyRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.GetRoutingStrategyResponse.SerializeToString,
            ),
            'GetCard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCard,
                    request_deserializer=squareup_dot_cardr_dot_service__pb2.GetCardRequest.FromString,
                    response_serializer=squareup_dot_cardr_dot_service__pb2.GetCardResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cardr.CardrService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CardrService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/GetBalance',
            squareup_dot_cardr_dot_service__pb2.GetBalanceRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.GetBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/GetTransaction',
            squareup_dot_cardr_dot_service__pb2.GetTransactionRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.GetTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/ListTransactions',
            squareup_dot_cardr_dot_service__pb2.ListTransactionsRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.ListTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTransactionEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/ListTransactionEvents',
            squareup_dot_cardr_dot_service__pb2.ListTransactionEventsRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.ListTransactionEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoidRemainingAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/VoidRemainingAuth',
            squareup_dot_cardr_dot_service__pb2.VoidRemainingAuthRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.VoidRemainingAuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConsistencyCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/ConsistencyCheck',
            squareup_dot_cardr_dot_service__pb2.ConsistencyCheckRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.ConsistencyCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/Reward',
            squareup_dot_cardr_dot_service__pb2.RewardRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.RewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReverseReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/ReverseReward',
            squareup_dot_cardr_dot_service__pb2.ReverseRewardRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.ReverseRewardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoutingStrategy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/GetRoutingStrategy',
            squareup_dot_cardr_dot_service__pb2.GetRoutingStrategyRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.GetRoutingStrategyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cardr.CardrService/GetCard',
            squareup_dot_cardr_dot_service__pb2.GetCardRequest.SerializeToString,
            squareup_dot_cardr_dot_service__pb2.GetCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
