# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.common import messages_pb2 as squareup_dot_common_dot_messages__pb2
from sq_protos_py.squareup.person import service_pb2 as squareup_dot_person_dot_service__pb2


class PersonServiceStub(object):
    """* PersonService defines the service API for managing person identities. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/squareup.person.PersonService/Get',
                request_serializer=squareup_dot_person_dot_service__pb2.GetRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.GetResponse.FromString,
                )
        self.BatchGetByPersonToken = channel.unary_unary(
                '/squareup.person.PersonService/BatchGetByPersonToken',
                request_serializer=squareup_dot_person_dot_service__pb2.BatchGetByPersonTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.BatchGetByPersonTokenResponse.FromString,
                )
        self.BatchGetByAlias = channel.unary_unary(
                '/squareup.person.PersonService/BatchGetByAlias',
                request_serializer=squareup_dot_person_dot_service__pb2.BatchGetByAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.BatchGetByAliasResponse.FromString,
                )
        self.GetPersonToken = channel.unary_unary(
                '/squareup.person.PersonService/GetPersonToken',
                request_serializer=squareup_dot_person_dot_service__pb2.GetPersonTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.GetPersonTokenResponse.FromString,
                )
        self.CreateWithAlias = channel.unary_unary(
                '/squareup.person.PersonService/CreateWithAlias',
                request_serializer=squareup_dot_person_dot_service__pb2.CreateWithAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.CreateWithAliasResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/squareup.person.PersonService/Create',
                request_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.CreateResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/squareup.person.PersonService/Update',
                request_serializer=squareup_dot_person_dot_service__pb2.UpdateRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.UpdateResponse.FromString,
                )
        self.AddAlias = channel.unary_unary(
                '/squareup.person.PersonService/AddAlias',
                request_serializer=squareup_dot_person_dot_service__pb2.AddAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.AddAliasResponse.FromString,
                )
        self.AddAliasSudo = channel.unary_unary(
                '/squareup.person.PersonService/AddAliasSudo',
                request_serializer=squareup_dot_person_dot_service__pb2.AddAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.AddAliasResponse.FromString,
                )
        self.DeleteAlias = channel.unary_unary(
                '/squareup.person.PersonService/DeleteAlias',
                request_serializer=squareup_dot_person_dot_service__pb2.DeleteAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.DeleteAliasResponse.FromString,
                )
        self.DeleteAliasSudo = channel.unary_unary(
                '/squareup.person.PersonService/DeleteAliasSudo',
                request_serializer=squareup_dot_person_dot_service__pb2.DeleteAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.DeleteAliasResponse.FromString,
                )
        self.NormalizeAlias = channel.unary_unary(
                '/squareup.person.PersonService/NormalizeAlias',
                request_serializer=squareup_dot_person_dot_service__pb2.NormalizeAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.NormalizeAliasResponse.FromString,
                )
        self.GetAliasHistory = channel.unary_unary(
                '/squareup.person.PersonService/GetAliasHistory',
                request_serializer=squareup_dot_person_dot_service__pb2.GetAliasHistoryRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.GetAliasHistoryBatchResponse.FromString,
                )
        self.Merge = channel.unary_unary(
                '/squareup.person.PersonService/Merge',
                request_serializer=squareup_dot_person_dot_service__pb2.MergeRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.MergeResponse.FromString,
                )
        self.SetProfilePreferences = channel.unary_unary(
                '/squareup.person.PersonService/SetProfilePreferences',
                request_serializer=squareup_dot_person_dot_service__pb2.SetProfilePreferencesRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.UpdateResponse.FromString,
                )
        self.ForgetPerson = channel.unary_unary(
                '/squareup.person.PersonService/ForgetPerson',
                request_serializer=squareup_dot_person_dot_service__pb2.ForgetPersonRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.ForgetPersonResponse.FromString,
                )
        self.ClaimPerson = channel.unary_unary(
                '/squareup.person.PersonService/ClaimPerson',
                request_serializer=squareup_dot_person_dot_service__pb2.ClaimPersonRequest.SerializeToString,
                response_deserializer=squareup_dot_person_dot_service__pb2.ClaimPersonResponse.FromString,
                )


class PersonServiceServicer(object):
    """* PersonService defines the service API for managing person identities. 
    """

    def Get(self, request, context):
        """* Get fetches a person. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetByPersonToken(self, request, context):
        """* BatchGetByPersonToken finds multiple people by person tokens. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetByAlias(self, request, context):
        """* BatchGetByAlias finds multiple people by aliases. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPersonToken(self, request, context):
        """*
        GetPersonToken fetches only a person token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateWithAlias(self, request, context):
        """*
        CreateWithAlias creates a new person referenced by the supplied alias.

        If the alias already refers to an existing person, that person is returned,
        otherwise, a person with an empty person profile is returned.

        We assume that the caller has already validated that this person "owns"
        the alias (e.g. SMS validation or email validation).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """* not idempotent right now since a new person is created for each request handled. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """* Update stores the new profile. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAlias(self, request, context):
        """*
        Alias records a new alias for an existing person.

        If the alias already refers to another person, clients can choose
        to ABORT or MERGE the person.

        In the case of a MERGE, the person specified in the AliasRequest is promoted
        and the previously aliased person is demoted.

        See https://docs.google.com/a/squareup.com/document/d/11ZkLH5OVG8M1SthWwzDF1MZidUtzKaCRK9cU-jXdUck/edit#heading=h.s50um27xpb12
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddAliasSudo(self, request, context):
        """*
        Exact same functionality as AddAlias, but provides special capabilities to trusted clients
        on merges. AddAliasSudo allows merges in more cases than AddAlias.

        Special merge cases:
        - The alias being added is an email and is owned by a different customer. AddAliasSudo allows
        the accounts to me merged if the target customer's only alias is that email alias.
        - The alias being added is a phone and is owned by a different customer. In all cases, the
        phone alias is transferred rather than the accounts being merged.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAlias(self, request, context):
        """*
        DeleteAlias removes the association between the alias and the person.

        DeleteAlias potentially removes all aliases. The person is effectively orphaned and can
        be fetched only by person_token.

        For unscoped persons, the last email alias (if exists) cannot be removed. The last phone alias
        (if exists) cannot be removed if there are no email aliases. For scoped persons, the last alias
        cannot be deleted, regardless of the type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAliasSudo(self, request, context):
        """*
        DeleteAliasSudo is the exact same as DeleteAlias except that it allows the deletion of any
        aliases regardless of constraints. Therefore, DeleteAliasSudo could successfully delete the
        last email and last phone aliases if requested.

        The response status will always be SUCCESS.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NormalizeAlias(self, request, context):
        """*
        NormalizeAlias takes a user entered alias (phone number or email address) and returns the
        corresponding normalized alias. An error status will be returned if the alias is invalid.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAliasHistory(self, request, context):
        """*
        GetAliasHistory takes a batch of person tokens and finds all aliases that have ever been
        associated with each. This includes aliases transfered from other person profiles
        and those inherited from a merge.

        NOTE: For now, this endpoint only returns email aliases.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Merge(self, request, context):
        """*
        Takes two person tokens and merges the associated accounts, if necessary.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetProfilePreferences(self, request, context):
        """*
        Set or clear profile preferences for a given person token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgetPerson(self, request, context):
        """*
        Forget a Person in Roster as part of GDPR.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimPerson(self, request, context):
        """*
        Claim a Person created by a 3rd-party partner
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PersonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=squareup_dot_person_dot_service__pb2.GetRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.GetResponse.SerializeToString,
            ),
            'BatchGetByPersonToken': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetByPersonToken,
                    request_deserializer=squareup_dot_person_dot_service__pb2.BatchGetByPersonTokenRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.BatchGetByPersonTokenResponse.SerializeToString,
            ),
            'BatchGetByAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetByAlias,
                    request_deserializer=squareup_dot_person_dot_service__pb2.BatchGetByAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.BatchGetByAliasResponse.SerializeToString,
            ),
            'GetPersonToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPersonToken,
                    request_deserializer=squareup_dot_person_dot_service__pb2.GetPersonTokenRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.GetPersonTokenResponse.SerializeToString,
            ),
            'CreateWithAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWithAlias,
                    request_deserializer=squareup_dot_person_dot_service__pb2.CreateWithAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.CreateWithAliasResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.CreateResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=squareup_dot_person_dot_service__pb2.UpdateRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.UpdateResponse.SerializeToString,
            ),
            'AddAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAlias,
                    request_deserializer=squareup_dot_person_dot_service__pb2.AddAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.AddAliasResponse.SerializeToString,
            ),
            'AddAliasSudo': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAliasSudo,
                    request_deserializer=squareup_dot_person_dot_service__pb2.AddAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.AddAliasResponse.SerializeToString,
            ),
            'DeleteAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAlias,
                    request_deserializer=squareup_dot_person_dot_service__pb2.DeleteAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.DeleteAliasResponse.SerializeToString,
            ),
            'DeleteAliasSudo': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAliasSudo,
                    request_deserializer=squareup_dot_person_dot_service__pb2.DeleteAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.DeleteAliasResponse.SerializeToString,
            ),
            'NormalizeAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.NormalizeAlias,
                    request_deserializer=squareup_dot_person_dot_service__pb2.NormalizeAliasRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.NormalizeAliasResponse.SerializeToString,
            ),
            'GetAliasHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAliasHistory,
                    request_deserializer=squareup_dot_person_dot_service__pb2.GetAliasHistoryRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.GetAliasHistoryBatchResponse.SerializeToString,
            ),
            'Merge': grpc.unary_unary_rpc_method_handler(
                    servicer.Merge,
                    request_deserializer=squareup_dot_person_dot_service__pb2.MergeRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.MergeResponse.SerializeToString,
            ),
            'SetProfilePreferences': grpc.unary_unary_rpc_method_handler(
                    servicer.SetProfilePreferences,
                    request_deserializer=squareup_dot_person_dot_service__pb2.SetProfilePreferencesRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.UpdateResponse.SerializeToString,
            ),
            'ForgetPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgetPerson,
                    request_deserializer=squareup_dot_person_dot_service__pb2.ForgetPersonRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.ForgetPersonResponse.SerializeToString,
            ),
            'ClaimPerson': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimPerson,
                    request_deserializer=squareup_dot_person_dot_service__pb2.ClaimPersonRequest.FromString,
                    response_serializer=squareup_dot_person_dot_service__pb2.ClaimPersonResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.person.PersonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PersonService(object):
    """* PersonService defines the service API for managing person identities. 
    """

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/Get',
            squareup_dot_person_dot_service__pb2.GetRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetByPersonToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/BatchGetByPersonToken',
            squareup_dot_person_dot_service__pb2.BatchGetByPersonTokenRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.BatchGetByPersonTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetByAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/BatchGetByAlias',
            squareup_dot_person_dot_service__pb2.BatchGetByAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.BatchGetByAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPersonToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/GetPersonToken',
            squareup_dot_person_dot_service__pb2.GetPersonTokenRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.GetPersonTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateWithAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/CreateWithAlias',
            squareup_dot_person_dot_service__pb2.CreateWithAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.CreateWithAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/Create',
            squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            squareup_dot_person_dot_service__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/Update',
            squareup_dot_person_dot_service__pb2.UpdateRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/AddAlias',
            squareup_dot_person_dot_service__pb2.AddAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.AddAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddAliasSudo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/AddAliasSudo',
            squareup_dot_person_dot_service__pb2.AddAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.AddAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/DeleteAlias',
            squareup_dot_person_dot_service__pb2.DeleteAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.DeleteAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAliasSudo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/DeleteAliasSudo',
            squareup_dot_person_dot_service__pb2.DeleteAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.DeleteAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NormalizeAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/NormalizeAlias',
            squareup_dot_person_dot_service__pb2.NormalizeAliasRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.NormalizeAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAliasHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/GetAliasHistory',
            squareup_dot_person_dot_service__pb2.GetAliasHistoryRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.GetAliasHistoryBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Merge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/Merge',
            squareup_dot_person_dot_service__pb2.MergeRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.MergeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetProfilePreferences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/SetProfilePreferences',
            squareup_dot_person_dot_service__pb2.SetProfilePreferencesRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForgetPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/ForgetPerson',
            squareup_dot_person_dot_service__pb2.ForgetPersonRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.ForgetPersonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimPerson(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.person.PersonService/ClaimPerson',
            squareup_dot_person_dot_service__pb2.ClaimPersonRequest.SerializeToString,
            squareup_dot_person_dot_service__pb2.ClaimPersonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
