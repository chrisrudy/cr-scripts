# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.buyersubs.external import subscriptions_pb2 as squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2


class SubscriptionsServiceStub(object):
    """*
    External service for developers to create, view and cancel subscriptions.
    RPCs should be ordered with the most-specific paths first.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchSubscriptions = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/SearchSubscriptions',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.SearchSubscriptionsRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.SearchSubscriptionsResponse.FromString,
                )
        self.DeprecatedCancelSubscription = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/DeprecatedCancelSubscription',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionResponse.FromString,
                )
        self.CancelSubscription = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/CancelSubscription',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionResponse.FromString,
                )
        self.RetrieveSubscription = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/RetrieveSubscription',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.RetrieveSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.RetrieveSubscriptionResponse.FromString,
                )
        self.ListSubscriptionEvents = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/ListSubscriptionEvents',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.ListSubscriptionEventsRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.ListSubscriptionEventsResponse.FromString,
                )
        self.UpdateSubscription = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/UpdateSubscription',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.UpdateSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.UpdateSubscriptionResponse.FromString,
                )
        self.CreateSubscription = channel.unary_unary(
                '/squareup.connect.v2.SubscriptionsService/CreateSubscription',
                request_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CreateSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CreateSubscriptionResponse.FromString,
                )


class SubscriptionsServiceServicer(object):
    """*
    External service for developers to create, view and cancel subscriptions.
    RPCs should be ordered with the most-specific paths first.
    """

    def SearchSubscriptions(self, request, context):
        """--
        @desc Searches for subscriptions. 
        Results are ordered chronologically by subscription creation date. If
        the request specifies more than one location ID, 
        the endpoint orders the result 
        by location ID, and then by creation date within each location. If no locations are given
        in the query, all locations are searched.

        You can also optionally specify `customer_ids` to search by customer. 
        If left unset, all customers 
        associated with the specified locations are returned. 
        If the request specifies customer IDs, the endpoint orders results 
        first by location, within location by customer ID, and within 
        customer by subscription creation date.

        For more information, see 
        [Retrieve subscriptions](/docs/subscriptions-api/overview#retrieve-subscriptions).
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeprecatedCancelSubscription(self, request, context):
        """--
        @desc Cancels a subscription immediately and sets the subscription
        `status` to `CANCELED`. You can also use the `UpdateSubscription` 
        endpoint to cancel a subscription at a future date. For more 
        information, see 
        [CancelSubscriptions](/docs/subscriptions-api/overview#cancel-subscriptions).
        This endpoint is deprecated. Please see https://jira.sqprod.co/browse/SUBS-1192 and use the
        CancelSubscription endpoint instead.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelSubscription(self, request, context):
        """--
        @desc Sets the `canceled_date` field to the end of the active billing period.
        After this date, the status changes from ACTIVE to CANCELED. 
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveSubscription(self, request, context):
        """--
        @desc Retrieves a subscription. 
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscriptionEvents(self, request, context):
        """--
        @desc Lists all events for a specific subscription.
        In the current implementation, only `START_SUBSCRIPTION` and `STOP_SUBSCRIPTION` (when the subscription was canceled) events are returned. 
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSubscription(self, request, context):
        """--
        @desc Updates a subscription. You can set, modify, and clear the 
        `subscription` field values. 
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSubscription(self, request, context):
        """--
        @desc Creates a subscription for a customer to a subscription plan.

        If you provide a card on file in the request, Square charges the card for 
        the subscription. Otherwise, Square bills an invoice to the customer's email 
        address. The subscription starts immediately, unless the request includes 
        the optional `start_date`. Each individual subscription is associated with a particular location. 
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubscriptionsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchSubscriptions,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.SearchSubscriptionsRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.SearchSubscriptionsResponse.SerializeToString,
            ),
            'DeprecatedCancelSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.DeprecatedCancelSubscription,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionResponse.SerializeToString,
            ),
            'CancelSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelSubscription,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionResponse.SerializeToString,
            ),
            'RetrieveSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveSubscription,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.RetrieveSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.RetrieveSubscriptionResponse.SerializeToString,
            ),
            'ListSubscriptionEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscriptionEvents,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.ListSubscriptionEventsRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.ListSubscriptionEventsResponse.SerializeToString,
            ),
            'UpdateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSubscription,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.UpdateSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.UpdateSubscriptionResponse.SerializeToString,
            ),
            'CreateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSubscription,
                    request_deserializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CreateSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CreateSubscriptionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.SubscriptionsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SubscriptionsService(object):
    """*
    External service for developers to create, view and cancel subscriptions.
    RPCs should be ordered with the most-specific paths first.
    """

    @staticmethod
    def SearchSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/SearchSubscriptions',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.SearchSubscriptionsRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.SearchSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeprecatedCancelSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/DeprecatedCancelSubscription',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/CancelSubscription',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CancelSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/RetrieveSubscription',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.RetrieveSubscriptionRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.RetrieveSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscriptionEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/ListSubscriptionEvents',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.ListSubscriptionEventsRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.ListSubscriptionEventsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/UpdateSubscription',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.UpdateSubscriptionRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.UpdateSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.SubscriptionsService/CreateSubscription',
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CreateSubscriptionRequest.SerializeToString,
            squareup_dot_buyersubs_dot_external_dot_subscriptions__pb2.CreateSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
