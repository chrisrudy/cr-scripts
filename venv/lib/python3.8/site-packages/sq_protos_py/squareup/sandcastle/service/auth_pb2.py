# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/sandcastle/service/auth.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.sandcastle.auth import create_sandbox_otk_pb2 as squareup_dot_sandcastle_dot_auth_dot_create__sandbox__otk__pb2
from sq_protos_py.squareup.sandcastle.auth import exchange_sandbox_otk_for_session_pb2 as squareup_dot_sandcastle_dot_auth_dot_exchange__sandbox__otk__for__session__pb2
from sq_protos_py.squareup.sandcastle.auth import obtain_primary_sandbox_session_pb2 as squareup_dot_sandcastle_dot_auth_dot_obtain__primary__sandbox__session__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/sandcastle/service/auth.proto',
  package='squareup.sandcastle.service',
  syntax='proto2',
  serialized_options=_b('Z,square/up/protos/squareup/sandcastle/service'),
  serialized_pb=_b('\n&squareup/sandcastle/service/auth.proto\x12\x1bsquareup.sandcastle.service\x1a\x31squareup/sandcastle/auth/create_sandbox_otk.proto\x1a?squareup/sandcastle/auth/exchange_sandbox_otk_for_session.proto\x1a=squareup/sandcastle/auth/obtain_primary_sandbox_session.proto2\xc5\x03\n\x0b\x41uthService\x12y\n\x10\x43reateSandboxOtk\x12\x31.squareup.sandcastle.auth.CreateSandboxOtkRequest\x1a\x32.squareup.sandcastle.auth.CreateSandboxOtkResponse\x12\x9d\x01\n\x1c\x45xchangeSandboxOtkForSession\x12=.squareup.sandcastle.auth.ExchangeSandboxOtkForSessionRequest\x1a>.squareup.sandcastle.auth.ExchangeSandboxOtkForSessionResponse\x12\x9a\x01\n\x1bObtainPrimarySandboxSession\x12<.squareup.sandcastle.auth.ObtainPrimarySandboxSessionRequest\x1a=.squareup.sandcastle.auth.ObtainPrimarySandboxSessionResponseB.Z,square/up/protos/squareup/sandcastle/service')
  ,
  dependencies=[squareup_dot_sandcastle_dot_auth_dot_create__sandbox__otk__pb2.DESCRIPTOR,squareup_dot_sandcastle_dot_auth_dot_exchange__sandbox__otk__for__session__pb2.DESCRIPTOR,squareup_dot_sandcastle_dot_auth_dot_obtain__primary__sandbox__session__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_AUTHSERVICE = _descriptor.ServiceDescriptor(
  name='AuthService',
  full_name='squareup.sandcastle.service.AuthService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=251,
  serialized_end=704,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateSandboxOtk',
    full_name='squareup.sandcastle.service.AuthService.CreateSandboxOtk',
    index=0,
    containing_service=None,
    input_type=squareup_dot_sandcastle_dot_auth_dot_create__sandbox__otk__pb2._CREATESANDBOXOTKREQUEST,
    output_type=squareup_dot_sandcastle_dot_auth_dot_create__sandbox__otk__pb2._CREATESANDBOXOTKRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ExchangeSandboxOtkForSession',
    full_name='squareup.sandcastle.service.AuthService.ExchangeSandboxOtkForSession',
    index=1,
    containing_service=None,
    input_type=squareup_dot_sandcastle_dot_auth_dot_exchange__sandbox__otk__for__session__pb2._EXCHANGESANDBOXOTKFORSESSIONREQUEST,
    output_type=squareup_dot_sandcastle_dot_auth_dot_exchange__sandbox__otk__for__session__pb2._EXCHANGESANDBOXOTKFORSESSIONRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ObtainPrimarySandboxSession',
    full_name='squareup.sandcastle.service.AuthService.ObtainPrimarySandboxSession',
    index=2,
    containing_service=None,
    input_type=squareup_dot_sandcastle_dot_auth_dot_obtain__primary__sandbox__session__pb2._OBTAINPRIMARYSANDBOXSESSIONREQUEST,
    output_type=squareup_dot_sandcastle_dot_auth_dot_obtain__primary__sandbox__session__pb2._OBTAINPRIMARYSANDBOXSESSIONRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_AUTHSERVICE)

DESCRIPTOR.services_by_name['AuthService'] = _AUTHSERVICE

# @@protoc_insertion_point(module_scope)
