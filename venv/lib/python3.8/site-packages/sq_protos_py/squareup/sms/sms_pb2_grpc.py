# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.sms import sms_pb2 as squareup_dot_sms_dot_sms__pb2


class ExternalSmsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnqueueSms = channel.unary_unary(
                '/squareup.sms.ExternalSmsService/EnqueueSms',
                request_serializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsRequest.SerializeToString,
                response_deserializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsResponse.FromString,
                )


class ExternalSmsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EnqueueSms(self, request, context):
        """* Enqueue an SMS message. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalSmsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnqueueSms': grpc.unary_unary_rpc_method_handler(
                    servicer.EnqueueSms,
                    request_deserializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsRequest.FromString,
                    response_serializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.sms.ExternalSmsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalSmsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EnqueueSms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sms.ExternalSmsService/EnqueueSms',
            squareup_dot_sms_dot_sms__pb2.EnqueueSmsRequest.SerializeToString,
            squareup_dot_sms_dot_sms__pb2.EnqueueSmsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SmsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EnqueueSms = channel.unary_unary(
                '/squareup.sms.SmsService/EnqueueSms',
                request_serializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsRequest.SerializeToString,
                response_deserializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsResponse.FromString,
                )
        self.RetrieveSms = channel.unary_unary(
                '/squareup.sms.SmsService/RetrieveSms',
                request_serializer=squareup_dot_sms_dot_sms__pb2.RetrieveSmsRequest.SerializeToString,
                response_deserializer=squareup_dot_sms_dot_sms__pb2.RetrieveSmsResponse.FromString,
                )
        self.IsBlocked = channel.unary_unary(
                '/squareup.sms.SmsService/IsBlocked',
                request_serializer=squareup_dot_sms_dot_sms__pb2.IsBlockedRequest.SerializeToString,
                response_deserializer=squareup_dot_sms_dot_sms__pb2.IsBlockedResponse.FromString,
                )
        self.ManagePhoneNumber = channel.unary_unary(
                '/squareup.sms.SmsService/ManagePhoneNumber',
                request_serializer=squareup_dot_sms_dot_sms__pb2.ManagePhoneNumberRequest.SerializeToString,
                response_deserializer=squareup_dot_sms_dot_sms__pb2.ManagePhoneNumberResponse.FromString,
                )
        self.HasOwnership = channel.unary_unary(
                '/squareup.sms.SmsService/HasOwnership',
                request_serializer=squareup_dot_sms_dot_sms__pb2.HasOwnershipRequest.SerializeToString,
                response_deserializer=squareup_dot_sms_dot_sms__pb2.HasOwnershipResponse.FromString,
                )


class SmsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EnqueueSms(self, request, context):
        """* Enqueue an SMS message. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveSms(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsBlocked(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManagePhoneNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasOwnership(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SmsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EnqueueSms': grpc.unary_unary_rpc_method_handler(
                    servicer.EnqueueSms,
                    request_deserializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsRequest.FromString,
                    response_serializer=squareup_dot_sms_dot_sms__pb2.EnqueueSmsResponse.SerializeToString,
            ),
            'RetrieveSms': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveSms,
                    request_deserializer=squareup_dot_sms_dot_sms__pb2.RetrieveSmsRequest.FromString,
                    response_serializer=squareup_dot_sms_dot_sms__pb2.RetrieveSmsResponse.SerializeToString,
            ),
            'IsBlocked': grpc.unary_unary_rpc_method_handler(
                    servicer.IsBlocked,
                    request_deserializer=squareup_dot_sms_dot_sms__pb2.IsBlockedRequest.FromString,
                    response_serializer=squareup_dot_sms_dot_sms__pb2.IsBlockedResponse.SerializeToString,
            ),
            'ManagePhoneNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.ManagePhoneNumber,
                    request_deserializer=squareup_dot_sms_dot_sms__pb2.ManagePhoneNumberRequest.FromString,
                    response_serializer=squareup_dot_sms_dot_sms__pb2.ManagePhoneNumberResponse.SerializeToString,
            ),
            'HasOwnership': grpc.unary_unary_rpc_method_handler(
                    servicer.HasOwnership,
                    request_deserializer=squareup_dot_sms_dot_sms__pb2.HasOwnershipRequest.FromString,
                    response_serializer=squareup_dot_sms_dot_sms__pb2.HasOwnershipResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.sms.SmsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SmsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EnqueueSms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sms.SmsService/EnqueueSms',
            squareup_dot_sms_dot_sms__pb2.EnqueueSmsRequest.SerializeToString,
            squareup_dot_sms_dot_sms__pb2.EnqueueSmsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveSms(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sms.SmsService/RetrieveSms',
            squareup_dot_sms_dot_sms__pb2.RetrieveSmsRequest.SerializeToString,
            squareup_dot_sms_dot_sms__pb2.RetrieveSmsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsBlocked(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sms.SmsService/IsBlocked',
            squareup_dot_sms_dot_sms__pb2.IsBlockedRequest.SerializeToString,
            squareup_dot_sms_dot_sms__pb2.IsBlockedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManagePhoneNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sms.SmsService/ManagePhoneNumber',
            squareup_dot_sms_dot_sms__pb2.ManagePhoneNumberRequest.SerializeToString,
            squareup_dot_sms_dot_sms__pb2.ManagePhoneNumberResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasOwnership(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sms.SmsService/HasOwnership',
            squareup_dot_sms_dot_sms__pb2.HasOwnershipRequest.SerializeToString,
            squareup_dot_sms_dot_sms__pb2.HasOwnershipResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
