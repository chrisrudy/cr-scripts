# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.banklin.digital_wallet_pb2 import (
    DigitalWalletToken as squareup___banklin___digital_wallet_pb2___DigitalWalletToken,
)

from sq_protos_py.squareup.banklin.transaction_pb2 import (
    AccountTypeValue as squareup___banklin___transaction_pb2___AccountTypeValue,
)

from sq_protos_py.squareup.cash.expiration_pb2 import (
    Expiration as squareup___cash___expiration_pb2___Expiration,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

IssuedCardBrandValue = typing___NewType('IssuedCardBrandValue', builtin___int)
type___IssuedCardBrandValue = IssuedCardBrandValue
IssuedCardBrand: _IssuedCardBrand
class _IssuedCardBrand(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[IssuedCardBrandValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    VISA = typing___cast(IssuedCardBrandValue, 1)
    MASTERCARD = typing___cast(IssuedCardBrandValue, 2)
VISA = typing___cast(IssuedCardBrandValue, 1)
MASTERCARD = typing___cast(IssuedCardBrandValue, 2)
type___IssuedCardBrand = IssuedCardBrand

CardTypeValue = typing___NewType('CardTypeValue', builtin___int)
type___CardTypeValue = CardTypeValue
CardType: _CardType
class _CardType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    VIRTUAL = typing___cast(CardTypeValue, 1)
    PHYSICAL = typing___cast(CardTypeValue, 2)
VIRTUAL = typing___cast(CardTypeValue, 1)
PHYSICAL = typing___cast(CardTypeValue, 2)
type___CardType = CardType

class IssuedCard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CardStateValue = typing___NewType('CardStateValue', builtin___int)
    type___CardStateValue = CardStateValue
    CardState: _CardState
    class _CardState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[IssuedCard.CardStateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ACTIVE = typing___cast(IssuedCard.CardStateValue, 1)
        DISABLED = typing___cast(IssuedCard.CardStateValue, 2)
        TERMINATED = typing___cast(IssuedCard.CardStateValue, 3)
        SUSPENDED = typing___cast(IssuedCard.CardStateValue, 4)
        VERIFIED = typing___cast(IssuedCard.CardStateValue, 5)
        ISSUED = typing___cast(IssuedCard.CardStateValue, 6)
        UNDELIVERABLE = typing___cast(IssuedCard.CardStateValue, 7)
        MONITORED = typing___cast(IssuedCard.CardStateValue, 12)
        SHIPPED = typing___cast(IssuedCard.CardStateValue, 8)
        CANCELLED = typing___cast(IssuedCard.CardStateValue, 9)
        REJECTED = typing___cast(IssuedCard.CardStateValue, 10)
        DESTROYED = typing___cast(IssuedCard.CardStateValue, 11)
    ACTIVE = typing___cast(IssuedCard.CardStateValue, 1)
    DISABLED = typing___cast(IssuedCard.CardStateValue, 2)
    TERMINATED = typing___cast(IssuedCard.CardStateValue, 3)
    SUSPENDED = typing___cast(IssuedCard.CardStateValue, 4)
    VERIFIED = typing___cast(IssuedCard.CardStateValue, 5)
    ISSUED = typing___cast(IssuedCard.CardStateValue, 6)
    UNDELIVERABLE = typing___cast(IssuedCard.CardStateValue, 7)
    MONITORED = typing___cast(IssuedCard.CardStateValue, 12)
    SHIPPED = typing___cast(IssuedCard.CardStateValue, 8)
    CANCELLED = typing___cast(IssuedCard.CardStateValue, 9)
    REJECTED = typing___cast(IssuedCard.CardStateValue, 10)
    DESTROYED = typing___cast(IssuedCard.CardStateValue, 11)
    type___CardState = CardState

    CardIssuerValue = typing___NewType('CardIssuerValue', builtin___int)
    type___CardIssuerValue = CardIssuerValue
    CardIssuer: _CardIssuer
    class _CardIssuer(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[IssuedCard.CardIssuerValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SHAZAM = typing___cast(IssuedCard.CardIssuerValue, 1)
        MARQETA = typing___cast(IssuedCard.CardIssuerValue, 2)
    SHAZAM = typing___cast(IssuedCard.CardIssuerValue, 1)
    MARQETA = typing___cast(IssuedCard.CardIssuerValue, 2)
    type___CardIssuer = CardIssuer

    class MarqetaIssuerData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        shard: typing___Text = ...

        def __init__(self,
            *,
            shard : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"shard",b"shard"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"shard",b"shard"]) -> None: ...
    type___MarqetaIssuerData = MarqetaIssuerData

    fidelius_token: typing___Text = ...
    security_code: typing___Text = ...
    virtual: builtin___bool = ...
    token: typing___Text = ...
    enabled: builtin___bool = ...
    activated: builtin___bool = ...
    identity_verified: builtin___bool = ...
    customization_token: typing___Text = ...
    primary: builtin___bool = ...
    activation_verified: builtin___bool = ...
    deactivated_at: builtin___int = ...
    state: type___IssuedCard.CardStateValue = ...
    account_type: squareup___banklin___transaction_pb2___AccountTypeValue = ...
    ordered_at: builtin___int = ...
    stored_value_token: typing___Text = ...
    card_issuer: type___IssuedCard.CardIssuerValue = ...
    emergency_issue: builtin___bool = ...
    shipping_method: typing___Text = ...
    tracking_number: typing___Text = ...
    pin_is_set: builtin___bool = ...
    customer_token: typing___Text = ...

    @property
    def expiration(self) -> squareup___cash___expiration_pb2___Expiration: ...

    @property
    def digital_wallet_tokens(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___banklin___digital_wallet_pb2___DigitalWalletToken]: ...

    @property
    def card_events(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CardEvent]: ...

    @property
    def marqeta_issuer_data(self) -> type___IssuedCard.MarqetaIssuerData: ...

    def __init__(self,
        *,
        fidelius_token : typing___Optional[typing___Text] = None,
        expiration : typing___Optional[squareup___cash___expiration_pb2___Expiration] = None,
        security_code : typing___Optional[typing___Text] = None,
        virtual : typing___Optional[builtin___bool] = None,
        token : typing___Optional[typing___Text] = None,
        enabled : typing___Optional[builtin___bool] = None,
        activated : typing___Optional[builtin___bool] = None,
        identity_verified : typing___Optional[builtin___bool] = None,
        customization_token : typing___Optional[typing___Text] = None,
        primary : typing___Optional[builtin___bool] = None,
        activation_verified : typing___Optional[builtin___bool] = None,
        deactivated_at : typing___Optional[builtin___int] = None,
        state : typing___Optional[type___IssuedCard.CardStateValue] = None,
        digital_wallet_tokens : typing___Optional[typing___Iterable[squareup___banklin___digital_wallet_pb2___DigitalWalletToken]] = None,
        account_type : typing___Optional[squareup___banklin___transaction_pb2___AccountTypeValue] = None,
        ordered_at : typing___Optional[builtin___int] = None,
        stored_value_token : typing___Optional[typing___Text] = None,
        card_events : typing___Optional[typing___Iterable[type___CardEvent]] = None,
        card_issuer : typing___Optional[type___IssuedCard.CardIssuerValue] = None,
        emergency_issue : typing___Optional[builtin___bool] = None,
        marqeta_issuer_data : typing___Optional[type___IssuedCard.MarqetaIssuerData] = None,
        shipping_method : typing___Optional[typing___Text] = None,
        tracking_number : typing___Optional[typing___Text] = None,
        pin_is_set : typing___Optional[builtin___bool] = None,
        customer_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"activated",b"activated",u"activation_verified",b"activation_verified",u"card_issuer",b"card_issuer",u"card_issuer_data",b"card_issuer_data",u"customer_token",b"customer_token",u"customization_token",b"customization_token",u"deactivated_at",b"deactivated_at",u"emergency_issue",b"emergency_issue",u"enabled",b"enabled",u"expiration",b"expiration",u"fidelius_token",b"fidelius_token",u"identity_verified",b"identity_verified",u"marqeta_issuer_data",b"marqeta_issuer_data",u"ordered_at",b"ordered_at",u"pin_is_set",b"pin_is_set",u"primary",b"primary",u"security_code",b"security_code",u"shipping_method",b"shipping_method",u"state",b"state",u"stored_value_token",b"stored_value_token",u"token",b"token",u"tracking_number",b"tracking_number",u"virtual",b"virtual"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"activated",b"activated",u"activation_verified",b"activation_verified",u"card_events",b"card_events",u"card_issuer",b"card_issuer",u"card_issuer_data",b"card_issuer_data",u"customer_token",b"customer_token",u"customization_token",b"customization_token",u"deactivated_at",b"deactivated_at",u"digital_wallet_tokens",b"digital_wallet_tokens",u"emergency_issue",b"emergency_issue",u"enabled",b"enabled",u"expiration",b"expiration",u"fidelius_token",b"fidelius_token",u"identity_verified",b"identity_verified",u"marqeta_issuer_data",b"marqeta_issuer_data",u"ordered_at",b"ordered_at",u"pin_is_set",b"pin_is_set",u"primary",b"primary",u"security_code",b"security_code",u"shipping_method",b"shipping_method",u"state",b"state",u"stored_value_token",b"stored_value_token",u"token",b"token",u"tracking_number",b"tracking_number",u"virtual",b"virtual"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"card_issuer_data",b"card_issuer_data"]) -> typing_extensions___Literal["marqeta_issuer_data"]: ...
type___IssuedCard = IssuedCard

class CardEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ResultValue = typing___NewType('ResultValue', builtin___int)
    type___ResultValue = ResultValue
    Result: _Result
    class _Result(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardEvent.ResultValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SUCCESS = typing___cast(CardEvent.ResultValue, 1)
        FAILED = typing___cast(CardEvent.ResultValue, 2)
        ISSUER_EXCEPTION = typing___cast(CardEvent.ResultValue, 3)
        SUSPECTED_FRAUD = typing___cast(CardEvent.ResultValue, 4)
    SUCCESS = typing___cast(CardEvent.ResultValue, 1)
    FAILED = typing___cast(CardEvent.ResultValue, 2)
    ISSUER_EXCEPTION = typing___cast(CardEvent.ResultValue, 3)
    SUSPECTED_FRAUD = typing___cast(CardEvent.ResultValue, 4)
    type___Result = Result

    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ACTIVATED = typing___cast(CardEvent.TypeValue, 1)
        DISABLED = typing___cast(CardEvent.TypeValue, 2)
        ENABLED = typing___cast(CardEvent.TypeValue, 3)
        SUSPENDED = typing___cast(CardEvent.TypeValue, 4)
        REINSTATED = typing___cast(CardEvent.TypeValue, 5)
        ISSUED = typing___cast(CardEvent.TypeValue, 6)
        TERMINATED = typing___cast(CardEvent.TypeValue, 7)
        VERIFIED = typing___cast(CardEvent.TypeValue, 8)
        SHIPPED = typing___cast(CardEvent.TypeValue, 9)
        CANCELLED = typing___cast(CardEvent.TypeValue, 10)
        REJECTED = typing___cast(CardEvent.TypeValue, 11)
        DESTROYED = typing___cast(CardEvent.TypeValue, 12)
        SET_PIN = typing___cast(CardEvent.TypeValue, 13)
        UNDELIVERABLE = typing___cast(CardEvent.TypeValue, 14)
        REISSUED_LOST_OR_STOLEN = typing___cast(CardEvent.TypeValue, 15)
        REISSUED_DAMAGED = typing___cast(CardEvent.TypeValue, 16)
        UPDATED_IDV = typing___cast(CardEvent.TypeValue, 17)
        UPDATED_ADDRESS = typing___cast(CardEvent.TypeValue, 18)
        UPDATED_EMAIL = typing___cast(CardEvent.TypeValue, 19)
        COURIER_FIRST_SCANNED = typing___cast(CardEvent.TypeValue, 20)
        COURIER_IN_HOME_FORECAST = typing___cast(CardEvent.TypeValue, 21)
        COURIER_UNDELIVERABLE = typing___cast(CardEvent.TypeValue, 22)
        UPDATED_USER = typing___cast(CardEvent.TypeValue, 23)
        DEACTIVATED_USER = typing___cast(CardEvent.TypeValue, 24)
        ENABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 25)
        ACTIVATED_USER = typing___cast(CardEvent.TypeValue, 26)
        SET_PRIMARY = typing___cast(CardEvent.TypeValue, 27)
        UNSET_PRIMARY = typing___cast(CardEvent.TypeValue, 28)
        UPDATED_BUSINESS = typing___cast(CardEvent.TypeValue, 29)
        DISABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 30)
        ORDERED = typing___cast(CardEvent.TypeValue, 31)
    ACTIVATED = typing___cast(CardEvent.TypeValue, 1)
    DISABLED = typing___cast(CardEvent.TypeValue, 2)
    ENABLED = typing___cast(CardEvent.TypeValue, 3)
    SUSPENDED = typing___cast(CardEvent.TypeValue, 4)
    REINSTATED = typing___cast(CardEvent.TypeValue, 5)
    ISSUED = typing___cast(CardEvent.TypeValue, 6)
    TERMINATED = typing___cast(CardEvent.TypeValue, 7)
    VERIFIED = typing___cast(CardEvent.TypeValue, 8)
    SHIPPED = typing___cast(CardEvent.TypeValue, 9)
    CANCELLED = typing___cast(CardEvent.TypeValue, 10)
    REJECTED = typing___cast(CardEvent.TypeValue, 11)
    DESTROYED = typing___cast(CardEvent.TypeValue, 12)
    SET_PIN = typing___cast(CardEvent.TypeValue, 13)
    UNDELIVERABLE = typing___cast(CardEvent.TypeValue, 14)
    REISSUED_LOST_OR_STOLEN = typing___cast(CardEvent.TypeValue, 15)
    REISSUED_DAMAGED = typing___cast(CardEvent.TypeValue, 16)
    UPDATED_IDV = typing___cast(CardEvent.TypeValue, 17)
    UPDATED_ADDRESS = typing___cast(CardEvent.TypeValue, 18)
    UPDATED_EMAIL = typing___cast(CardEvent.TypeValue, 19)
    COURIER_FIRST_SCANNED = typing___cast(CardEvent.TypeValue, 20)
    COURIER_IN_HOME_FORECAST = typing___cast(CardEvent.TypeValue, 21)
    COURIER_UNDELIVERABLE = typing___cast(CardEvent.TypeValue, 22)
    UPDATED_USER = typing___cast(CardEvent.TypeValue, 23)
    DEACTIVATED_USER = typing___cast(CardEvent.TypeValue, 24)
    ENABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 25)
    ACTIVATED_USER = typing___cast(CardEvent.TypeValue, 26)
    SET_PRIMARY = typing___cast(CardEvent.TypeValue, 27)
    UNSET_PRIMARY = typing___cast(CardEvent.TypeValue, 28)
    UPDATED_BUSINESS = typing___cast(CardEvent.TypeValue, 29)
    DISABLED_ENHANCED_MONITORING = typing___cast(CardEvent.TypeValue, 30)
    ORDERED = typing___cast(CardEvent.TypeValue, 31)
    type___Type = Type

    issued_card_token: typing___Text = ...
    stored_value_token: typing___Text = ...
    issuer: typing___Text = ...
    type: type___CardEvent.TypeValue = ...
    result: type___CardEvent.ResultValue = ...
    message: typing___Text = ...
    occurred_at: builtin___int = ...
    created_at: builtin___int = ...
    fidelius_token: typing___Text = ...
    card_state: type___IssuedCard.CardStateValue = ...
    card_type: type___CardTypeValue = ...
    customer_token: typing___Text = ...

    def __init__(self,
        *,
        issued_card_token : typing___Optional[typing___Text] = None,
        stored_value_token : typing___Optional[typing___Text] = None,
        issuer : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___CardEvent.TypeValue] = None,
        result : typing___Optional[type___CardEvent.ResultValue] = None,
        message : typing___Optional[typing___Text] = None,
        occurred_at : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[builtin___int] = None,
        fidelius_token : typing___Optional[typing___Text] = None,
        card_state : typing___Optional[type___IssuedCard.CardStateValue] = None,
        card_type : typing___Optional[type___CardTypeValue] = None,
        customer_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_state",b"card_state",u"card_type",b"card_type",u"created_at",b"created_at",u"customer_token",b"customer_token",u"fidelius_token",b"fidelius_token",u"issued_card_token",b"issued_card_token",u"issuer",b"issuer",u"message",b"message",u"occurred_at",b"occurred_at",u"result",b"result",u"stored_value_token",b"stored_value_token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"card_state",b"card_state",u"card_type",b"card_type",u"created_at",b"created_at",u"customer_token",b"customer_token",u"fidelius_token",b"fidelius_token",u"issued_card_token",b"issued_card_token",u"issuer",b"issuer",u"message",b"message",u"occurred_at",b"occurred_at",u"result",b"result",u"stored_value_token",b"stored_value_token",u"type",b"type"]) -> None: ...
type___CardEvent = CardEvent
