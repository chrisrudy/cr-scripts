# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.banklin.rpc import commit_pb2 as squareup_dot_banklin_dot_rpc_dot_commit__pb2
from sq_protos_py.squareup.banklin.rpc import investing_fiat_pb2 as squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2
from sq_protos_py.squareup.banklin.rpc import lookup_customer_token_pb2 as squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2
from sq_protos_py.squareup.banklin.rpc import pull_pb2 as squareup_dot_banklin_dot_rpc_dot_pull__pb2
from sq_protos_py.squareup.banklin.rpc import push_pb2 as squareup_dot_banklin_dot_rpc_dot_push__pb2
from sq_protos_py.squareup.banklin.rpc import void_transaction_pb2 as squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2
from sq_protos_py.squareup.banklin import service_pb2 as squareup_dot_banklin_dot_service__pb2
from sq_protos_py.squareup.cash.moneymover import ReleaseFundsRequest_pb2 as squareup_dot_cash_dot_moneymover_dot_ReleaseFundsRequest__pb2
from sq_protos_py.squareup.cash.moneymover import ReleaseFundsResponse_pb2 as squareup_dot_cash_dot_moneymover_dot_ReleaseFundsResponse__pb2
from sq_protos_py.squareup.cash.moneymover import ReserveFundsRequest_pb2 as squareup_dot_cash_dot_moneymover_dot_ReserveFundsRequest__pb2
from sq_protos_py.squareup.cash.moneymover import ReserveFundsResponse_pb2 as squareup_dot_cash_dot_moneymover_dot_ReserveFundsResponse__pb2
from sq_protos_py.squareup.cash.moneymover import TransferFundsRequest_pb2 as squareup_dot_cash_dot_moneymover_dot_TransferFundsRequest__pb2
from sq_protos_py.squareup.cash.moneymover import TransferFundsResponse_pb2 as squareup_dot_cash_dot_moneymover_dot_TransferFundsResponse__pb2


class BanklinServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QuotePurchase = channel.unary_unary(
                '/squareup.banklin.service.BanklinService/QuotePurchase',
                request_serializer=squareup_dot_banklin_dot_service__pb2.QuotePurchaseRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.QuotePurchaseResponse.FromString,
                )
        self.ExecutePurchase = channel.unary_unary(
                '/squareup.banklin.service.BanklinService/ExecutePurchase',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ExecutePurchaseRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ExecutePurchaseResponse.FromString,
                )
        self.GetPurchaseContract = channel.unary_unary(
                '/squareup.banklin.service.BanklinService/GetPurchaseContract',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetPurchaseContractRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetPurchaseContractResponse.FromString,
                )


class BanklinServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def QuotePurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecutePurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPurchaseContract(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BanklinServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QuotePurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.QuotePurchase,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.QuotePurchaseRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.QuotePurchaseResponse.SerializeToString,
            ),
            'ExecutePurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecutePurchase,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ExecutePurchaseRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ExecutePurchaseResponse.SerializeToString,
            ),
            'GetPurchaseContract': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPurchaseContract,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetPurchaseContractRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetPurchaseContractResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.banklin.service.BanklinService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BanklinService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def QuotePurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.BanklinService/QuotePurchase',
            squareup_dot_banklin_dot_service__pb2.QuotePurchaseRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.QuotePurchaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecutePurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.BanklinService/ExecutePurchase',
            squareup_dot_banklin_dot_service__pb2.ExecutePurchaseRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ExecutePurchaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPurchaseContract(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.BanklinService/GetPurchaseContract',
            squareup_dot_banklin_dot_service__pb2.GetPurchaseContractRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetPurchaseContractResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CardLedgerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessCardTransaction = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/ProcessCardTransaction',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Authorize = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Authorize',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Pull = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Pull',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Push = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Push',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Capture = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Capture',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Decline = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Decline',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Voidify = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Voidify',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Reverse = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Reverse',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.Refund = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/Refund',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )
        self.CheckBalance = channel.unary_unary(
                '/squareup.banklin.service.CardLedgerService/CheckBalance',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
                )


class CardLedgerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ProcessCardTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authorize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pull(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Push(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Capture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Decline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Voidify(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reverse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CardLedgerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessCardTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessCardTransaction,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Authorize': grpc.unary_unary_rpc_method_handler(
                    servicer.Authorize,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Pull': grpc.unary_unary_rpc_method_handler(
                    servicer.Pull,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Push': grpc.unary_unary_rpc_method_handler(
                    servicer.Push,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Capture': grpc.unary_unary_rpc_method_handler(
                    servicer.Capture,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Decline': grpc.unary_unary_rpc_method_handler(
                    servicer.Decline,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Voidify': grpc.unary_unary_rpc_method_handler(
                    servicer.Voidify,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Reverse': grpc.unary_unary_rpc_method_handler(
                    servicer.Reverse,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'Refund': grpc.unary_unary_rpc_method_handler(
                    servicer.Refund,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
            'CheckBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckBalance,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.banklin.service.CardLedgerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CardLedgerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ProcessCardTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/ProcessCardTransaction',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authorize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Authorize',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Pull',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Push(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Push',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Capture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Capture',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Decline(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Decline',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Voidify(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Voidify',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reverse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Reverse',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/Refund',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.CardLedgerService/CheckBalance',
            squareup_dot_banklin_dot_service__pb2.CardTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CardTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InvestingFiatLedgerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAwaitingExternalTransaction = channel.unary_unary(
                '/squareup.banklin.service.InvestingFiatLedgerService/CreateAwaitingExternalTransaction',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
                )
        self.CreatePendingTransaction = channel.unary_unary(
                '/squareup.banklin.service.InvestingFiatLedgerService/CreatePendingTransaction',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
                )
        self.CreateSettledTransaction = channel.unary_unary(
                '/squareup.banklin.service.InvestingFiatLedgerService/CreateSettledTransaction',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
                )
        self.SettleTransaction = channel.unary_unary(
                '/squareup.banklin.service.InvestingFiatLedgerService/SettleTransaction',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
                )
        self.VoidTransaction = channel.unary_unary(
                '/squareup.banklin.service.InvestingFiatLedgerService/VoidTransaction',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2.VoidTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2.VoidTransactionResponse.FromString,
                )


class InvestingFiatLedgerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateAwaitingExternalTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePendingTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSettledTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SettleTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoidTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InvestingFiatLedgerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAwaitingExternalTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAwaitingExternalTransaction,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.SerializeToString,
            ),
            'CreatePendingTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePendingTransaction,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.SerializeToString,
            ),
            'CreateSettledTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSettledTransaction,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.SerializeToString,
            ),
            'SettleTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.SettleTransaction,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.SerializeToString,
            ),
            'VoidTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.VoidTransaction,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2.VoidTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2.VoidTransactionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.banklin.service.InvestingFiatLedgerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InvestingFiatLedgerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateAwaitingExternalTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InvestingFiatLedgerService/CreateAwaitingExternalTransaction',
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePendingTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InvestingFiatLedgerService/CreatePendingTransaction',
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSettledTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InvestingFiatLedgerService/CreateSettledTransaction',
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SettleTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InvestingFiatLedgerService/SettleTransaction',
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_investing__fiat__pb2.InvestingFiatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoidTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InvestingFiatLedgerService/VoidTransaction',
            squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2.VoidTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_void__transaction__pb2.VoidTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InstitutionalCustomerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSquareFloatBalance = channel.unary_unary(
                '/squareup.banklin.service.InstitutionalCustomerService/GetSquareFloatBalance',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetSquareFloatBalanceRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetSquareFloatBalanceResponse.FromString,
                )
        self.TransferToSquareFloat = channel.unary_unary(
                '/squareup.banklin.service.InstitutionalCustomerService/TransferToSquareFloat',
                request_serializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferResponse.FromString,
                )
        self.TransferFromSquareFloat = channel.unary_unary(
                '/squareup.banklin.service.InstitutionalCustomerService/TransferFromSquareFloat',
                request_serializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferResponse.FromString,
                )
        self.GetInstitutionalBalances = channel.unary_unary(
                '/squareup.banklin.service.InstitutionalCustomerService/GetInstitutionalBalances',
                request_serializer=squareup_dot_banklin_dot_service__pb2.InstitutionalBalancesRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.InstitutionalBalancesResponse.FromString,
                )


class InstitutionalCustomerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSquareFloatBalance(self, request, context):
        """*
        Get the current Square float balance including current wallet address.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferToSquareFloat(self, request, context):
        """*
        Transfer an amount from an institutional customer to the Square float. Used for settling trades
        with custodial bitcoin.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferFromSquareFloat(self, request, context):
        """*
        Transfer an amount from the Square float to an institutional customer. Used for settling trades
        with custodial bitcoin.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstitutionalBalances(self, request, context):
        """*
        Retrieve the balance for an institution given its token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstitutionalCustomerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSquareFloatBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSquareFloatBalance,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetSquareFloatBalanceRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetSquareFloatBalanceResponse.SerializeToString,
            ),
            'TransferToSquareFloat': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferToSquareFloat,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferResponse.SerializeToString,
            ),
            'TransferFromSquareFloat': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferFromSquareFloat,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferResponse.SerializeToString,
            ),
            'GetInstitutionalBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstitutionalBalances,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.InstitutionalBalancesRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.InstitutionalBalancesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.banklin.service.InstitutionalCustomerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InstitutionalCustomerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSquareFloatBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InstitutionalCustomerService/GetSquareFloatBalance',
            squareup_dot_banklin_dot_service__pb2.GetSquareFloatBalanceRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetSquareFloatBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferToSquareFloat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InstitutionalCustomerService/TransferToSquareFloat',
            squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferFromSquareFloat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InstitutionalCustomerService/TransferFromSquareFloat',
            squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.InstitutionalCustomerTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstitutionalBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.InstitutionalCustomerService/GetInstitutionalBalances',
            squareup_dot_banklin_dot_service__pb2.InstitutionalBalancesRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.InstitutionalBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MoneyMovingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitiateBitcoinWithdrawal = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/InitiateBitcoinWithdrawal',
                request_serializer=squareup_dot_banklin_dot_service__pb2.InitiateBitcoinWithdrawalRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.InitiateBitcoinWithdrawalResponse.FromString,
                )
        self.ReviewBitcoinWithdrawal = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReviewBitcoinWithdrawal',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinWithdrawalRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinWithdrawalResponse.FromString,
                )
        self.ReviewBitcoinDeposit = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReviewBitcoinDeposit',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinDepositRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinDepositResponse.FromString,
                )
        self.GetBitconTransfer = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetBitconTransfer',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetBitcoinTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetBitcoinTransferResponse.FromString,
                )
        self.ReceiveBitcoinPayment = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReceiveBitcoinPayment',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReceiveBitcoinPaymentRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReceiveBitcoinPaymentResponse.FromString,
                )
        self.ReverseBitcoinDeposit = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReverseBitcoinDeposit',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReverseBitcoinDepositRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReverseBitcoinDepositResponse.FromString,
                )
        self.InitiateLightningWithdrawal = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/InitiateLightningWithdrawal',
                request_serializer=squareup_dot_banklin_dot_service__pb2.InitiateLightningWithdrawalRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.InitiateLightningWithdrawalResponse.FromString,
                )
        self.CheckPushCapability = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/CheckPushCapability',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CheckPushCapabilityRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CheckPushCapabilityResponse.FromString,
                )
        self.Push = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/Push',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_push__pb2.PushRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_push__pb2.PushResponse.FromString,
                )
        self.VoidPush = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/VoidPush',
                request_serializer=squareup_dot_banklin_dot_service__pb2.VoidPushRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.VoidPushResponse.FromString,
                )
        self.Pull = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/Pull',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_pull__pb2.PullRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_pull__pb2.PullResponse.FromString,
                )
        self.Refund = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/Refund',
                request_serializer=squareup_dot_banklin_dot_service__pb2.RefundRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.RefundResponse.FromString,
                )
        self.Commit = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/Commit',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_commit__pb2.CommitRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_commit__pb2.CommitResponse.FromString,
                )
        self.BalanceAdjustment = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/BalanceAdjustment',
                request_serializer=squareup_dot_banklin_dot_service__pb2.BalanceAdjustmentRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.BalanceAdjustmentResponse.FromString,
                )
        self.BulkBalanceAdjustment = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/BulkBalanceAdjustment',
                request_serializer=squareup_dot_banklin_dot_service__pb2.BulkBalanceAdjustmentRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.BulkBalanceAdjustmentResponse.FromString,
                )
        self.CreateStoredValue = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/CreateStoredValue',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CreateStoredValueRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CreateStoredValueResponse.FromString,
                )
        self.CreateBitcoinWallet = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/CreateBitcoinWallet',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CreateBitcoinWalletRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CreateBitcoinWalletResponse.FromString,
                )
        self.GetCurrentBalance = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetCurrentBalance',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetCurrentBalanceRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetCurrentBalanceResponse.FromString,
                )
        self.GetHistoricalBalances = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetHistoricalBalances',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetHistoricalBalancesRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetHistoricalBalancesResponse.FromString,
                )
        self.FreezeStoredValue = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/FreezeStoredValue',
                request_serializer=squareup_dot_banklin_dot_service__pb2.FreezeStoredValueRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.FreezeStoredValueResponse.FromString,
                )
        self.ForwardStoredValue = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ForwardStoredValue',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ForwardStoredValueRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ForwardStoredValueResponse.FromString,
                )
        self.UnfreezeStoredValue = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/UnfreezeStoredValue',
                request_serializer=squareup_dot_banklin_dot_service__pb2.UnfreezeStoredValueRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.UnfreezeStoredValueResponse.FromString,
                )
        self.GetBalanceTransactions = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetBalanceTransactions',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetBalanceTransactionsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetBalanceTransactionsResponse.FromString,
                )
        self.UpdateAutoReloadPreference = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/UpdateAutoReloadPreference',
                request_serializer=squareup_dot_banklin_dot_service__pb2.UpdateAutoReloadPreferenceRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.UpdateAutoReloadPreferenceResponse.FromString,
                )
        self.TransferFundsToMoneyFolder = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/TransferFundsToMoneyFolder',
                request_serializer=squareup_dot_banklin_dot_service__pb2.TransferFundsToMoneyFolderRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.TransferFundsToMoneyFolderResponse.FromString,
                )
        self.GetAllMoneyFolderBalances = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetAllMoneyFolderBalances',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetAllMoneyFolderBalancesRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetAllMoneyFolderBalancesResponse.FromString,
                )
        self.CreateMoneyFolder = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/CreateMoneyFolder',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CreateMoneyFolderRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CreateMoneyFolderResponse.FromString,
                )
        self.ShareMoneyFolder = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ShareMoneyFolder',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ShareMoneyFolderRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ShareMoneyFolderResponse.FromString,
                )
        self.GetVelocityControls = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetVelocityControls',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetUserVelocityControlsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetUserVelocityControlsResponse.FromString,
                )
        self.GetDda = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetDda',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetDdaRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetDdaResponse.FromString,
                )
        self.IssueDda = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/IssueDda',
                request_serializer=squareup_dot_banklin_dot_service__pb2.IssueDdaRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.IssueDdaResponse.FromString,
                )
        self.CloseAccount = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/CloseAccount',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CloseAccountRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CloseAccountResponse.FromString,
                )
        self.ReissueDda = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReissueDda',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReissueDdaRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReissueDdaResponse.FromString,
                )
        self.GetAllIssuedBankAccounts = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetAllIssuedBankAccounts',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedBankAccountsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedBankAccountsResponse.FromString,
                )
        self.VoidAuthorization = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/VoidAuthorization',
                request_serializer=squareup_dot_banklin_dot_service__pb2.VoidAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.VoidAuthorizationResponse.FromString,
                )
        self.SetPasscode = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/SetPasscode',
                request_serializer=squareup_dot_banklin_dot_service__pb2.SetPasscodeRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.SetPasscodeResponse.FromString,
                )
        self.IssueVirtualCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/IssueVirtualCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.IssueVirtualCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.IssueVirtualCardResponse.FromString,
                )
        self.ReissueVirtualCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReissueVirtualCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReissueVirtualCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReissueVirtualCardResponse.FromString,
                )
        self.ActivateVirtualCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ActivateVirtualCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ActivateVirtualCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ActivateVirtualCardResponse.FromString,
                )
        self.TerminateVirtualCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/TerminateVirtualCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.TerminateVirtualCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.TerminateVirtualCardResponse.FromString,
                )
        self.UpdateIdv = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/UpdateIdv',
                request_serializer=squareup_dot_banklin_dot_service__pb2.UpdateIdvRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.UpdateIdvResponse.FromString,
                )
        self.GetIssuedCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetIssuedCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardResponse.FromString,
                )
        self.GetAllIssuedCards = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetAllIssuedCards',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedCardsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedCardsResponse.FromString,
                )
        self.MarkIssuedCardUndeliverable = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/MarkIssuedCardUndeliverable',
                request_serializer=squareup_dot_banklin_dot_service__pb2.MarkIssuedCardUndeliverableRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.MarkIssuedCardUndeliverableResponse.FromString,
                )
        self.ToggleIssuedCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ToggleIssuedCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ToggleIssuedCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ToggleIssuedCardResponse.FromString,
                )
        self.SimulateTransaction = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/SimulateTransaction',
                request_serializer=squareup_dot_banklin_dot_service__pb2.SimulateTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.SimulateTransactionResponse.FromString,
                )
        self.GetTransactionDetails = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetTransactionDetails',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetTransactionDetailsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetTransactionDetailsResponse.FromString,
                )
        self.GetIssuedCardTransactionData = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetIssuedCardTransactionData',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardTransactionDataRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardTransactionDataResponse.FromString,
                )
        self.GetAutomatedDisputeEligibility = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetAutomatedDisputeEligibility',
                request_serializer=squareup_dot_banklin_dot_service__pb2.AutomatedDisputeEligibilityRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.AutomatedDisputeEligibilityResponse.FromString,
                )
        self.RefundTransaction = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/RefundTransaction',
                request_serializer=squareup_dot_banklin_dot_service__pb2.RefundTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.RefundTransactionResponse.FromString,
                )
        self.ReviewTransaction = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReviewTransaction',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReviewTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReviewTransactionResponse.FromString,
                )
        self.SetPrimaryIssuedCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/SetPrimaryIssuedCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.SetPrimaryIssuedCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.SetPrimaryIssuedCardResponse.FromString,
                )
        self.IssueEmergencyVirtualCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/IssueEmergencyVirtualCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardResponse.FromString,
                )
        self.IssueEmergencyVirtualCards = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/IssueEmergencyVirtualCards',
                request_serializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardsResponse.FromString,
                )
        self.SuppressEmergencyVirtualCards = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/SuppressEmergencyVirtualCards',
                request_serializer=squareup_dot_banklin_dot_service__pb2.SuppressEmergencyVirtualCardsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.SuppressEmergencyVirtualCardsResponse.FromString,
                )
        self.IssuePhysicalCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/IssuePhysicalCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.IssuePhysicalCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.IssuePhysicalCardResponse.FromString,
                )
        self.ActivatePhysicalCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ActivatePhysicalCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ActivatePhysicalCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ActivatePhysicalCardResponse.FromString,
                )
        self.VerifyPhysicalCardActivation = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/VerifyPhysicalCardActivation',
                request_serializer=squareup_dot_banklin_dot_service__pb2.VerifyPhysicalCardActivationRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.VerifyPhysicalCardActivationResponse.FromString,
                )
        self.ReissueDamagedPhysicalCard = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReissueDamagedPhysicalCard',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ReissueDamagedPhysicalCardRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ReissueDamagedPhysicalCardResponse.FromString,
                )
        self.GetCardThemes = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetCardThemes',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetCardThemesRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetCardThemesResponse.FromString,
                )
        self.ProvisionApplePay = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ProvisionApplePay',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ProvisionApplePayRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ProvisionApplePayResponse.FromString,
                )
        self.ActivateApplePay = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ActivateApplePay',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ActivateApplePayRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ActivateApplePayResponse.FromString,
                )
        self.ProvisionDigitalWalletToken = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ProvisionDigitalWalletToken',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ProvisionDigitalWalletTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ProvisionDigitalWalletTokenResponse.FromString,
                )
        self.ActivateDigitalWalletToken = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ActivateDigitalWalletToken',
                request_serializer=squareup_dot_banklin_dot_service__pb2.ActivateDigitalWalletTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.ActivateDigitalWalletTokenResponse.FromString,
                )
        self.IssueFederalStimulusInstruments = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/IssueFederalStimulusInstruments',
                request_serializer=squareup_dot_banklin_dot_service__pb2.IssueFederalStimulusInstrumentsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.IssueFederalStimulusInstrumentsResponse.FromString,
                )
        self.CreateChargebackCase = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/CreateChargebackCase',
                request_serializer=squareup_dot_banklin_dot_service__pb2.CreateChargebackCaseRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.CreateChargebackCaseResponse.FromString,
                )
        self.BackfillActiveCustomers = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/BackfillActiveCustomers',
                request_serializer=squareup_dot_banklin_dot_service__pb2.BackfillActiveCustomersRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.BackfillActiveCustomersResponse.FromString,
                )
        self.DenylistCustomers = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/DenylistCustomers',
                request_serializer=squareup_dot_banklin_dot_service__pb2.DenylistCustomersRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.DenylistCustomersResponse.FromString,
                )
        self.UndenylistCustomers = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/UndenylistCustomers',
                request_serializer=squareup_dot_banklin_dot_service__pb2.UndenylistCustomersRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.UndenylistCustomersResponse.FromString,
                )
        self.LookupCustomerToken = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/LookupCustomerToken',
                request_serializer=squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2.LookupCustomerTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2.LookupCustomerTokenResponse.FromString,
                )
        self.GetMarqetaTransaction = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/GetMarqetaTransaction',
                request_serializer=squareup_dot_banklin_dot_service__pb2.GetMarqetaTransactionRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.GetMarqetaTransactionResponse.FromString,
                )
        self.UpdateCustomerAtmStatus = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/UpdateCustomerAtmStatus',
                request_serializer=squareup_dot_banklin_dot_service__pb2.UpdateCustomerAtmStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.UpdateCustomerAtmStatusResponse.FromString,
                )
        self.UploadCheckImage = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/UploadCheckImage',
                request_serializer=squareup_dot_banklin_dot_service__pb2.UploadCheckImageRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.UploadCheckImageResponse.FromString,
                )
        self.DownloadCheckImage = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/DownloadCheckImage',
                request_serializer=squareup_dot_banklin_dot_service__pb2.DownloadCheckImageRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.DownloadCheckImageResponse.FromString,
                )
        self.ReserveFunds = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReserveFunds',
                request_serializer=squareup_dot_cash_dot_moneymover_dot_ReserveFundsRequest__pb2.ReserveFundsRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_moneymover_dot_ReserveFundsResponse__pb2.ReserveFundsResponse.FromString,
                )
        self.TransferFunds = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/TransferFunds',
                request_serializer=squareup_dot_cash_dot_moneymover_dot_TransferFundsRequest__pb2.TransferFundsRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_moneymover_dot_TransferFundsResponse__pb2.TransferFundsResponse.FromString,
                )
        self.ReleaseFunds = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/ReleaseFunds',
                request_serializer=squareup_dot_cash_dot_moneymover_dot_ReleaseFundsRequest__pb2.ReleaseFundsRequest.SerializeToString,
                response_deserializer=squareup_dot_cash_dot_moneymover_dot_ReleaseFundsResponse__pb2.ReleaseFundsResponse.FromString,
                )
        self.MarqetaUserTransitions = channel.unary_unary(
                '/squareup.banklin.service.MoneyMovingService/MarqetaUserTransitions',
                request_serializer=squareup_dot_banklin_dot_service__pb2.MarqetaUserTransitionsRequest.SerializeToString,
                response_deserializer=squareup_dot_banklin_dot_service__pb2.MarqetaUserTransitionsResponse.FromString,
                )


class MoneyMovingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitiateBitcoinWithdrawal(self, request, context):
        """Bitcoin Withdrawal.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReviewBitcoinWithdrawal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReviewBitcoinDeposit(self, request, context):
        """Bitcoin Deposit.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBitconTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReceiveBitcoinPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReverseBitcoinDeposit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitiateLightningWithdrawal(self, request, context):
        """Lightning.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPushCapability(self, request, context):
        """Pushing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Push(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoidPush(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pull(self, request, context):
        """Pulling.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refund(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Commit(self, request, context):
        """TODO: Temporary API that will exist until Banklin can handle delayed captures.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BalanceAdjustment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkBalanceAdjustment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateStoredValue(self, request, context):
        """Stored value.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBitcoinWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentBalance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistoricalBalances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FreezeStoredValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForwardStoredValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnfreezeStoredValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalanceTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAutoReloadPreference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferFundsToMoneyFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllMoneyFolderBalances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMoneyFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ShareMoneyFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVelocityControls(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDda(self, request, context):
        """DDA
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueDda(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReissueDda(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllIssuedBankAccounts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VoidAuthorization(self, request, context):
        """Virtual card.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPasscode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReissueVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TerminateVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIdv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIssuedCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllIssuedCards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkIssuedCardUndeliverable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleIssuedCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SimulateTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTransactionDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIssuedCardTransactionData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAutomatedDisputeEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefundTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReviewTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPrimaryIssuedCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueEmergencyVirtualCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueEmergencyVirtualCards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SuppressEmergencyVirtualCards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssuePhysicalCard(self, request, context):
        """Physical Card
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivatePhysicalCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyPhysicalCardActivation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReissueDamagedPhysicalCard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCardThemes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProvisionApplePay(self, request, context):
        """Apple pay
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateApplePay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProvisionDigitalWalletToken(self, request, context):
        """Digital Wallet Tokens (e.g., Apple Pay and Google Pay).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateDigitalWalletToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IssueFederalStimulusInstruments(self, request, context):
        """Financial Stimulus Instruments
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChargebackCase(self, request, context):
        """Chargebacks
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BackfillActiveCustomers(self, request, context):
        """Customer data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DenylistCustomers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UndenylistCustomers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupCustomerToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMarqetaTransaction(self, request, context):
        """For evently bug backfill
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCustomerAtmStatus(self, request, context):
        """For Free ATM Status bug backfill
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadCheckImage(self, request, context):
        """Temporary pass through so checkmate can upload and download check images from trunk.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadCheckImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReserveFunds(self, request, context):
        """BTC Network requests
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferFunds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseFunds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarqetaUserTransitions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MoneyMovingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitiateBitcoinWithdrawal': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateBitcoinWithdrawal,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.InitiateBitcoinWithdrawalRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.InitiateBitcoinWithdrawalResponse.SerializeToString,
            ),
            'ReviewBitcoinWithdrawal': grpc.unary_unary_rpc_method_handler(
                    servicer.ReviewBitcoinWithdrawal,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinWithdrawalRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinWithdrawalResponse.SerializeToString,
            ),
            'ReviewBitcoinDeposit': grpc.unary_unary_rpc_method_handler(
                    servicer.ReviewBitcoinDeposit,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinDepositRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReviewBitcoinDepositResponse.SerializeToString,
            ),
            'GetBitconTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBitconTransfer,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetBitcoinTransferRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetBitcoinTransferResponse.SerializeToString,
            ),
            'ReceiveBitcoinPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.ReceiveBitcoinPayment,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReceiveBitcoinPaymentRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReceiveBitcoinPaymentResponse.SerializeToString,
            ),
            'ReverseBitcoinDeposit': grpc.unary_unary_rpc_method_handler(
                    servicer.ReverseBitcoinDeposit,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReverseBitcoinDepositRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReverseBitcoinDepositResponse.SerializeToString,
            ),
            'InitiateLightningWithdrawal': grpc.unary_unary_rpc_method_handler(
                    servicer.InitiateLightningWithdrawal,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.InitiateLightningWithdrawalRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.InitiateLightningWithdrawalResponse.SerializeToString,
            ),
            'CheckPushCapability': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPushCapability,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CheckPushCapabilityRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CheckPushCapabilityResponse.SerializeToString,
            ),
            'Push': grpc.unary_unary_rpc_method_handler(
                    servicer.Push,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_push__pb2.PushRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_push__pb2.PushResponse.SerializeToString,
            ),
            'VoidPush': grpc.unary_unary_rpc_method_handler(
                    servicer.VoidPush,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.VoidPushRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.VoidPushResponse.SerializeToString,
            ),
            'Pull': grpc.unary_unary_rpc_method_handler(
                    servicer.Pull,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_pull__pb2.PullRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_pull__pb2.PullResponse.SerializeToString,
            ),
            'Refund': grpc.unary_unary_rpc_method_handler(
                    servicer.Refund,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.RefundRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.RefundResponse.SerializeToString,
            ),
            'Commit': grpc.unary_unary_rpc_method_handler(
                    servicer.Commit,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_commit__pb2.CommitRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_commit__pb2.CommitResponse.SerializeToString,
            ),
            'BalanceAdjustment': grpc.unary_unary_rpc_method_handler(
                    servicer.BalanceAdjustment,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.BalanceAdjustmentRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.BalanceAdjustmentResponse.SerializeToString,
            ),
            'BulkBalanceAdjustment': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkBalanceAdjustment,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.BulkBalanceAdjustmentRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.BulkBalanceAdjustmentResponse.SerializeToString,
            ),
            'CreateStoredValue': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateStoredValue,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CreateStoredValueRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CreateStoredValueResponse.SerializeToString,
            ),
            'CreateBitcoinWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBitcoinWallet,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CreateBitcoinWalletRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CreateBitcoinWalletResponse.SerializeToString,
            ),
            'GetCurrentBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentBalance,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetCurrentBalanceRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetCurrentBalanceResponse.SerializeToString,
            ),
            'GetHistoricalBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistoricalBalances,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetHistoricalBalancesRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetHistoricalBalancesResponse.SerializeToString,
            ),
            'FreezeStoredValue': grpc.unary_unary_rpc_method_handler(
                    servicer.FreezeStoredValue,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.FreezeStoredValueRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.FreezeStoredValueResponse.SerializeToString,
            ),
            'ForwardStoredValue': grpc.unary_unary_rpc_method_handler(
                    servicer.ForwardStoredValue,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ForwardStoredValueRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ForwardStoredValueResponse.SerializeToString,
            ),
            'UnfreezeStoredValue': grpc.unary_unary_rpc_method_handler(
                    servicer.UnfreezeStoredValue,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.UnfreezeStoredValueRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.UnfreezeStoredValueResponse.SerializeToString,
            ),
            'GetBalanceTransactions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalanceTransactions,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetBalanceTransactionsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetBalanceTransactionsResponse.SerializeToString,
            ),
            'UpdateAutoReloadPreference': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAutoReloadPreference,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.UpdateAutoReloadPreferenceRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.UpdateAutoReloadPreferenceResponse.SerializeToString,
            ),
            'TransferFundsToMoneyFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferFundsToMoneyFolder,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.TransferFundsToMoneyFolderRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.TransferFundsToMoneyFolderResponse.SerializeToString,
            ),
            'GetAllMoneyFolderBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllMoneyFolderBalances,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetAllMoneyFolderBalancesRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetAllMoneyFolderBalancesResponse.SerializeToString,
            ),
            'CreateMoneyFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMoneyFolder,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CreateMoneyFolderRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CreateMoneyFolderResponse.SerializeToString,
            ),
            'ShareMoneyFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.ShareMoneyFolder,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ShareMoneyFolderRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ShareMoneyFolderResponse.SerializeToString,
            ),
            'GetVelocityControls': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVelocityControls,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetUserVelocityControlsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetUserVelocityControlsResponse.SerializeToString,
            ),
            'GetDda': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDda,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetDdaRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetDdaResponse.SerializeToString,
            ),
            'IssueDda': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueDda,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.IssueDdaRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.IssueDdaResponse.SerializeToString,
            ),
            'CloseAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseAccount,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CloseAccountRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CloseAccountResponse.SerializeToString,
            ),
            'ReissueDda': grpc.unary_unary_rpc_method_handler(
                    servicer.ReissueDda,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReissueDdaRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReissueDdaResponse.SerializeToString,
            ),
            'GetAllIssuedBankAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllIssuedBankAccounts,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedBankAccountsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedBankAccountsResponse.SerializeToString,
            ),
            'VoidAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.VoidAuthorization,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.VoidAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.VoidAuthorizationResponse.SerializeToString,
            ),
            'SetPasscode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPasscode,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.SetPasscodeRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.SetPasscodeResponse.SerializeToString,
            ),
            'IssueVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueVirtualCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.IssueVirtualCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.IssueVirtualCardResponse.SerializeToString,
            ),
            'ReissueVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ReissueVirtualCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReissueVirtualCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReissueVirtualCardResponse.SerializeToString,
            ),
            'ActivateVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateVirtualCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ActivateVirtualCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ActivateVirtualCardResponse.SerializeToString,
            ),
            'TerminateVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.TerminateVirtualCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.TerminateVirtualCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.TerminateVirtualCardResponse.SerializeToString,
            ),
            'UpdateIdv': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIdv,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.UpdateIdvRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.UpdateIdvResponse.SerializeToString,
            ),
            'GetIssuedCard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIssuedCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardResponse.SerializeToString,
            ),
            'GetAllIssuedCards': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllIssuedCards,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedCardsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetAllIssuedCardsResponse.SerializeToString,
            ),
            'MarkIssuedCardUndeliverable': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkIssuedCardUndeliverable,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.MarkIssuedCardUndeliverableRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.MarkIssuedCardUndeliverableResponse.SerializeToString,
            ),
            'ToggleIssuedCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleIssuedCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ToggleIssuedCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ToggleIssuedCardResponse.SerializeToString,
            ),
            'SimulateTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.SimulateTransaction,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.SimulateTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.SimulateTransactionResponse.SerializeToString,
            ),
            'GetTransactionDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTransactionDetails,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetTransactionDetailsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetTransactionDetailsResponse.SerializeToString,
            ),
            'GetIssuedCardTransactionData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIssuedCardTransactionData,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardTransactionDataRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetIssuedCardTransactionDataResponse.SerializeToString,
            ),
            'GetAutomatedDisputeEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAutomatedDisputeEligibility,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.AutomatedDisputeEligibilityRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.AutomatedDisputeEligibilityResponse.SerializeToString,
            ),
            'RefundTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.RefundTransaction,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.RefundTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.RefundTransactionResponse.SerializeToString,
            ),
            'ReviewTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.ReviewTransaction,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReviewTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReviewTransactionResponse.SerializeToString,
            ),
            'SetPrimaryIssuedCard': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPrimaryIssuedCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.SetPrimaryIssuedCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.SetPrimaryIssuedCardResponse.SerializeToString,
            ),
            'IssueEmergencyVirtualCard': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueEmergencyVirtualCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardResponse.SerializeToString,
            ),
            'IssueEmergencyVirtualCards': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueEmergencyVirtualCards,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardsResponse.SerializeToString,
            ),
            'SuppressEmergencyVirtualCards': grpc.unary_unary_rpc_method_handler(
                    servicer.SuppressEmergencyVirtualCards,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.SuppressEmergencyVirtualCardsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.SuppressEmergencyVirtualCardsResponse.SerializeToString,
            ),
            'IssuePhysicalCard': grpc.unary_unary_rpc_method_handler(
                    servicer.IssuePhysicalCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.IssuePhysicalCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.IssuePhysicalCardResponse.SerializeToString,
            ),
            'ActivatePhysicalCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivatePhysicalCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ActivatePhysicalCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ActivatePhysicalCardResponse.SerializeToString,
            ),
            'VerifyPhysicalCardActivation': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyPhysicalCardActivation,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.VerifyPhysicalCardActivationRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.VerifyPhysicalCardActivationResponse.SerializeToString,
            ),
            'ReissueDamagedPhysicalCard': grpc.unary_unary_rpc_method_handler(
                    servicer.ReissueDamagedPhysicalCard,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ReissueDamagedPhysicalCardRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ReissueDamagedPhysicalCardResponse.SerializeToString,
            ),
            'GetCardThemes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCardThemes,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetCardThemesRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetCardThemesResponse.SerializeToString,
            ),
            'ProvisionApplePay': grpc.unary_unary_rpc_method_handler(
                    servicer.ProvisionApplePay,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ProvisionApplePayRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ProvisionApplePayResponse.SerializeToString,
            ),
            'ActivateApplePay': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateApplePay,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ActivateApplePayRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ActivateApplePayResponse.SerializeToString,
            ),
            'ProvisionDigitalWalletToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ProvisionDigitalWalletToken,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ProvisionDigitalWalletTokenRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ProvisionDigitalWalletTokenResponse.SerializeToString,
            ),
            'ActivateDigitalWalletToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateDigitalWalletToken,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.ActivateDigitalWalletTokenRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.ActivateDigitalWalletTokenResponse.SerializeToString,
            ),
            'IssueFederalStimulusInstruments': grpc.unary_unary_rpc_method_handler(
                    servicer.IssueFederalStimulusInstruments,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.IssueFederalStimulusInstrumentsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.IssueFederalStimulusInstrumentsResponse.SerializeToString,
            ),
            'CreateChargebackCase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChargebackCase,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.CreateChargebackCaseRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.CreateChargebackCaseResponse.SerializeToString,
            ),
            'BackfillActiveCustomers': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillActiveCustomers,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.BackfillActiveCustomersRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.BackfillActiveCustomersResponse.SerializeToString,
            ),
            'DenylistCustomers': grpc.unary_unary_rpc_method_handler(
                    servicer.DenylistCustomers,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.DenylistCustomersRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.DenylistCustomersResponse.SerializeToString,
            ),
            'UndenylistCustomers': grpc.unary_unary_rpc_method_handler(
                    servicer.UndenylistCustomers,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.UndenylistCustomersRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.UndenylistCustomersResponse.SerializeToString,
            ),
            'LookupCustomerToken': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupCustomerToken,
                    request_deserializer=squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2.LookupCustomerTokenRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2.LookupCustomerTokenResponse.SerializeToString,
            ),
            'GetMarqetaTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMarqetaTransaction,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.GetMarqetaTransactionRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.GetMarqetaTransactionResponse.SerializeToString,
            ),
            'UpdateCustomerAtmStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCustomerAtmStatus,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.UpdateCustomerAtmStatusRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.UpdateCustomerAtmStatusResponse.SerializeToString,
            ),
            'UploadCheckImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadCheckImage,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.UploadCheckImageRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.UploadCheckImageResponse.SerializeToString,
            ),
            'DownloadCheckImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadCheckImage,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.DownloadCheckImageRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.DownloadCheckImageResponse.SerializeToString,
            ),
            'ReserveFunds': grpc.unary_unary_rpc_method_handler(
                    servicer.ReserveFunds,
                    request_deserializer=squareup_dot_cash_dot_moneymover_dot_ReserveFundsRequest__pb2.ReserveFundsRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_moneymover_dot_ReserveFundsResponse__pb2.ReserveFundsResponse.SerializeToString,
            ),
            'TransferFunds': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferFunds,
                    request_deserializer=squareup_dot_cash_dot_moneymover_dot_TransferFundsRequest__pb2.TransferFundsRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_moneymover_dot_TransferFundsResponse__pb2.TransferFundsResponse.SerializeToString,
            ),
            'ReleaseFunds': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseFunds,
                    request_deserializer=squareup_dot_cash_dot_moneymover_dot_ReleaseFundsRequest__pb2.ReleaseFundsRequest.FromString,
                    response_serializer=squareup_dot_cash_dot_moneymover_dot_ReleaseFundsResponse__pb2.ReleaseFundsResponse.SerializeToString,
            ),
            'MarqetaUserTransitions': grpc.unary_unary_rpc_method_handler(
                    servicer.MarqetaUserTransitions,
                    request_deserializer=squareup_dot_banklin_dot_service__pb2.MarqetaUserTransitionsRequest.FromString,
                    response_serializer=squareup_dot_banklin_dot_service__pb2.MarqetaUserTransitionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.banklin.service.MoneyMovingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MoneyMovingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitiateBitcoinWithdrawal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/InitiateBitcoinWithdrawal',
            squareup_dot_banklin_dot_service__pb2.InitiateBitcoinWithdrawalRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.InitiateBitcoinWithdrawalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReviewBitcoinWithdrawal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReviewBitcoinWithdrawal',
            squareup_dot_banklin_dot_service__pb2.ReviewBitcoinWithdrawalRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReviewBitcoinWithdrawalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReviewBitcoinDeposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReviewBitcoinDeposit',
            squareup_dot_banklin_dot_service__pb2.ReviewBitcoinDepositRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReviewBitcoinDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBitconTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetBitconTransfer',
            squareup_dot_banklin_dot_service__pb2.GetBitcoinTransferRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetBitcoinTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReceiveBitcoinPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReceiveBitcoinPayment',
            squareup_dot_banklin_dot_service__pb2.ReceiveBitcoinPaymentRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReceiveBitcoinPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReverseBitcoinDeposit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReverseBitcoinDeposit',
            squareup_dot_banklin_dot_service__pb2.ReverseBitcoinDepositRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReverseBitcoinDepositResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InitiateLightningWithdrawal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/InitiateLightningWithdrawal',
            squareup_dot_banklin_dot_service__pb2.InitiateLightningWithdrawalRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.InitiateLightningWithdrawalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPushCapability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/CheckPushCapability',
            squareup_dot_banklin_dot_service__pb2.CheckPushCapabilityRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CheckPushCapabilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Push(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/Push',
            squareup_dot_banklin_dot_rpc_dot_push__pb2.PushRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_push__pb2.PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoidPush(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/VoidPush',
            squareup_dot_banklin_dot_service__pb2.VoidPushRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.VoidPushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pull(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/Pull',
            squareup_dot_banklin_dot_rpc_dot_pull__pb2.PullRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_pull__pb2.PullResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refund(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/Refund',
            squareup_dot_banklin_dot_service__pb2.RefundRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.RefundResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Commit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/Commit',
            squareup_dot_banklin_dot_rpc_dot_commit__pb2.CommitRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_commit__pb2.CommitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BalanceAdjustment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/BalanceAdjustment',
            squareup_dot_banklin_dot_service__pb2.BalanceAdjustmentRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.BalanceAdjustmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkBalanceAdjustment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/BulkBalanceAdjustment',
            squareup_dot_banklin_dot_service__pb2.BulkBalanceAdjustmentRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.BulkBalanceAdjustmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateStoredValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/CreateStoredValue',
            squareup_dot_banklin_dot_service__pb2.CreateStoredValueRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CreateStoredValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBitcoinWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/CreateBitcoinWallet',
            squareup_dot_banklin_dot_service__pb2.CreateBitcoinWalletRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CreateBitcoinWalletResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetCurrentBalance',
            squareup_dot_banklin_dot_service__pb2.GetCurrentBalanceRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetCurrentBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistoricalBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetHistoricalBalances',
            squareup_dot_banklin_dot_service__pb2.GetHistoricalBalancesRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetHistoricalBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FreezeStoredValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/FreezeStoredValue',
            squareup_dot_banklin_dot_service__pb2.FreezeStoredValueRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.FreezeStoredValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForwardStoredValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ForwardStoredValue',
            squareup_dot_banklin_dot_service__pb2.ForwardStoredValueRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ForwardStoredValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnfreezeStoredValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/UnfreezeStoredValue',
            squareup_dot_banklin_dot_service__pb2.UnfreezeStoredValueRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.UnfreezeStoredValueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalanceTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetBalanceTransactions',
            squareup_dot_banklin_dot_service__pb2.GetBalanceTransactionsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetBalanceTransactionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateAutoReloadPreference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/UpdateAutoReloadPreference',
            squareup_dot_banklin_dot_service__pb2.UpdateAutoReloadPreferenceRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.UpdateAutoReloadPreferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferFundsToMoneyFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/TransferFundsToMoneyFolder',
            squareup_dot_banklin_dot_service__pb2.TransferFundsToMoneyFolderRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.TransferFundsToMoneyFolderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllMoneyFolderBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetAllMoneyFolderBalances',
            squareup_dot_banklin_dot_service__pb2.GetAllMoneyFolderBalancesRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetAllMoneyFolderBalancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMoneyFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/CreateMoneyFolder',
            squareup_dot_banklin_dot_service__pb2.CreateMoneyFolderRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CreateMoneyFolderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ShareMoneyFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ShareMoneyFolder',
            squareup_dot_banklin_dot_service__pb2.ShareMoneyFolderRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ShareMoneyFolderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVelocityControls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetVelocityControls',
            squareup_dot_banklin_dot_service__pb2.GetUserVelocityControlsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetUserVelocityControlsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetDda',
            squareup_dot_banklin_dot_service__pb2.GetDdaRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetDdaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssueDda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/IssueDda',
            squareup_dot_banklin_dot_service__pb2.IssueDdaRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.IssueDdaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/CloseAccount',
            squareup_dot_banklin_dot_service__pb2.CloseAccountRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CloseAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReissueDda(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReissueDda',
            squareup_dot_banklin_dot_service__pb2.ReissueDdaRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReissueDdaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllIssuedBankAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetAllIssuedBankAccounts',
            squareup_dot_banklin_dot_service__pb2.GetAllIssuedBankAccountsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetAllIssuedBankAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VoidAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/VoidAuthorization',
            squareup_dot_banklin_dot_service__pb2.VoidAuthorizationRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.VoidAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPasscode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/SetPasscode',
            squareup_dot_banklin_dot_service__pb2.SetPasscodeRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.SetPasscodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssueVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/IssueVirtualCard',
            squareup_dot_banklin_dot_service__pb2.IssueVirtualCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.IssueVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReissueVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReissueVirtualCard',
            squareup_dot_banklin_dot_service__pb2.ReissueVirtualCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReissueVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ActivateVirtualCard',
            squareup_dot_banklin_dot_service__pb2.ActivateVirtualCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ActivateVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TerminateVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/TerminateVirtualCard',
            squareup_dot_banklin_dot_service__pb2.TerminateVirtualCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.TerminateVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateIdv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/UpdateIdv',
            squareup_dot_banklin_dot_service__pb2.UpdateIdvRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.UpdateIdvResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIssuedCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetIssuedCard',
            squareup_dot_banklin_dot_service__pb2.GetIssuedCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetIssuedCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllIssuedCards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetAllIssuedCards',
            squareup_dot_banklin_dot_service__pb2.GetAllIssuedCardsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetAllIssuedCardsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkIssuedCardUndeliverable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/MarkIssuedCardUndeliverable',
            squareup_dot_banklin_dot_service__pb2.MarkIssuedCardUndeliverableRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.MarkIssuedCardUndeliverableResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ToggleIssuedCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ToggleIssuedCard',
            squareup_dot_banklin_dot_service__pb2.ToggleIssuedCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ToggleIssuedCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SimulateTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/SimulateTransaction',
            squareup_dot_banklin_dot_service__pb2.SimulateTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.SimulateTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTransactionDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetTransactionDetails',
            squareup_dot_banklin_dot_service__pb2.GetTransactionDetailsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetTransactionDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIssuedCardTransactionData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetIssuedCardTransactionData',
            squareup_dot_banklin_dot_service__pb2.GetIssuedCardTransactionDataRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetIssuedCardTransactionDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAutomatedDisputeEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetAutomatedDisputeEligibility',
            squareup_dot_banklin_dot_service__pb2.AutomatedDisputeEligibilityRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.AutomatedDisputeEligibilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefundTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/RefundTransaction',
            squareup_dot_banklin_dot_service__pb2.RefundTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.RefundTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReviewTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReviewTransaction',
            squareup_dot_banklin_dot_service__pb2.ReviewTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReviewTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPrimaryIssuedCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/SetPrimaryIssuedCard',
            squareup_dot_banklin_dot_service__pb2.SetPrimaryIssuedCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.SetPrimaryIssuedCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssueEmergencyVirtualCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/IssueEmergencyVirtualCard',
            squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssueEmergencyVirtualCards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/IssueEmergencyVirtualCards',
            squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.IssueEmergencyVirtualCardsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SuppressEmergencyVirtualCards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/SuppressEmergencyVirtualCards',
            squareup_dot_banklin_dot_service__pb2.SuppressEmergencyVirtualCardsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.SuppressEmergencyVirtualCardsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssuePhysicalCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/IssuePhysicalCard',
            squareup_dot_banklin_dot_service__pb2.IssuePhysicalCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.IssuePhysicalCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivatePhysicalCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ActivatePhysicalCard',
            squareup_dot_banklin_dot_service__pb2.ActivatePhysicalCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ActivatePhysicalCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyPhysicalCardActivation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/VerifyPhysicalCardActivation',
            squareup_dot_banklin_dot_service__pb2.VerifyPhysicalCardActivationRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.VerifyPhysicalCardActivationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReissueDamagedPhysicalCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReissueDamagedPhysicalCard',
            squareup_dot_banklin_dot_service__pb2.ReissueDamagedPhysicalCardRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ReissueDamagedPhysicalCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCardThemes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetCardThemes',
            squareup_dot_banklin_dot_service__pb2.GetCardThemesRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetCardThemesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProvisionApplePay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ProvisionApplePay',
            squareup_dot_banklin_dot_service__pb2.ProvisionApplePayRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ProvisionApplePayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateApplePay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ActivateApplePay',
            squareup_dot_banklin_dot_service__pb2.ActivateApplePayRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ActivateApplePayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProvisionDigitalWalletToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ProvisionDigitalWalletToken',
            squareup_dot_banklin_dot_service__pb2.ProvisionDigitalWalletTokenRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ProvisionDigitalWalletTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateDigitalWalletToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ActivateDigitalWalletToken',
            squareup_dot_banklin_dot_service__pb2.ActivateDigitalWalletTokenRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.ActivateDigitalWalletTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IssueFederalStimulusInstruments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/IssueFederalStimulusInstruments',
            squareup_dot_banklin_dot_service__pb2.IssueFederalStimulusInstrumentsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.IssueFederalStimulusInstrumentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateChargebackCase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/CreateChargebackCase',
            squareup_dot_banklin_dot_service__pb2.CreateChargebackCaseRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.CreateChargebackCaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BackfillActiveCustomers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/BackfillActiveCustomers',
            squareup_dot_banklin_dot_service__pb2.BackfillActiveCustomersRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.BackfillActiveCustomersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DenylistCustomers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/DenylistCustomers',
            squareup_dot_banklin_dot_service__pb2.DenylistCustomersRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.DenylistCustomersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UndenylistCustomers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/UndenylistCustomers',
            squareup_dot_banklin_dot_service__pb2.UndenylistCustomersRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.UndenylistCustomersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupCustomerToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/LookupCustomerToken',
            squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2.LookupCustomerTokenRequest.SerializeToString,
            squareup_dot_banklin_dot_rpc_dot_lookup__customer__token__pb2.LookupCustomerTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMarqetaTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/GetMarqetaTransaction',
            squareup_dot_banklin_dot_service__pb2.GetMarqetaTransactionRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.GetMarqetaTransactionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCustomerAtmStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/UpdateCustomerAtmStatus',
            squareup_dot_banklin_dot_service__pb2.UpdateCustomerAtmStatusRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.UpdateCustomerAtmStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadCheckImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/UploadCheckImage',
            squareup_dot_banklin_dot_service__pb2.UploadCheckImageRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.UploadCheckImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadCheckImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/DownloadCheckImage',
            squareup_dot_banklin_dot_service__pb2.DownloadCheckImageRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.DownloadCheckImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReserveFunds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReserveFunds',
            squareup_dot_cash_dot_moneymover_dot_ReserveFundsRequest__pb2.ReserveFundsRequest.SerializeToString,
            squareup_dot_cash_dot_moneymover_dot_ReserveFundsResponse__pb2.ReserveFundsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferFunds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/TransferFunds',
            squareup_dot_cash_dot_moneymover_dot_TransferFundsRequest__pb2.TransferFundsRequest.SerializeToString,
            squareup_dot_cash_dot_moneymover_dot_TransferFundsResponse__pb2.TransferFundsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseFunds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/ReleaseFunds',
            squareup_dot_cash_dot_moneymover_dot_ReleaseFundsRequest__pb2.ReleaseFundsRequest.SerializeToString,
            squareup_dot_cash_dot_moneymover_dot_ReleaseFundsResponse__pb2.ReleaseFundsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarqetaUserTransitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.banklin.service.MoneyMovingService/MarqetaUserTransitions',
            squareup_dot_banklin_dot_service__pb2.MarqetaUserTransitionsRequest.SerializeToString,
            squareup_dot_banklin_dot_service__pb2.MarqetaUserTransitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
