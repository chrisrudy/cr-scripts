# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Reward(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class FlatRewardTerms(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def reward_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def minimum_spend_amount(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            reward_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            minimum_spend_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"minimum_spend_amount",b"minimum_spend_amount",u"reward_amount",b"reward_amount"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"minimum_spend_amount",b"minimum_spend_amount",u"reward_amount",b"reward_amount"]) -> None: ...
    type___FlatRewardTerms = FlatRewardTerms

    class PercentageRewardTerms(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        reward_basis_points: builtin___int = ...

        def __init__(self,
            *,
            reward_basis_points : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"reward_basis_points",b"reward_basis_points"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"reward_basis_points",b"reward_basis_points"]) -> None: ...
    type___PercentageRewardTerms = PercentageRewardTerms

    token: typing___Text = ...
    reward_program_token: typing___Text = ...

    @property
    def flat_reward(self) -> type___Reward.FlatRewardTerms: ...

    @property
    def percentage_reward(self) -> type___Reward.PercentageRewardTerms: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        reward_program_token : typing___Optional[typing___Text] = None,
        flat_reward : typing___Optional[type___Reward.FlatRewardTerms] = None,
        percentage_reward : typing___Optional[type___Reward.PercentageRewardTerms] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"flat_reward",b"flat_reward",u"percentage_reward",b"percentage_reward",u"reward_program_token",b"reward_program_token",u"terms",b"terms",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"flat_reward",b"flat_reward",u"percentage_reward",b"percentage_reward",u"reward_program_token",b"reward_program_token",u"terms",b"terms",u"token",b"token"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"terms",b"terms"]) -> typing_extensions___Literal["flat_reward","percentage_reward"]: ...
type___Reward = Reward

class RewardProgram(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    description: typing___Text = ...
    enabled: builtin___bool = ...
    merchant_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    parent_merchant_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    stored_value_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    @property
    def reward(self) -> type___Reward: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        reward : typing___Optional[type___Reward] = None,
        enabled : typing___Optional[builtin___bool] = None,
        merchant_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        parent_merchant_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        stored_value_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"description",b"description",u"enabled",b"enabled",u"reward",b"reward",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"description",b"description",u"enabled",b"enabled",u"merchant_tokens",b"merchant_tokens",u"parent_merchant_tokens",b"parent_merchant_tokens",u"reward",b"reward",u"stored_value_tokens",b"stored_value_tokens",u"token",b"token"]) -> None: ...
type___RewardProgram = RewardProgram

class MissingRewardReport(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DecisionValue = typing___NewType('DecisionValue', builtin___int)
    type___DecisionValue = DecisionValue
    Decision: _Decision
    class _Decision(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[MissingRewardReport.DecisionValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        GRANT = typing___cast(MissingRewardReport.DecisionValue, 1)
        GRANT_ONCE = typing___cast(MissingRewardReport.DecisionValue, 2)
        DENY = typing___cast(MissingRewardReport.DecisionValue, 3)
    GRANT = typing___cast(MissingRewardReport.DecisionValue, 1)
    GRANT_ONCE = typing___cast(MissingRewardReport.DecisionValue, 2)
    DENY = typing___cast(MissingRewardReport.DecisionValue, 3)
    type___Decision = Decision

    transaction_token: typing___Text = ...
    decision: type___MissingRewardReport.DecisionValue = ...
    reported_at: builtin___int = ...

    def __init__(self,
        *,
        transaction_token : typing___Optional[typing___Text] = None,
        decision : typing___Optional[type___MissingRewardReport.DecisionValue] = None,
        reported_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"decision",b"decision",u"reported_at",b"reported_at",u"transaction_token",b"transaction_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"decision",b"decision",u"reported_at",b"reported_at",u"transaction_token",b"transaction_token"]) -> None: ...
type___MissingRewardReport = MissingRewardReport
