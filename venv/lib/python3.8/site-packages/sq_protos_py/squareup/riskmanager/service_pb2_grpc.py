# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.riskmanager.message import get_risk_manager_enrollment_pb2 as squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2
from sq_protos_py.squareup.riskmanager.message import get_risk_manager_fees_pb2 as squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2
from sq_protos_py.squareup.riskmanager.message import offboard_pb2 as squareup_dot_riskmanager_dot_message_dot_offboard__pb2
from sq_protos_py.squareup.riskmanager.message import onboard_pb2 as squareup_dot_riskmanager_dot_message_dot_onboard__pb2


class RiskManagerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRiskManagerEnrollment = channel.unary_unary(
                '/squareup.riskmanager.service.RiskManagerService/GetRiskManagerEnrollment',
                request_serializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2.GetRiskManagerEnrollmentRequest.SerializeToString,
                response_deserializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2.GetRiskManagerEnrollmentResponse.FromString,
                )
        self.Onboard = channel.unary_unary(
                '/squareup.riskmanager.service.RiskManagerService/Onboard',
                request_serializer=squareup_dot_riskmanager_dot_message_dot_onboard__pb2.OnboardRequest.SerializeToString,
                response_deserializer=squareup_dot_riskmanager_dot_message_dot_onboard__pb2.OnboardResponse.FromString,
                )
        self.Offboard = channel.unary_unary(
                '/squareup.riskmanager.service.RiskManagerService/Offboard',
                request_serializer=squareup_dot_riskmanager_dot_message_dot_offboard__pb2.OffboardRequest.SerializeToString,
                response_deserializer=squareup_dot_riskmanager_dot_message_dot_offboard__pb2.OffboardResponse.FromString,
                )
        self.GetRiskManagerFees = channel.unary_unary(
                '/squareup.riskmanager.service.RiskManagerService/GetRiskManagerFees',
                request_serializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2.GetRiskManagerFeesRequest.SerializeToString,
                response_deserializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2.GetRiskManagerFeesResponse.FromString,
                )


class RiskManagerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRiskManagerEnrollment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Onboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Offboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRiskManagerFees(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RiskManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRiskManagerEnrollment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRiskManagerEnrollment,
                    request_deserializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2.GetRiskManagerEnrollmentRequest.FromString,
                    response_serializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2.GetRiskManagerEnrollmentResponse.SerializeToString,
            ),
            'Onboard': grpc.unary_unary_rpc_method_handler(
                    servicer.Onboard,
                    request_deserializer=squareup_dot_riskmanager_dot_message_dot_onboard__pb2.OnboardRequest.FromString,
                    response_serializer=squareup_dot_riskmanager_dot_message_dot_onboard__pb2.OnboardResponse.SerializeToString,
            ),
            'Offboard': grpc.unary_unary_rpc_method_handler(
                    servicer.Offboard,
                    request_deserializer=squareup_dot_riskmanager_dot_message_dot_offboard__pb2.OffboardRequest.FromString,
                    response_serializer=squareup_dot_riskmanager_dot_message_dot_offboard__pb2.OffboardResponse.SerializeToString,
            ),
            'GetRiskManagerFees': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRiskManagerFees,
                    request_deserializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2.GetRiskManagerFeesRequest.FromString,
                    response_serializer=squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2.GetRiskManagerFeesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.riskmanager.service.RiskManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RiskManagerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRiskManagerEnrollment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskmanager.service.RiskManagerService/GetRiskManagerEnrollment',
            squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2.GetRiskManagerEnrollmentRequest.SerializeToString,
            squareup_dot_riskmanager_dot_message_dot_get__risk__manager__enrollment__pb2.GetRiskManagerEnrollmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Onboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskmanager.service.RiskManagerService/Onboard',
            squareup_dot_riskmanager_dot_message_dot_onboard__pb2.OnboardRequest.SerializeToString,
            squareup_dot_riskmanager_dot_message_dot_onboard__pb2.OnboardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Offboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskmanager.service.RiskManagerService/Offboard',
            squareup_dot_riskmanager_dot_message_dot_offboard__pb2.OffboardRequest.SerializeToString,
            squareup_dot_riskmanager_dot_message_dot_offboard__pb2.OffboardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRiskManagerFees(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskmanager.service.RiskManagerService/GetRiskManagerFees',
            squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2.GetRiskManagerFeesRequest.SerializeToString,
            squareup_dot_riskmanager_dot_message_dot_get__risk__manager__fees__pb2.GetRiskManagerFeesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
