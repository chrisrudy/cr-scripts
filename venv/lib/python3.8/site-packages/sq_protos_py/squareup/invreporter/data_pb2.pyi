# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

CostAccountingMethodValue = typing___NewType('CostAccountingMethodValue', builtin___int)
type___CostAccountingMethodValue = CostAccountingMethodValue
CostAccountingMethod: _CostAccountingMethod
class _CostAccountingMethod(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CostAccountingMethodValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DO_NOT_USE_COST = typing___cast(CostAccountingMethodValue, 0)
    FIFO_COST = typing___cast(CostAccountingMethodValue, 1)
    LIFO_COST = typing___cast(CostAccountingMethodValue, 2)
    AVERAGE_COST = typing___cast(CostAccountingMethodValue, 3)
DO_NOT_USE_COST = typing___cast(CostAccountingMethodValue, 0)
FIFO_COST = typing___cast(CostAccountingMethodValue, 1)
LIFO_COST = typing___cast(CostAccountingMethodValue, 2)
AVERAGE_COST = typing___cast(CostAccountingMethodValue, 3)
type___CostAccountingMethod = CostAccountingMethod

AdjustmentTypeValue = typing___NewType('AdjustmentTypeValue', builtin___int)
type___AdjustmentTypeValue = AdjustmentTypeValue
AdjustmentType: _AdjustmentType
class _AdjustmentType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AdjustmentTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DO_NOT_USE_ADJUSTMENT_TYPE = typing___cast(AdjustmentTypeValue, 0)
    LOSS = typing___cast(AdjustmentTypeValue, 1)
    DAMAGE = typing___cast(AdjustmentTypeValue, 2)
    INFERRED_LOSS = typing___cast(AdjustmentTypeValue, 3)
    INFERRED_RECEIVE = typing___cast(AdjustmentTypeValue, 4)
    RESTOCK = typing___cast(AdjustmentTypeValue, 5)
DO_NOT_USE_ADJUSTMENT_TYPE = typing___cast(AdjustmentTypeValue, 0)
LOSS = typing___cast(AdjustmentTypeValue, 1)
DAMAGE = typing___cast(AdjustmentTypeValue, 2)
INFERRED_LOSS = typing___cast(AdjustmentTypeValue, 3)
INFERRED_RECEIVE = typing___cast(AdjustmentTypeValue, 4)
RESTOCK = typing___cast(AdjustmentTypeValue, 5)
type___AdjustmentType = AdjustmentType

class ReportDate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    report_token: typing___Text = ...
    report_date: typing___Text = ...

    def __init__(self,
        *,
        report_token : typing___Optional[typing___Text] = None,
        report_date : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"report_date",b"report_date",u"report_token",b"report_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"report_date",b"report_date",u"report_token",b"report_token"]) -> None: ...
type___ReportDate = ReportDate

class Quantity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    count: builtin___int = ...
    fractional_count: builtin___int = ...

    def __init__(self,
        *,
        count : typing___Optional[builtin___int] = None,
        fractional_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"count",b"count",u"fractional_count",b"fractional_count"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"count",b"count",u"fractional_count",b"fractional_count"]) -> None: ...
type___Quantity = Quantity

class ProjectedProfitTotals(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    profit_margin_bips: builtin___int = ...
    quantity_on_hand_decimal: typing___Text = ...

    @property
    def total_cost(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def total_value(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def total_profit(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def quantity_on_hand(self) -> type___Quantity: ...

    def __init__(self,
        *,
        total_cost : typing___Optional[squareup___common___currency_pb2___Money] = None,
        total_value : typing___Optional[squareup___common___currency_pb2___Money] = None,
        total_profit : typing___Optional[squareup___common___currency_pb2___Money] = None,
        profit_margin_bips : typing___Optional[builtin___int] = None,
        quantity_on_hand : typing___Optional[type___Quantity] = None,
        quantity_on_hand_decimal : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"profit_margin_bips",b"profit_margin_bips",u"quantity_on_hand",b"quantity_on_hand",u"quantity_on_hand_decimal",b"quantity_on_hand_decimal",u"total_cost",b"total_cost",u"total_profit",b"total_profit",u"total_value",b"total_value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"profit_margin_bips",b"profit_margin_bips",u"quantity_on_hand",b"quantity_on_hand",u"quantity_on_hand_decimal",b"quantity_on_hand_decimal",u"total_cost",b"total_cost",u"total_profit",b"total_profit",u"total_value",b"total_value"]) -> None: ...
type___ProjectedProfitTotals = ProjectedProfitTotals

class ProjectedProfitItemVariation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    sku: typing___Text = ...
    token: typing___Text = ...
    gtin: typing___Text = ...

    @property
    def projected_profit_totals(self) -> type___ProjectedProfitTotals: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        sku : typing___Optional[typing___Text] = None,
        token : typing___Optional[typing___Text] = None,
        projected_profit_totals : typing___Optional[type___ProjectedProfitTotals] = None,
        gtin : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"gtin",b"gtin",u"name",b"name",u"projected_profit_totals",b"projected_profit_totals",u"sku",b"sku",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"gtin",b"gtin",u"name",b"name",u"projected_profit_totals",b"projected_profit_totals",u"sku",b"sku",u"token",b"token"]) -> None: ...
type___ProjectedProfitItemVariation = ProjectedProfitItemVariation

class ProjectedProfitItem(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    category: typing___Text = ...
    token: typing___Text = ...

    @property
    def projected_profit_totals(self) -> type___ProjectedProfitTotals: ...

    @property
    def item_variations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ProjectedProfitItemVariation]: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        category : typing___Optional[typing___Text] = None,
        token : typing___Optional[typing___Text] = None,
        projected_profit_totals : typing___Optional[type___ProjectedProfitTotals] = None,
        item_variations : typing___Optional[typing___Iterable[type___ProjectedProfitItemVariation]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"category",b"category",u"name",b"name",u"projected_profit_totals",b"projected_profit_totals",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"category",b"category",u"item_variations",b"item_variations",u"name",b"name",u"projected_profit_totals",b"projected_profit_totals",u"token",b"token"]) -> None: ...
type___ProjectedProfitItem = ProjectedProfitItem

class InventoryOnHandByCategoryLine(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...

    @property
    def projected_profit_totals(self) -> type___ProjectedProfitTotals: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        projected_profit_totals : typing___Optional[type___ProjectedProfitTotals] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name",u"projected_profit_totals",b"projected_profit_totals"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name",u"projected_profit_totals",b"projected_profit_totals"]) -> None: ...
type___InventoryOnHandByCategoryLine = InventoryOnHandByCategoryLine
