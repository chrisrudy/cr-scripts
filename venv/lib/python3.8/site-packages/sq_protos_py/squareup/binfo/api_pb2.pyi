# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.gateways_pb2 import (
    GatewayNameValue as squareup___common___gateways_pb2___GatewayNameValue,
)

from sq_protos_py.squareup.common.instrument_pb2 import (
    InstrumentTypeValue as squareup___common___instrument_pb2___InstrumentTypeValue,
)

from sq_protos_py.squareup.payments.common_pb2 import (
    MessageTypeValue as squareup___payments___common_pb2___MessageTypeValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

SourceValue = typing___NewType('SourceValue', builtin___int)
type___SourceValue = SourceValue
Source: _Source
class _Source(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SourceValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_SOURCE_DO_NOT_USE = typing___cast(SourceValue, 1)
    ABSENT_SOURCE = typing___cast(SourceValue, 2)
    OVERRIDE = typing___cast(SourceValue, 3)
    PAYMENTECH = typing___cast(SourceValue, 4)
    BINBASE = typing___cast(SourceValue, 5)
    FIRST_DATA = typing___cast(SourceValue, 6)
    VISA_PREPAID = typing___cast(SourceValue, 7)
    VISA_ACCOUNT_LOOKUP = typing___cast(SourceValue, 8)
    AMEX_PRBIN = typing___cast(SourceValue, 9)
    SHAZAM_SOURCE = typing___cast(SourceValue, 10)
    PROPOSED_CHASENET_SOURCE = typing___cast(SourceValue, 11)
    CHASENET_SOURCE = typing___cast(SourceValue, 12)
    EVERLINK_SOURCE = typing___cast(SourceValue, 13)
    ACCULYNK_SOURCE = typing___cast(SourceValue, 14)
    STAR_SOURCE = typing___cast(SourceValue, 15)
    NYCE_NYCE_SOURCE = typing___cast(SourceValue, 16)
    NYCE_PULSE_SOURCE = typing___cast(SourceValue, 17)
    NYCE_ACCEL_SOURCE = typing___cast(SourceValue, 18)
    AMEX_GLOBAL = typing___cast(SourceValue, 19)
    PAYMENTECH_V015 = typing___cast(SourceValue, 20)
    VISA_BIN_ATTRIBUTES = typing___cast(SourceValue, 21)
    MPE = typing___cast(SourceValue, 22)
DEFAULT_SOURCE_DO_NOT_USE = typing___cast(SourceValue, 1)
ABSENT_SOURCE = typing___cast(SourceValue, 2)
OVERRIDE = typing___cast(SourceValue, 3)
PAYMENTECH = typing___cast(SourceValue, 4)
BINBASE = typing___cast(SourceValue, 5)
FIRST_DATA = typing___cast(SourceValue, 6)
VISA_PREPAID = typing___cast(SourceValue, 7)
VISA_ACCOUNT_LOOKUP = typing___cast(SourceValue, 8)
AMEX_PRBIN = typing___cast(SourceValue, 9)
SHAZAM_SOURCE = typing___cast(SourceValue, 10)
PROPOSED_CHASENET_SOURCE = typing___cast(SourceValue, 11)
CHASENET_SOURCE = typing___cast(SourceValue, 12)
EVERLINK_SOURCE = typing___cast(SourceValue, 13)
ACCULYNK_SOURCE = typing___cast(SourceValue, 14)
STAR_SOURCE = typing___cast(SourceValue, 15)
NYCE_NYCE_SOURCE = typing___cast(SourceValue, 16)
NYCE_PULSE_SOURCE = typing___cast(SourceValue, 17)
NYCE_ACCEL_SOURCE = typing___cast(SourceValue, 18)
AMEX_GLOBAL = typing___cast(SourceValue, 19)
PAYMENTECH_V015 = typing___cast(SourceValue, 20)
VISA_BIN_ATTRIBUTES = typing___cast(SourceValue, 21)
MPE = typing___cast(SourceValue, 22)
type___Source = Source

CardTypeValue = typing___NewType('CardTypeValue', builtin___int)
type___CardTypeValue = CardTypeValue
CardType: _CardType
class _CardType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_CARD_TYPE_DO_NOT_USE = typing___cast(CardTypeValue, 1)
    DEBIT = typing___cast(CardTypeValue, 2)
    CREDIT = typing___cast(CardTypeValue, 3)
DEFAULT_CARD_TYPE_DO_NOT_USE = typing___cast(CardTypeValue, 1)
DEBIT = typing___cast(CardTypeValue, 2)
CREDIT = typing___cast(CardTypeValue, 3)
type___CardType = CardType

DebitTypeValue = typing___NewType('DebitTypeValue', builtin___int)
type___DebitTypeValue = DebitTypeValue
DebitType: _DebitType
class _DebitType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DebitTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_DEBIT_TYPE_DO_NOT_USE = typing___cast(DebitTypeValue, 1)
    REGULATED = typing___cast(DebitTypeValue, 2)
    UNREGULATED = typing___cast(DebitTypeValue, 3)
    REGULATED_FRAUD = typing___cast(DebitTypeValue, 4)
DEFAULT_DEBIT_TYPE_DO_NOT_USE = typing___cast(DebitTypeValue, 1)
REGULATED = typing___cast(DebitTypeValue, 2)
UNREGULATED = typing___cast(DebitTypeValue, 3)
REGULATED_FRAUD = typing___cast(DebitTypeValue, 4)
type___DebitType = DebitType

PrepaidStatusValue = typing___NewType('PrepaidStatusValue', builtin___int)
type___PrepaidStatusValue = PrepaidStatusValue
PrepaidStatus: _PrepaidStatus
class _PrepaidStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PrepaidStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_CATEGORY_DO_NOT_USE = typing___cast(PrepaidStatusValue, 1)
    NOT_PREPAID = typing___cast(PrepaidStatusValue, 2)
    PREPAID = typing___cast(PrepaidStatusValue, 3)
DEFAULT_CATEGORY_DO_NOT_USE = typing___cast(PrepaidStatusValue, 1)
NOT_PREPAID = typing___cast(PrepaidStatusValue, 2)
PREPAID = typing___cast(PrepaidStatusValue, 3)
type___PrepaidStatus = PrepaidStatus

CardProductValue = typing___NewType('CardProductValue', builtin___int)
type___CardProductValue = CardProductValue
CardProduct: _CardProduct
class _CardProduct(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CardProductValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_CARD_PRODUCT_DO_NOT_USE = typing___cast(CardProductValue, 1)
    INTERNATIONAL_MAESTRO = typing___cast(CardProductValue, 2)
    DINERS_CLUB = typing___cast(CardProductValue, 3)
    DISCOVER = typing___cast(CardProductValue, 4)
    INTERAC = typing___cast(CardProductValue, 5)
    JCB = typing___cast(CardProductValue, 6)
    MASTERCARD = typing___cast(CardProductValue, 7)
    PIN_ONLY = typing___cast(CardProductValue, 8)
    VISA = typing___cast(CardProductValue, 9)
    AMEX = typing___cast(CardProductValue, 10)
    GE_CAPITAL = typing___cast(CardProductValue, 11)
    PRIVATE_LABEL = typing___cast(CardProductValue, 12)
    SQUARE_GIFT_CARD_V2 = typing___cast(CardProductValue, 13)
    UNION_PAY = typing___cast(CardProductValue, 14)
    SQUARE_CAPITAL_CARD = typing___cast(CardProductValue, 15)
    EFTPOS = typing___cast(CardProductValue, 16)
    FELICA_ID = typing___cast(CardProductValue, 17)
    FELICA_TRANSPORTATION = typing___cast(CardProductValue, 18)
    FELICA_QP = typing___cast(CardProductValue, 19)
    ALIPAY = typing___cast(CardProductValue, 20)
    CASH_APP = typing___cast(CardProductValue, 21)
    EBT = typing___cast(CardProductValue, 22)
DEFAULT_CARD_PRODUCT_DO_NOT_USE = typing___cast(CardProductValue, 1)
INTERNATIONAL_MAESTRO = typing___cast(CardProductValue, 2)
DINERS_CLUB = typing___cast(CardProductValue, 3)
DISCOVER = typing___cast(CardProductValue, 4)
INTERAC = typing___cast(CardProductValue, 5)
JCB = typing___cast(CardProductValue, 6)
MASTERCARD = typing___cast(CardProductValue, 7)
PIN_ONLY = typing___cast(CardProductValue, 8)
VISA = typing___cast(CardProductValue, 9)
AMEX = typing___cast(CardProductValue, 10)
GE_CAPITAL = typing___cast(CardProductValue, 11)
PRIVATE_LABEL = typing___cast(CardProductValue, 12)
SQUARE_GIFT_CARD_V2 = typing___cast(CardProductValue, 13)
UNION_PAY = typing___cast(CardProductValue, 14)
SQUARE_CAPITAL_CARD = typing___cast(CardProductValue, 15)
EFTPOS = typing___cast(CardProductValue, 16)
FELICA_ID = typing___cast(CardProductValue, 17)
FELICA_TRANSPORTATION = typing___cast(CardProductValue, 18)
FELICA_QP = typing___cast(CardProductValue, 19)
ALIPAY = typing___cast(CardProductValue, 20)
CASH_APP = typing___cast(CardProductValue, 21)
EBT = typing___cast(CardProductValue, 22)
type___CardProduct = CardProduct

PinCategoryValue = typing___NewType('PinCategoryValue', builtin___int)
type___PinCategoryValue = PinCategoryValue
PinCategory: _PinCategory
class _PinCategory(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PinCategoryValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_PIN_CATEGORY_DO_NOT_USE = typing___cast(PinCategoryValue, 1)
    NO_PIN = typing___cast(PinCategoryValue, 2)
    PIN_CAPABLE = typing___cast(PinCategoryValue, 3)
    PIN_DEBIT_ONLY_WITH_EBT = typing___cast(PinCategoryValue, 4)
    PIN_DEBIT_ONLY_WITHOUT_EBT = typing___cast(PinCategoryValue, 5)
DEFAULT_PIN_CATEGORY_DO_NOT_USE = typing___cast(PinCategoryValue, 1)
NO_PIN = typing___cast(PinCategoryValue, 2)
PIN_CAPABLE = typing___cast(PinCategoryValue, 3)
PIN_DEBIT_ONLY_WITH_EBT = typing___cast(PinCategoryValue, 4)
PIN_DEBIT_ONLY_WITHOUT_EBT = typing___cast(PinCategoryValue, 5)
type___PinCategory = PinCategory

DebitNetworkValue = typing___NewType('DebitNetworkValue', builtin___int)
type___DebitNetworkValue = DebitNetworkValue
DebitNetwork: _DebitNetwork
class _DebitNetwork(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DebitNetworkValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_DEBIT_NETWORK_DO_NOT_USE = typing___cast(DebitNetworkValue, 1)
    ACCEL = typing___cast(DebitNetworkValue, 2)
    ACCEL_FISERV = typing___cast(DebitNetworkValue, 3)
    AFFN = typing___cast(DebitNetworkValue, 4)
    AFFN_DIRECT = typing___cast(DebitNetworkValue, 5)
    AFFN_FIDELITY = typing___cast(DebitNetworkValue, 6)
    AFFN_FISERV = typing___cast(DebitNetworkValue, 7)
    ALASKA_OPTION = typing___cast(DebitNetworkValue, 8)
    ALASKA_OPTION_FISERV = typing___cast(DebitNetworkValue, 9)
    ATH_DIRECT = typing___cast(DebitNetworkValue, 10)
    ATH_SCOTIA_BANK = typing___cast(DebitNetworkValue, 11)
    BASE_24 = typing___cast(DebitNetworkValue, 12)
    CNB_ENID = typing___cast(DebitNetworkValue, 13)
    CU24_DIRECT = typing___cast(DebitNetworkValue, 14)
    CU24_FIDELITY = typing___cast(DebitNetworkValue, 15)
    CU24_FISERV = typing___cast(DebitNetworkValue, 16)
    CU_24 = typing___cast(DebitNetworkValue, 17)
    EBT_ACS = typing___cast(DebitNetworkValue, 18)
    EBT_EFUNDS = typing___cast(DebitNetworkValue, 19)
    EBT_FISERV = typing___cast(DebitNetworkValue, 20)
    EBT_JPCHASE = typing___cast(DebitNetworkValue, 21)
    EBT_NORTHRUP_GRUMMAN = typing___cast(DebitNetworkValue, 22)
    EBT_TEAM_OF_TEXAS = typing___cast(DebitNetworkValue, 23)
    EVERLINK = typing___cast(DebitNetworkValue, 24)
    EVERLINK_INTERAC_ICU = typing___cast(DebitNetworkValue, 25)
    EXXON = typing___cast(DebitNetworkValue, 26)
    FISERV = typing___cast(DebitNetworkValue, 27)
    INSTANT_TELLER = typing___cast(DebitNetworkValue, 28)
    INTERAC_EVERLINK = typing___cast(DebitNetworkValue, 29)
    INTERLINK = typing___cast(DebitNetworkValue, 30)
    INTERLINK_FISERV = typing___cast(DebitNetworkValue, 31)
    JEANIE = typing___cast(DebitNetworkValue, 32)
    JEANIE_DIRECT = typing___cast(DebitNetworkValue, 33)
    JEANIE_STAR_WEST = typing___cast(DebitNetworkValue, 34)
    MAESTRO = typing___cast(DebitNetworkValue, 35)
    MAESTRO_DIRECT = typing___cast(DebitNetworkValue, 36)
    MAESTRO_FISERV = typing___cast(DebitNetworkValue, 37)
    MAESTRO_STAR_WEST = typing___cast(DebitNetworkValue, 38)
    MPACT = typing___cast(DebitNetworkValue, 39)
    NYCE = typing___cast(DebitNetworkValue, 40)
    NYCE_FISERV = typing___cast(DebitNetworkValue, 41)
    PAVD = typing___cast(DebitNetworkValue, 42)
    PULSE = typing___cast(DebitNetworkValue, 43)
    PULSE_FISERV = typing___cast(DebitNetworkValue, 44)
    PULSE_TYME = typing___cast(DebitNetworkValue, 45)
    QUEST_EBT = typing___cast(DebitNetworkValue, 46)
    SHAZAM = typing___cast(DebitNetworkValue, 47)
    STAR_EAST = typing___cast(DebitNetworkValue, 48)
    STAR_EAST_FISERV = typing___cast(DebitNetworkValue, 49)
    STAR_NE = typing___cast(DebitNetworkValue, 50)
    STAR_NE_FISERV = typing___cast(DebitNetworkValue, 51)
    STAR_NORTHEAST = typing___cast(DebitNetworkValue, 52)
    STAR_WEST = typing___cast(DebitNetworkValue, 53)
    STAR_WEST_ALASKA_OPTION = typing___cast(DebitNetworkValue, 54)
    STAR_WEST_FISERV = typing___cast(DebitNetworkValue, 55)
    SVS = typing___cast(DebitNetworkValue, 56)
    TEMPO = typing___cast(DebitNetworkValue, 57)
    TX = typing___cast(DebitNetworkValue, 58)
    TYME = typing___cast(DebitNetworkValue, 59)
    NETS = typing___cast(DebitNetworkValue, 60)
    CHINA_UNION_PAY = typing___cast(DebitNetworkValue, 61)
DEFAULT_DEBIT_NETWORK_DO_NOT_USE = typing___cast(DebitNetworkValue, 1)
ACCEL = typing___cast(DebitNetworkValue, 2)
ACCEL_FISERV = typing___cast(DebitNetworkValue, 3)
AFFN = typing___cast(DebitNetworkValue, 4)
AFFN_DIRECT = typing___cast(DebitNetworkValue, 5)
AFFN_FIDELITY = typing___cast(DebitNetworkValue, 6)
AFFN_FISERV = typing___cast(DebitNetworkValue, 7)
ALASKA_OPTION = typing___cast(DebitNetworkValue, 8)
ALASKA_OPTION_FISERV = typing___cast(DebitNetworkValue, 9)
ATH_DIRECT = typing___cast(DebitNetworkValue, 10)
ATH_SCOTIA_BANK = typing___cast(DebitNetworkValue, 11)
BASE_24 = typing___cast(DebitNetworkValue, 12)
CNB_ENID = typing___cast(DebitNetworkValue, 13)
CU24_DIRECT = typing___cast(DebitNetworkValue, 14)
CU24_FIDELITY = typing___cast(DebitNetworkValue, 15)
CU24_FISERV = typing___cast(DebitNetworkValue, 16)
CU_24 = typing___cast(DebitNetworkValue, 17)
EBT_ACS = typing___cast(DebitNetworkValue, 18)
EBT_EFUNDS = typing___cast(DebitNetworkValue, 19)
EBT_FISERV = typing___cast(DebitNetworkValue, 20)
EBT_JPCHASE = typing___cast(DebitNetworkValue, 21)
EBT_NORTHRUP_GRUMMAN = typing___cast(DebitNetworkValue, 22)
EBT_TEAM_OF_TEXAS = typing___cast(DebitNetworkValue, 23)
EVERLINK = typing___cast(DebitNetworkValue, 24)
EVERLINK_INTERAC_ICU = typing___cast(DebitNetworkValue, 25)
EXXON = typing___cast(DebitNetworkValue, 26)
FISERV = typing___cast(DebitNetworkValue, 27)
INSTANT_TELLER = typing___cast(DebitNetworkValue, 28)
INTERAC_EVERLINK = typing___cast(DebitNetworkValue, 29)
INTERLINK = typing___cast(DebitNetworkValue, 30)
INTERLINK_FISERV = typing___cast(DebitNetworkValue, 31)
JEANIE = typing___cast(DebitNetworkValue, 32)
JEANIE_DIRECT = typing___cast(DebitNetworkValue, 33)
JEANIE_STAR_WEST = typing___cast(DebitNetworkValue, 34)
MAESTRO = typing___cast(DebitNetworkValue, 35)
MAESTRO_DIRECT = typing___cast(DebitNetworkValue, 36)
MAESTRO_FISERV = typing___cast(DebitNetworkValue, 37)
MAESTRO_STAR_WEST = typing___cast(DebitNetworkValue, 38)
MPACT = typing___cast(DebitNetworkValue, 39)
NYCE = typing___cast(DebitNetworkValue, 40)
NYCE_FISERV = typing___cast(DebitNetworkValue, 41)
PAVD = typing___cast(DebitNetworkValue, 42)
PULSE = typing___cast(DebitNetworkValue, 43)
PULSE_FISERV = typing___cast(DebitNetworkValue, 44)
PULSE_TYME = typing___cast(DebitNetworkValue, 45)
QUEST_EBT = typing___cast(DebitNetworkValue, 46)
SHAZAM = typing___cast(DebitNetworkValue, 47)
STAR_EAST = typing___cast(DebitNetworkValue, 48)
STAR_EAST_FISERV = typing___cast(DebitNetworkValue, 49)
STAR_NE = typing___cast(DebitNetworkValue, 50)
STAR_NE_FISERV = typing___cast(DebitNetworkValue, 51)
STAR_NORTHEAST = typing___cast(DebitNetworkValue, 52)
STAR_WEST = typing___cast(DebitNetworkValue, 53)
STAR_WEST_ALASKA_OPTION = typing___cast(DebitNetworkValue, 54)
STAR_WEST_FISERV = typing___cast(DebitNetworkValue, 55)
SVS = typing___cast(DebitNetworkValue, 56)
TEMPO = typing___cast(DebitNetworkValue, 57)
TX = typing___cast(DebitNetworkValue, 58)
TYME = typing___cast(DebitNetworkValue, 59)
NETS = typing___cast(DebitNetworkValue, 60)
CHINA_UNION_PAY = typing___cast(DebitNetworkValue, 61)
type___DebitNetwork = DebitNetwork

HsaFsaStatusValue = typing___NewType('HsaFsaStatusValue', builtin___int)
type___HsaFsaStatusValue = HsaFsaStatusValue
HsaFsaStatus: _HsaFsaStatus
class _HsaFsaStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[HsaFsaStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_DO_NOT_USE = typing___cast(HsaFsaStatusValue, 1)
    NOT_HSA_FSA = typing___cast(HsaFsaStatusValue, 2)
    HSA = typing___cast(HsaFsaStatusValue, 3)
    FSA = typing___cast(HsaFsaStatusValue, 4)
    HSA_AND_FSA = typing___cast(HsaFsaStatusValue, 5)
DEFAULT_DO_NOT_USE = typing___cast(HsaFsaStatusValue, 1)
NOT_HSA_FSA = typing___cast(HsaFsaStatusValue, 2)
HSA = typing___cast(HsaFsaStatusValue, 3)
FSA = typing___cast(HsaFsaStatusValue, 4)
HSA_AND_FSA = typing___cast(HsaFsaStatusValue, 5)
type___HsaFsaStatus = HsaFsaStatus

FastFundsValue = typing___NewType('FastFundsValue', builtin___int)
type___FastFundsValue = FastFundsValue
FastFunds: _FastFunds
class _FastFunds(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FastFundsValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_FAST_FUNDS_DO_NOT_USE = typing___cast(FastFundsValue, 1)
    NONE = typing___cast(FastFundsValue, 2)
    DOMESTIC = typing___cast(FastFundsValue, 3)
    CROSS_BORDER = typing___cast(FastFundsValue, 4)
    DOMESTIC_AND_CROSS_BORDER = typing___cast(FastFundsValue, 5)
DEFAULT_FAST_FUNDS_DO_NOT_USE = typing___cast(FastFundsValue, 1)
NONE = typing___cast(FastFundsValue, 2)
DOMESTIC = typing___cast(FastFundsValue, 3)
CROSS_BORDER = typing___cast(FastFundsValue, 4)
DOMESTIC_AND_CROSS_BORDER = typing___cast(FastFundsValue, 5)
type___FastFunds = FastFunds

SquareIssuedCardValue = typing___NewType('SquareIssuedCardValue', builtin___int)
type___SquareIssuedCardValue = SquareIssuedCardValue
SquareIssuedCard: _SquareIssuedCard
class _SquareIssuedCard(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SquareIssuedCardValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_OR_NOT_SQUARE_ISSUED = typing___cast(SquareIssuedCardValue, 1)
    CASH_CARD = typing___cast(SquareIssuedCardValue, 2)
    SQUARE_CARD = typing___cast(SquareIssuedCardValue, 3)
UNKNOWN_OR_NOT_SQUARE_ISSUED = typing___cast(SquareIssuedCardValue, 1)
CASH_CARD = typing___cast(SquareIssuedCardValue, 2)
SQUARE_CARD = typing___cast(SquareIssuedCardValue, 3)
type___SquareIssuedCard = SquareIssuedCard

PinlessDebitStatusValue = typing___NewType('PinlessDebitStatusValue', builtin___int)
type___PinlessDebitStatusValue = PinlessDebitStatusValue
PinlessDebitStatus: _PinlessDebitStatus
class _PinlessDebitStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PinlessDebitStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_PINLESS_DEBIT_STATUS_DO_NOT_USE = typing___cast(PinlessDebitStatusValue, 1)
    PINLESS_DEBIT_ALLOWED = typing___cast(PinlessDebitStatusValue, 2)
DEFAULT_PINLESS_DEBIT_STATUS_DO_NOT_USE = typing___cast(PinlessDebitStatusValue, 1)
PINLESS_DEBIT_ALLOWED = typing___cast(PinlessDebitStatusValue, 2)
type___PinlessDebitStatus = PinlessDebitStatus

ECommerceStatusValue = typing___NewType('ECommerceStatusValue', builtin___int)
type___ECommerceStatusValue = ECommerceStatusValue
ECommerceStatus: _ECommerceStatus
class _ECommerceStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ECommerceStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_ECOMMERCE_STATUS_DO_NOT_USE = typing___cast(ECommerceStatusValue, 1)
    ECOMMERCE_ALLOWED = typing___cast(ECommerceStatusValue, 2)
DEFAULT_ECOMMERCE_STATUS_DO_NOT_USE = typing___cast(ECommerceStatusValue, 1)
ECOMMERCE_ALLOWED = typing___cast(ECommerceStatusValue, 2)
type___ECommerceStatus = ECommerceStatus

PremierStatusValue = typing___NewType('PremierStatusValue', builtin___int)
type___PremierStatusValue = PremierStatusValue
PremierStatus: _PremierStatus
class _PremierStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PremierStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_PREMIER_STATUS_DO_NOT_USE = typing___cast(PremierStatusValue, 1)
    PREMIER_ISSUER = typing___cast(PremierStatusValue, 2)
DEFAULT_PREMIER_STATUS_DO_NOT_USE = typing___cast(PremierStatusValue, 1)
PREMIER_ISSUER = typing___cast(PremierStatusValue, 2)
type___PremierStatus = PremierStatus

ChaseMethodOfPaymentValue = typing___NewType('ChaseMethodOfPaymentValue', builtin___int)
type___ChaseMethodOfPaymentValue = ChaseMethodOfPaymentValue
ChaseMethodOfPayment: _ChaseMethodOfPayment
class _ChaseMethodOfPayment(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ChaseMethodOfPaymentValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_CHASE_METHOD_OF_PAYMENT_DO_NOT_USE = typing___cast(ChaseMethodOfPaymentValue, 1)
    CR_CHASE_NET_SIGNATURE_DEBIT_OR_PREPAID = typing___cast(ChaseMethodOfPaymentValue, 2)
    CZ_CHASE_NET_CREDIT = typing___cast(ChaseMethodOfPaymentValue, 3)
    CX_CHASE_NET_PIN_DEBIT = typing___cast(ChaseMethodOfPaymentValue, 4)
DEFAULT_CHASE_METHOD_OF_PAYMENT_DO_NOT_USE = typing___cast(ChaseMethodOfPaymentValue, 1)
CR_CHASE_NET_SIGNATURE_DEBIT_OR_PREPAID = typing___cast(ChaseMethodOfPaymentValue, 2)
CZ_CHASE_NET_CREDIT = typing___cast(ChaseMethodOfPaymentValue, 3)
CX_CHASE_NET_PIN_DEBIT = typing___cast(ChaseMethodOfPaymentValue, 4)
type___ChaseMethodOfPayment = ChaseMethodOfPayment

class OctProperties(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    can_receive_oct_from_usa_p2p: builtin___bool = ...
    can_receive_oct_from_usa_non_p2p: builtin___bool = ...
    can_receive_oct_from_non_usa_p2p: builtin___bool = ...
    can_receive_oct_from_non_usa_non_p2p: builtin___bool = ...
    fast_funds: type___FastFundsValue = ...

    def __init__(self,
        *,
        can_receive_oct_from_usa_p2p : typing___Optional[builtin___bool] = None,
        can_receive_oct_from_usa_non_p2p : typing___Optional[builtin___bool] = None,
        can_receive_oct_from_non_usa_p2p : typing___Optional[builtin___bool] = None,
        can_receive_oct_from_non_usa_non_p2p : typing___Optional[builtin___bool] = None,
        fast_funds : typing___Optional[type___FastFundsValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"can_receive_oct_from_non_usa_non_p2p",b"can_receive_oct_from_non_usa_non_p2p",u"can_receive_oct_from_non_usa_p2p",b"can_receive_oct_from_non_usa_p2p",u"can_receive_oct_from_usa_non_p2p",b"can_receive_oct_from_usa_non_p2p",u"can_receive_oct_from_usa_p2p",b"can_receive_oct_from_usa_p2p",u"fast_funds",b"fast_funds"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"can_receive_oct_from_non_usa_non_p2p",b"can_receive_oct_from_non_usa_non_p2p",u"can_receive_oct_from_non_usa_p2p",b"can_receive_oct_from_non_usa_p2p",u"can_receive_oct_from_usa_non_p2p",b"can_receive_oct_from_usa_non_p2p",u"can_receive_oct_from_usa_p2p",b"can_receive_oct_from_usa_p2p",u"fast_funds",b"fast_funds"]) -> None: ...
type___OctProperties = OctProperties

class FundsTransferProperties(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    can_receive_funds_transfer_credit: builtin___bool = ...
    can_receive_funds_transfer_debit: builtin___bool = ...
    fast_funds: type___FastFundsValue = ...

    def __init__(self,
        *,
        can_receive_funds_transfer_credit : typing___Optional[builtin___bool] = None,
        can_receive_funds_transfer_debit : typing___Optional[builtin___bool] = None,
        fast_funds : typing___Optional[type___FastFundsValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"can_receive_funds_transfer_credit",b"can_receive_funds_transfer_credit",u"can_receive_funds_transfer_debit",b"can_receive_funds_transfer_debit",u"fast_funds",b"fast_funds"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"can_receive_funds_transfer_credit",b"can_receive_funds_transfer_credit",u"can_receive_funds_transfer_debit",b"can_receive_funds_transfer_debit",u"fast_funds",b"fast_funds"]) -> None: ...
type___FundsTransferProperties = FundsTransferProperties

class SupportedRoute(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DestinationValue = typing___NewType('DestinationValue', builtin___int)
    type___DestinationValue = DestinationValue
    Destination: _Destination
    class _Destination(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SupportedRoute.DestinationValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DEFAULT_DO_NOT_USE = typing___cast(SupportedRoute.DestinationValue, 0)
        DEFAULT_DESTINATION = typing___cast(SupportedRoute.DestinationValue, 1)
        OTHER = typing___cast(SupportedRoute.DestinationValue, 2)
        CHASENET = typing___cast(SupportedRoute.DestinationValue, 3)
    DEFAULT_DO_NOT_USE = typing___cast(SupportedRoute.DestinationValue, 0)
    DEFAULT_DESTINATION = typing___cast(SupportedRoute.DestinationValue, 1)
    OTHER = typing___cast(SupportedRoute.DestinationValue, 2)
    CHASENET = typing___cast(SupportedRoute.DestinationValue, 3)
    type___Destination = Destination

    class RepeatedDebitNetwork(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        debit_networks: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___DebitNetworkValue] = ...

        def __init__(self,
            *,
            debit_networks : typing___Optional[typing___Iterable[type___DebitNetworkValue]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"debit_networks",b"debit_networks"]) -> None: ...
    type___RepeatedDebitNetwork = RepeatedDebitNetwork

    gateway_name: squareup___common___gateways_pb2___GatewayNameValue = ...
    message_type: squareup___payments___common_pb2___MessageTypeValue = ...
    destination: type___SupportedRoute.DestinationValue = ...
    pinless_debit_status: type___PinlessDebitStatusValue = ...
    ecommerce_status: type___ECommerceStatusValue = ...
    premier_status: type___PremierStatusValue = ...

    @property
    def repeated_debit_network(self) -> type___SupportedRoute.RepeatedDebitNetwork: ...

    @property
    def funds_transfer_properties(self) -> type___FundsTransferProperties: ...

    def __init__(self,
        *,
        gateway_name : typing___Optional[squareup___common___gateways_pb2___GatewayNameValue] = None,
        message_type : typing___Optional[squareup___payments___common_pb2___MessageTypeValue] = None,
        destination : typing___Optional[type___SupportedRoute.DestinationValue] = None,
        repeated_debit_network : typing___Optional[type___SupportedRoute.RepeatedDebitNetwork] = None,
        funds_transfer_properties : typing___Optional[type___FundsTransferProperties] = None,
        pinless_debit_status : typing___Optional[type___PinlessDebitStatusValue] = None,
        ecommerce_status : typing___Optional[type___ECommerceStatusValue] = None,
        premier_status : typing___Optional[type___PremierStatusValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"destination",b"destination",u"destination_or_debit_networks",b"destination_or_debit_networks",u"ecommerce_status",b"ecommerce_status",u"funds_transfer_properties",b"funds_transfer_properties",u"gateway_name",b"gateway_name",u"message_type",b"message_type",u"pinless_debit_status",b"pinless_debit_status",u"premier_status",b"premier_status",u"repeated_debit_network",b"repeated_debit_network"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"destination",b"destination",u"destination_or_debit_networks",b"destination_or_debit_networks",u"ecommerce_status",b"ecommerce_status",u"funds_transfer_properties",b"funds_transfer_properties",u"gateway_name",b"gateway_name",u"message_type",b"message_type",u"pinless_debit_status",b"pinless_debit_status",u"premier_status",b"premier_status",u"repeated_debit_network",b"repeated_debit_network"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"destination_or_debit_networks",b"destination_or_debit_networks"]) -> typing_extensions___Literal["destination","repeated_debit_network"]: ...
type___SupportedRoute = SupportedRoute

class MpeBinProperties(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    mip_card_program_id: typing___Text = ...
    mip_gcms_product_id: typing___Text = ...
    mip_priority: builtin___int = ...
    money_send_indicator: typing___Text = ...
    faster_funds_indicator: typing___Text = ...

    def __init__(self,
        *,
        mip_card_program_id : typing___Optional[typing___Text] = None,
        mip_gcms_product_id : typing___Optional[typing___Text] = None,
        mip_priority : typing___Optional[builtin___int] = None,
        money_send_indicator : typing___Optional[typing___Text] = None,
        faster_funds_indicator : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"faster_funds_indicator",b"faster_funds_indicator",u"mip_card_program_id",b"mip_card_program_id",u"mip_gcms_product_id",b"mip_gcms_product_id",u"mip_priority",b"mip_priority",u"money_send_indicator",b"money_send_indicator"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"faster_funds_indicator",b"faster_funds_indicator",u"mip_card_program_id",b"mip_card_program_id",u"mip_gcms_product_id",b"mip_gcms_product_id",u"mip_priority",b"mip_priority",u"money_send_indicator",b"money_send_indicator"]) -> None: ...
type___MpeBinProperties = MpeBinProperties

class BinProperties(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class BinPropertySource(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        fieldNumber: builtin___int = ...
        sourceNumber: builtin___int = ...

        def __init__(self,
            *,
            fieldNumber : typing___Optional[builtin___int] = None,
            sourceNumber : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"fieldNumber",b"fieldNumber",u"sourceNumber",b"sourceNumber"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"fieldNumber",b"fieldNumber",u"sourceNumber",b"sourceNumber"]) -> None: ...
    type___BinPropertySource = BinPropertySource

    issuer_name: typing___Text = ...
    country: squareup___common___countries_pb2___CountryValue = ...
    card_type: type___CardTypeValue = ...
    card_product: type___CardProductValue = ...
    pin_category: type___PinCategoryValue = ...
    ebt_capable: builtin___bool = ...
    card_subcategory: typing___Text = ...
    supported_debit_network: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___DebitNetworkValue] = ...
    hsa_fsa_status: type___HsaFsaStatusValue = ...
    prepaid_status: type___PrepaidStatusValue = ...
    chase_method_of_payment: type___ChaseMethodOfPaymentValue = ...
    full_pan_guessed_instrument_type: squareup___common___instrument_pb2___InstrumentTypeValue = ...
    debit_type: type___DebitTypeValue = ...
    l3_eligible: builtin___bool = ...
    square_issued_card: type___SquareIssuedCardValue = ...
    normalized_issuer_name: typing___Text = ...
    reloadable_prepaid: builtin___bool = ...

    @property
    def oct_properties(self) -> type___OctProperties: ...

    @property
    def supported_route(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SupportedRoute]: ...

    @property
    def funds_transfer_properties(self) -> type___FundsTransferProperties: ...

    @property
    def proposed(self) -> type___BinProperties: ...

    @property
    def bin_property_source(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___BinProperties.BinPropertySource]: ...

    @property
    def mpe_bin_properties(self) -> type___MpeBinProperties: ...

    def __init__(self,
        *,
        issuer_name : typing___Optional[typing___Text] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        card_type : typing___Optional[type___CardTypeValue] = None,
        card_product : typing___Optional[type___CardProductValue] = None,
        pin_category : typing___Optional[type___PinCategoryValue] = None,
        ebt_capable : typing___Optional[builtin___bool] = None,
        card_subcategory : typing___Optional[typing___Text] = None,
        supported_debit_network : typing___Optional[typing___Iterable[type___DebitNetworkValue]] = None,
        hsa_fsa_status : typing___Optional[type___HsaFsaStatusValue] = None,
        prepaid_status : typing___Optional[type___PrepaidStatusValue] = None,
        oct_properties : typing___Optional[type___OctProperties] = None,
        supported_route : typing___Optional[typing___Iterable[type___SupportedRoute]] = None,
        funds_transfer_properties : typing___Optional[type___FundsTransferProperties] = None,
        chase_method_of_payment : typing___Optional[type___ChaseMethodOfPaymentValue] = None,
        proposed : typing___Optional[type___BinProperties] = None,
        full_pan_guessed_instrument_type : typing___Optional[squareup___common___instrument_pb2___InstrumentTypeValue] = None,
        debit_type : typing___Optional[type___DebitTypeValue] = None,
        l3_eligible : typing___Optional[builtin___bool] = None,
        bin_property_source : typing___Optional[typing___Iterable[type___BinProperties.BinPropertySource]] = None,
        square_issued_card : typing___Optional[type___SquareIssuedCardValue] = None,
        normalized_issuer_name : typing___Optional[typing___Text] = None,
        reloadable_prepaid : typing___Optional[builtin___bool] = None,
        mpe_bin_properties : typing___Optional[type___MpeBinProperties] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"card_product",b"card_product",u"card_subcategory",b"card_subcategory",u"card_type",b"card_type",u"chase_method_of_payment",b"chase_method_of_payment",u"country",b"country",u"debit_type",b"debit_type",u"ebt_capable",b"ebt_capable",u"full_pan_guessed_instrument_type",b"full_pan_guessed_instrument_type",u"funds_transfer_properties",b"funds_transfer_properties",u"hsa_fsa_status",b"hsa_fsa_status",u"issuer_name",b"issuer_name",u"l3_eligible",b"l3_eligible",u"mpe_bin_properties",b"mpe_bin_properties",u"normalized_issuer_name",b"normalized_issuer_name",u"oct_properties",b"oct_properties",u"pin_category",b"pin_category",u"prepaid_status",b"prepaid_status",u"proposed",b"proposed",u"reloadable_prepaid",b"reloadable_prepaid",u"square_issued_card",b"square_issued_card"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bin_property_source",b"bin_property_source",u"card_product",b"card_product",u"card_subcategory",b"card_subcategory",u"card_type",b"card_type",u"chase_method_of_payment",b"chase_method_of_payment",u"country",b"country",u"debit_type",b"debit_type",u"ebt_capable",b"ebt_capable",u"full_pan_guessed_instrument_type",b"full_pan_guessed_instrument_type",u"funds_transfer_properties",b"funds_transfer_properties",u"hsa_fsa_status",b"hsa_fsa_status",u"issuer_name",b"issuer_name",u"l3_eligible",b"l3_eligible",u"mpe_bin_properties",b"mpe_bin_properties",u"normalized_issuer_name",b"normalized_issuer_name",u"oct_properties",b"oct_properties",u"pin_category",b"pin_category",u"prepaid_status",b"prepaid_status",u"proposed",b"proposed",u"reloadable_prepaid",b"reloadable_prepaid",u"square_issued_card",b"square_issued_card",u"supported_debit_network",b"supported_debit_network",u"supported_route",b"supported_route"]) -> None: ...
type___BinProperties = BinProperties
