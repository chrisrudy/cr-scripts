# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.binfo import service_pb2 as squareup_dot_binfo_dot_service__pb2


class BinfoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Lookup = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/Lookup',
                request_serializer=squareup_dot_binfo_dot_service__pb2.LookupRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.LookupResponse.FromString,
                )
        self.DoImport = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/DoImport',
                request_serializer=squareup_dot_binfo_dot_service__pb2.ImportRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.ImportResponse.FromString,
                )
        self.UpdateImportResult = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/UpdateImportResult',
                request_serializer=squareup_dot_binfo_dot_service__pb2.UpdateImportResultRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.ImportResponse.FromString,
                )
        self.GetImports = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/GetImports',
                request_serializer=squareup_dot_binfo_dot_service__pb2.GetImportsRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.GetImportsResponse.FromString,
                )
        self.GetFilteredImports = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/GetFilteredImports',
                request_serializer=squareup_dot_binfo_dot_service__pb2.GetFilteredImportsRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.GetImportsResponse.FromString,
                )
        self.StreamUpdateClient = channel.unary_stream(
                '/squareup.binfo.service.BinfoService/StreamUpdateClient',
                request_serializer=squareup_dot_binfo_dot_service__pb2.UpdateClientRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.UpdateClientResponse.FromString,
                )
        self.RollbackImport = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/RollbackImport',
                request_serializer=squareup_dot_binfo_dot_service__pb2.RollbackImportRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.RollbackImportResponse.FromString,
                )
        self.GetUpdateHistory = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/GetUpdateHistory',
                request_serializer=squareup_dot_binfo_dot_service__pb2.GetUpdateHistoryRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.GetUpdateHistoryResponse.FromString,
                )
        self.GetExpandedLookup = channel.unary_unary(
                '/squareup.binfo.service.BinfoService/GetExpandedLookup',
                request_serializer=squareup_dot_binfo_dot_service__pb2.GetExpandedLookupRequest.SerializeToString,
                response_deserializer=squareup_dot_binfo_dot_service__pb2.GetExpandedLookupResponse.FromString,
                )


class BinfoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Lookup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DoImport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateImportResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImports(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilteredImports(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamUpdateClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RollbackImport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUpdateHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExpandedLookup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BinfoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Lookup': grpc.unary_unary_rpc_method_handler(
                    servicer.Lookup,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.LookupRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.LookupResponse.SerializeToString,
            ),
            'DoImport': grpc.unary_unary_rpc_method_handler(
                    servicer.DoImport,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.ImportRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.ImportResponse.SerializeToString,
            ),
            'UpdateImportResult': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateImportResult,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.UpdateImportResultRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.ImportResponse.SerializeToString,
            ),
            'GetImports': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImports,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.GetImportsRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.GetImportsResponse.SerializeToString,
            ),
            'GetFilteredImports': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFilteredImports,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.GetFilteredImportsRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.GetImportsResponse.SerializeToString,
            ),
            'StreamUpdateClient': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamUpdateClient,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.UpdateClientRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.UpdateClientResponse.SerializeToString,
            ),
            'RollbackImport': grpc.unary_unary_rpc_method_handler(
                    servicer.RollbackImport,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.RollbackImportRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.RollbackImportResponse.SerializeToString,
            ),
            'GetUpdateHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUpdateHistory,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.GetUpdateHistoryRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.GetUpdateHistoryResponse.SerializeToString,
            ),
            'GetExpandedLookup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExpandedLookup,
                    request_deserializer=squareup_dot_binfo_dot_service__pb2.GetExpandedLookupRequest.FromString,
                    response_serializer=squareup_dot_binfo_dot_service__pb2.GetExpandedLookupResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.binfo.service.BinfoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BinfoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Lookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/Lookup',
            squareup_dot_binfo_dot_service__pb2.LookupRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.LookupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DoImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/DoImport',
            squareup_dot_binfo_dot_service__pb2.ImportRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateImportResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/UpdateImportResult',
            squareup_dot_binfo_dot_service__pb2.UpdateImportResultRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/GetImports',
            squareup_dot_binfo_dot_service__pb2.GetImportsRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.GetImportsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFilteredImports(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/GetFilteredImports',
            squareup_dot_binfo_dot_service__pb2.GetFilteredImportsRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.GetImportsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamUpdateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/squareup.binfo.service.BinfoService/StreamUpdateClient',
            squareup_dot_binfo_dot_service__pb2.UpdateClientRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.UpdateClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RollbackImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/RollbackImport',
            squareup_dot_binfo_dot_service__pb2.RollbackImportRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.RollbackImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUpdateHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/GetUpdateHistory',
            squareup_dot_binfo_dot_service__pb2.GetUpdateHistoryRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.GetUpdateHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExpandedLookup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.binfo.service.BinfoService/GetExpandedLookup',
            squareup_dot_binfo_dot_service__pb2.GetExpandedLookupRequest.SerializeToString,
            squareup_dot_binfo_dot_service__pb2.GetExpandedLookupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
