# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/feature/condition.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/feature/condition.proto',
  package='squareup.feature.condition',
  syntax='proto2',
  serialized_options=_b('\n%com.squareup.protos.feature.conditionB\021FeatureConditions'),
  serialized_pb=_b('\n squareup/feature/condition.proto\x12\x1asquareup.feature.condition\"\xe7\x02\n\tCondition\x12\x41\n\x04type\x18\x01 \x01(\x0e\x32\x33.squareup.feature.condition.Condition.ConditionType\x12\x43\n\x0e\x61ttribute_test\x18\x02 \x01(\x0b\x32).squareup.feature.condition.AttributeTestH\x00\x12>\n\x0b\x63onjunction\x18\x03 \x01(\x0b\x32\'.squareup.feature.condition.ConjunctionH\x00\x12>\n\x0b\x64isjunction\x18\x04 \x01(\x0b\x32\'.squareup.feature.condition.DisjunctionH\x00\"E\n\rConditionType\x12\x12\n\x0e\x41TTRIBUTE_TEST\x10\x01\x12\x0f\n\x0b\x43ONJUNCTION\x10\x02\x12\x0f\n\x0b\x44ISJUNCTION\x10\x03\x42\x0b\n\tcondition\"\xb8\x01\n\rAttributeTest\x12\x0e\n\x06\x61ttrib\x18\x01 \x01(\t\x12H\n\x08operator\x18\x02 \x01(\x0e\x32\x36.squareup.feature.condition.AttributeTest.ComparisonOp\x12\r\n\x05value\x18\x03 \x01(\t\">\n\x0c\x43omparisonOp\x12\x06\n\x02\x45Q\x10\x01\x12\x06\n\x02NE\x10\x02\x12\x06\n\x02GE\x10\x03\x12\x06\n\x02GT\x10\x04\x12\x06\n\x02LE\x10\x05\x12\x06\n\x02LT\x10\x06\"G\n\x0b\x43onjunction\x12\x38\n\tconjuncts\x18\x01 \x03(\x0b\x32%.squareup.feature.condition.Condition\"G\n\x0b\x44isjunction\x12\x38\n\tdisjuncts\x18\x02 \x03(\x0b\x32%.squareup.feature.condition.ConditionB:\n%com.squareup.protos.feature.conditionB\x11\x46\x65\x61tureConditions')
)



_CONDITION_CONDITIONTYPE = _descriptor.EnumDescriptor(
  name='ConditionType',
  full_name='squareup.feature.condition.Condition.ConditionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ATTRIBUTE_TEST', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CONJUNCTION', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISJUNCTION', index=2, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=342,
  serialized_end=411,
)
_sym_db.RegisterEnumDescriptor(_CONDITION_CONDITIONTYPE)

_ATTRIBUTETEST_COMPARISONOP = _descriptor.EnumDescriptor(
  name='ComparisonOp',
  full_name='squareup.feature.condition.AttributeTest.ComparisonOp',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQ', index=0, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NE', index=1, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GE', index=2, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GT', index=3, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LE', index=4, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LT', index=5, number=6,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=549,
  serialized_end=611,
)
_sym_db.RegisterEnumDescriptor(_ATTRIBUTETEST_COMPARISONOP)


_CONDITION = _descriptor.Descriptor(
  name='Condition',
  full_name='squareup.feature.condition.Condition',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='squareup.feature.condition.Condition.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='attribute_test', full_name='squareup.feature.condition.Condition.attribute_test', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conjunction', full_name='squareup.feature.condition.Condition.conjunction', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='disjunction', full_name='squareup.feature.condition.Condition.disjunction', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONDITION_CONDITIONTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='condition', full_name='squareup.feature.condition.Condition.condition',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=65,
  serialized_end=424,
)


_ATTRIBUTETEST = _descriptor.Descriptor(
  name='AttributeTest',
  full_name='squareup.feature.condition.AttributeTest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attrib', full_name='squareup.feature.condition.AttributeTest.attrib', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='operator', full_name='squareup.feature.condition.AttributeTest.operator', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='squareup.feature.condition.AttributeTest.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ATTRIBUTETEST_COMPARISONOP,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=427,
  serialized_end=611,
)


_CONJUNCTION = _descriptor.Descriptor(
  name='Conjunction',
  full_name='squareup.feature.condition.Conjunction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conjuncts', full_name='squareup.feature.condition.Conjunction.conjuncts', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=613,
  serialized_end=684,
)


_DISJUNCTION = _descriptor.Descriptor(
  name='Disjunction',
  full_name='squareup.feature.condition.Disjunction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='disjuncts', full_name='squareup.feature.condition.Disjunction.disjuncts', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=686,
  serialized_end=757,
)

_CONDITION.fields_by_name['type'].enum_type = _CONDITION_CONDITIONTYPE
_CONDITION.fields_by_name['attribute_test'].message_type = _ATTRIBUTETEST
_CONDITION.fields_by_name['conjunction'].message_type = _CONJUNCTION
_CONDITION.fields_by_name['disjunction'].message_type = _DISJUNCTION
_CONDITION_CONDITIONTYPE.containing_type = _CONDITION
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['attribute_test'])
_CONDITION.fields_by_name['attribute_test'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['conjunction'])
_CONDITION.fields_by_name['conjunction'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_CONDITION.oneofs_by_name['condition'].fields.append(
  _CONDITION.fields_by_name['disjunction'])
_CONDITION.fields_by_name['disjunction'].containing_oneof = _CONDITION.oneofs_by_name['condition']
_ATTRIBUTETEST.fields_by_name['operator'].enum_type = _ATTRIBUTETEST_COMPARISONOP
_ATTRIBUTETEST_COMPARISONOP.containing_type = _ATTRIBUTETEST
_CONJUNCTION.fields_by_name['conjuncts'].message_type = _CONDITION
_DISJUNCTION.fields_by_name['disjuncts'].message_type = _CONDITION
DESCRIPTOR.message_types_by_name['Condition'] = _CONDITION
DESCRIPTOR.message_types_by_name['AttributeTest'] = _ATTRIBUTETEST
DESCRIPTOR.message_types_by_name['Conjunction'] = _CONJUNCTION
DESCRIPTOR.message_types_by_name['Disjunction'] = _DISJUNCTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Condition = _reflection.GeneratedProtocolMessageType('Condition', (_message.Message,), {
  'DESCRIPTOR' : _CONDITION,
  '__module__' : 'squareup.feature.condition_pb2'
  # @@protoc_insertion_point(class_scope:squareup.feature.condition.Condition)
  })
_sym_db.RegisterMessage(Condition)

AttributeTest = _reflection.GeneratedProtocolMessageType('AttributeTest', (_message.Message,), {
  'DESCRIPTOR' : _ATTRIBUTETEST,
  '__module__' : 'squareup.feature.condition_pb2'
  # @@protoc_insertion_point(class_scope:squareup.feature.condition.AttributeTest)
  })
_sym_db.RegisterMessage(AttributeTest)

Conjunction = _reflection.GeneratedProtocolMessageType('Conjunction', (_message.Message,), {
  'DESCRIPTOR' : _CONJUNCTION,
  '__module__' : 'squareup.feature.condition_pb2'
  # @@protoc_insertion_point(class_scope:squareup.feature.condition.Conjunction)
  })
_sym_db.RegisterMessage(Conjunction)

Disjunction = _reflection.GeneratedProtocolMessageType('Disjunction', (_message.Message,), {
  'DESCRIPTOR' : _DISJUNCTION,
  '__module__' : 'squareup.feature.condition_pb2'
  # @@protoc_insertion_point(class_scope:squareup.feature.condition.Disjunction)
  })
_sym_db.RegisterMessage(Disjunction)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
