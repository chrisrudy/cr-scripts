# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.consentsys.model_pb2 import (
    ConsentDecision as squareup___consentsys___model_pb2___ConsentDecision,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
type___EventTypeValue = EventTypeValue
EventType: _EventType
class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EventTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    EVENT_TYPE_DO_NOT_USE = typing___cast(EventTypeValue, 0)
    NEW_CONSENT_DECISION = typing___cast(EventTypeValue, 1)
    UPDATED_EXPIRATION = typing___cast(EventTypeValue, 2)
EVENT_TYPE_DO_NOT_USE = typing___cast(EventTypeValue, 0)
NEW_CONSENT_DECISION = typing___cast(EventTypeValue, 1)
UPDATED_EXPIRATION = typing___cast(EventTypeValue, 2)
type___EventType = EventType

class ConsentUpdateFeedEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_type: type___EventTypeValue = ...

    @property
    def consent_decision(self) -> squareup___consentsys___model_pb2___ConsentDecision: ...

    def __init__(self,
        *,
        event_type : typing___Optional[type___EventTypeValue] = None,
        consent_decision : typing___Optional[squareup___consentsys___model_pb2___ConsentDecision] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"consent_decision",b"consent_decision",u"event_type",b"event_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"consent_decision",b"consent_decision",u"event_type",b"event_type"]) -> None: ...
type___ConsentUpdateFeedEntry = ConsentUpdateFeedEntry
