# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

UseCaseValue = typing___NewType('UseCaseValue', builtin___int)
type___UseCaseValue = UseCaseValue
UseCase: _UseCase
class _UseCase(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UseCaseValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    USECASE_DO_NOT_USE = typing___cast(UseCaseValue, 0)
    EMAIL_MARKETING = typing___cast(UseCaseValue, 1)
    SMS_MARKETING = typing___cast(UseCaseValue, 2)
    SMS_MARKETING_COUPON = typing___cast(UseCaseValue, 4)
    SMS_TRANSACTIONAL = typing___cast(UseCaseValue, 5)
    TERMS_OF_SERVICE = typing___cast(UseCaseValue, 3)
USECASE_DO_NOT_USE = typing___cast(UseCaseValue, 0)
EMAIL_MARKETING = typing___cast(UseCaseValue, 1)
SMS_MARKETING = typing___cast(UseCaseValue, 2)
SMS_MARKETING_COUPON = typing___cast(UseCaseValue, 4)
SMS_TRANSACTIONAL = typing___cast(UseCaseValue, 5)
TERMS_OF_SERVICE = typing___cast(UseCaseValue, 3)
type___UseCase = UseCase

ProductValue = typing___NewType('ProductValue', builtin___int)
type___ProductValue = ProductValue
Product: _Product
class _Product(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ProductValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PRODUCT_DO_NOT_USE = typing___cast(ProductValue, 0)
    SQUARE_MARKETING = typing___cast(ProductValue, 1)
    LOYALTY = typing___cast(ProductValue, 2)
    MESSENGER = typing___cast(ProductValue, 3)
    CFT_GOOGLE_MERCHANT_CENTER = typing___cast(ProductValue, 4)
PRODUCT_DO_NOT_USE = typing___cast(ProductValue, 0)
SQUARE_MARKETING = typing___cast(ProductValue, 1)
LOYALTY = typing___cast(ProductValue, 2)
MESSENGER = typing___cast(ProductValue, 3)
CFT_GOOGLE_MERCHANT_CENTER = typing___cast(ProductValue, 4)
type___Product = Product

EntityTokenTypeValue = typing___NewType('EntityTokenTypeValue', builtin___int)
type___EntityTokenTypeValue = EntityTokenTypeValue
EntityTokenType: _EntityTokenType
class _EntityTokenType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EntityTokenTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ENTITYTOKENTYPE_DO_NOT_USE = typing___cast(EntityTokenTypeValue, 0)
    EMAIL_TOKEN = typing___cast(EntityTokenTypeValue, 1)
    PHONE_TOKEN = typing___cast(EntityTokenTypeValue, 2)
    MERCHANT_TOKEN = typing___cast(EntityTokenTypeValue, 3)
    PRODUCT_ENUM = typing___cast(EntityTokenTypeValue, 4)
ENTITYTOKENTYPE_DO_NOT_USE = typing___cast(EntityTokenTypeValue, 0)
EMAIL_TOKEN = typing___cast(EntityTokenTypeValue, 1)
PHONE_TOKEN = typing___cast(EntityTokenTypeValue, 2)
MERCHANT_TOKEN = typing___cast(EntityTokenTypeValue, 3)
PRODUCT_ENUM = typing___cast(EntityTokenTypeValue, 4)
type___EntityTokenType = EntityTokenType

class Copy(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    use_case: type___UseCaseValue = ...
    product: type___ProductValue = ...
    locale: typing___Text = ...
    content: typing___Text = ...
    created_at_ms: builtin___int = ...
    created_by: typing___Text = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        use_case : typing___Optional[type___UseCaseValue] = None,
        product : typing___Optional[type___ProductValue] = None,
        locale : typing___Optional[typing___Text] = None,
        content : typing___Optional[typing___Text] = None,
        created_at_ms : typing___Optional[builtin___int] = None,
        created_by : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"content",b"content",u"created_at_ms",b"created_at_ms",u"created_by",b"created_by",u"locale",b"locale",u"product",b"product",u"token",b"token",u"use_case",b"use_case"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"content",b"content",u"created_at_ms",b"created_at_ms",u"created_by",b"created_by",u"locale",b"locale",u"product",b"product",u"token",b"token",u"use_case",b"use_case"]) -> None: ...
type___Copy = Copy

class CopyGroup(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    use_case: type___UseCaseValue = ...
    product: type___ProductValue = ...
    description: typing___Text = ...

    @property
    def linked_copies(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___LinkedCopy]: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        use_case : typing___Optional[type___UseCaseValue] = None,
        product : typing___Optional[type___ProductValue] = None,
        description : typing___Optional[typing___Text] = None,
        linked_copies : typing___Optional[typing___Iterable[type___LinkedCopy]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"description",b"description",u"product",b"product",u"token",b"token",u"use_case",b"use_case"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"description",b"description",u"linked_copies",b"linked_copies",u"product",b"product",u"token",b"token",u"use_case",b"use_case"]) -> None: ...
type___CopyGroup = CopyGroup

class LinkedCopy(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    locale: typing___Text = ...
    version: builtin___int = ...

    @property
    def copy(self) -> type___Copy: ...

    def __init__(self,
        *,
        locale : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        copy : typing___Optional[type___Copy] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"copy",b"copy",u"locale",b"locale",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"copy",b"copy",u"locale",b"locale",u"version",b"version"]) -> None: ...
type___LinkedCopy = LinkedCopy

class ConsentDecision(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    consent_granted: builtin___bool = ...
    use_case: type___UseCaseValue = ...
    copy_token: typing___Text = ...
    effective_at_ms: builtin___int = ...
    expires_at_ms: builtin___int = ...
    version: builtin___int = ...

    @property
    def entity(self) -> type___Entity: ...

    @property
    def scope(self) -> type___Scope: ...

    @property
    def delegate(self) -> type___Entity: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        entity : typing___Optional[type___Entity] = None,
        consent_granted : typing___Optional[builtin___bool] = None,
        use_case : typing___Optional[type___UseCaseValue] = None,
        copy_token : typing___Optional[typing___Text] = None,
        scope : typing___Optional[type___Scope] = None,
        effective_at_ms : typing___Optional[builtin___int] = None,
        expires_at_ms : typing___Optional[builtin___int] = None,
        delegate : typing___Optional[type___Entity] = None,
        version : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"consent_granted",b"consent_granted",u"copy_token",b"copy_token",u"delegate",b"delegate",u"effective_at_ms",b"effective_at_ms",u"entity",b"entity",u"expires_at_ms",b"expires_at_ms",u"scope",b"scope",u"token",b"token",u"use_case",b"use_case",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"consent_granted",b"consent_granted",u"copy_token",b"copy_token",u"delegate",b"delegate",u"effective_at_ms",b"effective_at_ms",u"entity",b"entity",u"expires_at_ms",b"expires_at_ms",u"scope",b"scope",u"token",b"token",u"use_case",b"use_case",u"version",b"version"]) -> None: ...
type___ConsentDecision = ConsentDecision

class Entity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    token_type: type___EntityTokenTypeValue = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        token_type : typing___Optional[type___EntityTokenTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> None: ...
type___Entity = Entity

class Scope(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    product_scope: type___ProductValue = ...

    @property
    def merchant_scope(self) -> type___MerchantScope: ...

    def __init__(self,
        *,
        merchant_scope : typing___Optional[type___MerchantScope] = None,
        product_scope : typing___Optional[type___ProductValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"merchant_scope",b"merchant_scope",u"product_scope",b"product_scope"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"merchant_scope",b"merchant_scope",u"product_scope",b"product_scope"]) -> None: ...
type___Scope = Scope

class MerchantScope(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    MerchantTokenTypeValue = typing___NewType('MerchantTokenTypeValue', builtin___int)
    type___MerchantTokenTypeValue = MerchantTokenTypeValue
    MerchantTokenType: _MerchantTokenType
    class _MerchantTokenType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[MerchantScope.MerchantTokenTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        MERCHANTTOKENTYPE_DO_NOT_USE = typing___cast(MerchantScope.MerchantTokenTypeValue, 0)
        MERCHANT_TOKEN = typing___cast(MerchantScope.MerchantTokenTypeValue, 1)
        UNIT_TOKEN = typing___cast(MerchantScope.MerchantTokenTypeValue, 2)
    MERCHANTTOKENTYPE_DO_NOT_USE = typing___cast(MerchantScope.MerchantTokenTypeValue, 0)
    MERCHANT_TOKEN = typing___cast(MerchantScope.MerchantTokenTypeValue, 1)
    UNIT_TOKEN = typing___cast(MerchantScope.MerchantTokenTypeValue, 2)
    type___MerchantTokenType = MerchantTokenType

    token: typing___Text = ...
    token_type: type___MerchantScope.MerchantTokenTypeValue = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        token_type : typing___Optional[type___MerchantScope.MerchantTokenTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> None: ...
type___MerchantScope = MerchantScope

class ConsentDecisionAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    OperationTypeValue = typing___NewType('OperationTypeValue', builtin___int)
    type___OperationTypeValue = OperationTypeValue
    OperationType: _OperationType
    class _OperationType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ConsentDecisionAction.OperationTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        OPERATIONTYPE_DO_NOT_USE = typing___cast(ConsentDecisionAction.OperationTypeValue, 0)
        GRANT = typing___cast(ConsentDecisionAction.OperationTypeValue, 1)
        UPDATE = typing___cast(ConsentDecisionAction.OperationTypeValue, 2)
        REVOKE = typing___cast(ConsentDecisionAction.OperationTypeValue, 3)
    OPERATIONTYPE_DO_NOT_USE = typing___cast(ConsentDecisionAction.OperationTypeValue, 0)
    GRANT = typing___cast(ConsentDecisionAction.OperationTypeValue, 1)
    UPDATE = typing___cast(ConsentDecisionAction.OperationTypeValue, 2)
    REVOKE = typing___cast(ConsentDecisionAction.OperationTypeValue, 3)
    type___OperationType = OperationType

    operation: type___ConsentDecisionAction.OperationTypeValue = ...
    source_app: typing___Text = ...
    source_reason: typing___Text = ...
    extra_data: typing___Text = ...

    @property
    def decision(self) -> type___ConsentDecision: ...

    @property
    def previous(self) -> type___ConsentDecision: ...

    def __init__(self,
        *,
        operation : typing___Optional[type___ConsentDecisionAction.OperationTypeValue] = None,
        decision : typing___Optional[type___ConsentDecision] = None,
        previous : typing___Optional[type___ConsentDecision] = None,
        source_app : typing___Optional[typing___Text] = None,
        source_reason : typing___Optional[typing___Text] = None,
        extra_data : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"decision",b"decision",u"extra_data",b"extra_data",u"operation",b"operation",u"previous",b"previous",u"source_app",b"source_app",u"source_reason",b"source_reason"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"decision",b"decision",u"extra_data",b"extra_data",u"operation",b"operation",u"previous",b"previous",u"source_app",b"source_app",u"source_reason",b"source_reason"]) -> None: ...
type___ConsentDecisionAction = ConsentDecisionAction

class CopyGroupAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    OperationTypeValue = typing___NewType('OperationTypeValue', builtin___int)
    type___OperationTypeValue = OperationTypeValue
    OperationType: _OperationType
    class _OperationType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CopyGroupAction.OperationTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        COPYGROUP_OPERATIONTYPE_DO_NOT_USE = typing___cast(CopyGroupAction.OperationTypeValue, 0)
        CREATE = typing___cast(CopyGroupAction.OperationTypeValue, 1)
        LINK_COPY = typing___cast(CopyGroupAction.OperationTypeValue, 2)
    COPYGROUP_OPERATIONTYPE_DO_NOT_USE = typing___cast(CopyGroupAction.OperationTypeValue, 0)
    CREATE = typing___cast(CopyGroupAction.OperationTypeValue, 1)
    LINK_COPY = typing___cast(CopyGroupAction.OperationTypeValue, 2)
    type___OperationType = OperationType

    operation: type___CopyGroupAction.OperationTypeValue = ...

    @property
    def copy_group(self) -> type___CopyGroup: ...

    @property
    def previous(self) -> type___CopyGroup: ...

    def __init__(self,
        *,
        operation : typing___Optional[type___CopyGroupAction.OperationTypeValue] = None,
        copy_group : typing___Optional[type___CopyGroup] = None,
        previous : typing___Optional[type___CopyGroup] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"copy_group",b"copy_group",u"operation",b"operation",u"previous",b"previous"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"copy_group",b"copy_group",u"operation",b"operation",u"previous",b"previous"]) -> None: ...
type___CopyGroupAction = CopyGroupAction

class AuditAction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    created_by: typing___Text = ...

    @property
    def consent_decision_action(self) -> type___ConsentDecisionAction: ...

    @property
    def copy_group_action(self) -> type___CopyGroupAction: ...

    @property
    def occurred_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        consent_decision_action : typing___Optional[type___ConsentDecisionAction] = None,
        copy_group_action : typing___Optional[type___CopyGroupAction] = None,
        occurred_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        created_by : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"consent_decision_action",b"consent_decision_action",u"copy_group_action",b"copy_group_action",u"created_by",b"created_by",u"occurred_at",b"occurred_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"consent_decision_action",b"consent_decision_action",u"copy_group_action",b"copy_group_action",u"created_by",b"created_by",u"occurred_at",b"occurred_at"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"action",b"action"]) -> typing_extensions___Literal["consent_decision_action","copy_group_action"]: ...
type___AuditAction = AuditAction

class Cursor(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def shard(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CursorShard]: ...

    def __init__(self,
        *,
        shard : typing___Optional[typing___Iterable[type___CursorShard]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"shard",b"shard"]) -> None: ...
type___Cursor = Cursor

class CursorShard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    shard_id: builtin___int = ...
    offset: builtin___int = ...

    def __init__(self,
        *,
        shard_id : typing___Optional[builtin___int] = None,
        offset : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"offset",b"offset",u"shard_id",b"shard_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"offset",b"offset",u"shard_id",b"shard_id"]) -> None: ...
type___CursorShard = CursorShard

class ExportedConsentDecisions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ExportedConsentDecision(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        decision_from_delegate: builtin___bool = ...

        @property
        def consent_decision(self) -> type___ConsentDecision: ...

        def __init__(self,
            *,
            consent_decision : typing___Optional[type___ConsentDecision] = None,
            decision_from_delegate : typing___Optional[builtin___bool] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"consent_decision",b"consent_decision",u"decision_from_delegate",b"decision_from_delegate"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"consent_decision",b"consent_decision",u"decision_from_delegate",b"decision_from_delegate"]) -> None: ...
    type___ExportedConsentDecision = ExportedConsentDecision


    @property
    def consent_decisions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ExportedConsentDecisions.ExportedConsentDecision]: ...

    def __init__(self,
        *,
        consent_decisions : typing___Optional[typing___Iterable[type___ExportedConsentDecisions.ExportedConsentDecision]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"consent_decisions",b"consent_decisions"]) -> None: ...
type___ExportedConsentDecisions = ExportedConsentDecisions
