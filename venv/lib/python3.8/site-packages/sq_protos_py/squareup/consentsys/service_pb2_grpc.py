# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.consentsys import service_pb2 as squareup_dot_consentsys_dot_service__pb2


class ConsentCopyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCopy = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/CreateCopy',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.CreateCopyRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.CreateCopyResponse.FromString,
                )
        self.GetCopy = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/GetCopy',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.GetCopyRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.GetCopyResponse.FromString,
                )
        self.ListCopy = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/ListCopy',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.ListCopyRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.ListCopyResponse.FromString,
                )
        self.CreateCopyGroup = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/CreateCopyGroup',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.CreateCopyGroupRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.FromString,
                )
        self.LinkCopy = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/LinkCopy',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.LinkCopyRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.FromString,
                )
        self.GetCopyGroup = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/GetCopyGroup',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.GetCopyGroupRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.FromString,
                )
        self.ListCopyGroup = channel.unary_unary(
                '/squareup.consentsys.service.ConsentCopyService/ListCopyGroup',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.ListCopyGroupRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.ListCopyGroupResponse.FromString,
                )


class ConsentCopyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCopy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCopy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCopy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCopyGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkCopy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCopyGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCopyGroup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConsentCopyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCopy': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCopy,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.CreateCopyRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.CreateCopyResponse.SerializeToString,
            ),
            'GetCopy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCopy,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.GetCopyRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.GetCopyResponse.SerializeToString,
            ),
            'ListCopy': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCopy,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.ListCopyRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.ListCopyResponse.SerializeToString,
            ),
            'CreateCopyGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCopyGroup,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.CreateCopyGroupRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.SerializeToString,
            ),
            'LinkCopy': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkCopy,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.LinkCopyRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.SerializeToString,
            ),
            'GetCopyGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCopyGroup,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.GetCopyGroupRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.SerializeToString,
            ),
            'ListCopyGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCopyGroup,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.ListCopyGroupRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.ListCopyGroupResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.consentsys.service.ConsentCopyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConsentCopyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCopy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/CreateCopy',
            squareup_dot_consentsys_dot_service__pb2.CreateCopyRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.CreateCopyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCopy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/GetCopy',
            squareup_dot_consentsys_dot_service__pb2.GetCopyRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.GetCopyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCopy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/ListCopy',
            squareup_dot_consentsys_dot_service__pb2.ListCopyRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.ListCopyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCopyGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/CreateCopyGroup',
            squareup_dot_consentsys_dot_service__pb2.CreateCopyGroupRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkCopy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/LinkCopy',
            squareup_dot_consentsys_dot_service__pb2.LinkCopyRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCopyGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/GetCopyGroup',
            squareup_dot_consentsys_dot_service__pb2.GetCopyGroupRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.CopyGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCopyGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentCopyService/ListCopyGroup',
            squareup_dot_consentsys_dot_service__pb2.ListCopyGroupRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.ListCopyGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConsentDecisionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GrantConsent = channel.unary_unary(
                '/squareup.consentsys.service.ConsentDecisionService/GrantConsent',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.GrantConsentRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.FromString,
                )
        self.RevokeConsent = channel.unary_unary(
                '/squareup.consentsys.service.ConsentDecisionService/RevokeConsent',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.RevokeConsentRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.FromString,
                )
        self.UpdateConsentDecision = channel.unary_unary(
                '/squareup.consentsys.service.ConsentDecisionService/UpdateConsentDecision',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.UpdateConsentDecisionRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.FromString,
                )
        self.GetConsentDecision = channel.unary_unary(
                '/squareup.consentsys.service.ConsentDecisionService/GetConsentDecision',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.GetConsentDecisionRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.GetConsentDecisionResponse.FromString,
                )


class ConsentDecisionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GrantConsent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeConsent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateConsentDecision(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsentDecision(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConsentDecisionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GrantConsent': grpc.unary_unary_rpc_method_handler(
                    servicer.GrantConsent,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.GrantConsentRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.SerializeToString,
            ),
            'RevokeConsent': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeConsent,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.RevokeConsentRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.SerializeToString,
            ),
            'UpdateConsentDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateConsentDecision,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.UpdateConsentDecisionRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.SerializeToString,
            ),
            'GetConsentDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsentDecision,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.GetConsentDecisionRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.GetConsentDecisionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.consentsys.service.ConsentDecisionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConsentDecisionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GrantConsent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentDecisionService/GrantConsent',
            squareup_dot_consentsys_dot_service__pb2.GrantConsentRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeConsent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentDecisionService/RevokeConsent',
            squareup_dot_consentsys_dot_service__pb2.RevokeConsentRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateConsentDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentDecisionService/UpdateConsentDecision',
            squareup_dot_consentsys_dot_service__pb2.UpdateConsentDecisionRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.ConsentDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConsentDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentDecisionService/GetConsentDecision',
            squareup_dot_consentsys_dot_service__pb2.GetConsentDecisionRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.GetConsentDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConsentsysAdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetShard = channel.unary_unary(
                '/squareup.consentsys.service.ConsentsysAdminService/GetShard',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.GetShardRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.GetShardResponse.FromString,
                )


class ConsentsysAdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetShard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConsentsysAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetShard': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShard,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.GetShardRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.GetShardResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.consentsys.service.ConsentsysAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConsentsysAdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetShard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentsysAdminService/GetShard',
            squareup_dot_consentsys_dot_service__pb2.GetShardRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.GetShardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ConsentAuditLogServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAuditLogs = channel.unary_unary(
                '/squareup.consentsys.service.ConsentAuditLogService/GetAuditLogs',
                request_serializer=squareup_dot_consentsys_dot_service__pb2.GetAuditLogsRequest.SerializeToString,
                response_deserializer=squareup_dot_consentsys_dot_service__pb2.GetAuditLogsResponse.FromString,
                )


class ConsentAuditLogServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAuditLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConsentAuditLogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAuditLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAuditLogs,
                    request_deserializer=squareup_dot_consentsys_dot_service__pb2.GetAuditLogsRequest.FromString,
                    response_serializer=squareup_dot_consentsys_dot_service__pb2.GetAuditLogsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.consentsys.service.ConsentAuditLogService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConsentAuditLogService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAuditLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.consentsys.service.ConsentAuditLogService/GetAuditLogs',
            squareup_dot_consentsys_dot_service__pb2.GetAuditLogsRequest.SerializeToString,
            squareup_dot_consentsys_dot_service__pb2.GetAuditLogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
