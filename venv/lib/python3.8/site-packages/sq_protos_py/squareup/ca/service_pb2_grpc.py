# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.ca import service_pb2 as squareup_dot_ca_dot_service__pb2


class CaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAuthorities = channel.unary_unary(
                '/squareup.ca.service.CaService/GetAuthorities',
                request_serializer=squareup_dot_ca_dot_service__pb2.GetAuthoritiesRequest.SerializeToString,
                response_deserializer=squareup_dot_ca_dot_service__pb2.GetAuthoritiesResponse.FromString,
                )
        self.GetCertificates = channel.unary_unary(
                '/squareup.ca.service.CaService/GetCertificates',
                request_serializer=squareup_dot_ca_dot_service__pb2.GetCertificatesRequest.SerializeToString,
                response_deserializer=squareup_dot_ca_dot_service__pb2.GetCertificatesResponse.FromString,
                )
        self.SignCertificate = channel.unary_unary(
                '/squareup.ca.service.CaService/SignCertificate',
                request_serializer=squareup_dot_ca_dot_service__pb2.SignCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_ca_dot_service__pb2.SignCertificateResponse.FromString,
                )
        self.StatusCertificate = channel.unary_unary(
                '/squareup.ca.service.CaService/StatusCertificate',
                request_serializer=squareup_dot_ca_dot_service__pb2.StatusCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_ca_dot_service__pb2.StatusCertificateResponse.FromString,
                )
        self.RevokeCertificate = channel.unary_unary(
                '/squareup.ca.service.CaService/RevokeCertificate',
                request_serializer=squareup_dot_ca_dot_service__pb2.RevokeCertificateRequest.SerializeToString,
                response_deserializer=squareup_dot_ca_dot_service__pb2.RevokeCertificateResponse.FromString,
                )
        self.ExpiringCertificates = channel.unary_unary(
                '/squareup.ca.service.CaService/ExpiringCertificates',
                request_serializer=squareup_dot_ca_dot_service__pb2.ExpiringCertificatesRequest.SerializeToString,
                response_deserializer=squareup_dot_ca_dot_service__pb2.ExpiringCertificatesResponse.FromString,
                )


class CaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAuthorities(self, request, context):
        """*
        Gets the list of authorities
        This is the RPC equivalent to "GET /authorities" via REST
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCertificates(self, request, context):
        """*
        Gets the list of certificates for a given authority
        This is the RPC equivalent to "GET /authority/<authority>/certificates" via REST
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignCertificate(self, request, context):
        """*
        Signs a CSR with a given authority
        This is the RPC equivalent to "POST /authority/<authority>/sign" via REST
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StatusCertificate(self, request, context):
        """*
        Gets the status of a certificate with a given authority
        This is the RPC equivalent to "GET /authority/<authority>/certificate/<certificate>/status" via REST
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeCertificate(self, request, context):
        """*
        Revokes a certificate with a given authority
        This is the RPC equivalent to "POST /authority/<authority>/certificate/<certificate>/status/revoke" via REST
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpiringCertificates(self, request, context):
        """*
        Get a list of expiring, manually-issued certificates
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAuthorities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAuthorities,
                    request_deserializer=squareup_dot_ca_dot_service__pb2.GetAuthoritiesRequest.FromString,
                    response_serializer=squareup_dot_ca_dot_service__pb2.GetAuthoritiesResponse.SerializeToString,
            ),
            'GetCertificates': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCertificates,
                    request_deserializer=squareup_dot_ca_dot_service__pb2.GetCertificatesRequest.FromString,
                    response_serializer=squareup_dot_ca_dot_service__pb2.GetCertificatesResponse.SerializeToString,
            ),
            'SignCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.SignCertificate,
                    request_deserializer=squareup_dot_ca_dot_service__pb2.SignCertificateRequest.FromString,
                    response_serializer=squareup_dot_ca_dot_service__pb2.SignCertificateResponse.SerializeToString,
            ),
            'StatusCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.StatusCertificate,
                    request_deserializer=squareup_dot_ca_dot_service__pb2.StatusCertificateRequest.FromString,
                    response_serializer=squareup_dot_ca_dot_service__pb2.StatusCertificateResponse.SerializeToString,
            ),
            'RevokeCertificate': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeCertificate,
                    request_deserializer=squareup_dot_ca_dot_service__pb2.RevokeCertificateRequest.FromString,
                    response_serializer=squareup_dot_ca_dot_service__pb2.RevokeCertificateResponse.SerializeToString,
            ),
            'ExpiringCertificates': grpc.unary_unary_rpc_method_handler(
                    servicer.ExpiringCertificates,
                    request_deserializer=squareup_dot_ca_dot_service__pb2.ExpiringCertificatesRequest.FromString,
                    response_serializer=squareup_dot_ca_dot_service__pb2.ExpiringCertificatesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.ca.service.CaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAuthorities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ca.service.CaService/GetAuthorities',
            squareup_dot_ca_dot_service__pb2.GetAuthoritiesRequest.SerializeToString,
            squareup_dot_ca_dot_service__pb2.GetAuthoritiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCertificates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ca.service.CaService/GetCertificates',
            squareup_dot_ca_dot_service__pb2.GetCertificatesRequest.SerializeToString,
            squareup_dot_ca_dot_service__pb2.GetCertificatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ca.service.CaService/SignCertificate',
            squareup_dot_ca_dot_service__pb2.SignCertificateRequest.SerializeToString,
            squareup_dot_ca_dot_service__pb2.SignCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StatusCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ca.service.CaService/StatusCertificate',
            squareup_dot_ca_dot_service__pb2.StatusCertificateRequest.SerializeToString,
            squareup_dot_ca_dot_service__pb2.StatusCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeCertificate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ca.service.CaService/RevokeCertificate',
            squareup_dot_ca_dot_service__pb2.RevokeCertificateRequest.SerializeToString,
            squareup_dot_ca_dot_service__pb2.RevokeCertificateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExpiringCertificates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ca.service.CaService/ExpiringCertificates',
            squareup_dot_ca_dot_service__pb2.ExpiringCertificatesRequest.SerializeToString,
            squareup_dot_ca_dot_service__pb2.ExpiringCertificatesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
