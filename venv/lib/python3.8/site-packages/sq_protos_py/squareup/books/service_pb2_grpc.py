# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.books import batch_get_pb2 as squareup_dot_books_dot_batch__get__pb2
from sq_protos_py.squareup.books import complete_backfill_import_pb2 as squareup_dot_books_dot_complete__backfill__import__pb2
from sq_protos_py.squareup.books import create_acl_pb2 as squareup_dot_books_dot_create__acl__pb2
from sq_protos_py.squareup.books import create_book_pb2 as squareup_dot_books_dot_create__book__pb2
from sq_protos_py.squareup.books import create_denomination_pb2 as squareup_dot_books_dot_create__denomination__pb2
from sq_protos_py.squareup.books import create_shelf_pb2 as squareup_dot_books_dot_create__shelf__pb2
from sq_protos_py.squareup.books import fetch_feed_pb2 as squareup_dot_books_dot_fetch__feed__pb2
from sq_protos_py.squareup.books import get_acls_pb2 as squareup_dot_books_dot_get__acls__pb2
from sq_protos_py.squareup.books import get_backfill_pb2 as squareup_dot_books_dot_get__backfill__pb2
from sq_protos_py.squareup.books import get_balance_pb2 as squareup_dot_books_dot_get__balance__pb2
from sq_protos_py.squareup.books import get_book_entries_matching_pb2 as squareup_dot_books_dot_get__book__entries__matching__pb2
from sq_protos_py.squareup.books import get_book_entries_range_pb2 as squareup_dot_books_dot_get__book__entries__range__pb2
from sq_protos_py.squareup.books import get_books_matching_pb2 as squareup_dot_books_dot_get__books__matching__pb2
from sq_protos_py.squareup.books import get_denominations_pb2 as squareup_dot_books_dot_get__denominations__pb2
from sq_protos_py.squareup.books import get_journal_commands_matching_pb2 as squareup_dot_books_dot_get__journal__commands__matching__pb2
from sq_protos_py.squareup.books import get_journal_entries_matching_pb2 as squareup_dot_books_dot_get__journal__entries__matching__pb2
from sq_protos_py.squareup.books import journal_command_pb2 as squareup_dot_books_dot_journal__command__pb2
from sq_protos_py.squareup.books import journal_pb2 as squareup_dot_books_dot_journal__pb2
from sq_protos_py.squareup.books import register_client_pb2 as squareup_dot_books_dot_register__client__pb2
from sq_protos_py.squareup.books import retract_journal_entry_pb2 as squareup_dot_books_dot_retract__journal__entry__pb2
from sq_protos_py.squareup.books import start_backfill_import_pb2 as squareup_dot_books_dot_start__backfill__import__pb2
from sq_protos_py.squareup.books import update_book_entry_metadata_pb2 as squareup_dot_books_dot_update__book__entry__metadata__pb2
from sq_protos_py.squareup.books import update_book_pb2 as squareup_dot_books_dot_update__book__pb2
from sq_protos_py.squareup.books import update_client_pb2 as squareup_dot_books_dot_update__client__pb2
from sq_protos_py.squareup.books import update_journal_entry_metadata_pb2 as squareup_dot_books_dot_update__journal__entry__metadata__pb2


class BooksServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Journal = channel.unary_unary(
                '/squareup.books.service.BooksService/Journal',
                request_serializer=squareup_dot_books_dot_journal__pb2.JournalRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_journal__pb2.JournalResponse.FromString,
                )
        self.JournalCommand = channel.unary_unary(
                '/squareup.books.service.BooksService/JournalCommand',
                request_serializer=squareup_dot_books_dot_journal__command__pb2.JournalCommandRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_journal__command__pb2.JournalCommandResponse.FromString,
                )
        self.JournalBatch = channel.unary_unary(
                '/squareup.books.service.BooksService/JournalBatch',
                request_serializer=squareup_dot_books_dot_journal__pb2.JournalBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_journal__pb2.JournalBatchResponse.FromString,
                )
        self.GetBalance = channel.unary_unary(
                '/squareup.books.service.BooksService/GetBalance',
                request_serializer=squareup_dot_books_dot_get__balance__pb2.GetBalanceRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__balance__pb2.GetBalanceResponse.FromString,
                )
        self.GetBooksMatching = channel.unary_unary(
                '/squareup.books.service.BooksService/GetBooksMatching',
                request_serializer=squareup_dot_books_dot_get__books__matching__pb2.GetBooksMatchingRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__books__matching__pb2.GetBooksMatchingResponse.FromString,
                )
        self.GetBookEntriesMatching = channel.unary_unary(
                '/squareup.books.service.BooksService/GetBookEntriesMatching',
                request_serializer=squareup_dot_books_dot_get__book__entries__matching__pb2.GetBookEntriesMatchingRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__book__entries__matching__pb2.GetBookEntriesMatchingResponse.FromString,
                )
        self.GetBookEntriesRange = channel.unary_unary(
                '/squareup.books.service.BooksService/GetBookEntriesRange',
                request_serializer=squareup_dot_books_dot_get__book__entries__range__pb2.GetBookEntriesRangeRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__book__entries__range__pb2.GetBookEntriesRangeResponse.FromString,
                )
        self.GetJournalEntriesMatching = channel.unary_unary(
                '/squareup.books.service.BooksService/GetJournalEntriesMatching',
                request_serializer=squareup_dot_books_dot_get__journal__entries__matching__pb2.GetJournalEntriesMatchingRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__journal__entries__matching__pb2.GetJournalEntriesMatchingResponse.FromString,
                )
        self.GetJournalCommandsMatching = channel.unary_unary(
                '/squareup.books.service.BooksService/GetJournalCommandsMatching',
                request_serializer=squareup_dot_books_dot_get__journal__commands__matching__pb2.GetJournalCommandsMatchingRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__journal__commands__matching__pb2.GetJournalCommandsMatchingResponse.FromString,
                )
        self.CreateBook = channel.unary_unary(
                '/squareup.books.service.BooksService/CreateBook',
                request_serializer=squareup_dot_books_dot_create__book__pb2.CreateBookRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_create__book__pb2.CreateBookResponse.FromString,
                )
        self.UpdateBook = channel.unary_unary(
                '/squareup.books.service.BooksService/UpdateBook',
                request_serializer=squareup_dot_books_dot_update__book__pb2.UpdateBookRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_update__book__pb2.UpdateBookResponse.FromString,
                )
        self.CreateAcl = channel.unary_unary(
                '/squareup.books.service.BooksService/CreateAcl',
                request_serializer=squareup_dot_books_dot_create__acl__pb2.CreateAclRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_create__acl__pb2.CreateAclResponse.FromString,
                )
        self.GetAcls = channel.unary_unary(
                '/squareup.books.service.BooksService/GetAcls',
                request_serializer=squareup_dot_books_dot_get__acls__pb2.GetAclsRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__acls__pb2.GetAclsResponse.FromString,
                )
        self.CreateDenomination = channel.unary_unary(
                '/squareup.books.service.BooksService/CreateDenomination',
                request_serializer=squareup_dot_books_dot_create__denomination__pb2.CreateDenominationRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_create__denomination__pb2.CreateDenominationResponse.FromString,
                )
        self.GetDenominations = channel.unary_unary(
                '/squareup.books.service.BooksService/GetDenominations',
                request_serializer=squareup_dot_books_dot_get__denominations__pb2.GetDenominationsRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__denominations__pb2.GetDenominationsResponse.FromString,
                )
        self.RegisterClient = channel.unary_unary(
                '/squareup.books.service.BooksService/RegisterClient',
                request_serializer=squareup_dot_books_dot_register__client__pb2.RegisterClientRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_register__client__pb2.RegisterClientResponse.FromString,
                )
        self.UpdateClient = channel.unary_unary(
                '/squareup.books.service.BooksService/UpdateClient',
                request_serializer=squareup_dot_books_dot_update__client__pb2.UpdateClientRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_update__client__pb2.UpdateClientResponse.FromString,
                )
        self.CreateShelf = channel.unary_unary(
                '/squareup.books.service.BooksService/CreateShelf',
                request_serializer=squareup_dot_books_dot_create__shelf__pb2.CreateShelfRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_create__shelf__pb2.CreateShelfResponse.FromString,
                )
        self.BatchGet = channel.unary_unary(
                '/squareup.books.service.BooksService/BatchGet',
                request_serializer=squareup_dot_books_dot_batch__get__pb2.BatchGetRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_batch__get__pb2.BatchGetResponse.FromString,
                )
        self.StartBackfillImport = channel.unary_unary(
                '/squareup.books.service.BooksService/StartBackfillImport',
                request_serializer=squareup_dot_books_dot_start__backfill__import__pb2.StartBackfillImportRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_start__backfill__import__pb2.StartBackfillImportResponse.FromString,
                )
        self.CompleteBackfillImport = channel.unary_unary(
                '/squareup.books.service.BooksService/CompleteBackfillImport',
                request_serializer=squareup_dot_books_dot_complete__backfill__import__pb2.CompleteBackfillImportRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_complete__backfill__import__pb2.CompleteBackfillImportResponse.FromString,
                )
        self.GetBackfill = channel.unary_unary(
                '/squareup.books.service.BooksService/GetBackfill',
                request_serializer=squareup_dot_books_dot_get__backfill__pb2.GetBackfillRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_get__backfill__pb2.GetBackfillResponse.FromString,
                )
        self.RetractJournalEntry = channel.unary_unary(
                '/squareup.books.service.BooksService/RetractJournalEntry',
                request_serializer=squareup_dot_books_dot_retract__journal__entry__pb2.RetractJournalEntryRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_retract__journal__entry__pb2.RetractJournalEntryResponse.FromString,
                )
        self.UpdateJournalEntryMetadata = channel.unary_unary(
                '/squareup.books.service.BooksService/UpdateJournalEntryMetadata',
                request_serializer=squareup_dot_books_dot_update__journal__entry__metadata__pb2.UpdateJournalEntryMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_update__journal__entry__metadata__pb2.UpdateJournalEntryMetadataResponse.FromString,
                )
        self.UpdateBookEntryMetadata = channel.unary_unary(
                '/squareup.books.service.BooksService/UpdateBookEntryMetadata',
                request_serializer=squareup_dot_books_dot_update__book__entry__metadata__pb2.UpdateBookEntryMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_update__book__entry__metadata__pb2.UpdateBookEntryMetadataResponse.FromString,
                )


class BooksServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Journal(self, request, context):
        """*
        Write a journal entry.

        DEPRECATED: Use JournalCommand.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JournalCommand(self, request, context):
        """*
        Issues a journal command request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JournalBatch(self, request, context):
        """*
        Journals multiple JournalRequests atomically.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBalance(self, request, context):
        """*
        Get the balance of a given book, optionally at a given version.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBooksMatching(self, request, context):
        """*
        Returns books by the client which pass a given filter.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBookEntriesMatching(self, request, context):
        """*
        Returns book entries by the client which pass a given filter.

        If a book entry has not been processed yet (book with high journaling rate, gets processed
        eventually) then it will not be included in the result.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBookEntriesRange(self, request, context):
        """*
        Returns book entries in a given version range.

        If a book entry has not been processed yet (book with high journaling rate, gets processed
        eventually) then it will not be included in the result.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJournalEntriesMatching(self, request, context):
        """*
        Returns journal entries by the client which pass a given filter.

        If a journal entry has not been processed yet (book with high journaling rate, gets processed
        eventually) then it will not be included in the result.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJournalCommandsMatching(self, request, context):
        """*
        Get journal commands matching

        If a journal entry for a journal command has not been processed yet (book with high journaling
        rate, gets processed eventually) then the journal command will not be included in the result.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBook(self, request, context):
        """*
        Create a new book.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBook(self, request, context):
        """*
        Update the limits for a given book
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAcl(self, request, context):
        """*
        Create or update an ACL for a particular subject with respect to the caller's books.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAcls(self, request, context):
        """*
        Get ACLs for the caller.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDenomination(self, request, context):
        """*
        Create a new denomination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDenominations(self, request, context):
        """*
        Get denominations available on the given shelf.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterClient(self, request, context):
        """*
        Register a new client with the books service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClient(self, request, context):
        """*
        Update an existing client in the books service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateShelf(self, request, context):
        """*
        Create a new shelf.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGet(self, request, context):
        """*
        Returns data for multiple read requests atomically.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartBackfillImport(self, request, context):
        """*
        Creates a record in Backfills table to asynchronously start a backfill
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompleteBackfillImport(self, request, context):
        """*
        Updates a record in Backfills table to transition the state to "IMPORTED", indicating that the
        import process is complete
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBackfill(self, request, context):
        """*
        Retrieves the backfill indicated by the backfill_id, if present
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetractJournalEntry(self, request, context):
        """*
        Retracts a journal entry from visible history
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateJournalEntryMetadata(self, request, context):
        """*
        Update journal entry metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBookEntryMetadata(self, request, context):
        """*
        Updates book entry metadata
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BooksServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Journal': grpc.unary_unary_rpc_method_handler(
                    servicer.Journal,
                    request_deserializer=squareup_dot_books_dot_journal__pb2.JournalRequest.FromString,
                    response_serializer=squareup_dot_books_dot_journal__pb2.JournalResponse.SerializeToString,
            ),
            'JournalCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.JournalCommand,
                    request_deserializer=squareup_dot_books_dot_journal__command__pb2.JournalCommandRequest.FromString,
                    response_serializer=squareup_dot_books_dot_journal__command__pb2.JournalCommandResponse.SerializeToString,
            ),
            'JournalBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.JournalBatch,
                    request_deserializer=squareup_dot_books_dot_journal__pb2.JournalBatchRequest.FromString,
                    response_serializer=squareup_dot_books_dot_journal__pb2.JournalBatchResponse.SerializeToString,
            ),
            'GetBalance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBalance,
                    request_deserializer=squareup_dot_books_dot_get__balance__pb2.GetBalanceRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__balance__pb2.GetBalanceResponse.SerializeToString,
            ),
            'GetBooksMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBooksMatching,
                    request_deserializer=squareup_dot_books_dot_get__books__matching__pb2.GetBooksMatchingRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__books__matching__pb2.GetBooksMatchingResponse.SerializeToString,
            ),
            'GetBookEntriesMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBookEntriesMatching,
                    request_deserializer=squareup_dot_books_dot_get__book__entries__matching__pb2.GetBookEntriesMatchingRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__book__entries__matching__pb2.GetBookEntriesMatchingResponse.SerializeToString,
            ),
            'GetBookEntriesRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBookEntriesRange,
                    request_deserializer=squareup_dot_books_dot_get__book__entries__range__pb2.GetBookEntriesRangeRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__book__entries__range__pb2.GetBookEntriesRangeResponse.SerializeToString,
            ),
            'GetJournalEntriesMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJournalEntriesMatching,
                    request_deserializer=squareup_dot_books_dot_get__journal__entries__matching__pb2.GetJournalEntriesMatchingRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__journal__entries__matching__pb2.GetJournalEntriesMatchingResponse.SerializeToString,
            ),
            'GetJournalCommandsMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJournalCommandsMatching,
                    request_deserializer=squareup_dot_books_dot_get__journal__commands__matching__pb2.GetJournalCommandsMatchingRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__journal__commands__matching__pb2.GetJournalCommandsMatchingResponse.SerializeToString,
            ),
            'CreateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBook,
                    request_deserializer=squareup_dot_books_dot_create__book__pb2.CreateBookRequest.FromString,
                    response_serializer=squareup_dot_books_dot_create__book__pb2.CreateBookResponse.SerializeToString,
            ),
            'UpdateBook': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBook,
                    request_deserializer=squareup_dot_books_dot_update__book__pb2.UpdateBookRequest.FromString,
                    response_serializer=squareup_dot_books_dot_update__book__pb2.UpdateBookResponse.SerializeToString,
            ),
            'CreateAcl': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAcl,
                    request_deserializer=squareup_dot_books_dot_create__acl__pb2.CreateAclRequest.FromString,
                    response_serializer=squareup_dot_books_dot_create__acl__pb2.CreateAclResponse.SerializeToString,
            ),
            'GetAcls': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAcls,
                    request_deserializer=squareup_dot_books_dot_get__acls__pb2.GetAclsRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__acls__pb2.GetAclsResponse.SerializeToString,
            ),
            'CreateDenomination': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDenomination,
                    request_deserializer=squareup_dot_books_dot_create__denomination__pb2.CreateDenominationRequest.FromString,
                    response_serializer=squareup_dot_books_dot_create__denomination__pb2.CreateDenominationResponse.SerializeToString,
            ),
            'GetDenominations': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDenominations,
                    request_deserializer=squareup_dot_books_dot_get__denominations__pb2.GetDenominationsRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__denominations__pb2.GetDenominationsResponse.SerializeToString,
            ),
            'RegisterClient': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterClient,
                    request_deserializer=squareup_dot_books_dot_register__client__pb2.RegisterClientRequest.FromString,
                    response_serializer=squareup_dot_books_dot_register__client__pb2.RegisterClientResponse.SerializeToString,
            ),
            'UpdateClient': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClient,
                    request_deserializer=squareup_dot_books_dot_update__client__pb2.UpdateClientRequest.FromString,
                    response_serializer=squareup_dot_books_dot_update__client__pb2.UpdateClientResponse.SerializeToString,
            ),
            'CreateShelf': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateShelf,
                    request_deserializer=squareup_dot_books_dot_create__shelf__pb2.CreateShelfRequest.FromString,
                    response_serializer=squareup_dot_books_dot_create__shelf__pb2.CreateShelfResponse.SerializeToString,
            ),
            'BatchGet': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGet,
                    request_deserializer=squareup_dot_books_dot_batch__get__pb2.BatchGetRequest.FromString,
                    response_serializer=squareup_dot_books_dot_batch__get__pb2.BatchGetResponse.SerializeToString,
            ),
            'StartBackfillImport': grpc.unary_unary_rpc_method_handler(
                    servicer.StartBackfillImport,
                    request_deserializer=squareup_dot_books_dot_start__backfill__import__pb2.StartBackfillImportRequest.FromString,
                    response_serializer=squareup_dot_books_dot_start__backfill__import__pb2.StartBackfillImportResponse.SerializeToString,
            ),
            'CompleteBackfillImport': grpc.unary_unary_rpc_method_handler(
                    servicer.CompleteBackfillImport,
                    request_deserializer=squareup_dot_books_dot_complete__backfill__import__pb2.CompleteBackfillImportRequest.FromString,
                    response_serializer=squareup_dot_books_dot_complete__backfill__import__pb2.CompleteBackfillImportResponse.SerializeToString,
            ),
            'GetBackfill': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackfill,
                    request_deserializer=squareup_dot_books_dot_get__backfill__pb2.GetBackfillRequest.FromString,
                    response_serializer=squareup_dot_books_dot_get__backfill__pb2.GetBackfillResponse.SerializeToString,
            ),
            'RetractJournalEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.RetractJournalEntry,
                    request_deserializer=squareup_dot_books_dot_retract__journal__entry__pb2.RetractJournalEntryRequest.FromString,
                    response_serializer=squareup_dot_books_dot_retract__journal__entry__pb2.RetractJournalEntryResponse.SerializeToString,
            ),
            'UpdateJournalEntryMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateJournalEntryMetadata,
                    request_deserializer=squareup_dot_books_dot_update__journal__entry__metadata__pb2.UpdateJournalEntryMetadataRequest.FromString,
                    response_serializer=squareup_dot_books_dot_update__journal__entry__metadata__pb2.UpdateJournalEntryMetadataResponse.SerializeToString,
            ),
            'UpdateBookEntryMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBookEntryMetadata,
                    request_deserializer=squareup_dot_books_dot_update__book__entry__metadata__pb2.UpdateBookEntryMetadataRequest.FromString,
                    response_serializer=squareup_dot_books_dot_update__book__entry__metadata__pb2.UpdateBookEntryMetadataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.books.service.BooksService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BooksService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Journal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/Journal',
            squareup_dot_books_dot_journal__pb2.JournalRequest.SerializeToString,
            squareup_dot_books_dot_journal__pb2.JournalResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JournalCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/JournalCommand',
            squareup_dot_books_dot_journal__command__pb2.JournalCommandRequest.SerializeToString,
            squareup_dot_books_dot_journal__command__pb2.JournalCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JournalBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/JournalBatch',
            squareup_dot_books_dot_journal__pb2.JournalBatchRequest.SerializeToString,
            squareup_dot_books_dot_journal__pb2.JournalBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBalance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetBalance',
            squareup_dot_books_dot_get__balance__pb2.GetBalanceRequest.SerializeToString,
            squareup_dot_books_dot_get__balance__pb2.GetBalanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBooksMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetBooksMatching',
            squareup_dot_books_dot_get__books__matching__pb2.GetBooksMatchingRequest.SerializeToString,
            squareup_dot_books_dot_get__books__matching__pb2.GetBooksMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBookEntriesMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetBookEntriesMatching',
            squareup_dot_books_dot_get__book__entries__matching__pb2.GetBookEntriesMatchingRequest.SerializeToString,
            squareup_dot_books_dot_get__book__entries__matching__pb2.GetBookEntriesMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBookEntriesRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetBookEntriesRange',
            squareup_dot_books_dot_get__book__entries__range__pb2.GetBookEntriesRangeRequest.SerializeToString,
            squareup_dot_books_dot_get__book__entries__range__pb2.GetBookEntriesRangeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJournalEntriesMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetJournalEntriesMatching',
            squareup_dot_books_dot_get__journal__entries__matching__pb2.GetJournalEntriesMatchingRequest.SerializeToString,
            squareup_dot_books_dot_get__journal__entries__matching__pb2.GetJournalEntriesMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJournalCommandsMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetJournalCommandsMatching',
            squareup_dot_books_dot_get__journal__commands__matching__pb2.GetJournalCommandsMatchingRequest.SerializeToString,
            squareup_dot_books_dot_get__journal__commands__matching__pb2.GetJournalCommandsMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/CreateBook',
            squareup_dot_books_dot_create__book__pb2.CreateBookRequest.SerializeToString,
            squareup_dot_books_dot_create__book__pb2.CreateBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/UpdateBook',
            squareup_dot_books_dot_update__book__pb2.UpdateBookRequest.SerializeToString,
            squareup_dot_books_dot_update__book__pb2.UpdateBookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateAcl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/CreateAcl',
            squareup_dot_books_dot_create__acl__pb2.CreateAclRequest.SerializeToString,
            squareup_dot_books_dot_create__acl__pb2.CreateAclResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAcls(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetAcls',
            squareup_dot_books_dot_get__acls__pb2.GetAclsRequest.SerializeToString,
            squareup_dot_books_dot_get__acls__pb2.GetAclsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDenomination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/CreateDenomination',
            squareup_dot_books_dot_create__denomination__pb2.CreateDenominationRequest.SerializeToString,
            squareup_dot_books_dot_create__denomination__pb2.CreateDenominationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDenominations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetDenominations',
            squareup_dot_books_dot_get__denominations__pb2.GetDenominationsRequest.SerializeToString,
            squareup_dot_books_dot_get__denominations__pb2.GetDenominationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/RegisterClient',
            squareup_dot_books_dot_register__client__pb2.RegisterClientRequest.SerializeToString,
            squareup_dot_books_dot_register__client__pb2.RegisterClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/UpdateClient',
            squareup_dot_books_dot_update__client__pb2.UpdateClientRequest.SerializeToString,
            squareup_dot_books_dot_update__client__pb2.UpdateClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateShelf(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/CreateShelf',
            squareup_dot_books_dot_create__shelf__pb2.CreateShelfRequest.SerializeToString,
            squareup_dot_books_dot_create__shelf__pb2.CreateShelfResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/BatchGet',
            squareup_dot_books_dot_batch__get__pb2.BatchGetRequest.SerializeToString,
            squareup_dot_books_dot_batch__get__pb2.BatchGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartBackfillImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/StartBackfillImport',
            squareup_dot_books_dot_start__backfill__import__pb2.StartBackfillImportRequest.SerializeToString,
            squareup_dot_books_dot_start__backfill__import__pb2.StartBackfillImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompleteBackfillImport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/CompleteBackfillImport',
            squareup_dot_books_dot_complete__backfill__import__pb2.CompleteBackfillImportRequest.SerializeToString,
            squareup_dot_books_dot_complete__backfill__import__pb2.CompleteBackfillImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBackfill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/GetBackfill',
            squareup_dot_books_dot_get__backfill__pb2.GetBackfillRequest.SerializeToString,
            squareup_dot_books_dot_get__backfill__pb2.GetBackfillResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetractJournalEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/RetractJournalEntry',
            squareup_dot_books_dot_retract__journal__entry__pb2.RetractJournalEntryRequest.SerializeToString,
            squareup_dot_books_dot_retract__journal__entry__pb2.RetractJournalEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateJournalEntryMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/UpdateJournalEntryMetadata',
            squareup_dot_books_dot_update__journal__entry__metadata__pb2.UpdateJournalEntryMetadataRequest.SerializeToString,
            squareup_dot_books_dot_update__journal__entry__metadata__pb2.UpdateJournalEntryMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBookEntryMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksService/UpdateBookEntryMetadata',
            squareup_dot_books_dot_update__book__entry__metadata__pb2.UpdateBookEntryMetadataRequest.SerializeToString,
            squareup_dot_books_dot_update__book__entry__metadata__pb2.UpdateBookEntryMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BooksFeedServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchFeed = channel.unary_unary(
                '/squareup.books.service.BooksFeedService/FetchFeed',
                request_serializer=squareup_dot_books_dot_fetch__feed__pb2.FetchFeedRequest.SerializeToString,
                response_deserializer=squareup_dot_books_dot_fetch__feed__pb2.FetchFeedResponse.FromString,
                )


class BooksFeedServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FetchFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BooksFeedServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchFeed,
                    request_deserializer=squareup_dot_books_dot_fetch__feed__pb2.FetchFeedRequest.FromString,
                    response_serializer=squareup_dot_books_dot_fetch__feed__pb2.FetchFeedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.books.service.BooksFeedService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BooksFeedService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FetchFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.books.service.BooksFeedService/FetchFeed',
            squareup_dot_books_dot_fetch__feed__pb2.FetchFeedRequest.SerializeToString,
            squareup_dot_books_dot_fetch__feed__pb2.FetchFeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
