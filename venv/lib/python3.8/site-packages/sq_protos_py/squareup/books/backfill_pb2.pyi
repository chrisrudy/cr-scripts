# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

BackfillStateValue = typing___NewType('BackfillStateValue', builtin___int)
type___BackfillStateValue = BackfillStateValue
BackfillState: _BackfillState
class _BackfillState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BackfillStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    IMPORTING = typing___cast(BackfillStateValue, 0)
    IMPORTED = typing___cast(BackfillStateValue, 1)
    SORTING = typing___cast(BackfillStateValue, 2)
    SORTED = typing___cast(BackfillStateValue, 3)
    VERIFYING = typing___cast(BackfillStateValue, 4)
    VERIFIED = typing___cast(BackfillStateValue, 5)
    SUCCEEDED = typing___cast(BackfillStateValue, 6)
    FAILED = typing___cast(BackfillStateValue, 7)
IMPORTING = typing___cast(BackfillStateValue, 0)
IMPORTED = typing___cast(BackfillStateValue, 1)
SORTING = typing___cast(BackfillStateValue, 2)
SORTED = typing___cast(BackfillStateValue, 3)
VERIFYING = typing___cast(BackfillStateValue, 4)
VERIFIED = typing___cast(BackfillStateValue, 5)
SUCCEEDED = typing___cast(BackfillStateValue, 6)
FAILED = typing___cast(BackfillStateValue, 7)
type___BackfillState = BackfillState

class Backfill(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    backfill_id: typing___Text = ...
    owner: typing___Text = ...
    shelf_id: typing___Text = ...
    state: type___BackfillStateValue = ...
    pre_sort_backup_url: typing___Text = ...
    failure_log_url: typing___Text = ...
    import_start_at: builtin___int = ...
    import_end_at: builtin___int = ...
    sort_start_at: builtin___int = ...
    sort_end_at: builtin___int = ...
    verify_start_at: builtin___int = ...
    verify_end_at: builtin___int = ...
    created_at: builtin___int = ...
    updated_at: builtin___int = ...

    def __init__(self,
        *,
        backfill_id : typing___Optional[typing___Text] = None,
        owner : typing___Optional[typing___Text] = None,
        shelf_id : typing___Optional[typing___Text] = None,
        state : typing___Optional[type___BackfillStateValue] = None,
        pre_sort_backup_url : typing___Optional[typing___Text] = None,
        failure_log_url : typing___Optional[typing___Text] = None,
        import_start_at : typing___Optional[builtin___int] = None,
        import_end_at : typing___Optional[builtin___int] = None,
        sort_start_at : typing___Optional[builtin___int] = None,
        sort_end_at : typing___Optional[builtin___int] = None,
        verify_start_at : typing___Optional[builtin___int] = None,
        verify_end_at : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[builtin___int] = None,
        updated_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"backfill_id",b"backfill_id",u"created_at",b"created_at",u"failure_log_url",b"failure_log_url",u"import_end_at",b"import_end_at",u"import_start_at",b"import_start_at",u"owner",b"owner",u"pre_sort_backup_url",b"pre_sort_backup_url",u"shelf_id",b"shelf_id",u"sort_end_at",b"sort_end_at",u"sort_start_at",b"sort_start_at",u"state",b"state",u"updated_at",b"updated_at",u"verify_end_at",b"verify_end_at",u"verify_start_at",b"verify_start_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"backfill_id",b"backfill_id",u"created_at",b"created_at",u"failure_log_url",b"failure_log_url",u"import_end_at",b"import_end_at",u"import_start_at",b"import_start_at",u"owner",b"owner",u"pre_sort_backup_url",b"pre_sort_backup_url",u"shelf_id",b"shelf_id",u"sort_end_at",b"sort_end_at",u"sort_start_at",b"sort_start_at",u"state",b"state",u"updated_at",b"updated_at",u"verify_end_at",b"verify_end_at",u"verify_start_at",b"verify_start_at"]) -> None: ...
type___Backfill = Backfill
