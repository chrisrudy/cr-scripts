# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.envoy_deployer import service_pb2 as squareup_dot_envoy__deployer_dot_service__pb2


class EnvoyDeployerServiceStub(object):
    """TODO(mpuncel): this service was extracted from the envoy-control protos and
    is an exact copy. Once usages of that are removed (tcli and
    p2-autodeployer) we should remove the AddEnvoyVersions from the
    EnvoyControlService.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BlessedEnvoyVersions = channel.unary_unary(
                '/squareup.envoy_deployer.service.EnvoyDeployerService/BlessedEnvoyVersions',
                request_serializer=squareup_dot_envoy__deployer_dot_service__pb2.BlessedEnvoyVersionsRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__deployer_dot_service__pb2.BlessedEnvoyVersionsResponse.FromString,
                )
        self.GetMinimumTCLIVersion = channel.unary_unary(
                '/squareup.envoy_deployer.service.EnvoyDeployerService/GetMinimumTCLIVersion',
                request_serializer=squareup_dot_envoy__deployer_dot_service__pb2.GetMinimumTCLIVersionRequest.SerializeToString,
                response_deserializer=squareup_dot_envoy__deployer_dot_service__pb2.GetMinimumTCLIVersionResponse.FromString,
                )


class EnvoyDeployerServiceServicer(object):
    """TODO(mpuncel): this service was extracted from the envoy-control protos and
    is an exact copy. Once usages of that are removed (tcli and
    p2-autodeployer) we should remove the AddEnvoyVersions from the
    EnvoyControlService.
    """

    def BlessedEnvoyVersions(self, request, context):
        """* Returns the image shas that tcli add-envoy and p2-autodeployer should use
        and validates the version of tcli used. Tcli uses it to decide which Envoy
        version should be used when adding Envoy to an environment for the first
        time, and p2-autodeployer uses it to determine the version that should be
        autodeployed. P2-master is intended to use it as well to automatically
        upgrade Envoy sidecars during normal deploys. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMinimumTCLIVersion(self, request, context):
        """* Returns the current required tcli version number. The tcli tool should
        instruct users to upgrade if the current version is not at least as new as
        the one returned. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvoyDeployerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BlessedEnvoyVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.BlessedEnvoyVersions,
                    request_deserializer=squareup_dot_envoy__deployer_dot_service__pb2.BlessedEnvoyVersionsRequest.FromString,
                    response_serializer=squareup_dot_envoy__deployer_dot_service__pb2.BlessedEnvoyVersionsResponse.SerializeToString,
            ),
            'GetMinimumTCLIVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMinimumTCLIVersion,
                    request_deserializer=squareup_dot_envoy__deployer_dot_service__pb2.GetMinimumTCLIVersionRequest.FromString,
                    response_serializer=squareup_dot_envoy__deployer_dot_service__pb2.GetMinimumTCLIVersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.envoy_deployer.service.EnvoyDeployerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EnvoyDeployerService(object):
    """TODO(mpuncel): this service was extracted from the envoy-control protos and
    is an exact copy. Once usages of that are removed (tcli and
    p2-autodeployer) we should remove the AddEnvoyVersions from the
    EnvoyControlService.
    """

    @staticmethod
    def BlessedEnvoyVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.envoy_deployer.service.EnvoyDeployerService/BlessedEnvoyVersions',
            squareup_dot_envoy__deployer_dot_service__pb2.BlessedEnvoyVersionsRequest.SerializeToString,
            squareup_dot_envoy__deployer_dot_service__pb2.BlessedEnvoyVersionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMinimumTCLIVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.envoy_deployer.service.EnvoyDeployerService/GetMinimumTCLIVersion',
            squareup_dot_envoy__deployer_dot_service__pb2.GetMinimumTCLIVersionRequest.SerializeToString,
            squareup_dot_envoy__deployer_dot_service__pb2.GetMinimumTCLIVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
