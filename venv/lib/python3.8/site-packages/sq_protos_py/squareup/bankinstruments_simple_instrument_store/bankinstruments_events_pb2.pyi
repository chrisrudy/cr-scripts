# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.bankinstruments_simple_instrument_store.bankinstruments_model_pb2 import (
    AuthenticationContext as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___AuthenticationContext,
    Bank as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Bank,
    Card as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Card,
    Instrument as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Instrument,
    LinkAttemptStatusValue as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkAttemptStatusValue,
    LinkContext as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkContext,
    LinkingInfo as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkingInfo,
    OwningTokenPair as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___OwningTokenPair,
    UnlinkContext as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___UnlinkContext,
    UsageContext as squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___UsageContext,
)

from sq_protos_py.squareup.common.location_pb2 import (
    GlobalAddress as squareup___common___location_pb2___GlobalAddress,
)

from sq_protos_py.squareup.privacyvault.annotations_pb2 import (
    VaultedData as squareup___privacyvault___annotations_pb2___VaultedData,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class InstrumentEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[InstrumentEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        INVALID = typing___cast(InstrumentEvent.TypeValue, 0)
        LINK = typing___cast(InstrumentEvent.TypeValue, 1)
        UNLINK = typing___cast(InstrumentEvent.TypeValue, 2)
        FREEZE = typing___cast(InstrumentEvent.TypeValue, 3)
        METADATA = typing___cast(InstrumentEvent.TypeValue, 4)
        ORDERING = typing___cast(InstrumentEvent.TypeValue, 5)
        DUPLICATE_LINK = typing___cast(InstrumentEvent.TypeValue, 6)
        VERIFICATION = typing___cast(InstrumentEvent.TypeValue, 7)
        STATUS_CHANGE = typing___cast(InstrumentEvent.TypeValue, 8)
        LOCK = typing___cast(InstrumentEvent.TypeValue, 9)
        UPDATE_MERCHANT_TOKEN = typing___cast(InstrumentEvent.TypeValue, 10)
        UPDATE_CARD = typing___cast(InstrumentEvent.TypeValue, 11)
        LINK_AUTHENTICATION_CHANGE = typing___cast(InstrumentEvent.TypeValue, 12)
        ATTACH_FRAUD_TAXONOMY = typing___cast(InstrumentEvent.TypeValue, 13)
        REMOVE_FRAUD_TAXONOMY = typing___cast(InstrumentEvent.TypeValue, 14)
    INVALID = typing___cast(InstrumentEvent.TypeValue, 0)
    LINK = typing___cast(InstrumentEvent.TypeValue, 1)
    UNLINK = typing___cast(InstrumentEvent.TypeValue, 2)
    FREEZE = typing___cast(InstrumentEvent.TypeValue, 3)
    METADATA = typing___cast(InstrumentEvent.TypeValue, 4)
    ORDERING = typing___cast(InstrumentEvent.TypeValue, 5)
    DUPLICATE_LINK = typing___cast(InstrumentEvent.TypeValue, 6)
    VERIFICATION = typing___cast(InstrumentEvent.TypeValue, 7)
    STATUS_CHANGE = typing___cast(InstrumentEvent.TypeValue, 8)
    LOCK = typing___cast(InstrumentEvent.TypeValue, 9)
    UPDATE_MERCHANT_TOKEN = typing___cast(InstrumentEvent.TypeValue, 10)
    UPDATE_CARD = typing___cast(InstrumentEvent.TypeValue, 11)
    LINK_AUTHENTICATION_CHANGE = typing___cast(InstrumentEvent.TypeValue, 12)
    ATTACH_FRAUD_TAXONOMY = typing___cast(InstrumentEvent.TypeValue, 13)
    REMOVE_FRAUD_TAXONOMY = typing___cast(InstrumentEvent.TypeValue, 14)
    type___Type = Type

    type: type___InstrumentEvent.TypeValue = ...
    instrument_token: typing___Text = ...
    event_key: typing___Text = ...
    created_at: builtin___int = ...

    @property
    def link_event(self) -> type___LinkEvent: ...

    @property
    def unlink_event(self) -> type___UnlinkEvent: ...

    @property
    def freeze_event(self) -> type___FreezeEvent: ...

    @property
    def metadata_event(self) -> type___MetadataEvent: ...

    @property
    def ordering_event(self) -> type___OrderingEvent: ...

    @property
    def duplicate_link_event(self) -> type___DuplicateLinkEvent: ...

    @property
    def verification_event(self) -> type___VerificationEvent: ...

    @property
    def status_change_event(self) -> type___StatusChangeEvent: ...

    @property
    def lockEvent(self) -> type___LockEvent: ...

    @property
    def update_merchant_token_event(self) -> type___UpdateMerchantTokenEvent: ...

    @property
    def update_card_event(self) -> type___UpdateCardEvent: ...

    @property
    def link_authentication_change_event(self) -> type___LinkAuthenticationChangeEvent: ...

    def __init__(self,
        *,
        type : typing___Optional[type___InstrumentEvent.TypeValue] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        event_key : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[builtin___int] = None,
        link_event : typing___Optional[type___LinkEvent] = None,
        unlink_event : typing___Optional[type___UnlinkEvent] = None,
        freeze_event : typing___Optional[type___FreezeEvent] = None,
        metadata_event : typing___Optional[type___MetadataEvent] = None,
        ordering_event : typing___Optional[type___OrderingEvent] = None,
        duplicate_link_event : typing___Optional[type___DuplicateLinkEvent] = None,
        verification_event : typing___Optional[type___VerificationEvent] = None,
        status_change_event : typing___Optional[type___StatusChangeEvent] = None,
        lockEvent : typing___Optional[type___LockEvent] = None,
        update_merchant_token_event : typing___Optional[type___UpdateMerchantTokenEvent] = None,
        update_card_event : typing___Optional[type___UpdateCardEvent] = None,
        link_authentication_change_event : typing___Optional[type___LinkAuthenticationChangeEvent] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"duplicate_link_event",b"duplicate_link_event",u"event_key",b"event_key",u"freeze_event",b"freeze_event",u"instrument_token",b"instrument_token",u"link_authentication_change_event",b"link_authentication_change_event",u"link_event",b"link_event",u"lockEvent",b"lockEvent",u"metadata_event",b"metadata_event",u"ordering_event",b"ordering_event",u"status_change_event",b"status_change_event",u"type",b"type",u"unlink_event",b"unlink_event",u"update_card_event",b"update_card_event",u"update_merchant_token_event",b"update_merchant_token_event",u"verification_event",b"verification_event"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"duplicate_link_event",b"duplicate_link_event",u"event_key",b"event_key",u"freeze_event",b"freeze_event",u"instrument_token",b"instrument_token",u"link_authentication_change_event",b"link_authentication_change_event",u"link_event",b"link_event",u"lockEvent",b"lockEvent",u"metadata_event",b"metadata_event",u"ordering_event",b"ordering_event",u"status_change_event",b"status_change_event",u"type",b"type",u"unlink_event",b"unlink_event",u"update_card_event",b"update_card_event",u"update_merchant_token_event",b"update_merchant_token_event",u"verification_event",b"verification_event"]) -> None: ...
type___InstrumentEvent = InstrumentEvent

class UpdateMerchantTokenEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    merchant_token: typing___Text = ...

    def __init__(self,
        *,
        merchant_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"merchant_token",b"merchant_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"merchant_token",b"merchant_token"]) -> None: ...
type___UpdateMerchantTokenEvent = UpdateMerchantTokenEvent

class LockEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_idempotency_key: typing___Text = ...

    @property
    def owning_token_pair(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___OwningTokenPair: ...

    def __init__(self,
        *,
        owning_token_pair : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___OwningTokenPair] = None,
        payment_idempotency_key : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"key",b"key",u"owning_token_pair",b"owning_token_pair",u"payment_idempotency_key",b"payment_idempotency_key"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"owning_token_pair",b"owning_token_pair",u"payment_idempotency_key",b"payment_idempotency_key"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"key",b"key"]) -> typing_extensions___Literal["owning_token_pair","payment_idempotency_key"]: ...
type___LockEvent = LockEvent

class LinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    is_single_use: builtin___bool = ...
    loggable_session_token: typing___Text = ...
    reference_id: typing___Text = ...

    @property
    def linking_info(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkingInfo: ...

    @property
    def usage_context(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___UsageContext: ...

    @property
    def link_context(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkContext: ...

    @property
    def authentication_context(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___AuthenticationContext: ...

    @property
    def card(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Card: ...

    @property
    def bank(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Bank: ...

    @property
    def billing_address(self) -> squareup___common___location_pb2___GlobalAddress: ...

    @property
    def vaulted_data(self) -> squareup___privacyvault___annotations_pb2___VaultedData: ...

    def __init__(self,
        *,
        linking_info : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkingInfo] = None,
        usage_context : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___UsageContext] = None,
        link_context : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkContext] = None,
        authentication_context : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___AuthenticationContext] = None,
        card : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Card] = None,
        bank : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Bank] = None,
        billing_address : typing___Optional[squareup___common___location_pb2___GlobalAddress] = None,
        is_single_use : typing___Optional[builtin___bool] = None,
        loggable_session_token : typing___Optional[typing___Text] = None,
        vaulted_data : typing___Optional[squareup___privacyvault___annotations_pb2___VaultedData] = None,
        reference_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"authentication_context",b"authentication_context",u"bank",b"bank",u"billing_address",b"billing_address",u"card",b"card",u"is_single_use",b"is_single_use",u"link_context",b"link_context",u"linking_info",b"linking_info",u"loggable_session_token",b"loggable_session_token",u"reference_id",b"reference_id",u"usage_context",b"usage_context",u"vaulted_data",b"vaulted_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"authentication_context",b"authentication_context",u"bank",b"bank",u"billing_address",b"billing_address",u"card",b"card",u"is_single_use",b"is_single_use",u"link_context",b"link_context",u"linking_info",b"linking_info",u"loggable_session_token",b"loggable_session_token",u"reference_id",b"reference_id",u"usage_context",b"usage_context",u"vaulted_data",b"vaulted_data"]) -> None: ...
type___LinkEvent = LinkEvent

class DuplicateLinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def link_event(self) -> type___LinkEvent: ...

    @property
    def vaulted_data(self) -> squareup___privacyvault___annotations_pb2___VaultedData: ...

    def __init__(self,
        *,
        link_event : typing___Optional[type___LinkEvent] = None,
        vaulted_data : typing___Optional[squareup___privacyvault___annotations_pb2___VaultedData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"link_event",b"link_event",u"vaulted_data",b"vaulted_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"link_event",b"link_event",u"vaulted_data",b"vaulted_data"]) -> None: ...
type___DuplicateLinkEvent = DuplicateLinkEvent

class UnlinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def unlink_context(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___UnlinkContext: ...

    def __init__(self,
        *,
        unlink_context : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___UnlinkContext] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"unlink_context",b"unlink_context"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"unlink_context",b"unlink_context"]) -> None: ...
type___UnlinkEvent = UnlinkEvent

class FreezeEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    frozen: builtin___bool = ...
    by_user: typing___Text = ...
    comment: typing___Text = ...

    def __init__(self,
        *,
        frozen : typing___Optional[builtin___bool] = None,
        by_user : typing___Optional[typing___Text] = None,
        comment : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"by_user",b"by_user",u"comment",b"comment",u"frozen",b"frozen"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"by_user",b"by_user",u"comment",b"comment",u"frozen",b"frozen"]) -> None: ...
type___FreezeEvent = FreezeEvent

class MetadataEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    nickname: typing___Text = ...
    metadata: typing___Text = ...

    @property
    def vaulted_data(self) -> squareup___privacyvault___annotations_pb2___VaultedData: ...

    def __init__(self,
        *,
        nickname : typing___Optional[typing___Text] = None,
        metadata : typing___Optional[typing___Text] = None,
        vaulted_data : typing___Optional[squareup___privacyvault___annotations_pb2___VaultedData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"nickname",b"nickname",u"vaulted_data",b"vaulted_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"metadata",b"metadata",u"nickname",b"nickname",u"vaulted_data",b"vaulted_data"]) -> None: ...
type___MetadataEvent = MetadataEvent

class OrderingEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ordinal: builtin___int = ...

    def __init__(self,
        *,
        ordinal : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ordinal",b"ordinal"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ordinal",b"ordinal"]) -> None: ...
type___OrderingEvent = OrderingEvent

class VerificationEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    status: squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkAttemptStatusValue = ...
    verification_pending: builtin___bool = ...

    def __init__(self,
        *,
        status : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkAttemptStatusValue] = None,
        verification_pending : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"status",b"status",u"verification_pending",b"verification_pending"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"status",b"status",u"verification_pending",b"verification_pending"]) -> None: ...
type___VerificationEvent = VerificationEvent

class StatusChangeEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    status: squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkAttemptStatusValue = ...

    def __init__(self,
        *,
        status : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___LinkAttemptStatusValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> None: ...
type___StatusChangeEvent = StatusChangeEvent

class UpdateCardEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def new_card(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Card: ...

    @property
    def vaulted_data(self) -> squareup___privacyvault___annotations_pb2___VaultedData: ...

    def __init__(self,
        *,
        new_card : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Card] = None,
        vaulted_data : typing___Optional[squareup___privacyvault___annotations_pb2___VaultedData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"new_card",b"new_card",u"vaulted_data",b"vaulted_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"new_card",b"new_card",u"vaulted_data",b"vaulted_data"]) -> None: ...
type___UpdateCardEvent = UpdateCardEvent

class InstrumentEventFeedEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_type: type___InstrumentEvent.TypeValue = ...
    event_created_at: builtin___int = ...
    event_key: typing___Text = ...

    @property
    def instrument(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Instrument: ...

    def __init__(self,
        *,
        instrument : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___Instrument] = None,
        event_type : typing___Optional[type___InstrumentEvent.TypeValue] = None,
        event_created_at : typing___Optional[builtin___int] = None,
        event_key : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"event_created_at",b"event_created_at",u"event_key",b"event_key",u"event_type",b"event_type",u"instrument",b"instrument"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"event_created_at",b"event_created_at",u"event_key",b"event_key",u"event_type",b"event_type",u"instrument",b"instrument"]) -> None: ...
type___InstrumentEventFeedEntry = InstrumentEventFeedEntry

class LinkAuthenticationChangeEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def authentication_context(self) -> squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___AuthenticationContext: ...

    def __init__(self,
        *,
        authentication_context : typing___Optional[squareup___bankinstruments_simple_instrument_store___bankinstruments_model_pb2___AuthenticationContext] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"authentication_context",b"authentication_context"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"authentication_context",b"authentication_context"]) -> None: ...
type___LinkAuthenticationChangeEvent = LinkAuthenticationChangeEvent
