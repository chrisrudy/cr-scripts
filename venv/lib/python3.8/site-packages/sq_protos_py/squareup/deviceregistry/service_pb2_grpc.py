# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.deviceregistry import service_pb2 as squareup_dot_deviceregistry_dot_service__pb2


class DeviceRegistryServiceStub(object):
    """General APIs. These are CRUD APIs that can be used to get all the entities.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDevice = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/GetDevice',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.GetDeviceRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.GetDeviceResponse.FromString,
                )
        self.BatchGetDevice = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/BatchGetDevice',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.BatchGetDeviceRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.BatchGetDeviceResponse.FromString,
                )
        self.FindDeviceUsages = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/FindDeviceUsages',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceUsagesRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceUsagesResponse.FromString,
                )
        self.FindOrCreateDeviceAndUsages = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/FindOrCreateDeviceAndUsages',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindOrCreateDeviceAndUsagesRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindOrCreateDeviceAndUsagesResponse.FromString,
                )
        self.UpdatePushToken = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/UpdatePushToken',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.UpdatePushTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.UpdatePushTokenResponse.FromString,
                )
        self.FindDevicesForPushNotifications = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/FindDevicesForPushNotifications',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForPushNotificationsRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForPushNotificationsResponse.FromString,
                )
        self.DeactivateDeviceUsages = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/DeactivateDeviceUsages',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.DeactivateDeviceUsagesRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.DeactivateDeviceUsagesResponse.FromString,
                )
        self.FindDeviceByPlatformDeviceId = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/FindDeviceByPlatformDeviceId',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceByPlatformDeviceIdRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceByPlatformDeviceIdResponse.FromString,
                )
        self.FindDevicesByPlatformDeviceId = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/FindDevicesByPlatformDeviceId',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesByPlatformDeviceIdRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesByPlatformDeviceIdResponse.FromString,
                )
        self.FindDevicesForUser = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/FindDevicesForUser',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForUserRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForUserResponse.FromString,
                )
        self.SetPushToken = channel.unary_unary(
                '/squareup.deviceregistry.service.DeviceRegistryService/SetPushToken',
                request_serializer=squareup_dot_deviceregistry_dot_service__pb2.SetPushTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_deviceregistry_dot_service__pb2.SetPushTokenResponse.FromString,
                )


class DeviceRegistryServiceServicer(object):
    """General APIs. These are CRUD APIs that can be used to get all the entities.
    """

    def GetDevice(self, request, context):
        """Get device and device versions by device token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetDevice(self, request, context):
        """Batched version of GetDevice for getting multiple devices.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindDeviceUsages(self, request, context):
        """Find DeviceUsage objects. Find all units/people usages for a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindOrCreateDeviceAndUsages(self, request, context):
        """Request specific APIs. These requests are tailored to specific flows.

        Create device, device version, and unit/person usages from a single request using data from multipass cookie and headers.
        Used for requests that are touchpoints for creating a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePushToken(self, request, context):
        """Update a certain device's push token. Used for when push token is made available from the app.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindDevicesForPushNotifications(self, request, context):
        """Find devices for sending a push notification to a specific unit or person. Used for sending push notifications.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateDeviceUsages(self, request, context):
        """Deactivate usages on a device based on multipass token and request headers. Used for logging out.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindDeviceByPlatformDeviceId(self, request, context):
        """Find a device only by platform device ID. Used for regulator device pages. DEPRECATED due to
        errors if multiple devices are found for an ID. Use FindDevicesByPlatformDeviceId instead.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindDevicesByPlatformDeviceId(self, request, context):
        """Find a devices by platform device ID.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindDevicesForUser(self, request, context):
        """Find all the devices for a user (unit or person). Can also load DeviceVersions. Used for regulator's devices tab.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPushToken(self, request, context):
        """Finds the given device and updates the push token in one transaction.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceRegistryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevice,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.GetDeviceRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.GetDeviceResponse.SerializeToString,
            ),
            'BatchGetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetDevice,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.BatchGetDeviceRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.BatchGetDeviceResponse.SerializeToString,
            ),
            'FindDeviceUsages': grpc.unary_unary_rpc_method_handler(
                    servicer.FindDeviceUsages,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceUsagesRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceUsagesResponse.SerializeToString,
            ),
            'FindOrCreateDeviceAndUsages': grpc.unary_unary_rpc_method_handler(
                    servicer.FindOrCreateDeviceAndUsages,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindOrCreateDeviceAndUsagesRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindOrCreateDeviceAndUsagesResponse.SerializeToString,
            ),
            'UpdatePushToken': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePushToken,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.UpdatePushTokenRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.UpdatePushTokenResponse.SerializeToString,
            ),
            'FindDevicesForPushNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.FindDevicesForPushNotifications,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForPushNotificationsRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForPushNotificationsResponse.SerializeToString,
            ),
            'DeactivateDeviceUsages': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateDeviceUsages,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.DeactivateDeviceUsagesRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.DeactivateDeviceUsagesResponse.SerializeToString,
            ),
            'FindDeviceByPlatformDeviceId': grpc.unary_unary_rpc_method_handler(
                    servicer.FindDeviceByPlatformDeviceId,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceByPlatformDeviceIdRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDeviceByPlatformDeviceIdResponse.SerializeToString,
            ),
            'FindDevicesByPlatformDeviceId': grpc.unary_unary_rpc_method_handler(
                    servicer.FindDevicesByPlatformDeviceId,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesByPlatformDeviceIdRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesByPlatformDeviceIdResponse.SerializeToString,
            ),
            'FindDevicesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.FindDevicesForUser,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForUserRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForUserResponse.SerializeToString,
            ),
            'SetPushToken': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPushToken,
                    request_deserializer=squareup_dot_deviceregistry_dot_service__pb2.SetPushTokenRequest.FromString,
                    response_serializer=squareup_dot_deviceregistry_dot_service__pb2.SetPushTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.deviceregistry.service.DeviceRegistryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceRegistryService(object):
    """General APIs. These are CRUD APIs that can be used to get all the entities.
    """

    @staticmethod
    def GetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/GetDevice',
            squareup_dot_deviceregistry_dot_service__pb2.GetDeviceRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.GetDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/BatchGetDevice',
            squareup_dot_deviceregistry_dot_service__pb2.BatchGetDeviceRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.BatchGetDeviceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindDeviceUsages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/FindDeviceUsages',
            squareup_dot_deviceregistry_dot_service__pb2.FindDeviceUsagesRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.FindDeviceUsagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindOrCreateDeviceAndUsages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/FindOrCreateDeviceAndUsages',
            squareup_dot_deviceregistry_dot_service__pb2.FindOrCreateDeviceAndUsagesRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.FindOrCreateDeviceAndUsagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePushToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/UpdatePushToken',
            squareup_dot_deviceregistry_dot_service__pb2.UpdatePushTokenRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.UpdatePushTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindDevicesForPushNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/FindDevicesForPushNotifications',
            squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForPushNotificationsRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForPushNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeactivateDeviceUsages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/DeactivateDeviceUsages',
            squareup_dot_deviceregistry_dot_service__pb2.DeactivateDeviceUsagesRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.DeactivateDeviceUsagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindDeviceByPlatformDeviceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/FindDeviceByPlatformDeviceId',
            squareup_dot_deviceregistry_dot_service__pb2.FindDeviceByPlatformDeviceIdRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.FindDeviceByPlatformDeviceIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindDevicesByPlatformDeviceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/FindDevicesByPlatformDeviceId',
            squareup_dot_deviceregistry_dot_service__pb2.FindDevicesByPlatformDeviceIdRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.FindDevicesByPlatformDeviceIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindDevicesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/FindDevicesForUser',
            squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForUserRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.FindDevicesForUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPushToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.deviceregistry.service.DeviceRegistryService/SetPushToken',
            squareup_dot_deviceregistry_dot_service__pb2.SetPushTokenRequest.SerializeToString,
            squareup_dot_deviceregistry_dot_service__pb2.SetPushTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
