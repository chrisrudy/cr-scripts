# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/deviceregistry/kafka.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.common import validation_pb2 as squareup_dot_common_dot_validation__pb2
from sq_protos_py.squareup.deviceregistry import common_pb2 as squareup_dot_deviceregistry_dot_common__pb2
from sq_protos_py.squareup.common import time_pb2 as squareup_dot_common_dot_time__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/deviceregistry/kafka.proto',
  package='squareup.deviceregistry.kafka',
  syntax='proto2',
  serialized_options=_b('\n(com.squareup.protos.deviceregistry.kafka\210\001\001'),
  serialized_pb=_b('\n#squareup/deviceregistry/kafka.proto\x12\x1dsquareup.deviceregistry.kafka\x1a squareup/common/validation.proto\x1a$squareup/deviceregistry/common.proto\x1a\x1asquareup/common/time.proto\"\xba\x01\n\x1a\x44\x65viceRegistryRequestEvent\x12\x62\n\x1a\x64\x65vice_request_information\x18\x01 \x01(\x0b\x32\x38.squareup.deviceregistry.common.DeviceRequestInformationB\x04\xf0\xf1\n\x01\x12\x38\n\ncreated_at\x18\x02 \x01(\x0b\x32\x1e.squareup.common.time.DateTimeB\x04\xf0\xf1\n\x01\x42-\n(com.squareup.protos.deviceregistry.kafka\x88\x01\x01')
  ,
  dependencies=[squareup_dot_common_dot_validation__pb2.DESCRIPTOR,squareup_dot_deviceregistry_dot_common__pb2.DESCRIPTOR,squareup_dot_common_dot_time__pb2.DESCRIPTOR,])




_DEVICEREGISTRYREQUESTEVENT = _descriptor.Descriptor(
  name='DeviceRegistryRequestEvent',
  full_name='squareup.deviceregistry.kafka.DeviceRegistryRequestEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_request_information', full_name='squareup.deviceregistry.kafka.DeviceRegistryRequestEvent.device_request_information', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='created_at', full_name='squareup.deviceregistry.kafka.DeviceRegistryRequestEvent.created_at', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\360\361\n\001'), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=171,
  serialized_end=357,
)

_DEVICEREGISTRYREQUESTEVENT.fields_by_name['device_request_information'].message_type = squareup_dot_deviceregistry_dot_common__pb2._DEVICEREQUESTINFORMATION
_DEVICEREGISTRYREQUESTEVENT.fields_by_name['created_at'].message_type = squareup_dot_common_dot_time__pb2._DATETIME
DESCRIPTOR.message_types_by_name['DeviceRegistryRequestEvent'] = _DEVICEREGISTRYREQUESTEVENT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DeviceRegistryRequestEvent = _reflection.GeneratedProtocolMessageType('DeviceRegistryRequestEvent', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEREGISTRYREQUESTEVENT,
  '__module__' : 'squareup.deviceregistry.kafka_pb2'
  # @@protoc_insertion_point(class_scope:squareup.deviceregistry.kafka.DeviceRegistryRequestEvent)
  })
_sym_db.RegisterMessage(DeviceRegistryRequestEvent)


DESCRIPTOR._options = None
_DEVICEREGISTRYREQUESTEVENT.fields_by_name['device_request_information']._options = None
_DEVICEREGISTRYREQUESTEVENT.fields_by_name['created_at']._options = None
# @@protoc_insertion_point(module_scope)
