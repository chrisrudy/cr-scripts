# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payapi_wallets.alipay.actions import pay_pb2 as squareup_dot_payapi__wallets_dot_alipay_dot_actions_dot_pay__pb2
from sq_protos_py.squareup.payapi_wallets.resources import digital_wallet_pb2 as squareup_dot_payapi__wallets_dot_resources_dot_digital__wallet__pb2


class AlipayServiceStub(object):
    """--
    @desc AlipayService provides internal endpoints used by WebSDK
    to provide Alipay as a payment method.
    --
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Pay = channel.unary_unary(
                '/squareup.payapi_wallets.alipay.AlipayService/Pay',
                request_serializer=squareup_dot_payapi__wallets_dot_resources_dot_digital__wallet__pb2.DigitalWalletStartRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi__wallets_dot_alipay_dot_actions_dot_pay__pb2.PayResponse.FromString,
                )


class AlipayServiceServicer(object):
    """--
    @desc AlipayService provides internal endpoints used by WebSDK
    to provide Alipay as a payment method.
    --
    """

    def Pay(self, request, context):
        """--
        @desc Alipay pay endpoint.
        This endpoint fetches Alipay redirect action form to be used by the WebSDK.
        These URLs are short lived and required for the WebSDK client to begin tokenize flows.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AlipayServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Pay': grpc.unary_unary_rpc_method_handler(
                    servicer.Pay,
                    request_deserializer=squareup_dot_payapi__wallets_dot_resources_dot_digital__wallet__pb2.DigitalWalletStartRequest.FromString,
                    response_serializer=squareup_dot_payapi__wallets_dot_alipay_dot_actions_dot_pay__pb2.PayResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payapi_wallets.alipay.AlipayService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AlipayService(object):
    """--
    @desc AlipayService provides internal endpoints used by WebSDK
    to provide Alipay as a payment method.
    --
    """

    @staticmethod
    def Pay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi_wallets.alipay.AlipayService/Pay',
            squareup_dot_payapi__wallets_dot_resources_dot_digital__wallet__pb2.DigitalWalletStartRequest.SerializeToString,
            squareup_dot_payapi__wallets_dot_alipay_dot_actions_dot_pay__pb2.PayResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
