# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payapi_wallets.plaid.actions import create_plaid_link_session_pb2 as squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2


class PlaidServiceStub(object):
    """--
    @desc PlaidService provides internal endpoints used by WebSDK
    to handle Plaid integration.
    --
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePlaidLinkSession = channel.unary_unary(
                '/squareup.payapi_wallets.plaid.PlaidService/CreatePlaidLinkSession',
                request_serializer=squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2.CreatePlaidLinkSessionRequest.SerializeToString,
                response_deserializer=squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2.CreatePlaidLinkSessionResponse.FromString,
                )


class PlaidServiceServicer(object):
    """--
    @desc PlaidService provides internal endpoints used by WebSDK
    to handle Plaid integration.
    --
    """

    def CreatePlaidLinkSession(self, request, context):
        """--
        @desc Plaid link session creation endpoint.
        This endpoint creates a Plaid Link Session to be used by the WebSDK.
        This session is short lived and is primarily made up of a Gringotts/Plaid Session token,
        as well as a Plaid Link Token. The former is used by Gringotts to store client information
        during a Plaid session, and the latter is used by the Plaid Link API to start a new session.
        Both of these tokens are required for the WebSDK client to create a BankNonce.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlaidServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePlaidLinkSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePlaidLinkSession,
                    request_deserializer=squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2.CreatePlaidLinkSessionRequest.FromString,
                    response_serializer=squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2.CreatePlaidLinkSessionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payapi_wallets.plaid.PlaidService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PlaidService(object):
    """--
    @desc PlaidService provides internal endpoints used by WebSDK
    to handle Plaid integration.
    --
    """

    @staticmethod
    def CreatePlaidLinkSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payapi_wallets.plaid.PlaidService/CreatePlaidLinkSession',
            squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2.CreatePlaidLinkSessionRequest.SerializeToString,
            squareup_dot_payapi__wallets_dot_plaid_dot_actions_dot_create__plaid__link__session__pb2.CreatePlaidLinkSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
