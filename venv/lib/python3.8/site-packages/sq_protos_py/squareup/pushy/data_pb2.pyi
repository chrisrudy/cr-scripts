# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.franklin.NotificationPreferenceProto_pb2 import (
    NotificationPreference as squareup___franklin___NotificationPreferenceProto_pb2___NotificationPreference,
)

from sq_protos_py.squareup.franklin.cash_instrument_type_pb2 import (
    CashInstrumentTypeValue as squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue,
)

from sq_protos_py.squareup.franklin.data_pb2 import (
    PushDevice as squareup___franklin___data_pb2___PushDevice,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Customer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    full_name: typing___Text = ...
    photo_url: typing___Text = ...
    is_engaged: builtin___bool = ...

    @property
    def instruments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Instrument]: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        full_name : typing___Optional[typing___Text] = None,
        photo_url : typing___Optional[typing___Text] = None,
        is_engaged : typing___Optional[builtin___bool] = None,
        instruments : typing___Optional[typing___Iterable[type___Instrument]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"full_name",b"full_name",u"is_engaged",b"is_engaged",u"photo_url",b"photo_url",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"full_name",b"full_name",u"instruments",b"instruments",u"is_engaged",b"is_engaged",u"photo_url",b"photo_url",u"token",b"token"]) -> None: ...
type___Customer = Customer

class Instrument(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    fideliusToken: typing___Text = ...
    cashInstrumentType: squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        fideliusToken : typing___Optional[typing___Text] = None,
        cashInstrumentType : typing___Optional[squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cashInstrumentType",b"cashInstrumentType",u"fideliusToken",b"fideliusToken",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cashInstrumentType",b"cashInstrumentType",u"fideliusToken",b"fideliusToken",u"token",b"token"]) -> None: ...
type___Instrument = Instrument

class NotificationAlias(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def notification_preference(self) -> squareup___franklin___NotificationPreferenceProto_pb2___NotificationPreference: ...

    @property
    def push_device(self) -> squareup___franklin___data_pb2___PushDevice: ...

    def __init__(self,
        *,
        notification_preference : typing___Optional[squareup___franklin___NotificationPreferenceProto_pb2___NotificationPreference] = None,
        push_device : typing___Optional[squareup___franklin___data_pb2___PushDevice] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"notification_preference",b"notification_preference",u"push_device",b"push_device"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"notification_preference",b"notification_preference",u"push_device",b"push_device"]) -> None: ...
type___NotificationAlias = NotificationAlias
