# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.holdsarbiter import service_pb2 as squareup_dot_holdsarbiter_dot_service__pb2


class HoldsArbiterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BulkReleasePaymentHold = channel.unary_unary(
                '/squareup.holdsarbiter.service.HoldsArbiterService/BulkReleasePaymentHold',
                request_serializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkReleasePaymentHoldRequest.SerializeToString,
                response_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkReleasePaymentHoldResponse.FromString,
                )
        self.BulkCreatePaymentHold = channel.unary_unary(
                '/squareup.holdsarbiter.service.HoldsArbiterService/BulkCreatePaymentHold',
                request_serializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkCreatePaymentHoldRequest.SerializeToString,
                response_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkCreatePaymentHoldResponse.FromString,
                )
        self.GetActiveHoldsForCaseToken = channel.unary_unary(
                '/squareup.holdsarbiter.service.HoldsArbiterService/GetActiveHoldsForCaseToken',
                request_serializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForCaseTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForCaseTokenResponse.FromString,
                )
        self.GetActiveHoldsForUnitToken = channel.unary_unary(
                '/squareup.holdsarbiter.service.HoldsArbiterService/GetActiveHoldsForUnitToken',
                request_serializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForUnitTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForUnitTokenResponse.FromString,
                )
        self.GetAllHoldsForCaseToken = channel.unary_unary(
                '/squareup.holdsarbiter.service.HoldsArbiterService/GetAllHoldsForCaseToken',
                request_serializer=squareup_dot_holdsarbiter_dot_service__pb2.GetAllHoldsForCaseTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.GetAllHoldsForCaseTokenResponse.FromString,
                )
        self.ReleaseHoldsForCaseToken = channel.unary_unary(
                '/squareup.holdsarbiter.service.HoldsArbiterService/ReleaseHoldsForCaseToken',
                request_serializer=squareup_dot_holdsarbiter_dot_service__pb2.ReleaseHoldsForCaseTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.ReleaseHoldsForCaseTokenResponse.FromString,
                )


class HoldsArbiterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def BulkReleasePaymentHold(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkCreatePaymentHold(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveHoldsForCaseToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveHoldsForUnitToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllHoldsForCaseToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReleaseHoldsForCaseToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HoldsArbiterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BulkReleasePaymentHold': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkReleasePaymentHold,
                    request_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkReleasePaymentHoldRequest.FromString,
                    response_serializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkReleasePaymentHoldResponse.SerializeToString,
            ),
            'BulkCreatePaymentHold': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkCreatePaymentHold,
                    request_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkCreatePaymentHoldRequest.FromString,
                    response_serializer=squareup_dot_holdsarbiter_dot_service__pb2.BulkCreatePaymentHoldResponse.SerializeToString,
            ),
            'GetActiveHoldsForCaseToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveHoldsForCaseToken,
                    request_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForCaseTokenRequest.FromString,
                    response_serializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForCaseTokenResponse.SerializeToString,
            ),
            'GetActiveHoldsForUnitToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveHoldsForUnitToken,
                    request_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForUnitTokenRequest.FromString,
                    response_serializer=squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForUnitTokenResponse.SerializeToString,
            ),
            'GetAllHoldsForCaseToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllHoldsForCaseToken,
                    request_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.GetAllHoldsForCaseTokenRequest.FromString,
                    response_serializer=squareup_dot_holdsarbiter_dot_service__pb2.GetAllHoldsForCaseTokenResponse.SerializeToString,
            ),
            'ReleaseHoldsForCaseToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ReleaseHoldsForCaseToken,
                    request_deserializer=squareup_dot_holdsarbiter_dot_service__pb2.ReleaseHoldsForCaseTokenRequest.FromString,
                    response_serializer=squareup_dot_holdsarbiter_dot_service__pb2.ReleaseHoldsForCaseTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.holdsarbiter.service.HoldsArbiterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HoldsArbiterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BulkReleasePaymentHold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.holdsarbiter.service.HoldsArbiterService/BulkReleasePaymentHold',
            squareup_dot_holdsarbiter_dot_service__pb2.BulkReleasePaymentHoldRequest.SerializeToString,
            squareup_dot_holdsarbiter_dot_service__pb2.BulkReleasePaymentHoldResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkCreatePaymentHold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.holdsarbiter.service.HoldsArbiterService/BulkCreatePaymentHold',
            squareup_dot_holdsarbiter_dot_service__pb2.BulkCreatePaymentHoldRequest.SerializeToString,
            squareup_dot_holdsarbiter_dot_service__pb2.BulkCreatePaymentHoldResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveHoldsForCaseToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.holdsarbiter.service.HoldsArbiterService/GetActiveHoldsForCaseToken',
            squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForCaseTokenRequest.SerializeToString,
            squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForCaseTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActiveHoldsForUnitToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.holdsarbiter.service.HoldsArbiterService/GetActiveHoldsForUnitToken',
            squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForUnitTokenRequest.SerializeToString,
            squareup_dot_holdsarbiter_dot_service__pb2.GetActiveHoldsForUnitTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllHoldsForCaseToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.holdsarbiter.service.HoldsArbiterService/GetAllHoldsForCaseToken',
            squareup_dot_holdsarbiter_dot_service__pb2.GetAllHoldsForCaseTokenRequest.SerializeToString,
            squareup_dot_holdsarbiter_dot_service__pb2.GetAllHoldsForCaseTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReleaseHoldsForCaseToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.holdsarbiter.service.HoldsArbiterService/ReleaseHoldsForCaseToken',
            squareup_dot_holdsarbiter_dot_service__pb2.ReleaseHoldsForCaseTokenRequest.SerializeToString,
            squareup_dot_holdsarbiter_dot_service__pb2.ReleaseHoldsForCaseTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
