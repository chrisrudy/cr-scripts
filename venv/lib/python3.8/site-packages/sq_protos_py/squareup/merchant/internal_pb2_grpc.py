# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.jobqueue import options_pb2 as squareup_dot_jobqueue_dot_options__pb2
from sq_protos_py.squareup.merchant import internal_pb2 as squareup_dot_merchant_dot_internal__pb2


class UpdateStockLevelAttributesJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateStockLevelAttributesJob = channel.unary_unary(
                '/squareup.items.merchant.UpdateStockLevelAttributesJobService/UpdateStockLevelAttributesJob',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.UpdateStockLevelAttributesJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class UpdateStockLevelAttributesJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateStockLevelAttributesJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UpdateStockLevelAttributesJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateStockLevelAttributesJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateStockLevelAttributesJob,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.UpdateStockLevelAttributesJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.items.merchant.UpdateStockLevelAttributesJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UpdateStockLevelAttributesJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateStockLevelAttributesJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.UpdateStockLevelAttributesJobService/UpdateStockLevelAttributesJob',
            squareup_dot_merchant_dot_internal__pb2.UpdateStockLevelAttributesJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InventoryCountFeedJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InventoryCountFeedJob = channel.unary_unary(
                '/squareup.items.merchant.InventoryCountFeedJobService/InventoryCountFeedJob',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.InventoryCountFeedJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class InventoryCountFeedJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InventoryCountFeedJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryCountFeedJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InventoryCountFeedJob': grpc.unary_unary_rpc_method_handler(
                    servicer.InventoryCountFeedJob,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.InventoryCountFeedJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.items.merchant.InventoryCountFeedJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryCountFeedJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InventoryCountFeedJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.InventoryCountFeedJobService/InventoryCountFeedJob',
            squareup_dot_merchant_dot_internal__pb2.InventoryCountFeedJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SearchJobsServiceStub(object):
    """SearchJobsService is responsible for handling all jobs against the search index. Each method below uniquely
    identifies a job queue (since the job queue library looks for a distinct proto method and service combination to identify
    (a specific queue, rather than just the queue name). Documents can be indexed incrementally or in bulk, the latter
    being done on behalf of either a backfill or (bulk) import
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IndexFlatSearchBackfill = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/IndexFlatSearchBackfill',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.IndexFlatSearchBulk = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/IndexFlatSearchBulk',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.IndexFlatSearchIncremental = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/IndexFlatSearchIncremental',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexIncrementalJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.IndexImage = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/IndexImage',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexIncrementalJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.BulkIndexImages = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/BulkIndexImages',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.InventoryUpdateIncremental = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/InventoryUpdateIncremental',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.InventoryUpdateBulk = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/InventoryUpdateBulk',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )
        self.InventoryUpdateBackfill = channel.unary_unary(
                '/squareup.items.merchant.SearchJobsService/InventoryUpdateBackfill',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class SearchJobsServiceServicer(object):
    """SearchJobsService is responsible for handling all jobs against the search index. Each method below uniquely
    identifies a job queue (since the job queue library looks for a distinct proto method and service combination to identify
    (a specific queue, rather than just the queue name). Documents can be indexed incrementally or in bulk, the latter
    being done on behalf of either a backfill or (bulk) import
    """

    def IndexFlatSearchBackfill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexFlatSearchBulk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexFlatSearchIncremental(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkIndexImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InventoryUpdateIncremental(self, request, context):
        """inventory update jobs
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InventoryUpdateBulk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InventoryUpdateBackfill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SearchJobsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IndexFlatSearchBackfill': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexFlatSearchBackfill,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'IndexFlatSearchBulk': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexFlatSearchBulk,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'IndexFlatSearchIncremental': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexFlatSearchIncremental,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexIncrementalJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'IndexImage': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexImage,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexIncrementalJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'BulkIndexImages': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkIndexImages,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'InventoryUpdateIncremental': grpc.unary_unary_rpc_method_handler(
                    servicer.InventoryUpdateIncremental,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'InventoryUpdateBulk': grpc.unary_unary_rpc_method_handler(
                    servicer.InventoryUpdateBulk,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
            'InventoryUpdateBackfill': grpc.unary_unary_rpc_method_handler(
                    servicer.InventoryUpdateBackfill,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.items.merchant.SearchJobsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SearchJobsService(object):
    """SearchJobsService is responsible for handling all jobs against the search index. Each method below uniquely
    identifies a job queue (since the job queue library looks for a distinct proto method and service combination to identify
    (a specific queue, rather than just the queue name). Documents can be indexed incrementally or in bulk, the latter
    being done on behalf of either a backfill or (bulk) import
    """

    @staticmethod
    def IndexFlatSearchBackfill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/IndexFlatSearchBackfill',
            squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IndexFlatSearchBulk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/IndexFlatSearchBulk',
            squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IndexFlatSearchIncremental(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/IndexFlatSearchIncremental',
            squareup_dot_merchant_dot_internal__pb2.SearchIndexIncrementalJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IndexImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/IndexImage',
            squareup_dot_merchant_dot_internal__pb2.SearchIndexIncrementalJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkIndexImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/BulkIndexImages',
            squareup_dot_merchant_dot_internal__pb2.SearchIndexBulkJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InventoryUpdateIncremental(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/InventoryUpdateIncremental',
            squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InventoryUpdateBulk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/InventoryUpdateBulk',
            squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InventoryUpdateBackfill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.SearchJobsService/InventoryUpdateBackfill',
            squareup_dot_merchant_dot_internal__pb2.InventoryUpdateIndexJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class HistoryJobsServiceStub(object):
    """HistoryJobsService is responsible for handling all jobs against the history index
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IndexHistory = channel.unary_unary(
                '/squareup.items.merchant.HistoryJobsService/IndexHistory',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.HistoryIndexJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class HistoryJobsServiceServicer(object):
    """HistoryJobsService is responsible for handling all jobs against the history index
    """

    def IndexHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HistoryJobsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IndexHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexHistory,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.HistoryIndexJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.items.merchant.HistoryJobsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HistoryJobsService(object):
    """HistoryJobsService is responsible for handling all jobs against the history index
    """

    @staticmethod
    def IndexHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.HistoryJobsService/IndexHistory',
            squareup_dot_merchant_dot_internal__pb2.HistoryIndexJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UpdateQuickAmountsAutoAmountsJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateQuickAmountsAutoAmountsJob = channel.unary_unary(
                '/squareup.items.merchant.UpdateQuickAmountsAutoAmountsJobService/UpdateQuickAmountsAutoAmountsJob',
                request_serializer=squareup_dot_merchant_dot_internal__pb2.UpdateQuickAmountsAutoAmountsJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class UpdateQuickAmountsAutoAmountsJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateQuickAmountsAutoAmountsJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UpdateQuickAmountsAutoAmountsJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateQuickAmountsAutoAmountsJob': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateQuickAmountsAutoAmountsJob,
                    request_deserializer=squareup_dot_merchant_dot_internal__pb2.UpdateQuickAmountsAutoAmountsJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.items.merchant.UpdateQuickAmountsAutoAmountsJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UpdateQuickAmountsAutoAmountsJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateQuickAmountsAutoAmountsJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.items.merchant.UpdateQuickAmountsAutoAmountsJobService/UpdateQuickAmountsAutoAmountsJob',
            squareup_dot_merchant_dot_internal__pb2.UpdateQuickAmountsAutoAmountsJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
