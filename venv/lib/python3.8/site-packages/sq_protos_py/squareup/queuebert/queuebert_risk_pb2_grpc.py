# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.queuebert import queuebert_risk_pb2 as squareup_dot_queuebert_dot_queuebert__risk__pb2


class QueuebertInternalRiskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPaymentMetadata = channel.unary_unary(
                '/squareup.queuebert.risk.QueuebertInternalRiskService/GetPaymentMetadata',
                request_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataResponse.FromString,
                )
        self.GetPaymentMetadataBatch = channel.unary_unary(
                '/squareup.queuebert.risk.QueuebertInternalRiskService/GetPaymentMetadataBatch',
                request_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataBatchResponse.FromString,
                )
        self.NotifyPaymentBatchRiskDecision = channel.unary_unary(
                '/squareup.queuebert.risk.QueuebertInternalRiskService/NotifyPaymentBatchRiskDecision',
                request_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.NotifyPaymentBatchRiskDecisionRequest.SerializeToString,
                response_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.NotifyPaymentBatchRiskDecisionResponse.FromString,
                )
        self.GetMerchantInfo = channel.unary_unary(
                '/squareup.queuebert.risk.QueuebertInternalRiskService/GetMerchantInfo',
                request_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetMerchantInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetMerchantInfoResponse.FromString,
                )


class QueuebertInternalRiskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPaymentMetadata(self, request, context):
        """*
        Frisky to request store-and-forward payment metadata from Queuebert. Unprocessed
        offline payments are not supported - Frisky should have access to processed offline
        payments only.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentMetadataBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NotifyPaymentBatchRiskDecision(self, request, context):
        """*
        Frisky to notify Queuebert of the store-and-forward payment batch risk decision

        Regulator will notify Queuebert of the manual review decision with this same
        NotifyPaymentBatchRiskDecision RPC, with the only exception that only
        APPROVE or REJECT decision will be allowed, no MANUAL_REVIEW decisions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerchantInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueuebertInternalRiskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPaymentMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentMetadata,
                    request_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataRequest.FromString,
                    response_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataResponse.SerializeToString,
            ),
            'GetPaymentMetadataBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentMetadataBatch,
                    request_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataBatchRequest.FromString,
                    response_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataBatchResponse.SerializeToString,
            ),
            'NotifyPaymentBatchRiskDecision': grpc.unary_unary_rpc_method_handler(
                    servicer.NotifyPaymentBatchRiskDecision,
                    request_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.NotifyPaymentBatchRiskDecisionRequest.FromString,
                    response_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.NotifyPaymentBatchRiskDecisionResponse.SerializeToString,
            ),
            'GetMerchantInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerchantInfo,
                    request_deserializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetMerchantInfoRequest.FromString,
                    response_serializer=squareup_dot_queuebert_dot_queuebert__risk__pb2.GetMerchantInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.queuebert.risk.QueuebertInternalRiskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QueuebertInternalRiskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPaymentMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.queuebert.risk.QueuebertInternalRiskService/GetPaymentMetadata',
            squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataRequest.SerializeToString,
            squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentMetadataBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.queuebert.risk.QueuebertInternalRiskService/GetPaymentMetadataBatch',
            squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataBatchRequest.SerializeToString,
            squareup_dot_queuebert_dot_queuebert__risk__pb2.GetPaymentMetadataBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NotifyPaymentBatchRiskDecision(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.queuebert.risk.QueuebertInternalRiskService/NotifyPaymentBatchRiskDecision',
            squareup_dot_queuebert_dot_queuebert__risk__pb2.NotifyPaymentBatchRiskDecisionRequest.SerializeToString,
            squareup_dot_queuebert_dot_queuebert__risk__pb2.NotifyPaymentBatchRiskDecisionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerchantInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.queuebert.risk.QueuebertInternalRiskService/GetMerchantInfo',
            squareup_dot_queuebert_dot_queuebert__risk__pb2.GetMerchantInfoRequest.SerializeToString,
            squareup_dot_queuebert_dot_queuebert__risk__pb2.GetMerchantInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
