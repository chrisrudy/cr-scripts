# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.searle import service_pb2 as squareup_dot_searle_dot_service__pb2


class SearleServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMagswipeKeys = channel.unary_unary(
                '/squareup.searle.service.SearleService/GetMagswipeKeys',
                request_serializer=squareup_dot_searle_dot_service__pb2.GetMagswipeKeysRequest.SerializeToString,
                response_deserializer=squareup_dot_searle_dot_service__pb2.GetMagswipeKeysResponse.FromString,
                )
        self.StoreMagswipeProgrammingResults = channel.unary_unary(
                '/squareup.searle.service.SearleService/StoreMagswipeProgrammingResults',
                request_serializer=squareup_dot_searle_dot_service__pb2.StoreMagswipeProgrammingResultsRequest.SerializeToString,
                response_deserializer=squareup_dot_searle_dot_service__pb2.StoreMagswipeProgrammingResultsResponse.FromString,
                )


class SearleServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMagswipeKeys(self, request, context):
        """*
        Generates the number of MagswipeKeyBundles (containing a hwid and key) requested and returns
        them to the client for eventual injection into readers. May generate fewer keys than requested:
        1) when the requested count is greater than the `searle.maxkeys` config value, and 2) when the
        RPC deadline has been exceeded before the requested key count has been created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StoreMagswipeProgrammingResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SearleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMagswipeKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMagswipeKeys,
                    request_deserializer=squareup_dot_searle_dot_service__pb2.GetMagswipeKeysRequest.FromString,
                    response_serializer=squareup_dot_searle_dot_service__pb2.GetMagswipeKeysResponse.SerializeToString,
            ),
            'StoreMagswipeProgrammingResults': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreMagswipeProgrammingResults,
                    request_deserializer=squareup_dot_searle_dot_service__pb2.StoreMagswipeProgrammingResultsRequest.FromString,
                    response_serializer=squareup_dot_searle_dot_service__pb2.StoreMagswipeProgrammingResultsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.searle.service.SearleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SearleService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMagswipeKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.searle.service.SearleService/GetMagswipeKeys',
            squareup_dot_searle_dot_service__pb2.GetMagswipeKeysRequest.SerializeToString,
            squareup_dot_searle_dot_service__pb2.GetMagswipeKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StoreMagswipeProgrammingResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.searle.service.SearleService/StoreMagswipeProgrammingResults',
            squareup_dot_searle_dot_service__pb2.StoreMagswipeProgrammingResultsRequest.SerializeToString,
            squareup_dot_searle_dot_service__pb2.StoreMagswipeProgrammingResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
