# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.simple_instrument_store import external_api_pb2 as squareup_dot_simple__instrument__store_dot_external__api__pb2


class ExternalInstrumentsServiceStub(object):
    """* Defines external endpoints for Instruments service. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.VerifyAndLinkInstrument = channel.unary_unary(
                '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/VerifyAndLinkInstrument',
                request_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalVerifyAndLinkInstrumentRequest.SerializeToString,
                response_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalVerifyAndLinkInstrumentResponse.FromString,
                )
        self.LinkInstrument = channel.unary_unary(
                '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/LinkInstrument',
                request_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalLinkInstrumentRequest.SerializeToString,
                response_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalLinkInstrumentResponse.FromString,
                )
        self.GetClientScript = channel.unary_unary(
                '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/GetClientScript',
                request_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalGetClientScriptRequest.SerializeToString,
                response_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalGetClientScriptResponse.FromString,
                )
        self.QueryInstrument = channel.unary_unary(
                '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/QueryInstrument',
                request_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalQueryInstrumentRequest.SerializeToString,
                response_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalQueryInstrumentResponse.FromString,
                )


class ExternalInstrumentsServiceServicer(object):
    """* Defines external endpoints for Instruments service. 
    """

    def VerifyAndLinkInstrument(self, request, context):
        """*
        Verifies and links the given instrument.

        NOTE: can't be idempotent due to esperanto verify not being idempotent.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkInstrument(self, request, context):
        """*
        Links the given instrument without verifying it first.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClientScript(self, request, context):
        """*
        Provides a client script to facilitate easy communication with the external Instruments API.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryInstrument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExternalInstrumentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'VerifyAndLinkInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyAndLinkInstrument,
                    request_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalVerifyAndLinkInstrumentRequest.FromString,
                    response_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalVerifyAndLinkInstrumentResponse.SerializeToString,
            ),
            'LinkInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkInstrument,
                    request_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalLinkInstrumentRequest.FromString,
                    response_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalLinkInstrumentResponse.SerializeToString,
            ),
            'GetClientScript': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClientScript,
                    request_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalGetClientScriptRequest.FromString,
                    response_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalGetClientScriptResponse.SerializeToString,
            ),
            'QueryInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryInstrument,
                    request_deserializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalQueryInstrumentRequest.FromString,
                    response_serializer=squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalQueryInstrumentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.simple_instrument_store.external_api.ExternalInstrumentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExternalInstrumentsService(object):
    """* Defines external endpoints for Instruments service. 
    """

    @staticmethod
    def VerifyAndLinkInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/VerifyAndLinkInstrument',
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalVerifyAndLinkInstrumentRequest.SerializeToString,
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalVerifyAndLinkInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/LinkInstrument',
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalLinkInstrumentRequest.SerializeToString,
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalLinkInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClientScript(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/GetClientScript',
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalGetClientScriptRequest.SerializeToString,
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalGetClientScriptResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.simple_instrument_store.external_api.ExternalInstrumentsService/QueryInstrument',
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalQueryInstrumentRequest.SerializeToString,
            squareup_dot_simple__instrument__store_dot_external__api__pb2.ExternalQueryInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
