# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.beemo.v2.reporting import custom_report_pb2 as squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2
from sq_protos_py.squareup.moco.v1.reporting import region_pb2 as squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2
from sq_protos_py.squareup.moco.v1.reporting import transaction_search_pb2 as squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2


class MocoInternalReportingServiceV1Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CustomReport = channel.unary_unary(
                '/squareup.moco.api.v1.reporting.MocoInternalReportingServiceV1/CustomReport',
                request_serializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.CustomReportRequest.SerializeToString,
                response_deserializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.CustomReportResponse.FromString,
                )
        self.AvailableFilters = channel.unary_unary(
                '/squareup.moco.api.v1.reporting.MocoInternalReportingServiceV1/AvailableFilters',
                request_serializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.AvailableFiltersRequest.SerializeToString,
                response_deserializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.AvailableFiltersResponse.FromString,
                )


class MocoInternalReportingServiceV1Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def CustomReport(self, request, context):
        """*
        The advanced report summary is a reporting API that supports user specified
        group bys and aggregates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AvailableFilters(self, request, context):
        """*
        The GetGroupByValue endpoint returns the possible GroupByValues for GroupByTypes
        to support selecting filter by values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MocoInternalReportingServiceV1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CustomReport': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomReport,
                    request_deserializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.CustomReportRequest.FromString,
                    response_serializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.CustomReportResponse.SerializeToString,
            ),
            'AvailableFilters': grpc.unary_unary_rpc_method_handler(
                    servicer.AvailableFilters,
                    request_deserializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.AvailableFiltersRequest.FromString,
                    response_serializer=squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.AvailableFiltersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.moco.api.v1.reporting.MocoInternalReportingServiceV1', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MocoInternalReportingServiceV1(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CustomReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.moco.api.v1.reporting.MocoInternalReportingServiceV1/CustomReport',
            squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.CustomReportRequest.SerializeToString,
            squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.CustomReportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AvailableFilters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.moco.api.v1.reporting.MocoInternalReportingServiceV1/AvailableFilters',
            squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.AvailableFiltersRequest.SerializeToString,
            squareup_dot_beemo_dot_v2_dot_reporting_dot_custom__report__pb2.AvailableFiltersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MocoCoprocessorServiceV1Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BatchRegion = channel.unary_unary(
                '/squareup.moco.api.v1.reporting.MocoCoprocessorServiceV1/BatchRegion',
                request_serializer=squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2.BatchRegionRequest.SerializeToString,
                response_deserializer=squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2.RegionResponse.FromString,
                )


class MocoCoprocessorServiceV1Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def BatchRegion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MocoCoprocessorServiceV1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BatchRegion': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchRegion,
                    request_deserializer=squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2.BatchRegionRequest.FromString,
                    response_serializer=squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2.RegionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.moco.api.v1.reporting.MocoCoprocessorServiceV1', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MocoCoprocessorServiceV1(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def BatchRegion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.moco.api.v1.reporting.MocoCoprocessorServiceV1/BatchRegion',
            squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2.BatchRegionRequest.SerializeToString,
            squareup_dot_moco_dot_v1_dot_reporting_dot_region__pb2.RegionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MocoTransactionSearchServiceV1Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBillEventKeys = channel.unary_unary(
                '/squareup.moco.api.v1.reporting.MocoTransactionSearchServiceV1/GetBillEventKeys',
                request_serializer=squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2.GetBillEventKeysRequest.SerializeToString,
                response_deserializer=squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2.GetBillEventKeysResponse.FromString,
                )


class MocoTransactionSearchServiceV1Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBillEventKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MocoTransactionSearchServiceV1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBillEventKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBillEventKeys,
                    request_deserializer=squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2.GetBillEventKeysRequest.FromString,
                    response_serializer=squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2.GetBillEventKeysResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.moco.api.v1.reporting.MocoTransactionSearchServiceV1', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MocoTransactionSearchServiceV1(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBillEventKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.moco.api.v1.reporting.MocoTransactionSearchServiceV1/GetBillEventKeys',
            squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2.GetBillEventKeysRequest.SerializeToString,
            squareup_dot_moco_dot_v1_dot_reporting_dot_transaction__search__pb2.GetBillEventKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
