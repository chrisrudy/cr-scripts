# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.eventstream.schema_manager import service_pb2 as squareup_dot_eventstream_dot_schema__manager_dot_service__pb2


class SchemaManagerServiceStub(object):
    """*
    Service exposing read-only endpoints of the schema-manager.

    These methods can be called by anybody.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCatalogByName = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/GetCatalogByName',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogByNameRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogByNameResponse.FromString,
                )
        self.GetSchemaByHash = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/GetSchemaByHash',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemaByHashRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemaByHashResponse.FromString,
                )
        self.GetAppByName = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/GetAppByName',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAppByNameRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAppByNameResponse.FromString,
                )
        self.GetSchemasForCatalog = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/GetSchemasForCatalog',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemasForCatalogRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemasForCatalogResponse.FromString,
                )
        self.GetAllCatalogs = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/GetAllCatalogs',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogsRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogsResponse.FromString,
                )
        self.GetAllApps = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/GetAllApps',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllAppsRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllAppsResponse.FromString,
                )
        self.ValidateSchema = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerService/ValidateSchema',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ValidateSchemaRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ValidateSchemaResponse.FromString,
                )


class SchemaManagerServiceServicer(object):
    """*
    Service exposing read-only endpoints of the schema-manager.

    These methods can be called by anybody.
    """

    def GetCatalogByName(self, request, context):
        """methods for single retrieval. used programmatically
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchemaByHash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSchemasForCatalog(self, request, context):
        """methods for multiple retrieval. used by UI
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCatalogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllApps(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateSchema(self, request, context):
        """validate schema prior to an update.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchemaManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCatalogByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCatalogByName,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogByNameRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogByNameResponse.SerializeToString,
            ),
            'GetSchemaByHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchemaByHash,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemaByHashRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemaByHashResponse.SerializeToString,
            ),
            'GetAppByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppByName,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAppByNameRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAppByNameResponse.SerializeToString,
            ),
            'GetSchemasForCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSchemasForCatalog,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemasForCatalogRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemasForCatalogResponse.SerializeToString,
            ),
            'GetAllCatalogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCatalogs,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogsRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogsResponse.SerializeToString,
            ),
            'GetAllApps': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllApps,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllAppsRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllAppsResponse.SerializeToString,
            ),
            'ValidateSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateSchema,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ValidateSchemaRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ValidateSchemaResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.eventstream.schemamanager.SchemaManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchemaManagerService(object):
    """*
    Service exposing read-only endpoints of the schema-manager.

    These methods can be called by anybody.
    """

    @staticmethod
    def GetCatalogByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/GetCatalogByName',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogByNameRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchemaByHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/GetSchemaByHash',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemaByHashRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemaByHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/GetAppByName',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAppByNameRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAppByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSchemasForCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/GetSchemasForCatalog',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemasForCatalogRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetSchemasForCatalogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCatalogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/GetAllCatalogs',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogsRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllApps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/GetAllApps',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllAppsRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllAppsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerService/ValidateSchema',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ValidateSchemaRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ValidateSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SchemaManagerServiceV2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCatalogRetention = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerServiceV2/GetCatalogRetention',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogRetentionRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogRetentionResponse.FromString,
                )
        self.GetAllCatalogRetentions = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerServiceV2/GetAllCatalogRetentions',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogRetentionsRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogRetentionsResponse.FromString,
                )
        self.ListCatalogDestinations = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerServiceV2/ListCatalogDestinations',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ListCatalogDestinationsRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ListCatalogDestinationsResponse.FromString,
                )


class SchemaManagerServiceV2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCatalogRetention(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllCatalogRetentions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCatalogDestinations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchemaManagerServiceV2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCatalogRetention': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCatalogRetention,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogRetentionRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogRetentionResponse.SerializeToString,
            ),
            'GetAllCatalogRetentions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllCatalogRetentions,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogRetentionsRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogRetentionsResponse.SerializeToString,
            ),
            'ListCatalogDestinations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCatalogDestinations,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ListCatalogDestinationsRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ListCatalogDestinationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.eventstream.schemamanager.SchemaManagerServiceV2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchemaManagerServiceV2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCatalogRetention(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerServiceV2/GetCatalogRetention',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogRetentionRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetCatalogRetentionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllCatalogRetentions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerServiceV2/GetAllCatalogRetentions',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogRetentionsRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.GetAllCatalogRetentionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCatalogDestinations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerServiceV2/ListCatalogDestinations',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ListCatalogDestinationsRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.ListCatalogDestinationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SchemaManagerWriteServiceStub(object):
    """*
    Service exposing create & update endpoints of the schema manager.

    This should be invoked via the UI.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCatalog = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/CreateCatalog',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateCatalogRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateCatalogResponse.FromString,
                )
        self.CreateApp = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/CreateApp',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateAppRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateAppResponse.FromString,
                )
        self.UpdateBaseCatalog = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateBaseCatalog',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateBaseCatalogRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateBaseCatalogResponse.FromString,
                )
        self.UpdateCustomCatalog = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateCustomCatalog',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCustomCatalogRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCustomCatalogResponse.FromString,
                )
        self.UpdateCatalogMetadata = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateCatalogMetadata',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCatalogMetadataRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCatalogMetadataResponse.FromString,
                )
        self.AddBasesToCustomCatalog = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/AddBasesToCustomCatalog',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.AddBasesToCustomCatalogRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.AddBasesToCustomCatalogResponse.FromString,
                )
        self.UpdateApp = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateApp',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateAppRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateAppResponse.FromString,
                )
        self.DeleteCatalog = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteService/DeleteCatalog',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.DeleteCatalogRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.DeleteCatalogResponse.FromString,
                )


class SchemaManagerWriteServiceServicer(object):
    """*
    Service exposing create & update endpoints of the schema manager.

    This should be invoked via the UI.
    """

    def CreateCatalog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBaseCatalog(self, request, context):
        """* Change schema of a given base catalog and propagate changes to its related custom catalogs. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCustomCatalog(self, request, context):
        """* Change schema of a given custom catalog. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCatalogMetadata(self, request, context):
        """* Change non-schema information of a given catalog. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddBasesToCustomCatalog(self, request, context):
        """* Add additional base catalog to a given custom catalog. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateApp(self, request, context):
        """* Update the app 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCatalog(self, request, context):
        """*
        This is physically deleting all database records for a catalog.
        Use with caution. Better create a DATAINFRA JIRA before doing this.
        For base catalog, if it's in use, then this API will fail.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchemaManagerWriteServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCatalog,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateCatalogRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateCatalogResponse.SerializeToString,
            ),
            'CreateApp': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateApp,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateAppRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateAppResponse.SerializeToString,
            ),
            'UpdateBaseCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBaseCatalog,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateBaseCatalogRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateBaseCatalogResponse.SerializeToString,
            ),
            'UpdateCustomCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCustomCatalog,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCustomCatalogRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCustomCatalogResponse.SerializeToString,
            ),
            'UpdateCatalogMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCatalogMetadata,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCatalogMetadataRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCatalogMetadataResponse.SerializeToString,
            ),
            'AddBasesToCustomCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.AddBasesToCustomCatalog,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.AddBasesToCustomCatalogRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.AddBasesToCustomCatalogResponse.SerializeToString,
            ),
            'UpdateApp': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateApp,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateAppRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateAppResponse.SerializeToString,
            ),
            'DeleteCatalog': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCatalog,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.DeleteCatalogRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.DeleteCatalogResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.eventstream.schemamanager.SchemaManagerWriteService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchemaManagerWriteService(object):
    """*
    Service exposing create & update endpoints of the schema manager.

    This should be invoked via the UI.
    """

    @staticmethod
    def CreateCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/CreateCatalog',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateCatalogRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateCatalogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/CreateApp',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateAppRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CreateAppResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBaseCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateBaseCatalog',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateBaseCatalogRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateBaseCatalogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCustomCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateCustomCatalog',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCustomCatalogRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCustomCatalogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCatalogMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateCatalogMetadata',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCatalogMetadataRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateCatalogMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddBasesToCustomCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/AddBasesToCustomCatalog',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.AddBasesToCustomCatalogRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.AddBasesToCustomCatalogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/UpdateApp',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateAppRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.UpdateAppResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCatalog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteService/DeleteCatalog',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.DeleteCatalogRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.DeleteCatalogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SchemaManagerWriteServiceV2Stub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetCatalogRetention = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2/SetCatalogRetention',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionResponse.FromString,
                )
        self.SetCatalogRetentionFromYaml = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2/SetCatalogRetentionFromYaml',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionFromYamlRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionFromYamlResponse.FromString,
                )
        self.SetCatalogDestination = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2/SetCatalogDestination',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogDestinationRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CatalogDestinationResponse.FromString,
                )


class SchemaManagerWriteServiceV2Servicer(object):
    """Missing associated documentation comment in .proto file."""

    def SetCatalogRetention(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCatalogRetentionFromYaml(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCatalogDestination(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchemaManagerWriteServiceV2Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetCatalogRetention': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCatalogRetention,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionResponse.SerializeToString,
            ),
            'SetCatalogRetentionFromYaml': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCatalogRetentionFromYaml,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionFromYamlRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionFromYamlResponse.SerializeToString,
            ),
            'SetCatalogDestination': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCatalogDestination,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogDestinationRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CatalogDestinationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchemaManagerWriteServiceV2(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SetCatalogRetention(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2/SetCatalogRetention',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCatalogRetentionFromYaml(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2/SetCatalogRetentionFromYaml',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionFromYamlRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogRetentionFromYamlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCatalogDestination(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerWriteServiceV2/SetCatalogDestination',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SetCatalogDestinationRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.CatalogDestinationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SchemaManagerInternalServiceStub(object):
    """*
    Service exposing internal administrative endpoints of the schema-manager.

    No app should invoke this.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RematerializeAllCatalogs = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerInternalService/RematerializeAllCatalogs',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.RematerializeAllCatalogsRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.RematerializeAllCatalogsResponse.FromString,
                )
        self.GetSla = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerInternalService/GetSla',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SlaQueryRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SlaQueryResponse.FromString,
                )
        self.SeedCatalogDestinations = channel.unary_unary(
                '/squareup.eventstream.schemamanager.SchemaManagerInternalService/SeedCatalogDestinations',
                request_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SeedCatalogDestinationsRequest.SerializeToString,
                response_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SeedCatalogDestinationsResponse.FromString,
                )


class SchemaManagerInternalServiceServicer(object):
    """*
    Service exposing internal administrative endpoints of the schema-manager.

    No app should invoke this.
    """

    def RematerializeAllCatalogs(self, request, context):
        """*
        Rematerialize all catalogs.
        When we add an annotation that depends on catalog materialization this is useful.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSla(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SeedCatalogDestinations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchemaManagerInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RematerializeAllCatalogs': grpc.unary_unary_rpc_method_handler(
                    servicer.RematerializeAllCatalogs,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.RematerializeAllCatalogsRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.RematerializeAllCatalogsResponse.SerializeToString,
            ),
            'GetSla': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSla,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SlaQueryRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SlaQueryResponse.SerializeToString,
            ),
            'SeedCatalogDestinations': grpc.unary_unary_rpc_method_handler(
                    servicer.SeedCatalogDestinations,
                    request_deserializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SeedCatalogDestinationsRequest.FromString,
                    response_serializer=squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SeedCatalogDestinationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.eventstream.schemamanager.SchemaManagerInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchemaManagerInternalService(object):
    """*
    Service exposing internal administrative endpoints of the schema-manager.

    No app should invoke this.
    """

    @staticmethod
    def RematerializeAllCatalogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerInternalService/RematerializeAllCatalogs',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.RematerializeAllCatalogsRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.RematerializeAllCatalogsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSla(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerInternalService/GetSla',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SlaQueryRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SlaQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SeedCatalogDestinations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.eventstream.schemamanager.SchemaManagerInternalService/SeedCatalogDestinations',
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SeedCatalogDestinationsRequest.SerializeToString,
            squareup_dot_eventstream_dot_schema__manager_dot_service__pb2.SeedCatalogDestinationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
