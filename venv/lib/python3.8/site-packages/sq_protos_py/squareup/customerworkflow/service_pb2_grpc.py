# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.customerworkflow import service_pb2 as squareup_dot_customerworkflow_dot_service__pb2


class CustomerWorkflowServiceStub(object):
    """CustomerWorkflowService contains methods to create and manage CustomerWorkflows
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCustomerWorkflow = channel.unary_unary(
                '/squareup.customerworkflow.service.CustomerWorkflowService/CreateCustomerWorkflow',
                request_serializer=squareup_dot_customerworkflow_dot_service__pb2.CreateCustomerWorkflowRequest.SerializeToString,
                response_deserializer=squareup_dot_customerworkflow_dot_service__pb2.CreateCustomerWorkflowResponse.FromString,
                )
        self.RetrieveCustomerWorkflow = channel.unary_unary(
                '/squareup.customerworkflow.service.CustomerWorkflowService/RetrieveCustomerWorkflow',
                request_serializer=squareup_dot_customerworkflow_dot_service__pb2.RetrieveCustomerWorkflowRequest.SerializeToString,
                response_deserializer=squareup_dot_customerworkflow_dot_service__pb2.RetrieveCustomerWorkflowResponse.FromString,
                )
        self.ScanCustomerWorkflow = channel.unary_unary(
                '/squareup.customerworkflow.service.CustomerWorkflowService/ScanCustomerWorkflow',
                request_serializer=squareup_dot_customerworkflow_dot_service__pb2.ScanCustomerWorkflowRequest.SerializeToString,
                response_deserializer=squareup_dot_customerworkflow_dot_service__pb2.ScanCustomerWorkflowResponse.FromString,
                )


class CustomerWorkflowServiceServicer(object):
    """CustomerWorkflowService contains methods to create and manage CustomerWorkflows
    """

    def CreateCustomerWorkflow(self, request, context):
        """Create a CustomerWorkflow.
        This request returns the entire created CustomerWorkflow in the response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveCustomerWorkflow(self, request, context):
        """Retrieve a CustomerWorkflow definition given a CustomerWorkflowToken.
        No scan metadata is altered from this request; an optional alternate format can be returned.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanCustomerWorkflow(self, request, context):
        """Scan a CustomerWorkflow definition given a CustomerWorkflowToken.
        A successful scan results in an update to last_scanned_at and scan_count on the
        CustomerWorkflow object.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomerWorkflowServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCustomerWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCustomerWorkflow,
                    request_deserializer=squareup_dot_customerworkflow_dot_service__pb2.CreateCustomerWorkflowRequest.FromString,
                    response_serializer=squareup_dot_customerworkflow_dot_service__pb2.CreateCustomerWorkflowResponse.SerializeToString,
            ),
            'RetrieveCustomerWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveCustomerWorkflow,
                    request_deserializer=squareup_dot_customerworkflow_dot_service__pb2.RetrieveCustomerWorkflowRequest.FromString,
                    response_serializer=squareup_dot_customerworkflow_dot_service__pb2.RetrieveCustomerWorkflowResponse.SerializeToString,
            ),
            'ScanCustomerWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanCustomerWorkflow,
                    request_deserializer=squareup_dot_customerworkflow_dot_service__pb2.ScanCustomerWorkflowRequest.FromString,
                    response_serializer=squareup_dot_customerworkflow_dot_service__pb2.ScanCustomerWorkflowResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.customerworkflow.service.CustomerWorkflowService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomerWorkflowService(object):
    """CustomerWorkflowService contains methods to create and manage CustomerWorkflows
    """

    @staticmethod
    def CreateCustomerWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.customerworkflow.service.CustomerWorkflowService/CreateCustomerWorkflow',
            squareup_dot_customerworkflow_dot_service__pb2.CreateCustomerWorkflowRequest.SerializeToString,
            squareup_dot_customerworkflow_dot_service__pb2.CreateCustomerWorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveCustomerWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.customerworkflow.service.CustomerWorkflowService/RetrieveCustomerWorkflow',
            squareup_dot_customerworkflow_dot_service__pb2.RetrieveCustomerWorkflowRequest.SerializeToString,
            squareup_dot_customerworkflow_dot_service__pb2.RetrieveCustomerWorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanCustomerWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.customerworkflow.service.CustomerWorkflowService/ScanCustomerWorkflow',
            squareup_dot_customerworkflow_dot_service__pb2.ScanCustomerWorkflowRequest.SerializeToString,
            squareup_dot_customerworkflow_dot_service__pb2.ScanCustomerWorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
