# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.buckets import sync_pb2 as squareup_dot_buckets_dot_sync__pb2


class BucketsSyncServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCluster = channel.unary_unary(
                '/squareup.buckets.sync.BucketsSyncService/GetCluster',
                request_serializer=squareup_dot_buckets_dot_sync__pb2.ClusterRequest.SerializeToString,
                response_deserializer=squareup_dot_buckets_dot_sync__pb2.ClusterResponse.FromString,
                )
        self.SetClusterAvailability = channel.unary_unary(
                '/squareup.buckets.sync.BucketsSyncService/SetClusterAvailability',
                request_serializer=squareup_dot_buckets_dot_sync__pb2.SetClusterAvailabilityRequest.SerializeToString,
                response_deserializer=squareup_dot_buckets_dot_sync__pb2.SetClusterAvailabilityResponse.FromString,
                )
        self.GetConfig = channel.unary_unary(
                '/squareup.buckets.sync.BucketsSyncService/GetConfig',
                request_serializer=squareup_dot_buckets_dot_sync__pb2.ConfigRequest.SerializeToString,
                response_deserializer=squareup_dot_buckets_dot_sync__pb2.ConfigResponse.FromString,
                )
        self.SetConfig = channel.unary_unary(
                '/squareup.buckets.sync.BucketsSyncService/SetConfig',
                request_serializer=squareup_dot_buckets_dot_sync__pb2.SetConfigRequest.SerializeToString,
                response_deserializer=squareup_dot_buckets_dot_sync__pb2.SetConfigResponse.FromString,
                )


class BucketsSyncServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetClusterAvailability(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BucketsSyncServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCluster,
                    request_deserializer=squareup_dot_buckets_dot_sync__pb2.ClusterRequest.FromString,
                    response_serializer=squareup_dot_buckets_dot_sync__pb2.ClusterResponse.SerializeToString,
            ),
            'SetClusterAvailability': grpc.unary_unary_rpc_method_handler(
                    servicer.SetClusterAvailability,
                    request_deserializer=squareup_dot_buckets_dot_sync__pb2.SetClusterAvailabilityRequest.FromString,
                    response_serializer=squareup_dot_buckets_dot_sync__pb2.SetClusterAvailabilityResponse.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=squareup_dot_buckets_dot_sync__pb2.ConfigRequest.FromString,
                    response_serializer=squareup_dot_buckets_dot_sync__pb2.ConfigResponse.SerializeToString,
            ),
            'SetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConfig,
                    request_deserializer=squareup_dot_buckets_dot_sync__pb2.SetConfigRequest.FromString,
                    response_serializer=squareup_dot_buckets_dot_sync__pb2.SetConfigResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.buckets.sync.BucketsSyncService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BucketsSyncService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.buckets.sync.BucketsSyncService/GetCluster',
            squareup_dot_buckets_dot_sync__pb2.ClusterRequest.SerializeToString,
            squareup_dot_buckets_dot_sync__pb2.ClusterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetClusterAvailability(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.buckets.sync.BucketsSyncService/SetClusterAvailability',
            squareup_dot_buckets_dot_sync__pb2.SetClusterAvailabilityRequest.SerializeToString,
            squareup_dot_buckets_dot_sync__pb2.SetClusterAvailabilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.buckets.sync.BucketsSyncService/GetConfig',
            squareup_dot_buckets_dot_sync__pb2.ConfigRequest.SerializeToString,
            squareup_dot_buckets_dot_sync__pb2.ConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.buckets.sync.BucketsSyncService/SetConfig',
            squareup_dot_buckets_dot_sync__pb2.SetConfigRequest.SerializeToString,
            squareup_dot_buckets_dot_sync__pb2.SetConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
