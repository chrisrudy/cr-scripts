# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.safetynet import service_pb2 as squareup_dot_safetynet_dot_service__pb2


class SafetyNetAttestationServiceStub(object):
    """*
    Validate a SafetyNet attestation. This is a service-to-service call. There is a separate
    client-to-server rpc to validate the attestation that can be hit by the client application.
    The separation exists so that we can provide full details to the internal service while being
    able to provide the client with a brief status.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ValidateAttestation = channel.unary_unary(
                '/squareup.safetynet.service.SafetyNetAttestationService/ValidateAttestation',
                request_serializer=squareup_dot_safetynet_dot_service__pb2.ValidateAttestationRequest.SerializeToString,
                response_deserializer=squareup_dot_safetynet_dot_service__pb2.ValidateAttestationResponse.FromString,
                )
        self.StartAttestation = channel.unary_unary(
                '/squareup.safetynet.service.SafetyNetAttestationService/StartAttestation',
                request_serializer=squareup_dot_safetynet_dot_service__pb2.StartAttestationRequest.SerializeToString,
                response_deserializer=squareup_dot_safetynet_dot_service__pb2.StartAttestationResponse.FromString,
                )


class SafetyNetAttestationServiceServicer(object):
    """*
    Validate a SafetyNet attestation. This is a service-to-service call. There is a separate
    client-to-server rpc to validate the attestation that can be hit by the client application.
    The separation exists so that we can provide full details to the internal service while being
    able to provide the client with a brief status.
    """

    def ValidateAttestation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartAttestation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SafetyNetAttestationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ValidateAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateAttestation,
                    request_deserializer=squareup_dot_safetynet_dot_service__pb2.ValidateAttestationRequest.FromString,
                    response_serializer=squareup_dot_safetynet_dot_service__pb2.ValidateAttestationResponse.SerializeToString,
            ),
            'StartAttestation': grpc.unary_unary_rpc_method_handler(
                    servicer.StartAttestation,
                    request_deserializer=squareup_dot_safetynet_dot_service__pb2.StartAttestationRequest.FromString,
                    response_serializer=squareup_dot_safetynet_dot_service__pb2.StartAttestationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.safetynet.service.SafetyNetAttestationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SafetyNetAttestationService(object):
    """*
    Validate a SafetyNet attestation. This is a service-to-service call. There is a separate
    client-to-server rpc to validate the attestation that can be hit by the client application.
    The separation exists so that we can provide full details to the internal service while being
    able to provide the client with a brief status.
    """

    @staticmethod
    def ValidateAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.safetynet.service.SafetyNetAttestationService/ValidateAttestation',
            squareup_dot_safetynet_dot_service__pb2.ValidateAttestationRequest.SerializeToString,
            squareup_dot_safetynet_dot_service__pb2.ValidateAttestationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartAttestation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.safetynet.service.SafetyNetAttestationService/StartAttestation',
            squareup_dot_safetynet_dot_service__pb2.StartAttestationRequest.SerializeToString,
            squareup_dot_safetynet_dot_service__pb2.StartAttestationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
