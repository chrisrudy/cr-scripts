# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.client.flipper.flipper_pb2 import (
    SafetyNetAttestation as squareup___client___flipper___flipper_pb2___SafetyNetAttestation,
)

from sq_protos_py.squareup.common.protocols_pb2 import (
    Headers as squareup___common___protocols_pb2___Headers,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class StartAttestationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def request_headers(self) -> squareup___common___protocols_pb2___Headers: ...

    def __init__(self,
        *,
        request_headers : typing___Optional[squareup___common___protocols_pb2___Headers] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"request_headers",b"request_headers"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"request_headers",b"request_headers"]) -> None: ...
type___StartAttestationRequest = StartAttestationRequest

class StartAttestationResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    nonce: builtin___bytes = ...
    api_key: typing___Text = ...

    def __init__(self,
        *,
        nonce : typing___Optional[builtin___bytes] = None,
        api_key : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"api_key",b"api_key",u"nonce",b"nonce"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"api_key",b"api_key",u"nonce",b"nonce"]) -> None: ...
type___StartAttestationResponse = StartAttestationResponse

class ValidateAttestationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def attestation(self) -> squareup___client___flipper___flipper_pb2___SafetyNetAttestation: ...

    @property
    def request_headers(self) -> squareup___common___protocols_pb2___Headers: ...

    def __init__(self,
        *,
        attestation : typing___Optional[squareup___client___flipper___flipper_pb2___SafetyNetAttestation] = None,
        request_headers : typing___Optional[squareup___common___protocols_pb2___Headers] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"attestation",b"attestation",u"request_headers",b"request_headers"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"attestation",b"attestation",u"request_headers",b"request_headers"]) -> None: ...
type___ValidateAttestationRequest = ValidateAttestationRequest

class ValidateAttestationResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ResultCodeValue = typing___NewType('ResultCodeValue', builtin___int)
    type___ResultCodeValue = ResultCodeValue
    ResultCode: _ResultCode
    class _ResultCode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ValidateAttestationResponse.ResultCodeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PASSED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 0)
        FAILED_NO_ATTESTATION_GMS_VERSION = typing___cast(ValidateAttestationResponse.ResultCodeValue, 1)
        FAILED_APK_NOT_FOUND = typing___cast(ValidateAttestationResponse.ResultCodeValue, 2)
        FAILED_ATTESTATION_DATA_ERROR = typing___cast(ValidateAttestationResponse.ResultCodeValue, 3)
        FAILED_PKGNAME_MATCH_ERROR = typing___cast(ValidateAttestationResponse.ResultCodeValue, 4)
        FAILED_ATTESTATION_CONTAINS_ERROR = typing___cast(ValidateAttestationResponse.ResultCodeValue, 5)
        FAILED_ATTESTATION_CTS_FAILED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 6)
        FAILED_CERT = typing___cast(ValidateAttestationResponse.ResultCodeValue, 7)
        FAILED_SIGNATURE = typing___cast(ValidateAttestationResponse.ResultCodeValue, 8)
        FAILED_NONCE = typing___cast(ValidateAttestationResponse.ResultCodeValue, 9)
        FAILED_TIMESTAMP_OLD = typing___cast(ValidateAttestationResponse.ResultCodeValue, 10)
        FAILED_NO_ATTESTATION = typing___cast(ValidateAttestationResponse.ResultCodeValue, 11)
        FAILED_NO_ATTESTATION_NETWORK = typing___cast(ValidateAttestationResponse.ResultCodeValue, 12)
        FAILED_NO_ATTESTATION_RATELIMIT = typing___cast(ValidateAttestationResponse.ResultCodeValue, 13)
        FAILED_ATTESTATION_BASIC_INTEGRITY_FAILED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 14)
        FAILED_ATTESTATION_CERT_FAILED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 15)
    PASSED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 0)
    FAILED_NO_ATTESTATION_GMS_VERSION = typing___cast(ValidateAttestationResponse.ResultCodeValue, 1)
    FAILED_APK_NOT_FOUND = typing___cast(ValidateAttestationResponse.ResultCodeValue, 2)
    FAILED_ATTESTATION_DATA_ERROR = typing___cast(ValidateAttestationResponse.ResultCodeValue, 3)
    FAILED_PKGNAME_MATCH_ERROR = typing___cast(ValidateAttestationResponse.ResultCodeValue, 4)
    FAILED_ATTESTATION_CONTAINS_ERROR = typing___cast(ValidateAttestationResponse.ResultCodeValue, 5)
    FAILED_ATTESTATION_CTS_FAILED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 6)
    FAILED_CERT = typing___cast(ValidateAttestationResponse.ResultCodeValue, 7)
    FAILED_SIGNATURE = typing___cast(ValidateAttestationResponse.ResultCodeValue, 8)
    FAILED_NONCE = typing___cast(ValidateAttestationResponse.ResultCodeValue, 9)
    FAILED_TIMESTAMP_OLD = typing___cast(ValidateAttestationResponse.ResultCodeValue, 10)
    FAILED_NO_ATTESTATION = typing___cast(ValidateAttestationResponse.ResultCodeValue, 11)
    FAILED_NO_ATTESTATION_NETWORK = typing___cast(ValidateAttestationResponse.ResultCodeValue, 12)
    FAILED_NO_ATTESTATION_RATELIMIT = typing___cast(ValidateAttestationResponse.ResultCodeValue, 13)
    FAILED_ATTESTATION_BASIC_INTEGRITY_FAILED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 14)
    FAILED_ATTESTATION_CERT_FAILED = typing___cast(ValidateAttestationResponse.ResultCodeValue, 15)
    type___ResultCode = ResultCode

    result_code: type___ValidateAttestationResponse.ResultCodeValue = ...
    nonce: typing___Text = ...
    package_name: typing___Text = ...
    timestamp: builtin___int = ...
    apk_digest_found: builtin___bool = ...
    apk_cert_digest_found: builtin___bool = ...
    pkg_name_matched: builtin___bool = ...
    cts_passed: builtin___bool = ...
    basic_integrity_passed: builtin___bool = ...
    jws_cert_validated: builtin___bool = ...
    jws_signature_validated: builtin___bool = ...
    apk_data_present: builtin___bool = ...

    def __init__(self,
        *,
        result_code : typing___Optional[type___ValidateAttestationResponse.ResultCodeValue] = None,
        nonce : typing___Optional[typing___Text] = None,
        package_name : typing___Optional[typing___Text] = None,
        timestamp : typing___Optional[builtin___int] = None,
        apk_digest_found : typing___Optional[builtin___bool] = None,
        apk_cert_digest_found : typing___Optional[builtin___bool] = None,
        pkg_name_matched : typing___Optional[builtin___bool] = None,
        cts_passed : typing___Optional[builtin___bool] = None,
        basic_integrity_passed : typing___Optional[builtin___bool] = None,
        jws_cert_validated : typing___Optional[builtin___bool] = None,
        jws_signature_validated : typing___Optional[builtin___bool] = None,
        apk_data_present : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"apk_cert_digest_found",b"apk_cert_digest_found",u"apk_data_present",b"apk_data_present",u"apk_digest_found",b"apk_digest_found",u"basic_integrity_passed",b"basic_integrity_passed",u"cts_passed",b"cts_passed",u"jws_cert_validated",b"jws_cert_validated",u"jws_signature_validated",b"jws_signature_validated",u"nonce",b"nonce",u"package_name",b"package_name",u"pkg_name_matched",b"pkg_name_matched",u"result_code",b"result_code",u"timestamp",b"timestamp"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"apk_cert_digest_found",b"apk_cert_digest_found",u"apk_data_present",b"apk_data_present",u"apk_digest_found",b"apk_digest_found",u"basic_integrity_passed",b"basic_integrity_passed",u"cts_passed",b"cts_passed",u"jws_cert_validated",b"jws_cert_validated",u"jws_signature_validated",b"jws_signature_validated",u"nonce",b"nonce",u"package_name",b"package_name",u"pkg_name_matched",b"pkg_name_matched",u"result_code",b"result_code",u"timestamp",b"timestamp"]) -> None: ...
type___ValidateAttestationResponse = ValidateAttestationResponse
