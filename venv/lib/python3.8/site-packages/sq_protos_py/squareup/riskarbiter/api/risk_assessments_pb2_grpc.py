# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.riskarbiter.api import risk_assessments_pb2 as squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2


class RiskAssessmentServiceStub(object):
    """*
    This service drives riskarbiter-ui and supports oncall interventions.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRiskAssessment = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/GetRiskAssessment',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
                )
        self.GetDbRiskAssessment = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/GetDbRiskAssessment',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
                )
        self.CreateRiskAssessment = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/CreateRiskAssessment',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateRiskAssessmentRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateRiskAssessmentResponse.FromString,
                )
        self.CreateModelSuspicion = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/CreateModelSuspicion',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateModelSuspicionRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateModelSuspicionResponse.FromString,
                )
        self.GetPreviouslyFlaggedRule = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/GetPreviouslyFlaggedRule',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetPreviouslyFlaggedRuleRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetPreviouslyFlaggedRuleResponse.FromString,
                )
        self.TailRiskAssessments = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/TailRiskAssessments',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.TailRiskAssessmentsRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.TailRiskAssessmentsResponse.FromString,
                )
        self.QueryRiskAssessments = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/QueryRiskAssessments',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.QueryRiskAssessmentsRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.QueryRiskAssessmentsResponse.FromString,
                )
        self.PublishToBigtable = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/PublishToBigtable',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
                )
        self.GetFromBigtable = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/GetFromBigtable',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
                )
        self.ScanSecondaryIndex = channel.unary_unary(
                '/squareup.riskarbiter.api.RiskAssessmentService/ScanSecondaryIndex',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.ScanSecondaryIndexRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.ScanSecondaryIndexResponse.FromString,
                )


class RiskAssessmentServiceServicer(object):
    """*
    This service drives riskarbiter-ui and supports oncall interventions.
    """

    def GetRiskAssessment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDbRiskAssessment(self, request, context):
        """* variant of GetRiskAssessment that *only* queries the database, instead of trying bigtable 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateRiskAssessment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateModelSuspicion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPreviouslyFlaggedRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TailRiskAssessments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryRiskAssessments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishToBigtable(self, request, context):
        """These are temporary endpoints for testing bigtable functionality. Want to avoid conflating
        this functionality into the existing endpoints first.
        TODO(traviscj) remove/consolidate into existing Get/Create endpoints.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFromBigtable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScanSecondaryIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RiskAssessmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRiskAssessment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRiskAssessment,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.SerializeToString,
            ),
            'GetDbRiskAssessment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDbRiskAssessment,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.SerializeToString,
            ),
            'CreateRiskAssessment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRiskAssessment,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateRiskAssessmentRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateRiskAssessmentResponse.SerializeToString,
            ),
            'CreateModelSuspicion': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateModelSuspicion,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateModelSuspicionRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateModelSuspicionResponse.SerializeToString,
            ),
            'GetPreviouslyFlaggedRule': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPreviouslyFlaggedRule,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetPreviouslyFlaggedRuleRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetPreviouslyFlaggedRuleResponse.SerializeToString,
            ),
            'TailRiskAssessments': grpc.unary_unary_rpc_method_handler(
                    servicer.TailRiskAssessments,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.TailRiskAssessmentsRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.TailRiskAssessmentsResponse.SerializeToString,
            ),
            'QueryRiskAssessments': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryRiskAssessments,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.QueryRiskAssessmentsRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.QueryRiskAssessmentsResponse.SerializeToString,
            ),
            'PublishToBigtable': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishToBigtable,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.SerializeToString,
            ),
            'GetFromBigtable': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFromBigtable,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.SerializeToString,
            ),
            'ScanSecondaryIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ScanSecondaryIndex,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.ScanSecondaryIndexRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.ScanSecondaryIndexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.riskarbiter.api.RiskAssessmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RiskAssessmentService(object):
    """*
    This service drives riskarbiter-ui and supports oncall interventions.
    """

    @staticmethod
    def GetRiskAssessment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/GetRiskAssessment',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDbRiskAssessment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/GetDbRiskAssessment',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateRiskAssessment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/CreateRiskAssessment',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateRiskAssessmentRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateRiskAssessmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateModelSuspicion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/CreateModelSuspicion',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateModelSuspicionRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.CreateModelSuspicionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPreviouslyFlaggedRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/GetPreviouslyFlaggedRule',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetPreviouslyFlaggedRuleRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetPreviouslyFlaggedRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TailRiskAssessments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/TailRiskAssessments',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.TailRiskAssessmentsRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.TailRiskAssessmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryRiskAssessments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/QueryRiskAssessments',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.QueryRiskAssessmentsRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.QueryRiskAssessmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishToBigtable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/PublishToBigtable',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFromBigtable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/GetFromBigtable',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.GetRiskAssessmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScanSecondaryIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.RiskAssessmentService/ScanSecondaryIndex',
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.ScanSecondaryIndexRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_risk__assessments__pb2.ScanSecondaryIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
