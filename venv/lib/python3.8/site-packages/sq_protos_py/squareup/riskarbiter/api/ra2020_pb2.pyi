# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.kp_common.common_pb2 import (
    PartitionDef as squareup___kp_common___common_pb2___PartitionDef,
    RuleSelectionFilter as squareup___kp_common___common_pb2___RuleSelectionFilter,
    SignalDef as squareup___kp_common___common_pb2___SignalDef,
)

from sq_protos_py.squareup.riskarbiter.api.common_pb2 import (
    Flow as squareup___riskarbiter___api___common_pb2___Flow,
    RuleInfo as squareup___riskarbiter___api___common_pb2___RuleInfo,
    TriggerDef as squareup___riskarbiter___api___common_pb2___TriggerDef,
)

from sq_protos_py.squareup.signal_lib.data_pb2 import (
    EntityValue as squareup___signal_lib___data_pb2___EntityValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

RulesetTypeValue = typing___NewType('RulesetTypeValue', builtin___int)
type___RulesetTypeValue = RulesetTypeValue
RulesetType: _RulesetType
class _RulesetType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RulesetTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    RT_UNKNOWN = typing___cast(RulesetTypeValue, 0)
    PARTITION_BASED = typing___cast(RulesetTypeValue, 1)
    RULE_CHAIN_EXPERIMENTS = typing___cast(RulesetTypeValue, 2)
    IDENTIFIER_MAPPING = typing___cast(RulesetTypeValue, 3)
RT_UNKNOWN = typing___cast(RulesetTypeValue, 0)
PARTITION_BASED = typing___cast(RulesetTypeValue, 1)
RULE_CHAIN_EXPERIMENTS = typing___cast(RulesetTypeValue, 2)
IDENTIFIER_MAPPING = typing___cast(RulesetTypeValue, 3)
type___RulesetType = RulesetType

class ListRulesetsReq(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    include_rule_counts: builtin___bool = ...

    @property
    def filter(self) -> squareup___kp_common___common_pb2___RuleSelectionFilter: ...

    def __init__(self,
        *,
        filter : typing___Optional[squareup___kp_common___common_pb2___RuleSelectionFilter] = None,
        include_rule_counts : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"filter",b"filter",u"include_rule_counts",b"include_rule_counts"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter",b"filter",u"include_rule_counts",b"include_rule_counts"]) -> None: ...
type___ListRulesetsReq = ListRulesetsReq

class ListRulesetsResp(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    num_rulesets: builtin___int = ...
    num_rule_names_in_rulesets: builtin___int = ...
    ruleset_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        num_rulesets : typing___Optional[builtin___int] = None,
        num_rule_names_in_rulesets : typing___Optional[builtin___int] = None,
        ruleset_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"num_rule_names_in_rulesets",b"num_rule_names_in_rulesets",u"num_rulesets",b"num_rulesets"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"num_rule_names_in_rulesets",b"num_rule_names_in_rulesets",u"num_rulesets",b"num_rulesets",u"ruleset_tokens",b"ruleset_tokens"]) -> None: ...
type___ListRulesetsResp = ListRulesetsResp

class ListTriggerDefsReq(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        trigger_def_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"trigger_def_tokens",b"trigger_def_tokens"]) -> None: ...
type___ListTriggerDefsReq = ListTriggerDefsReq

class ListTriggerDefsResp(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def triggers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___riskarbiter___api___common_pb2___TriggerDef]: ...

    def __init__(self,
        *,
        triggers : typing___Optional[typing___Iterable[squareup___riskarbiter___api___common_pb2___TriggerDef]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"triggers",b"triggers"]) -> None: ...
type___ListTriggerDefsResp = ListTriggerDefsResp

class ListPartitionDefsReq(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_token: typing___Text = ...

    def __init__(self,
        *,
        trigger_def_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"trigger_def_token",b"trigger_def_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"trigger_def_token",b"trigger_def_token"]) -> None: ...
type___ListPartitionDefsReq = ListPartitionDefsReq

class ListPartitionDefsResp(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def partition_defs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___kp_common___common_pb2___PartitionDef]: ...

    def __init__(self,
        *,
        partition_defs : typing___Optional[typing___Iterable[squareup___kp_common___common_pb2___PartitionDef]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"partition_defs",b"partition_defs"]) -> None: ...
type___ListPartitionDefsResp = ListPartitionDefsResp

class InitializePartitionDefsRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___InitializePartitionDefsRequest = InitializePartitionDefsRequest

class InitializePartitionDefsResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___InitializePartitionDefsResponse = InitializePartitionDefsResponse

class ReplaceFlowRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_token: typing___Text = ...

    @property
    def replacement_flow(self) -> squareup___riskarbiter___api___common_pb2___Flow: ...

    def __init__(self,
        *,
        trigger_def_token : typing___Optional[typing___Text] = None,
        replacement_flow : typing___Optional[squareup___riskarbiter___api___common_pb2___Flow] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"replacement_flow",b"replacement_flow",u"trigger_def_token",b"trigger_def_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"replacement_flow",b"replacement_flow",u"trigger_def_token",b"trigger_def_token"]) -> None: ...
type___ReplaceFlowRequest = ReplaceFlowRequest

class CreateDisqualifierRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_token: typing___Text = ...
    disqualifier_name: typing___Text = ...
    rule_expression: typing___Text = ...

    def __init__(self,
        *,
        trigger_token : typing___Optional[typing___Text] = None,
        disqualifier_name : typing___Optional[typing___Text] = None,
        rule_expression : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"disqualifier_name",b"disqualifier_name",u"rule_expression",b"rule_expression",u"trigger_token",b"trigger_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"disqualifier_name",b"disqualifier_name",u"rule_expression",b"rule_expression",u"trigger_token",b"trigger_token"]) -> None: ...
type___CreateDisqualifierRequest = CreateDisqualifierRequest

class CreateDisqualifierResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    msg: typing___Text = ...

    def __init__(self,
        *,
        msg : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"msg",b"msg"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"msg",b"msg"]) -> None: ...
type___CreateDisqualifierResponse = CreateDisqualifierResponse

class ApplicableTriggerIdentifier(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    rule_name: typing___Text = ...

    def __init__(self,
        *,
        rule_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"identifier",b"identifier",u"rule_name",b"rule_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"identifier",b"identifier",u"rule_name",b"rule_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"identifier",b"identifier"]) -> typing_extensions___Literal["rule_name"]: ...
type___ApplicableTriggerIdentifier = ApplicableTriggerIdentifier

class GetApplicableTriggersRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def applicable_trigger_identifier(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ApplicableTriggerIdentifier]: ...

    def __init__(self,
        *,
        applicable_trigger_identifier : typing___Optional[typing___Iterable[type___ApplicableTriggerIdentifier]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"applicable_trigger_identifier",b"applicable_trigger_identifier"]) -> None: ...
type___GetApplicableTriggersRequest = GetApplicableTriggersRequest

class IdentifierToTrigger(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    @property
    def identifier(self) -> type___ApplicableTriggerIdentifier: ...

    def __init__(self,
        *,
        identifier : typing___Optional[type___ApplicableTriggerIdentifier] = None,
        trigger_def_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"identifier",b"identifier"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"identifier",b"identifier",u"trigger_def_tokens",b"trigger_def_tokens"]) -> None: ...
type___IdentifierToTrigger = IdentifierToTrigger

class GetApplicableTriggersResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def identifier_to_trigger_def_tokens(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___IdentifierToTrigger]: ...

    def __init__(self,
        *,
        identifier_to_trigger_def_tokens : typing___Optional[typing___Iterable[type___IdentifierToTrigger]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"identifier_to_trigger_def_tokens",b"identifier_to_trigger_def_tokens"]) -> None: ...
type___GetApplicableTriggersResponse = GetApplicableTriggersResponse

class UpdateTriggerActionRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_token: typing___Text = ...
    new_enabled: builtin___bool = ...
    expected_partition_def_count: builtin___int = ...

    def __init__(self,
        *,
        trigger_def_token : typing___Optional[typing___Text] = None,
        new_enabled : typing___Optional[builtin___bool] = None,
        expected_partition_def_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"expected_partition_def_count",b"expected_partition_def_count",u"new_enabled",b"new_enabled",u"trigger_def_token",b"trigger_def_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"expected_partition_def_count",b"expected_partition_def_count",u"new_enabled",b"new_enabled",u"trigger_def_token",b"trigger_def_token"]) -> None: ...
type___UpdateTriggerActionRequest = UpdateTriggerActionRequest

class UpdateTriggerActionResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_token: typing___Text = ...
    new_enabled: builtin___bool = ...

    def __init__(self,
        *,
        trigger_def_token : typing___Optional[typing___Text] = None,
        new_enabled : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"new_enabled",b"new_enabled",u"trigger_def_token",b"trigger_def_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"new_enabled",b"new_enabled",u"trigger_def_token",b"trigger_def_token"]) -> None: ...
type___UpdateTriggerActionResponse = UpdateTriggerActionResponse

class BeaconSignalInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entity: squareup___signal_lib___data_pb2___EntityValue = ...

    def __init__(self,
        *,
        entity : typing___Optional[squareup___signal_lib___data_pb2___EntityValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"entity",b"entity"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"entity",b"entity"]) -> None: ...
type___BeaconSignalInfo = BeaconSignalInfo

class ModelarbiterSignalInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___ModelarbiterSignalInfo = ModelarbiterSignalInfo

class SignalGeneratorSignalInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    signal_generator_impl: typing___Text = ...
    generator_type: typing___Text = ...

    def __init__(self,
        *,
        signal_generator_impl : typing___Optional[typing___Text] = None,
        generator_type : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"generator_type",b"generator_type",u"signal_generator_impl",b"signal_generator_impl"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"generator_type",b"generator_type",u"signal_generator_impl",b"signal_generator_impl"]) -> None: ...
type___SignalGeneratorSignalInfo = SignalGeneratorSignalInfo

class RiskarbiterSignalGroup(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def beacon(self) -> type___BeaconSignalInfo: ...

    @property
    def generated(self) -> type___SignalGeneratorSignalInfo: ...

    @property
    def modelarbiter(self) -> type___ModelarbiterSignalInfo: ...

    @property
    def signal_defs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___kp_common___common_pb2___SignalDef]: ...

    def __init__(self,
        *,
        beacon : typing___Optional[type___BeaconSignalInfo] = None,
        generated : typing___Optional[type___SignalGeneratorSignalInfo] = None,
        modelarbiter : typing___Optional[type___ModelarbiterSignalInfo] = None,
        signal_defs : typing___Optional[typing___Iterable[squareup___kp_common___common_pb2___SignalDef]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"beacon",b"beacon",u"generated",b"generated",u"modelarbiter",b"modelarbiter",u"source_info",b"source_info"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"beacon",b"beacon",u"generated",b"generated",u"modelarbiter",b"modelarbiter",u"signal_defs",b"signal_defs",u"source_info",b"source_info"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"source_info",b"source_info"]) -> typing_extensions___Literal["beacon","generated","modelarbiter"]: ...
type___RiskarbiterSignalGroup = RiskarbiterSignalGroup

class RulesetDependencies(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ruleset_type: type___RulesetTypeValue = ...
    trigger_def_token: typing___Text = ...

    @property
    def rules(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___riskarbiter___api___common_pb2___RuleInfo]: ...

    @property
    def signal_infos(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___RiskarbiterSignalGroup]: ...

    def __init__(self,
        *,
        ruleset_type : typing___Optional[type___RulesetTypeValue] = None,
        rules : typing___Optional[typing___Iterable[squareup___riskarbiter___api___common_pb2___RuleInfo]] = None,
        signal_infos : typing___Optional[typing___Iterable[type___RiskarbiterSignalGroup]] = None,
        trigger_def_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ruleset_type",b"ruleset_type",u"trigger_def_token",b"trigger_def_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"rules",b"rules",u"ruleset_type",b"ruleset_type",u"signal_infos",b"signal_infos",u"trigger_def_token",b"trigger_def_token"]) -> None: ...
type___RulesetDependencies = RulesetDependencies

class GetRulesetInfoRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ruleset_token: typing___Text = ...

    def __init__(self,
        *,
        ruleset_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ruleset_token",b"ruleset_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ruleset_token",b"ruleset_token"]) -> None: ...
type___GetRulesetInfoRequest = GetRulesetInfoRequest

class GetRulesetInfoResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def ruleset_dependencies(self) -> type___RulesetDependencies: ...

    def __init__(self,
        *,
        ruleset_dependencies : typing___Optional[type___RulesetDependencies] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"ruleset_dependencies",b"ruleset_dependencies"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"ruleset_dependencies",b"ruleset_dependencies"]) -> None: ...
type___GetRulesetInfoResponse = GetRulesetInfoResponse

class ListSignalGeneratorsInfoReq(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    trigger_def_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    def __init__(self,
        *,
        trigger_def_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"trigger_def_tokens",b"trigger_def_tokens"]) -> None: ...
type___ListSignalGeneratorsInfoReq = ListSignalGeneratorsInfoReq

class ListSignalGeneratorsInfoResp(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def signal_generator_info(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SignalGeneratorInfo]: ...

    def __init__(self,
        *,
        signal_generator_info : typing___Optional[typing___Iterable[type___SignalGeneratorInfo]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"signal_generator_info",b"signal_generator_info"]) -> None: ...
type___ListSignalGeneratorsInfoResp = ListSignalGeneratorsInfoResp

class SignalGeneratorInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    class_name: typing___Text = ...
    trigger_def_tokens: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    scoreable_class: typing___Text = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        class_name : typing___Optional[typing___Text] = None,
        trigger_def_tokens : typing___Optional[typing___Iterable[typing___Text]] = None,
        scoreable_class : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"class_name",b"class_name",u"name",b"name",u"scoreable_class",b"scoreable_class"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"class_name",b"class_name",u"name",b"name",u"scoreable_class",b"scoreable_class",u"trigger_def_tokens",b"trigger_def_tokens"]) -> None: ...
type___SignalGeneratorInfo = SignalGeneratorInfo
