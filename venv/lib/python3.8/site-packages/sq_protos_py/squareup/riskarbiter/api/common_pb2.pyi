# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.entry_method_pb2 import (
    PayWithSquareEntryMethodValue as squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue,
)

from sq_protos_py.squareup.kp_common.common_pb2 import (
    SignalDef as squareup___kp_common___common_pb2___SignalDef,
)

from sq_protos_py.squareup.kp_common.rule_evaluation_pb2 import (
    PartitionSelection as squareup___kp_common___rule_evaluation_pb2___PartitionSelection,
    QueryKey as squareup___kp_common___rule_evaluation_pb2___QueryKey,
)

from sq_protos_py.squareup.modelpredictions.modelformat_pb2 import (
    ProbabilityDistribution as squareup___modelpredictions___modelformat_pb2___ProbabilityDistribution,
)

from sq_protos_py.squareup.skeptic.service_pb2 import (
    ConcernValue as squareup___skeptic___service_pb2___ConcernValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
type___EventTypeValue = EventTypeValue
EventType: _EventType
class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EventTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ET_UNKNOWN = typing___cast(EventTypeValue, 0)
    ASYNCHRONOUS_PAYMENT = typing___cast(EventTypeValue, 1)
    SYNCHRONOUS_PAYMENT = typing___cast(EventTypeValue, 2)
    ASYNCHRONOUS_PAYMENT_AUTHORIZATION = typing___cast(EventTypeValue, 3)
    DISPUTE_EVENT = typing___cast(EventTypeValue, 4)
    MERCHANT_ACTIVATION = typing___cast(EventTypeValue, 5)
    CREDIT_RISK_EVENT = typing___cast(EventTypeValue, 6)
    INSTRUMENT_BANK_LINK = typing___cast(EventTypeValue, 7)
    INSTANT_DEPOSIT_CARD_LINK = typing___cast(EventTypeValue, 8)
    LOGIN = typing___cast(EventTypeValue, 9)
    SYNCHRONOUS_MERCHANT_ACTIVATION = typing___cast(EventTypeValue, 10)
    PAYROLL_RUN_UPDATE = typing___cast(EventTypeValue, 11)
    BEEMO_TRANSACTION = typing___cast(EventTypeValue, 12)
    MERCHANT_SETTLEMENT_STATE = typing___cast(EventTypeValue, 13)
    MERCHANT_DAILY_EVALUATION = typing___cast(EventTypeValue, 14)
    CAPITAL_INSTORE_APPLICATION = typing___cast(EventTypeValue, 15)
    SOLIDSHOP_ORDER = typing___cast(EventTypeValue, 16)
    CAPITAL_INVOICE_APPLICATION = typing___cast(EventTypeValue, 17)
    SYNCHRONOUS_LOGIN = typing___cast(EventTypeValue, 18)
    CAPITAL_INSTORE_PREQUALIFICATION = typing___cast(EventTypeValue, 19)
    CAPITAL_INVOICE_PREQUALIFICATION = typing___cast(EventTypeValue, 20)
    CASH_PAYMENT = typing___cast(EventTypeValue, 21)
    POSTOFFICE_PROMOTION = typing___cast(EventTypeValue, 22)
    CASH_LOGIN = typing___cast(EventTypeValue, 23)
    CAPITAL_ECOMMERCE_PREQUALIFICATION = typing___cast(EventTypeValue, 24)
    CAPITAL_ECOMMERCE_APPLICATION = typing___cast(EventTypeValue, 25)
    CASH_ENHANCED_VERIFICATION = typing___cast(EventTypeValue, 26)
    BANK_LINK = typing___cast(EventTypeValue, 27)
    INSTANT_DEPOSIT_LINK = typing___cast(EventTypeValue, 28)
    SANDBOX_EVENT = typing___cast(EventTypeValue, 29)
    CAPITAL_MERCHANT_MONITORING = typing___cast(EventTypeValue, 30)
    CASH_PAYMENT_TRANSITION_WAITING_ON_RISK = typing___cast(EventTypeValue, 31)
    CAPITAL_ELIGIBILITY = typing___cast(EventTypeValue, 32)
    CASH_TRANSFER_CASH_OUT = typing___cast(EventTypeValue, 33)
    CAPITAL_FLEX_ELIGIBILITY = typing___cast(EventTypeValue, 34)
    REGULATOR_CASE_UPDATE = typing___cast(EventTypeValue, 35)
    SYNCHRONOUS_BIZBANK_TRANSACTION_EVENT = typing___cast(EventTypeValue, 36)
    OFFSET_REQUEST = typing___cast(EventTypeValue, 37)
    CASH_DEBIT_LINK = typing___cast(EventTypeValue, 38)
    CASH_TRANSFER_TRANSITION_CASH_IN = typing___cast(EventTypeValue, 39)
    CASH_TRANSFER_TRANSITION_CASH_OUT = typing___cast(EventTypeValue, 40)
    CASH_CREDIT_LINK = typing___cast(EventTypeValue, 41)
    CASH_TRANSFER_IN = typing___cast(EventTypeValue, 42)
    CASH_TRANSFER_OUT = typing___cast(EventTypeValue, 43)
    CAPITAL_DECISION_INSTALLMENTS = typing___cast(EventTypeValue, 44)
    CAPITAL_DECISION_BUSINESS_FLEX = typing___cast(EventTypeValue, 45)
    BALANCE_ACTIVITY = typing___cast(EventTypeValue, 46)
    CAPITAL_DECISION_EMAIL_PERSONALIZATION = typing___cast(EventTypeValue, 47)
    BIZBANK_ADDRESS_UPDATE = typing___cast(EventTypeValue, 48)
    CASH_PAYMENT_TRANSITION_SCHEDULED = typing___cast(EventTypeValue, 49)
    BIZBANK_TRANSACTION_EVENT = typing___cast(EventTypeValue, 50)
    CASH_VERIFIED_LOGIN_ATTEMPT = typing___cast(EventTypeValue, 51)
    CASH_CUSTOMER_SUPPORT_CASE_CREATION = typing___cast(EventTypeValue, 52)
    CASH_PAYMENT_TRANSITION_REFUNDING = typing___cast(EventTypeValue, 53)
    CASH_RECEIVED_ACH_TRANSACTION_PENDING = typing___cast(EventTypeValue, 54)
    CASH_INSTRUMENT_LINK_ATTEMPT = typing___cast(EventTypeValue, 55)
    CASH_BORROW_ELIGIBILITY = typing___cast(EventTypeValue, 56)
    BANK_SETTLEMENT_RETURN = typing___cast(EventTypeValue, 57)
    REFUND_REQUEST = typing___cast(EventTypeValue, 58)
    SYNCHRONOUS_BALANCE_ACTIVITY = typing___cast(EventTypeValue, 59)
    CASH_SUPPORT_CASE_CREATION = typing___cast(EventTypeValue, 60)
    CASH_TRANSFER_IN_SYNC = typing___cast(EventTypeValue, 61)
    CASH_TRANSFER_OUT_SYNC = typing___cast(EventTypeValue, 62)
    RESERVE_REFUND_RELEASE = typing___cast(EventTypeValue, 63)
    CASH_ENHANCED_VERIFICATION_V2 = typing___cast(EventTypeValue, 64)
    CAPITAL_PLAN_HEALTH_CHECK = typing___cast(EventTypeValue, 65)
    CASH_TRANSFER_CHARGEBACK = typing___cast(EventTypeValue, 66)
    CASH_PAYMENT_CHARGEBACK = typing___cast(EventTypeValue, 67)
    CASH_SUPPORT_CHAT = typing___cast(EventTypeValue, 68)
    CASH_EVALUATE_ENHANCED_VERIFICATION = typing___cast(EventTypeValue, 69)
ET_UNKNOWN = typing___cast(EventTypeValue, 0)
ASYNCHRONOUS_PAYMENT = typing___cast(EventTypeValue, 1)
SYNCHRONOUS_PAYMENT = typing___cast(EventTypeValue, 2)
ASYNCHRONOUS_PAYMENT_AUTHORIZATION = typing___cast(EventTypeValue, 3)
DISPUTE_EVENT = typing___cast(EventTypeValue, 4)
MERCHANT_ACTIVATION = typing___cast(EventTypeValue, 5)
CREDIT_RISK_EVENT = typing___cast(EventTypeValue, 6)
INSTRUMENT_BANK_LINK = typing___cast(EventTypeValue, 7)
INSTANT_DEPOSIT_CARD_LINK = typing___cast(EventTypeValue, 8)
LOGIN = typing___cast(EventTypeValue, 9)
SYNCHRONOUS_MERCHANT_ACTIVATION = typing___cast(EventTypeValue, 10)
PAYROLL_RUN_UPDATE = typing___cast(EventTypeValue, 11)
BEEMO_TRANSACTION = typing___cast(EventTypeValue, 12)
MERCHANT_SETTLEMENT_STATE = typing___cast(EventTypeValue, 13)
MERCHANT_DAILY_EVALUATION = typing___cast(EventTypeValue, 14)
CAPITAL_INSTORE_APPLICATION = typing___cast(EventTypeValue, 15)
SOLIDSHOP_ORDER = typing___cast(EventTypeValue, 16)
CAPITAL_INVOICE_APPLICATION = typing___cast(EventTypeValue, 17)
SYNCHRONOUS_LOGIN = typing___cast(EventTypeValue, 18)
CAPITAL_INSTORE_PREQUALIFICATION = typing___cast(EventTypeValue, 19)
CAPITAL_INVOICE_PREQUALIFICATION = typing___cast(EventTypeValue, 20)
CASH_PAYMENT = typing___cast(EventTypeValue, 21)
POSTOFFICE_PROMOTION = typing___cast(EventTypeValue, 22)
CASH_LOGIN = typing___cast(EventTypeValue, 23)
CAPITAL_ECOMMERCE_PREQUALIFICATION = typing___cast(EventTypeValue, 24)
CAPITAL_ECOMMERCE_APPLICATION = typing___cast(EventTypeValue, 25)
CASH_ENHANCED_VERIFICATION = typing___cast(EventTypeValue, 26)
BANK_LINK = typing___cast(EventTypeValue, 27)
INSTANT_DEPOSIT_LINK = typing___cast(EventTypeValue, 28)
SANDBOX_EVENT = typing___cast(EventTypeValue, 29)
CAPITAL_MERCHANT_MONITORING = typing___cast(EventTypeValue, 30)
CASH_PAYMENT_TRANSITION_WAITING_ON_RISK = typing___cast(EventTypeValue, 31)
CAPITAL_ELIGIBILITY = typing___cast(EventTypeValue, 32)
CASH_TRANSFER_CASH_OUT = typing___cast(EventTypeValue, 33)
CAPITAL_FLEX_ELIGIBILITY = typing___cast(EventTypeValue, 34)
REGULATOR_CASE_UPDATE = typing___cast(EventTypeValue, 35)
SYNCHRONOUS_BIZBANK_TRANSACTION_EVENT = typing___cast(EventTypeValue, 36)
OFFSET_REQUEST = typing___cast(EventTypeValue, 37)
CASH_DEBIT_LINK = typing___cast(EventTypeValue, 38)
CASH_TRANSFER_TRANSITION_CASH_IN = typing___cast(EventTypeValue, 39)
CASH_TRANSFER_TRANSITION_CASH_OUT = typing___cast(EventTypeValue, 40)
CASH_CREDIT_LINK = typing___cast(EventTypeValue, 41)
CASH_TRANSFER_IN = typing___cast(EventTypeValue, 42)
CASH_TRANSFER_OUT = typing___cast(EventTypeValue, 43)
CAPITAL_DECISION_INSTALLMENTS = typing___cast(EventTypeValue, 44)
CAPITAL_DECISION_BUSINESS_FLEX = typing___cast(EventTypeValue, 45)
BALANCE_ACTIVITY = typing___cast(EventTypeValue, 46)
CAPITAL_DECISION_EMAIL_PERSONALIZATION = typing___cast(EventTypeValue, 47)
BIZBANK_ADDRESS_UPDATE = typing___cast(EventTypeValue, 48)
CASH_PAYMENT_TRANSITION_SCHEDULED = typing___cast(EventTypeValue, 49)
BIZBANK_TRANSACTION_EVENT = typing___cast(EventTypeValue, 50)
CASH_VERIFIED_LOGIN_ATTEMPT = typing___cast(EventTypeValue, 51)
CASH_CUSTOMER_SUPPORT_CASE_CREATION = typing___cast(EventTypeValue, 52)
CASH_PAYMENT_TRANSITION_REFUNDING = typing___cast(EventTypeValue, 53)
CASH_RECEIVED_ACH_TRANSACTION_PENDING = typing___cast(EventTypeValue, 54)
CASH_INSTRUMENT_LINK_ATTEMPT = typing___cast(EventTypeValue, 55)
CASH_BORROW_ELIGIBILITY = typing___cast(EventTypeValue, 56)
BANK_SETTLEMENT_RETURN = typing___cast(EventTypeValue, 57)
REFUND_REQUEST = typing___cast(EventTypeValue, 58)
SYNCHRONOUS_BALANCE_ACTIVITY = typing___cast(EventTypeValue, 59)
CASH_SUPPORT_CASE_CREATION = typing___cast(EventTypeValue, 60)
CASH_TRANSFER_IN_SYNC = typing___cast(EventTypeValue, 61)
CASH_TRANSFER_OUT_SYNC = typing___cast(EventTypeValue, 62)
RESERVE_REFUND_RELEASE = typing___cast(EventTypeValue, 63)
CASH_ENHANCED_VERIFICATION_V2 = typing___cast(EventTypeValue, 64)
CAPITAL_PLAN_HEALTH_CHECK = typing___cast(EventTypeValue, 65)
CASH_TRANSFER_CHARGEBACK = typing___cast(EventTypeValue, 66)
CASH_PAYMENT_CHARGEBACK = typing___cast(EventTypeValue, 67)
CASH_SUPPORT_CHAT = typing___cast(EventTypeValue, 68)
CASH_EVALUATE_ENHANCED_VERIFICATION = typing___cast(EventTypeValue, 69)
type___EventType = EventType

EventSubTypeValue = typing___NewType('EventSubTypeValue', builtin___int)
type___EventSubTypeValue = EventSubTypeValue
EventSubType: _EventSubType
class _EventSubType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EventSubTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    EST_UNKNOWN = typing___cast(EventSubTypeValue, 0)
    NOT_RELEVANT = typing___cast(EventSubTypeValue, 1)
    SCANNED = typing___cast(EventSubTypeValue, 1001)
    KEYED = typing___cast(EventSubTypeValue, 1002)
    NAME = typing___cast(EventSubTypeValue, 1003)
    FRANKLIN = typing___cast(EventSubTypeValue, 1004)
    WEB_STORE_WEB_FORM = typing___cast(EventSubTypeValue, 1005)
    INVOICE_WEB_FORM = typing___cast(EventSubTypeValue, 1006)
    REGISTER_SWIPED = typing___cast(EventSubTypeValue, 1007)
    REGISTER_MANUALLY_KEYED = typing___cast(EventSubTypeValue, 1008)
    WALLET_PICKUP = typing___cast(EventSubTypeValue, 1009)
    SUBSCRIPTION_DASHBOARD = typing___cast(EventSubTypeValue, 1010)
    WEB_PICKUP = typing___cast(EventSubTypeValue, 1011)
    EXTERNAL_API = typing___cast(EventSubTypeValue, 1012)
    EXTERNAL_API_ON_FILE = typing___cast(EventSubTypeValue, 1022)
    STARBUCKS_SWIPED = typing___cast(EventSubTypeValue, 1013)
    STARBUCKS_MANUALLY_KEYED = typing___cast(EventSubTypeValue, 1014)
    APPOINTMENTS = typing___cast(EventSubTypeValue, 1015)
    REGISTER_EMV_CONTACT = typing___cast(EventSubTypeValue, 1016)
    REGISTER_CONTACTLESS = typing___cast(EventSubTypeValue, 1017)
    INVOICE_ON_FILE = typing___cast(EventSubTypeValue, 1018)
    ONLINE_STORE = typing___cast(EventSubTypeValue, 1019)
    REGISTER_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1020)
    TERMINAL_KEYED = typing___cast(EventSubTypeValue, 1023)
    CAPITAL_ON_FILE = typing___cast(EventSubTypeValue, 1024)
    EGIFT_PURCHASE_KEYED = typing___cast(EventSubTypeValue, 1025)
    TERMINAL_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1026)
    WEB_STORE_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1027)
    TERMINAL_SWIPED = typing___cast(EventSubTypeValue, 1028)
    REGISTER_HARDWARE_SWIPED = typing___cast(EventSubTypeValue, 1029)
    REGISTER_HARDWARE_EMV_CONTACT = typing___cast(EventSubTypeValue, 1030)
    REGISTER_HARDWARE_CONTACTLESS = typing___cast(EventSubTypeValue, 1031)
    REGISTER_HARDWARE_MANUALLY_KEYED = typing___cast(EventSubTypeValue, 1032)
    REGISTER_HARDWARE_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1033)
    APPOINTMENTS_KEYED = typing___cast(EventSubTypeValue, 1034)
    EXTERNAL_API_QR_CODE = typing___cast(EventSubTypeValue, 1038)
    EXTERNAL_API_SMS = typing___cast(EventSubTypeValue, 1039)
    EXTERNAL_API_REDIRECT = typing___cast(EventSubTypeValue, 1040)
    REGISTER_QR_CODE = typing___cast(EventSubTypeValue, 1041)
    REGISTER_SMS = typing___cast(EventSubTypeValue, 1042)
    REGISTER_HARDWARE_QR_CODE = typing___cast(EventSubTypeValue, 1043)
    REGISTER_HARDWARE_SMS = typing___cast(EventSubTypeValue, 1044)
    CAPITAL_INSTALLMENTS_INVOICE_PREQUALIFICATION = typing___cast(EventSubTypeValue, 2001)
    CAPITAL_INSTALLMENTS_INVOICE_QUALIFICATION = typing___cast(EventSubTypeValue, 2002)
    CAPITAL_INSTALLMENTS_INSTORE_PREQUALIFICATION = typing___cast(EventSubTypeValue, 2003)
    CAPITAL_INSTALLMENTS_INSTORE_QUALIFICATION = typing___cast(EventSubTypeValue, 2004)
    CAPITAL_BUSINESS_FLEX_ELIGIBILITY = typing___cast(EventSubTypeValue, 2101)
    CAPITAL_EMAIL_PERSONALIZATION_FLEX = typing___cast(EventSubTypeValue, 2201)
    DEBIT_CARD_PAY_IN = typing___cast(EventSubTypeValue, 3001)
    SAME_DAY_PAYOUT = typing___cast(EventSubTypeValue, 3002)
    STANDARD_SPEED_PAYOUT = typing___cast(EventSubTypeValue, 3003)
    INSTANT_PAYOUT = typing___cast(EventSubTypeValue, 3004)
    CASH_P2P = typing___cast(EventSubTypeValue, 4001)
    CASH_REFERRAL_REWARD = typing___cast(EventSubTypeValue, 4002)
    CASH_REFERRAL_BOUNTY = typing___cast(EventSubTypeValue, 4003)
EST_UNKNOWN = typing___cast(EventSubTypeValue, 0)
NOT_RELEVANT = typing___cast(EventSubTypeValue, 1)
SCANNED = typing___cast(EventSubTypeValue, 1001)
KEYED = typing___cast(EventSubTypeValue, 1002)
NAME = typing___cast(EventSubTypeValue, 1003)
FRANKLIN = typing___cast(EventSubTypeValue, 1004)
WEB_STORE_WEB_FORM = typing___cast(EventSubTypeValue, 1005)
INVOICE_WEB_FORM = typing___cast(EventSubTypeValue, 1006)
REGISTER_SWIPED = typing___cast(EventSubTypeValue, 1007)
REGISTER_MANUALLY_KEYED = typing___cast(EventSubTypeValue, 1008)
WALLET_PICKUP = typing___cast(EventSubTypeValue, 1009)
SUBSCRIPTION_DASHBOARD = typing___cast(EventSubTypeValue, 1010)
WEB_PICKUP = typing___cast(EventSubTypeValue, 1011)
EXTERNAL_API = typing___cast(EventSubTypeValue, 1012)
EXTERNAL_API_ON_FILE = typing___cast(EventSubTypeValue, 1022)
STARBUCKS_SWIPED = typing___cast(EventSubTypeValue, 1013)
STARBUCKS_MANUALLY_KEYED = typing___cast(EventSubTypeValue, 1014)
APPOINTMENTS = typing___cast(EventSubTypeValue, 1015)
REGISTER_EMV_CONTACT = typing___cast(EventSubTypeValue, 1016)
REGISTER_CONTACTLESS = typing___cast(EventSubTypeValue, 1017)
INVOICE_ON_FILE = typing___cast(EventSubTypeValue, 1018)
ONLINE_STORE = typing___cast(EventSubTypeValue, 1019)
REGISTER_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1020)
TERMINAL_KEYED = typing___cast(EventSubTypeValue, 1023)
CAPITAL_ON_FILE = typing___cast(EventSubTypeValue, 1024)
EGIFT_PURCHASE_KEYED = typing___cast(EventSubTypeValue, 1025)
TERMINAL_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1026)
WEB_STORE_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1027)
TERMINAL_SWIPED = typing___cast(EventSubTypeValue, 1028)
REGISTER_HARDWARE_SWIPED = typing___cast(EventSubTypeValue, 1029)
REGISTER_HARDWARE_EMV_CONTACT = typing___cast(EventSubTypeValue, 1030)
REGISTER_HARDWARE_CONTACTLESS = typing___cast(EventSubTypeValue, 1031)
REGISTER_HARDWARE_MANUALLY_KEYED = typing___cast(EventSubTypeValue, 1032)
REGISTER_HARDWARE_CARD_ON_FILE = typing___cast(EventSubTypeValue, 1033)
APPOINTMENTS_KEYED = typing___cast(EventSubTypeValue, 1034)
EXTERNAL_API_QR_CODE = typing___cast(EventSubTypeValue, 1038)
EXTERNAL_API_SMS = typing___cast(EventSubTypeValue, 1039)
EXTERNAL_API_REDIRECT = typing___cast(EventSubTypeValue, 1040)
REGISTER_QR_CODE = typing___cast(EventSubTypeValue, 1041)
REGISTER_SMS = typing___cast(EventSubTypeValue, 1042)
REGISTER_HARDWARE_QR_CODE = typing___cast(EventSubTypeValue, 1043)
REGISTER_HARDWARE_SMS = typing___cast(EventSubTypeValue, 1044)
CAPITAL_INSTALLMENTS_INVOICE_PREQUALIFICATION = typing___cast(EventSubTypeValue, 2001)
CAPITAL_INSTALLMENTS_INVOICE_QUALIFICATION = typing___cast(EventSubTypeValue, 2002)
CAPITAL_INSTALLMENTS_INSTORE_PREQUALIFICATION = typing___cast(EventSubTypeValue, 2003)
CAPITAL_INSTALLMENTS_INSTORE_QUALIFICATION = typing___cast(EventSubTypeValue, 2004)
CAPITAL_BUSINESS_FLEX_ELIGIBILITY = typing___cast(EventSubTypeValue, 2101)
CAPITAL_EMAIL_PERSONALIZATION_FLEX = typing___cast(EventSubTypeValue, 2201)
DEBIT_CARD_PAY_IN = typing___cast(EventSubTypeValue, 3001)
SAME_DAY_PAYOUT = typing___cast(EventSubTypeValue, 3002)
STANDARD_SPEED_PAYOUT = typing___cast(EventSubTypeValue, 3003)
INSTANT_PAYOUT = typing___cast(EventSubTypeValue, 3004)
CASH_P2P = typing___cast(EventSubTypeValue, 4001)
CASH_REFERRAL_REWARD = typing___cast(EventSubTypeValue, 4002)
CASH_REFERRAL_BOUNTY = typing___cast(EventSubTypeValue, 4003)
type___EventSubType = EventSubType

FlaggingStrategyValue = typing___NewType('FlaggingStrategyValue', builtin___int)
type___FlaggingStrategyValue = FlaggingStrategyValue
FlaggingStrategy: _FlaggingStrategy
class _FlaggingStrategy(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FlaggingStrategyValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    FLAGGING_STRATEGY_UNKNOWN = typing___cast(FlaggingStrategyValue, 0)
    FLAG_EVERY_TIME = typing___cast(FlaggingStrategyValue, 1)
    FLAG_ONLY_ONCE = typing___cast(FlaggingStrategyValue, 2)
    FLAG_ONCE_PER_WINDOW = typing___cast(FlaggingStrategyValue, 3)
FLAGGING_STRATEGY_UNKNOWN = typing___cast(FlaggingStrategyValue, 0)
FLAG_EVERY_TIME = typing___cast(FlaggingStrategyValue, 1)
FLAG_ONLY_ONCE = typing___cast(FlaggingStrategyValue, 2)
FLAG_ONCE_PER_WINDOW = typing___cast(FlaggingStrategyValue, 3)
type___FlaggingStrategy = FlaggingStrategy

BackfillStatusValue = typing___NewType('BackfillStatusValue', builtin___int)
type___BackfillStatusValue = BackfillStatusValue
BackfillStatus: _BackfillStatus
class _BackfillStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BackfillStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    SUCCESS = typing___cast(BackfillStatusValue, 1)
    FAILURE = typing___cast(BackfillStatusValue, 2)
    ALREADY_EXISTS = typing___cast(BackfillStatusValue, 3)
SUCCESS = typing___cast(BackfillStatusValue, 1)
FAILURE = typing___cast(BackfillStatusValue, 2)
ALREADY_EXISTS = typing___cast(BackfillStatusValue, 3)
type___BackfillStatus = BackfillStatus

BeaconSignalTypeValue = typing___NewType('BeaconSignalTypeValue', builtin___int)
type___BeaconSignalTypeValue = BeaconSignalTypeValue
BeaconSignalType: _BeaconSignalType
class _BeaconSignalType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BeaconSignalTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    BST_UNKNOWN = typing___cast(BeaconSignalTypeValue, 0)
    REGISTER_PAYMENT = typing___cast(BeaconSignalTypeValue, 1)
    REGISTER_MERCHANT = typing___cast(BeaconSignalTypeValue, 2)
    NO_BEACON_SIGNALS = typing___cast(BeaconSignalTypeValue, 3)
BST_UNKNOWN = typing___cast(BeaconSignalTypeValue, 0)
REGISTER_PAYMENT = typing___cast(BeaconSignalTypeValue, 1)
REGISTER_MERCHANT = typing___cast(BeaconSignalTypeValue, 2)
NO_BEACON_SIGNALS = typing___cast(BeaconSignalTypeValue, 3)
type___BeaconSignalType = BeaconSignalType

PaymentModelUsesValue = typing___NewType('PaymentModelUsesValue', builtin___int)
type___PaymentModelUsesValue = PaymentModelUsesValue
PaymentModelUses: _PaymentModelUses
class _PaymentModelUses(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PaymentModelUsesValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PMU_UNKNOWN = typing___cast(PaymentModelUsesValue, 0)
    EVENT_SCORING = typing___cast(PaymentModelUsesValue, 1)
    RPC_EVALUATION = typing___cast(PaymentModelUsesValue, 2)
    PAYMENT_SCORING = typing___cast(PaymentModelUsesValue, 3)
    SYNCHRONOUS_PAYMENT_SCORING = typing___cast(PaymentModelUsesValue, 4)
    CREDIT_RISK_SCORING = typing___cast(PaymentModelUsesValue, 5)
    SYNCHRONOUS_ACTIVATION_SCORING = typing___cast(PaymentModelUsesValue, 6)
    LOGIN_SCORING = typing___cast(PaymentModelUsesValue, 7)
PMU_UNKNOWN = typing___cast(PaymentModelUsesValue, 0)
EVENT_SCORING = typing___cast(PaymentModelUsesValue, 1)
RPC_EVALUATION = typing___cast(PaymentModelUsesValue, 2)
PAYMENT_SCORING = typing___cast(PaymentModelUsesValue, 3)
SYNCHRONOUS_PAYMENT_SCORING = typing___cast(PaymentModelUsesValue, 4)
CREDIT_RISK_SCORING = typing___cast(PaymentModelUsesValue, 5)
SYNCHRONOUS_ACTIVATION_SCORING = typing___cast(PaymentModelUsesValue, 6)
LOGIN_SCORING = typing___cast(PaymentModelUsesValue, 7)
type___PaymentModelUses = PaymentModelUses

class RuleConfigFilter(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    currency_code: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___common___currency_codes_pb2___CurrencyCodeValue] = ...
    model_name: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    event_type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___EventTypeValue] = ...
    event_sub_type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___EventSubTypeValue] = ...

    def __init__(self,
        *,
        currency_code : typing___Optional[typing___Iterable[squareup___common___currency_codes_pb2___CurrencyCodeValue]] = None,
        model_name : typing___Optional[typing___Iterable[typing___Text]] = None,
        event_type : typing___Optional[typing___Iterable[type___EventTypeValue]] = None,
        event_sub_type : typing___Optional[typing___Iterable[type___EventSubTypeValue]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"currency_code",b"currency_code",u"event_sub_type",b"event_sub_type",u"event_type",b"event_type",u"model_name",b"model_name"]) -> None: ...
type___RuleConfigFilter = RuleConfigFilter

class ModelScore(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    model_name: typing___Text = ...
    score: builtin___float = ...
    suspected: builtin___bool = ...
    concern: squareup___skeptic___service_pb2___ConcernValue = ...
    should_auto_freeze: builtin___bool = ...
    should_auto_clear: builtin___bool = ...
    rule_config_id: builtin___int = ...
    disqualified: builtin___bool = ...

    def __init__(self,
        *,
        model_name : typing___Optional[typing___Text] = None,
        score : typing___Optional[builtin___float] = None,
        suspected : typing___Optional[builtin___bool] = None,
        concern : typing___Optional[squareup___skeptic___service_pb2___ConcernValue] = None,
        should_auto_freeze : typing___Optional[builtin___bool] = None,
        should_auto_clear : typing___Optional[builtin___bool] = None,
        rule_config_id : typing___Optional[builtin___int] = None,
        disqualified : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"concern",b"concern",u"disqualified",b"disqualified",u"model_name",b"model_name",u"rule_config_id",b"rule_config_id",u"score",b"score",u"should_auto_clear",b"should_auto_clear",u"should_auto_freeze",b"should_auto_freeze",u"suspected",b"suspected"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"concern",b"concern",u"disqualified",b"disqualified",u"model_name",b"model_name",u"rule_config_id",b"rule_config_id",u"score",b"score",u"should_auto_clear",b"should_auto_clear",u"should_auto_freeze",b"should_auto_freeze",u"suspected",b"suspected"]) -> None: ...
type___ModelScore = ModelScore

class ModelScoreHolder(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def model_score(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ModelScore]: ...

    def __init__(self,
        *,
        model_score : typing___Optional[typing___Iterable[type___ModelScore]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"model_score",b"model_score"]) -> None: ...
type___ModelScoreHolder = ModelScoreHolder

class ScoredPayment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_token: typing___Text = ...
    user_token: typing___Text = ...
    capture_intent_millis: builtin___int = ...
    suspected: builtin___bool = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    pay_with_square_entry_method: squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue = ...

    @property
    def model_score(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ModelScore]: ...

    def __init__(self,
        *,
        payment_token : typing___Optional[typing___Text] = None,
        user_token : typing___Optional[typing___Text] = None,
        model_score : typing___Optional[typing___Iterable[type___ModelScore]] = None,
        capture_intent_millis : typing___Optional[builtin___int] = None,
        suspected : typing___Optional[builtin___bool] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        pay_with_square_entry_method : typing___Optional[squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"capture_intent_millis",b"capture_intent_millis",u"currency_code",b"currency_code",u"pay_with_square_entry_method",b"pay_with_square_entry_method",u"payment_token",b"payment_token",u"suspected",b"suspected",u"user_token",b"user_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"capture_intent_millis",b"capture_intent_millis",u"currency_code",b"currency_code",u"model_score",b"model_score",u"pay_with_square_entry_method",b"pay_with_square_entry_method",u"payment_token",b"payment_token",u"suspected",b"suspected",u"user_token",b"user_token"]) -> None: ...
type___ScoredPayment = ScoredPayment

class ModelPredicate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    score_lower_bound: builtin___float = ...
    score_upper_bound: builtin___float = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        score_lower_bound : typing___Optional[builtin___float] = None,
        score_upper_bound : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name",u"score_lower_bound",b"score_lower_bound",u"score_upper_bound",b"score_upper_bound"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name",u"score_lower_bound",b"score_lower_bound",u"score_upper_bound",b"score_upper_bound"]) -> None: ...
type___ModelPredicate = ModelPredicate

class ModelEvaluation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    score: builtin___float = ...

    @property
    def probability_distribution(self) -> squareup___modelpredictions___modelformat_pb2___ProbabilityDistribution: ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        score : typing___Optional[builtin___float] = None,
        probability_distribution : typing___Optional[squareup___modelpredictions___modelformat_pb2___ProbabilityDistribution] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name",u"probability_distribution",b"probability_distribution",u"score",b"score"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name",u"probability_distribution",b"probability_distribution",u"score",b"score"]) -> None: ...
type___ModelEvaluation = ModelEvaluation

class LegacyPartitioning(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    event_sub_type: type___EventSubTypeValue = ...

    def __init__(self,
        *,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        event_sub_type : typing___Optional[type___EventSubTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"currency_code",b"currency_code",u"event_sub_type",b"event_sub_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"currency_code",b"currency_code",u"event_sub_type",b"event_sub_type"]) -> None: ...
type___LegacyPartitioning = LegacyPartitioning

class TriggerDef(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    enabled: builtin___bool = ...
    selection_keys: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    event_type: typing___Text = ...

    @property
    def flow(self) -> type___Flow: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        enabled : typing___Optional[builtin___bool] = None,
        selection_keys : typing___Optional[typing___Iterable[typing___Text]] = None,
        flow : typing___Optional[type___Flow] = None,
        event_type : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"enabled",b"enabled",u"event_type",b"event_type",u"flow",b"flow",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"enabled",b"enabled",u"event_type",b"event_type",u"flow",b"flow",u"selection_keys",b"selection_keys",u"token",b"token"]) -> None: ...
type___TriggerDef = TriggerDef

class SignalAclAssociation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    acls: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    owning_service: typing___Text = ...
    claim_rtbf_exempt: builtin___bool = ...

    def __init__(self,
        *,
        acls : typing___Optional[typing___Iterable[typing___Text]] = None,
        owning_service : typing___Optional[typing___Text] = None,
        claim_rtbf_exempt : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"claim_rtbf_exempt",b"claim_rtbf_exempt",u"owning_service",b"owning_service"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acls",b"acls",u"claim_rtbf_exempt",b"claim_rtbf_exempt",u"owning_service",b"owning_service"]) -> None: ...
type___SignalAclAssociation = SignalAclAssociation

class ScoredEventTypeSource(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    SourceValue = typing___NewType('SourceValue', builtin___int)
    type___SourceValue = SourceValue
    Source: _Source
    class _Source(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ScoredEventTypeSource.SourceValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE = typing___cast(ScoredEventTypeSource.SourceValue, 0)
        RISKARBITER_EVENT_TYPE = typing___cast(ScoredEventTypeSource.SourceValue, 1)
        ASSESSMENT_METADATA = typing___cast(ScoredEventTypeSource.SourceValue, 2)
        HARDCODED_VALUE = typing___cast(ScoredEventTypeSource.SourceValue, 3)
    DO_NOT_USE = typing___cast(ScoredEventTypeSource.SourceValue, 0)
    RISKARBITER_EVENT_TYPE = typing___cast(ScoredEventTypeSource.SourceValue, 1)
    ASSESSMENT_METADATA = typing___cast(ScoredEventTypeSource.SourceValue, 2)
    HARDCODED_VALUE = typing___cast(ScoredEventTypeSource.SourceValue, 3)
    type___Source = Source

    source: type___ScoredEventTypeSource.SourceValue = ...
    value: typing___Text = ...

    def __init__(self,
        *,
        source : typing___Optional[type___ScoredEventTypeSource.SourceValue] = None,
        value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"source",b"source",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"source",b"source",u"value",b"value"]) -> None: ...
type___ScoredEventTypeSource = ScoredEventTypeSource

class Flow(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    event_sub_type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___EventSubTypeValue] = ...
    concern: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___skeptic___service_pb2___ConcernValue] = ...
    currency_code: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___common___currency_codes_pb2___CurrencyCodeValue] = ...
    flagging_strategy: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___FlaggingStrategyValue] = ...
    flagging_history_eligible: builtin___bool = ...
    autofreeze_eligible: builtin___bool = ...
    autoclear_eligible: builtin___bool = ...
    chaining_eligible: builtin___bool = ...
    enforce_rules_required: builtin___bool = ...
    allow_ml_models: builtin___bool = ...
    target_gcs_bucket_prefix: typing___Text = ...
    scoreable_name: typing___Text = ...
    beacon_signal_fetcher_name: typing___Text = ...
    hyperdynamic_model_name: typing___Text = ...
    allow_signal_generator_signals_in_ml_models: builtin___bool = ...
    signal_type_name: typing___Text = ...
    short_display_name: typing___Text = ...
    use_fully_upto_date_beacon_data: builtin___bool = ...
    allow_slow_models: builtin___bool = ...
    signallib_entity: typing___Text = ...
    rule_chaining_node_prefix: typing___Text = ...
    trigger_def_token: typing___Text = ...

    @property
    def feature_engine_query_key(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___kp_common___rule_evaluation_pb2___QueryKey]: ...

    @property
    def scored_event_type_source(self) -> type___ScoredEventTypeSource: ...

    @property
    def signal_acls(self) -> type___SignalAclAssociation: ...

    @property
    def input_signal_defs(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___kp_common___common_pb2___SignalDef]: ...

    def __init__(self,
        *,
        event_sub_type : typing___Optional[typing___Iterable[type___EventSubTypeValue]] = None,
        concern : typing___Optional[typing___Iterable[squareup___skeptic___service_pb2___ConcernValue]] = None,
        currency_code : typing___Optional[typing___Iterable[squareup___common___currency_codes_pb2___CurrencyCodeValue]] = None,
        flagging_strategy : typing___Optional[typing___Iterable[type___FlaggingStrategyValue]] = None,
        flagging_history_eligible : typing___Optional[builtin___bool] = None,
        autofreeze_eligible : typing___Optional[builtin___bool] = None,
        autoclear_eligible : typing___Optional[builtin___bool] = None,
        chaining_eligible : typing___Optional[builtin___bool] = None,
        feature_engine_query_key : typing___Optional[typing___Iterable[squareup___kp_common___rule_evaluation_pb2___QueryKey]] = None,
        enforce_rules_required : typing___Optional[builtin___bool] = None,
        allow_ml_models : typing___Optional[builtin___bool] = None,
        target_gcs_bucket_prefix : typing___Optional[typing___Text] = None,
        scored_event_type_source : typing___Optional[type___ScoredEventTypeSource] = None,
        scoreable_name : typing___Optional[typing___Text] = None,
        beacon_signal_fetcher_name : typing___Optional[typing___Text] = None,
        hyperdynamic_model_name : typing___Optional[typing___Text] = None,
        allow_signal_generator_signals_in_ml_models : typing___Optional[builtin___bool] = None,
        signal_type_name : typing___Optional[typing___Text] = None,
        signal_acls : typing___Optional[type___SignalAclAssociation] = None,
        short_display_name : typing___Optional[typing___Text] = None,
        use_fully_upto_date_beacon_data : typing___Optional[builtin___bool] = None,
        allow_slow_models : typing___Optional[builtin___bool] = None,
        signallib_entity : typing___Optional[typing___Text] = None,
        input_signal_defs : typing___Optional[typing___Iterable[squareup___kp_common___common_pb2___SignalDef]] = None,
        rule_chaining_node_prefix : typing___Optional[typing___Text] = None,
        trigger_def_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"allow_ml_models",b"allow_ml_models",u"allow_signal_generator_signals_in_ml_models",b"allow_signal_generator_signals_in_ml_models",u"allow_slow_models",b"allow_slow_models",u"autoclear_eligible",b"autoclear_eligible",u"autofreeze_eligible",b"autofreeze_eligible",u"beacon_signal_fetcher_name",b"beacon_signal_fetcher_name",u"chaining_eligible",b"chaining_eligible",u"enforce_rules_required",b"enforce_rules_required",u"flagging_history_eligible",b"flagging_history_eligible",u"hyperdynamic_model_name",b"hyperdynamic_model_name",u"rule_chaining_node_prefix",b"rule_chaining_node_prefix",u"scoreable_name",b"scoreable_name",u"scored_event_type_source",b"scored_event_type_source",u"short_display_name",b"short_display_name",u"signal_acls",b"signal_acls",u"signal_type_name",b"signal_type_name",u"signallib_entity",b"signallib_entity",u"target_gcs_bucket_prefix",b"target_gcs_bucket_prefix",u"trigger_def_token",b"trigger_def_token",u"use_fully_upto_date_beacon_data",b"use_fully_upto_date_beacon_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"allow_ml_models",b"allow_ml_models",u"allow_signal_generator_signals_in_ml_models",b"allow_signal_generator_signals_in_ml_models",u"allow_slow_models",b"allow_slow_models",u"autoclear_eligible",b"autoclear_eligible",u"autofreeze_eligible",b"autofreeze_eligible",u"beacon_signal_fetcher_name",b"beacon_signal_fetcher_name",u"chaining_eligible",b"chaining_eligible",u"concern",b"concern",u"currency_code",b"currency_code",u"enforce_rules_required",b"enforce_rules_required",u"event_sub_type",b"event_sub_type",u"feature_engine_query_key",b"feature_engine_query_key",u"flagging_history_eligible",b"flagging_history_eligible",u"flagging_strategy",b"flagging_strategy",u"hyperdynamic_model_name",b"hyperdynamic_model_name",u"input_signal_defs",b"input_signal_defs",u"rule_chaining_node_prefix",b"rule_chaining_node_prefix",u"scoreable_name",b"scoreable_name",u"scored_event_type_source",b"scored_event_type_source",u"short_display_name",b"short_display_name",u"signal_acls",b"signal_acls",u"signal_type_name",b"signal_type_name",u"signallib_entity",b"signallib_entity",u"target_gcs_bucket_prefix",b"target_gcs_bucket_prefix",u"trigger_def_token",b"trigger_def_token",u"use_fully_upto_date_beacon_data",b"use_fully_upto_date_beacon_data"]) -> None: ...
type___Flow = Flow

class Kv(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    namespace: typing___Text = ...
    key: typing___Text = ...
    value: typing___Text = ...

    def __init__(self,
        *,
        namespace : typing___Optional[typing___Text] = None,
        key : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"key",b"key",u"namespace",b"namespace",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"namespace",b"namespace",u"value",b"value"]) -> None: ...
type___Kv = Kv

class DynamicFlagInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    description: typing___Text = ...
    type: typing___Text = ...
    value: typing___Text = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"description",b"description",u"name",b"name",u"type",b"type",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"description",b"description",u"name",b"name",u"type",b"type",u"value",b"value"]) -> None: ...
type___DynamicFlagInfo = DynamicFlagInfo

class RuleInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    model_name: typing___Text = ...
    create_suspicions: builtin___bool = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    concern: squareup___skeptic___service_pb2___ConcernValue = ...
    effective_at: builtin___int = ...
    effective_until: builtin___int = ...
    hyperdynamic_definition: typing___Text = ...
    model_type: typing___Text = ...
    should_auto_freeze: builtin___bool = ...
    event_type: type___EventTypeValue = ...
    class_name: typing___Text = ...
    autoclear_threshold: builtin___float = ...
    should_auto_clear: builtin___bool = ...
    autoclear_allowed_rules: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    auto_freeze_requires_additional_suspicion: builtin___bool = ...
    flagging_strategy: type___FlaggingStrategyValue = ...
    window_duration_millis: builtin___int = ...
    only_flag_once: builtin___bool = ...
    target_freeze_rate: builtin___float = ...
    event_sub_type: type___EventSubTypeValue = ...
    flagging_history_applicable_rules: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    last_updater_user_name: typing___Text = ...
    description: typing___Text = ...
    signal_names: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    node_name: typing___Text = ...
    is_protected: builtin___bool = ...
    downstream_actions: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    rule_config_id: builtin___int = ...
    ruleset_token: typing___Text = ...
    disqualifier_slugs: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    trigger_def_token: typing___Text = ...
    lower_bound_exclusive: builtin___float = ...
    upper_bound_inclusive: builtin___float = ...

    @property
    def dynamic_flag_info(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___DynamicFlagInfo]: ...

    @property
    def partition_selection(self) -> squareup___kp_common___rule_evaluation_pb2___PartitionSelection: ...

    def __init__(self,
        *,
        model_name : typing___Optional[typing___Text] = None,
        create_suspicions : typing___Optional[builtin___bool] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        concern : typing___Optional[squareup___skeptic___service_pb2___ConcernValue] = None,
        effective_at : typing___Optional[builtin___int] = None,
        effective_until : typing___Optional[builtin___int] = None,
        hyperdynamic_definition : typing___Optional[typing___Text] = None,
        model_type : typing___Optional[typing___Text] = None,
        should_auto_freeze : typing___Optional[builtin___bool] = None,
        event_type : typing___Optional[type___EventTypeValue] = None,
        class_name : typing___Optional[typing___Text] = None,
        autoclear_threshold : typing___Optional[builtin___float] = None,
        should_auto_clear : typing___Optional[builtin___bool] = None,
        autoclear_allowed_rules : typing___Optional[typing___Iterable[typing___Text]] = None,
        auto_freeze_requires_additional_suspicion : typing___Optional[builtin___bool] = None,
        flagging_strategy : typing___Optional[type___FlaggingStrategyValue] = None,
        window_duration_millis : typing___Optional[builtin___int] = None,
        only_flag_once : typing___Optional[builtin___bool] = None,
        target_freeze_rate : typing___Optional[builtin___float] = None,
        event_sub_type : typing___Optional[type___EventSubTypeValue] = None,
        dynamic_flag_info : typing___Optional[typing___Iterable[type___DynamicFlagInfo]] = None,
        flagging_history_applicable_rules : typing___Optional[typing___Iterable[typing___Text]] = None,
        last_updater_user_name : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        signal_names : typing___Optional[typing___Iterable[typing___Text]] = None,
        node_name : typing___Optional[typing___Text] = None,
        is_protected : typing___Optional[builtin___bool] = None,
        downstream_actions : typing___Optional[typing___Iterable[typing___Text]] = None,
        rule_config_id : typing___Optional[builtin___int] = None,
        ruleset_token : typing___Optional[typing___Text] = None,
        disqualifier_slugs : typing___Optional[typing___Iterable[typing___Text]] = None,
        trigger_def_token : typing___Optional[typing___Text] = None,
        partition_selection : typing___Optional[squareup___kp_common___rule_evaluation_pb2___PartitionSelection] = None,
        lower_bound_exclusive : typing___Optional[builtin___float] = None,
        upper_bound_inclusive : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"auto_freeze_requires_additional_suspicion",b"auto_freeze_requires_additional_suspicion",u"autoclear_threshold",b"autoclear_threshold",u"class_name",b"class_name",u"concern",b"concern",u"create_suspicions",b"create_suspicions",u"currency_code",b"currency_code",u"description",b"description",u"effective_at",b"effective_at",u"effective_until",b"effective_until",u"event_sub_type",b"event_sub_type",u"event_type",b"event_type",u"flagging_strategy",b"flagging_strategy",u"hyperdynamic_definition",b"hyperdynamic_definition",u"is_protected",b"is_protected",u"last_updater_user_name",b"last_updater_user_name",u"lower_bound_exclusive",b"lower_bound_exclusive",u"model_name",b"model_name",u"model_type",b"model_type",u"node_name",b"node_name",u"only_flag_once",b"only_flag_once",u"partition_selection",b"partition_selection",u"rule_config_id",b"rule_config_id",u"ruleset_token",b"ruleset_token",u"should_auto_clear",b"should_auto_clear",u"should_auto_freeze",b"should_auto_freeze",u"target_freeze_rate",b"target_freeze_rate",u"trigger_def_token",b"trigger_def_token",u"upper_bound_inclusive",b"upper_bound_inclusive",u"window_duration_millis",b"window_duration_millis"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"auto_freeze_requires_additional_suspicion",b"auto_freeze_requires_additional_suspicion",u"autoclear_allowed_rules",b"autoclear_allowed_rules",u"autoclear_threshold",b"autoclear_threshold",u"class_name",b"class_name",u"concern",b"concern",u"create_suspicions",b"create_suspicions",u"currency_code",b"currency_code",u"description",b"description",u"disqualifier_slugs",b"disqualifier_slugs",u"downstream_actions",b"downstream_actions",u"dynamic_flag_info",b"dynamic_flag_info",u"effective_at",b"effective_at",u"effective_until",b"effective_until",u"event_sub_type",b"event_sub_type",u"event_type",b"event_type",u"flagging_history_applicable_rules",b"flagging_history_applicable_rules",u"flagging_strategy",b"flagging_strategy",u"hyperdynamic_definition",b"hyperdynamic_definition",u"is_protected",b"is_protected",u"last_updater_user_name",b"last_updater_user_name",u"lower_bound_exclusive",b"lower_bound_exclusive",u"model_name",b"model_name",u"model_type",b"model_type",u"node_name",b"node_name",u"only_flag_once",b"only_flag_once",u"partition_selection",b"partition_selection",u"rule_config_id",b"rule_config_id",u"ruleset_token",b"ruleset_token",u"should_auto_clear",b"should_auto_clear",u"should_auto_freeze",b"should_auto_freeze",u"signal_names",b"signal_names",u"target_freeze_rate",b"target_freeze_rate",u"trigger_def_token",b"trigger_def_token",u"upper_bound_inclusive",b"upper_bound_inclusive",u"window_duration_millis",b"window_duration_millis"]) -> None: ...
type___RuleInfo = RuleInfo
