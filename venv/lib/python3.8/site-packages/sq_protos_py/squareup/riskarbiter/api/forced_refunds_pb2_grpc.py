# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.riskarbiter.api import forced_refunds_pb2 as squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2


class ForcedRefundsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ForceRefunds = channel.unary_unary(
                '/squareup.riskarbiter.api.forced_refunds.ForcedRefundsService/ForceRefunds',
                request_serializer=squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2.ForceRefundsRequest.SerializeToString,
                response_deserializer=squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2.ForceRefundsResponse.FromString,
                )


class ForcedRefundsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ForceRefunds(self, request, context):
        """*
        For use by ops through Regulator. Immediately starts refunding
        all payments the account has ever taken.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ForcedRefundsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ForceRefunds': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceRefunds,
                    request_deserializer=squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2.ForceRefundsRequest.FromString,
                    response_serializer=squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2.ForceRefundsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.riskarbiter.api.forced_refunds.ForcedRefundsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ForcedRefundsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ForceRefunds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.riskarbiter.api.forced_refunds.ForcedRefundsService/ForceRefunds',
            squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2.ForceRefundsRequest.SerializeToString,
            squareup_dot_riskarbiter_dot_api_dot_forced__refunds__pb2.ForceRefundsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
