# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.kp_common.rule_evaluation_pb2 import (
    AssessmentMetadata as squareup___kp_common___rule_evaluation_pb2___AssessmentMetadata,
)

from sq_protos_py.squareup.regulator.v2.service_pb2 import (
    InterpolationValue as squareup___regulator___v2___service_pb2___InterpolationValue,
)

from sq_protos_py.squareup.riskarbiter.api.detailed_scored_events_pb2 import (
    EventIdentifier2 as squareup___riskarbiter___api___detailed_scored_events_pb2___EventIdentifier2,
)

from sq_protos_py.squareup.skeptic.service_pb2 import (
    ConcernValue as squareup___skeptic___service_pb2___ConcernValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

RiskActionValue = typing___NewType('RiskActionValue', builtin___int)
type___RiskActionValue = RiskActionValue
RiskAction: _RiskAction
class _RiskAction(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RiskActionValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    RA_UNKNOWN = typing___cast(RiskActionValue, 0)
    FREEZE = typing___cast(RiskActionValue, 1)
    DEACTIVATE = typing___cast(RiskActionValue, 2)
    ADD_ROUTING_ATTRIBUTE = typing___cast(RiskActionValue, 3)
    CREATE_ATO_REVIEW_CASE = typing___cast(RiskActionValue, 4)
    CREATE_REGULATOR_COMMENT = typing___cast(RiskActionValue, 5)
    CREATE_INTL_OPTIMISTIC_REVIEW_CASE = typing___cast(RiskActionValue, 6)
    CREATE_CREDIT_RISK_CASE = typing___cast(RiskActionValue, 7)
    CREDIT_RISK_IRF_FREEZE = typing___cast(RiskActionValue, 8)
    SHADOWBAN = typing___cast(RiskActionValue, 9)
    CREATE_CARDING_CASE = typing___cast(RiskActionValue, 10)
    CLOSE_CASE = typing___cast(RiskActionValue, 11)
    ADD_TO_ATO_WATCHLIST = typing___cast(RiskActionValue, 12)
    CREATE_COMPLIANCE_ALERTS_ONE_CASE = typing___cast(RiskActionValue, 13)
    CREATE_COMPLIANCE_KYC = typing___cast(RiskActionValue, 14)
    SCREEN_COMPLIANCE = typing___cast(RiskActionValue, 15)
    CREATE_USER_AGREEMENT_FLAGGING = typing___cast(RiskActionValue, 16)
    CREATE_PAYROLL_RISK_REVIEW_CASE = typing___cast(RiskActionValue, 17)
    SEND_EMAIL = typing___cast(RiskActionValue, 18)
    DISABLE_PHONE_TOKENS = typing___cast(RiskActionValue, 19)
    CREATE_SOLIDSHOP_ORDER_REVIEW_CASE = typing___cast(RiskActionValue, 20)
    REJECT_SOLIDSHOP_ORDER = typing___cast(RiskActionValue, 21)
    APPROVE_SOLIDSHOP_ORDER = typing___cast(RiskActionValue, 22)
    ADD_FAKE_ACCOUNT_TAG = typing___cast(RiskActionValue, 23)
    REVIEW_POSTOFFICE_PROMOTION = typing___cast(RiskActionValue, 24)
    REJECT_POSTOFFICE_PROMOTION = typing___cast(RiskActionValue, 25)
    APPROVE_POSTOFFICE_PROMOTION = typing___cast(RiskActionValue, 26)
    ENQUEUE_POTENTIAL_OFFSET = typing___cast(RiskActionValue, 27)
    ADVANCE_DEVICECHECK = typing___cast(RiskActionValue, 28)
    ESCALATE_DEVICECHECK = typing___cast(RiskActionValue, 29)
    CREATE_DUBIOUS_OBJECT = typing___cast(RiskActionValue, 30)
    CREDIT_RISK_ACTIONS = typing___cast(RiskActionValue, 31)
    LEGIT_SCRIPT_WEB_PRESENCE = typing___cast(RiskActionValue, 32)
    CREDIT_RISK_RESERVES_SETTLEMENT_FREEZE = typing___cast(RiskActionValue, 33)
    RESERVES_SETTLEMENT_PROCESS = typing___cast(RiskActionValue, 34)
    CHECK_RESERVE_BALANCE_SUMMARY_AND_FREEZE = typing___cast(RiskActionValue, 35)
    APPROVE_CASH_PAYMENT = typing___cast(RiskActionValue, 36)
    DECLINE_CASH_PAYMENT = typing___cast(RiskActionValue, 37)
    SUSPEND_CASH_SENDER = typing___cast(RiskActionValue, 38)
    SUSPEND_CASH_RECIPIENT = typing___cast(RiskActionValue, 39)
    ACCOUNT_LOCK_CASH_SENDER = typing___cast(RiskActionValue, 40)
    ACCOUNT_LOCK_CASH_RECIPIENT = typing___cast(RiskActionValue, 41)
    MODIFY_RISK_RESERVE = typing___cast(RiskActionValue, 42)
    CREATE_TRANSFERS_RISK_REVIEW_CASE = typing___cast(RiskActionValue, 43)
    PROCESS_CREDIT_RISK_SSP_TRIGGER = typing___cast(RiskActionValue, 44)
    SEND_CREDIT_RISK_SSP = typing___cast(RiskActionValue, 45)
    CREDIT_RISK_FREEZE = typing___cast(RiskActionValue, 46)
    LINK_SSP_REQUEST_TO_CASE = typing___cast(RiskActionValue, 47)
    CREATE_SSP_CREDIT_RISK_CASE = typing___cast(RiskActionValue, 48)
    CREATE_SQUARE_CARD_ORDER_CASE = typing___cast(RiskActionValue, 49)
    CREATE_SQUARE_CARD_TRANSACTION_CASE = typing___cast(RiskActionValue, 50)
    CREATE_SSP_PHONE_TOKEN = typing___cast(RiskActionValue, 51)
    ADD_BUYER_BROWSERFINGERPRINT_TO_BLOCKLIST = typing___cast(RiskActionValue, 52)
    ADD_BUYER_IP_ADDRESS_TO_BLOCKLIST = typing___cast(RiskActionValue, 53)
    CREATE_SILENT_IRF3 = typing___cast(RiskActionValue, 54)
    SEND_DISPUTE_EMAIL = typing___cast(RiskActionValue, 55)
    SUBMIT_SUPPORT_ASSESSMENT = typing___cast(RiskActionValue, 56)
    CREDIT_RISK_RESERVE_SETTLEMENT_ACTIONS = typing___cast(RiskActionValue, 57)
    TRIGGER_FAILED_DEBIT = typing___cast(RiskActionValue, 58)
RA_UNKNOWN = typing___cast(RiskActionValue, 0)
FREEZE = typing___cast(RiskActionValue, 1)
DEACTIVATE = typing___cast(RiskActionValue, 2)
ADD_ROUTING_ATTRIBUTE = typing___cast(RiskActionValue, 3)
CREATE_ATO_REVIEW_CASE = typing___cast(RiskActionValue, 4)
CREATE_REGULATOR_COMMENT = typing___cast(RiskActionValue, 5)
CREATE_INTL_OPTIMISTIC_REVIEW_CASE = typing___cast(RiskActionValue, 6)
CREATE_CREDIT_RISK_CASE = typing___cast(RiskActionValue, 7)
CREDIT_RISK_IRF_FREEZE = typing___cast(RiskActionValue, 8)
SHADOWBAN = typing___cast(RiskActionValue, 9)
CREATE_CARDING_CASE = typing___cast(RiskActionValue, 10)
CLOSE_CASE = typing___cast(RiskActionValue, 11)
ADD_TO_ATO_WATCHLIST = typing___cast(RiskActionValue, 12)
CREATE_COMPLIANCE_ALERTS_ONE_CASE = typing___cast(RiskActionValue, 13)
CREATE_COMPLIANCE_KYC = typing___cast(RiskActionValue, 14)
SCREEN_COMPLIANCE = typing___cast(RiskActionValue, 15)
CREATE_USER_AGREEMENT_FLAGGING = typing___cast(RiskActionValue, 16)
CREATE_PAYROLL_RISK_REVIEW_CASE = typing___cast(RiskActionValue, 17)
SEND_EMAIL = typing___cast(RiskActionValue, 18)
DISABLE_PHONE_TOKENS = typing___cast(RiskActionValue, 19)
CREATE_SOLIDSHOP_ORDER_REVIEW_CASE = typing___cast(RiskActionValue, 20)
REJECT_SOLIDSHOP_ORDER = typing___cast(RiskActionValue, 21)
APPROVE_SOLIDSHOP_ORDER = typing___cast(RiskActionValue, 22)
ADD_FAKE_ACCOUNT_TAG = typing___cast(RiskActionValue, 23)
REVIEW_POSTOFFICE_PROMOTION = typing___cast(RiskActionValue, 24)
REJECT_POSTOFFICE_PROMOTION = typing___cast(RiskActionValue, 25)
APPROVE_POSTOFFICE_PROMOTION = typing___cast(RiskActionValue, 26)
ENQUEUE_POTENTIAL_OFFSET = typing___cast(RiskActionValue, 27)
ADVANCE_DEVICECHECK = typing___cast(RiskActionValue, 28)
ESCALATE_DEVICECHECK = typing___cast(RiskActionValue, 29)
CREATE_DUBIOUS_OBJECT = typing___cast(RiskActionValue, 30)
CREDIT_RISK_ACTIONS = typing___cast(RiskActionValue, 31)
LEGIT_SCRIPT_WEB_PRESENCE = typing___cast(RiskActionValue, 32)
CREDIT_RISK_RESERVES_SETTLEMENT_FREEZE = typing___cast(RiskActionValue, 33)
RESERVES_SETTLEMENT_PROCESS = typing___cast(RiskActionValue, 34)
CHECK_RESERVE_BALANCE_SUMMARY_AND_FREEZE = typing___cast(RiskActionValue, 35)
APPROVE_CASH_PAYMENT = typing___cast(RiskActionValue, 36)
DECLINE_CASH_PAYMENT = typing___cast(RiskActionValue, 37)
SUSPEND_CASH_SENDER = typing___cast(RiskActionValue, 38)
SUSPEND_CASH_RECIPIENT = typing___cast(RiskActionValue, 39)
ACCOUNT_LOCK_CASH_SENDER = typing___cast(RiskActionValue, 40)
ACCOUNT_LOCK_CASH_RECIPIENT = typing___cast(RiskActionValue, 41)
MODIFY_RISK_RESERVE = typing___cast(RiskActionValue, 42)
CREATE_TRANSFERS_RISK_REVIEW_CASE = typing___cast(RiskActionValue, 43)
PROCESS_CREDIT_RISK_SSP_TRIGGER = typing___cast(RiskActionValue, 44)
SEND_CREDIT_RISK_SSP = typing___cast(RiskActionValue, 45)
CREDIT_RISK_FREEZE = typing___cast(RiskActionValue, 46)
LINK_SSP_REQUEST_TO_CASE = typing___cast(RiskActionValue, 47)
CREATE_SSP_CREDIT_RISK_CASE = typing___cast(RiskActionValue, 48)
CREATE_SQUARE_CARD_ORDER_CASE = typing___cast(RiskActionValue, 49)
CREATE_SQUARE_CARD_TRANSACTION_CASE = typing___cast(RiskActionValue, 50)
CREATE_SSP_PHONE_TOKEN = typing___cast(RiskActionValue, 51)
ADD_BUYER_BROWSERFINGERPRINT_TO_BLOCKLIST = typing___cast(RiskActionValue, 52)
ADD_BUYER_IP_ADDRESS_TO_BLOCKLIST = typing___cast(RiskActionValue, 53)
CREATE_SILENT_IRF3 = typing___cast(RiskActionValue, 54)
SEND_DISPUTE_EMAIL = typing___cast(RiskActionValue, 55)
SUBMIT_SUPPORT_ASSESSMENT = typing___cast(RiskActionValue, 56)
CREDIT_RISK_RESERVE_SETTLEMENT_ACTIONS = typing___cast(RiskActionValue, 57)
TRIGGER_FAILED_DEBIT = typing___cast(RiskActionValue, 58)
type___RiskAction = RiskAction

RiskActionResultTypeValue = typing___NewType('RiskActionResultTypeValue', builtin___int)
type___RiskActionResultTypeValue = RiskActionResultTypeValue
RiskActionResultType: _RiskActionResultType
class _RiskActionResultType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RiskActionResultTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    RART_UNKNOWN = typing___cast(RiskActionResultTypeValue, 0)
    CASE_TOKEN = typing___cast(RiskActionResultTypeValue, 1)
    IRF_TOKEN = typing___cast(RiskActionResultTypeValue, 2)
    SCREEN_AUDIT_TOKEN = typing___cast(RiskActionResultTypeValue, 3)
    PENDING_OFFSET_ID = typing___cast(RiskActionResultTypeValue, 4)
    DUBIOUS_OBJECT_TOKEN = typing___cast(RiskActionResultTypeValue, 5)
    SECURE_PROFILE_TOKEN = typing___cast(RiskActionResultTypeValue, 6)
    PHONE_TOKEN = typing___cast(RiskActionResultTypeValue, 7)
RART_UNKNOWN = typing___cast(RiskActionResultTypeValue, 0)
CASE_TOKEN = typing___cast(RiskActionResultTypeValue, 1)
IRF_TOKEN = typing___cast(RiskActionResultTypeValue, 2)
SCREEN_AUDIT_TOKEN = typing___cast(RiskActionResultTypeValue, 3)
PENDING_OFFSET_ID = typing___cast(RiskActionResultTypeValue, 4)
DUBIOUS_OBJECT_TOKEN = typing___cast(RiskActionResultTypeValue, 5)
SECURE_PROFILE_TOKEN = typing___cast(RiskActionResultTypeValue, 6)
PHONE_TOKEN = typing___cast(RiskActionResultTypeValue, 7)
type___RiskActionResultType = RiskActionResultType

class RiskActionData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...
    deactivate_reason: typing___Text = ...
    freeze_reason: typing___Text = ...
    actor_token: typing___Text = ...
    routing_attribute: typing___Text = ...
    regulator_comment: typing___Text = ...
    case_reason: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    case_route_pool_name: typing___Text = ...
    case_priority: builtin___int = ...
    record_id: builtin___int = ...
    concern: squareup___skeptic___service_pb2___ConcernValue = ...
    shadowban_reason: typing___Text = ...
    case_id_to_close: builtin___int = ...
    case_close_reason: typing___Text = ...
    case_token_to_close: typing___Text = ...
    regulator_email_to_send: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    country_code: squareup___common___countries_pb2___CountryValue = ...
    nonce_work_around_idempotence_check: typing___Text = ...
    sender_customer_token: typing___Text = ...
    recipient_customer_token: typing___Text = ...
    payment_transition_token: typing___Text = ...
    reserve_hold_rate_basis: builtin___int = ...
    reserve_hold_duration_days: builtin___int = ...
    master_merchant_token: typing___Text = ...
    secure_profile_request_token: typing___Text = ...
    regulator_case_token: typing___Text = ...
    created_at: builtin___int = ...
    instrument_token: typing___Text = ...
    failed_debit_amount: builtin___int = ...
    balance_token: typing___Text = ...
    square_bank_account_instruments_id: typing___Text = ...
    total_atomic_amount: builtin___int = ...
    bank_account_instruments_id: typing___Text = ...
    bank_settlement_token: typing___Text = ...

    @property
    def flagged_model(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___FlaggedModel]: ...

    @property
    def assessment_metadata(self) -> squareup___kp_common___rule_evaluation_pb2___AssessmentMetadata: ...

    @property
    def event_identifier_2(self) -> squareup___riskarbiter___api___detailed_scored_events_pb2___EventIdentifier2: ...

    @property
    def regulator_email_interpolation_values(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___regulator___v2___service_pb2___InterpolationValue]: ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        deactivate_reason : typing___Optional[typing___Text] = None,
        freeze_reason : typing___Optional[typing___Text] = None,
        actor_token : typing___Optional[typing___Text] = None,
        routing_attribute : typing___Optional[typing___Text] = None,
        regulator_comment : typing___Optional[typing___Text] = None,
        case_reason : typing___Optional[typing___Iterable[typing___Text]] = None,
        case_route_pool_name : typing___Optional[typing___Text] = None,
        case_priority : typing___Optional[builtin___int] = None,
        record_id : typing___Optional[builtin___int] = None,
        concern : typing___Optional[squareup___skeptic___service_pb2___ConcernValue] = None,
        shadowban_reason : typing___Optional[typing___Text] = None,
        case_id_to_close : typing___Optional[builtin___int] = None,
        case_close_reason : typing___Optional[typing___Text] = None,
        case_token_to_close : typing___Optional[typing___Text] = None,
        regulator_email_to_send : typing___Optional[typing___Text] = None,
        flagged_model : typing___Optional[typing___Iterable[type___FlaggedModel]] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        country_code : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        assessment_metadata : typing___Optional[squareup___kp_common___rule_evaluation_pb2___AssessmentMetadata] = None,
        nonce_work_around_idempotence_check : typing___Optional[typing___Text] = None,
        sender_customer_token : typing___Optional[typing___Text] = None,
        recipient_customer_token : typing___Optional[typing___Text] = None,
        payment_transition_token : typing___Optional[typing___Text] = None,
        event_identifier_2 : typing___Optional[squareup___riskarbiter___api___detailed_scored_events_pb2___EventIdentifier2] = None,
        reserve_hold_rate_basis : typing___Optional[builtin___int] = None,
        reserve_hold_duration_days : typing___Optional[builtin___int] = None,
        master_merchant_token : typing___Optional[typing___Text] = None,
        secure_profile_request_token : typing___Optional[typing___Text] = None,
        regulator_case_token : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[builtin___int] = None,
        regulator_email_interpolation_values : typing___Optional[typing___Iterable[squareup___regulator___v2___service_pb2___InterpolationValue]] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        failed_debit_amount : typing___Optional[builtin___int] = None,
        balance_token : typing___Optional[typing___Text] = None,
        square_bank_account_instruments_id : typing___Optional[typing___Text] = None,
        total_atomic_amount : typing___Optional[builtin___int] = None,
        bank_account_instruments_id : typing___Optional[typing___Text] = None,
        bank_settlement_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"actor_token",b"actor_token",u"assessment_metadata",b"assessment_metadata",u"balance_token",b"balance_token",u"bank_account_instruments_id",b"bank_account_instruments_id",u"bank_settlement_token",b"bank_settlement_token",u"case_close_reason",b"case_close_reason",u"case_id_to_close",b"case_id_to_close",u"case_priority",b"case_priority",u"case_route_pool_name",b"case_route_pool_name",u"case_token_to_close",b"case_token_to_close",u"concern",b"concern",u"country_code",b"country_code",u"created_at",b"created_at",u"currency_code",b"currency_code",u"deactivate_reason",b"deactivate_reason",u"event_identifier_2",b"event_identifier_2",u"failed_debit_amount",b"failed_debit_amount",u"freeze_reason",b"freeze_reason",u"instrument_token",b"instrument_token",u"master_merchant_token",b"master_merchant_token",u"nonce_work_around_idempotence_check",b"nonce_work_around_idempotence_check",u"payment_transition_token",b"payment_transition_token",u"recipient_customer_token",b"recipient_customer_token",u"record_id",b"record_id",u"regulator_case_token",b"regulator_case_token",u"regulator_comment",b"regulator_comment",u"regulator_email_to_send",b"regulator_email_to_send",u"reserve_hold_duration_days",b"reserve_hold_duration_days",u"reserve_hold_rate_basis",b"reserve_hold_rate_basis",u"routing_attribute",b"routing_attribute",u"secure_profile_request_token",b"secure_profile_request_token",u"sender_customer_token",b"sender_customer_token",u"shadowban_reason",b"shadowban_reason",u"square_bank_account_instruments_id",b"square_bank_account_instruments_id",u"total_atomic_amount",b"total_atomic_amount",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"actor_token",b"actor_token",u"assessment_metadata",b"assessment_metadata",u"balance_token",b"balance_token",u"bank_account_instruments_id",b"bank_account_instruments_id",u"bank_settlement_token",b"bank_settlement_token",u"case_close_reason",b"case_close_reason",u"case_id_to_close",b"case_id_to_close",u"case_priority",b"case_priority",u"case_reason",b"case_reason",u"case_route_pool_name",b"case_route_pool_name",u"case_token_to_close",b"case_token_to_close",u"concern",b"concern",u"country_code",b"country_code",u"created_at",b"created_at",u"currency_code",b"currency_code",u"deactivate_reason",b"deactivate_reason",u"event_identifier_2",b"event_identifier_2",u"failed_debit_amount",b"failed_debit_amount",u"flagged_model",b"flagged_model",u"freeze_reason",b"freeze_reason",u"instrument_token",b"instrument_token",u"master_merchant_token",b"master_merchant_token",u"nonce_work_around_idempotence_check",b"nonce_work_around_idempotence_check",u"payment_transition_token",b"payment_transition_token",u"recipient_customer_token",b"recipient_customer_token",u"record_id",b"record_id",u"regulator_case_token",b"regulator_case_token",u"regulator_comment",b"regulator_comment",u"regulator_email_interpolation_values",b"regulator_email_interpolation_values",u"regulator_email_to_send",b"regulator_email_to_send",u"reserve_hold_duration_days",b"reserve_hold_duration_days",u"reserve_hold_rate_basis",b"reserve_hold_rate_basis",u"routing_attribute",b"routing_attribute",u"secure_profile_request_token",b"secure_profile_request_token",u"sender_customer_token",b"sender_customer_token",u"shadowban_reason",b"shadowban_reason",u"square_bank_account_instruments_id",b"square_bank_account_instruments_id",u"total_atomic_amount",b"total_atomic_amount",u"unit_token",b"unit_token"]) -> None: ...
type___RiskActionData = RiskActionData

class RiskActionJob(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    action: type___RiskActionValue = ...

    @property
    def data(self) -> type___RiskActionData: ...

    @property
    def continuation(self) -> type___RiskActionJob: ...

    def __init__(self,
        *,
        action : typing___Optional[type___RiskActionValue] = None,
        data : typing___Optional[type___RiskActionData] = None,
        continuation : typing___Optional[type___RiskActionJob] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"continuation",b"continuation",u"data",b"data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"continuation",b"continuation",u"data",b"data"]) -> None: ...
type___RiskActionJob = RiskActionJob

class FlaggedModel(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    model_name: typing___Text = ...
    score: builtin___float = ...
    concern: squareup___skeptic___service_pb2___ConcernValue = ...
    should_auto_freeze: builtin___bool = ...

    def __init__(self,
        *,
        model_name : typing___Optional[typing___Text] = None,
        score : typing___Optional[builtin___float] = None,
        concern : typing___Optional[squareup___skeptic___service_pb2___ConcernValue] = None,
        should_auto_freeze : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"concern",b"concern",u"model_name",b"model_name",u"score",b"score",u"should_auto_freeze",b"should_auto_freeze"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"concern",b"concern",u"model_name",b"model_name",u"score",b"score",u"should_auto_freeze",b"should_auto_freeze"]) -> None: ...
type___FlaggedModel = FlaggedModel
