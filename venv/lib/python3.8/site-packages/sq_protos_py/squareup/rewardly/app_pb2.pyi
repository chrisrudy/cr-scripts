# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.client.client_info_pb2 import (
    ClientInfo as squareup___cash___client___client_info_pb2___ClientInfo,
)

from sq_protos_py.squareup.cash.plasma.ui.UiFlowProto_pb2 import (
    UiFlow as squareup___cash___plasma___ui___UiFlowProto_pb2___UiFlow,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.rewardly.common_pb2 import (
    BlockedOnRequirements as squareup___rewardly___common_pb2___BlockedOnRequirements,
)

from sq_protos_py.squareup.rewardly.ui_pb2 import (
    UiReward as squareup___rewardly___ui_pb2___UiReward,
    UiRewardsData as squareup___rewardly___ui_pb2___UiRewardsData,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class GetRewardsRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    app_token: typing___Text = ...

    @property
    def client_info(self) -> squareup___cash___client___client_info_pb2___ClientInfo: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        app_token : typing___Optional[typing___Text] = None,
        client_info : typing___Optional[squareup___cash___client___client_info_pb2___ClientInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"app_token",b"app_token",u"client_info",b"client_info",u"customer_token",b"customer_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"app_token",b"app_token",u"client_info",b"client_info",u"customer_token",b"customer_token"]) -> None: ...
type___GetRewardsRequest = GetRewardsRequest

class GetRewardsResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def rewards_data(self) -> squareup___rewardly___ui_pb2___UiRewardsData: ...

    def __init__(self,
        *,
        rewards_data : typing___Optional[squareup___rewardly___ui_pb2___UiRewardsData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"rewards_data",b"rewards_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"rewards_data",b"rewards_data"]) -> None: ...
type___GetRewardsResponse = GetRewardsResponse

class RewardRequestContext(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    user_confirmed: builtin___bool = ...
    user_confirmed_removal: builtin___bool = ...
    eligible_issued_card: builtin___bool = ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        user_confirmed : typing___Optional[builtin___bool] = None,
        user_confirmed_removal : typing___Optional[builtin___bool] = None,
        eligible_issued_card : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"eligible_issued_card",b"eligible_issued_card",u"user_confirmed",b"user_confirmed",u"user_confirmed_removal",b"user_confirmed_removal"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"eligible_issued_card",b"eligible_issued_card",u"user_confirmed",b"user_confirmed",u"user_confirmed_removal",b"user_confirmed_removal"]) -> None: ...
type___RewardRequestContext = RewardRequestContext

class RewardResponseContext(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def selected_reward(self) -> squareup___rewardly___ui_pb2___UiReward: ...

    @property
    def replaced_reward(self) -> squareup___rewardly___ui_pb2___UiReward: ...

    @property
    def rewards_data(self) -> squareup___rewardly___ui_pb2___UiRewardsData: ...

    def __init__(self,
        *,
        selected_reward : typing___Optional[squareup___rewardly___ui_pb2___UiReward] = None,
        replaced_reward : typing___Optional[squareup___rewardly___ui_pb2___UiReward] = None,
        rewards_data : typing___Optional[squareup___rewardly___ui_pb2___UiRewardsData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"replaced_reward",b"replaced_reward",u"rewards_data",b"rewards_data",u"selected_reward",b"selected_reward"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"replaced_reward",b"replaced_reward",u"rewards_data",b"rewards_data",u"selected_reward",b"selected_reward"]) -> None: ...
type___RewardResponseContext = RewardResponseContext

class AddOrUpdateRewardRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    replace_selected_reward_token: typing___Text = ...
    flow_token: typing___Text = ...
    reward_token: typing___Text = ...
    app_token: typing___Text = ...

    @property
    def request_context(self) -> type___RewardRequestContext: ...

    @property
    def client_info(self) -> squareup___cash___client___client_info_pb2___ClientInfo: ...

    def __init__(self,
        *,
        replace_selected_reward_token : typing___Optional[typing___Text] = None,
        flow_token : typing___Optional[typing___Text] = None,
        reward_token : typing___Optional[typing___Text] = None,
        request_context : typing___Optional[type___RewardRequestContext] = None,
        app_token : typing___Optional[typing___Text] = None,
        client_info : typing___Optional[squareup___cash___client___client_info_pb2___ClientInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"app_token",b"app_token",u"client_info",b"client_info",u"flow_token",b"flow_token",u"replace_selected_reward_token",b"replace_selected_reward_token",u"request_context",b"request_context",u"reward_token",b"reward_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"app_token",b"app_token",u"client_info",b"client_info",u"flow_token",b"flow_token",u"replace_selected_reward_token",b"replace_selected_reward_token",u"request_context",b"request_context",u"reward_token",b"reward_token"]) -> None: ...
type___AddOrUpdateRewardRequest = AddOrUpdateRewardRequest

class AddOrUpdateRewardResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Success(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ReasonValue = typing___NewType('ReasonValue', builtin___int)
        type___ReasonValue = ReasonValue
        Reason: _Reason
        class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AddOrUpdateRewardResponse.Success.ReasonValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            REWARD_ADDED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 1)
            REWARD_REPLACED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 2)
            USER_CONFIRMATION_SKIPPED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 3)
            REWARD_REMOVED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 4)
            REWARD_REPLACED_FREE_SWAP_USED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 5)
            SKIPPED_USER_CONFIRMATION_REMOVAL = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 6)
            REWARD_REMOVED_FREE_SWAP_USED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 7)
            DEPRECATED_REWARD_REPLACED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 8)
            UPDATED_REWARD_REPLACED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 9)
            DEPRECATED_REWARD_REMOVED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 10)
            UPDATED_REWARD_REMOVED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 11)
        REWARD_ADDED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 1)
        REWARD_REPLACED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 2)
        USER_CONFIRMATION_SKIPPED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 3)
        REWARD_REMOVED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 4)
        REWARD_REPLACED_FREE_SWAP_USED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 5)
        SKIPPED_USER_CONFIRMATION_REMOVAL = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 6)
        REWARD_REMOVED_FREE_SWAP_USED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 7)
        DEPRECATED_REWARD_REPLACED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 8)
        UPDATED_REWARD_REPLACED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 9)
        DEPRECATED_REWARD_REMOVED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 10)
        UPDATED_REWARD_REMOVED = typing___cast(AddOrUpdateRewardResponse.Success.ReasonValue, 11)
        type___Reason = Reason

        reason: type___AddOrUpdateRewardResponse.Success.ReasonValue = ...
        boost_name: typing___Text = ...

        def __init__(self,
            *,
            reason : typing___Optional[type___AddOrUpdateRewardResponse.Success.ReasonValue] = None,
            boost_name : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"boost_name",b"boost_name",u"reason",b"reason"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"boost_name",b"boost_name",u"reason",b"reason"]) -> None: ...
    type___Success = Success

    class Failure(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ReasonValue = typing___NewType('ReasonValue', builtin___int)
        type___ReasonValue = ReasonValue
        Reason: _Reason
        class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AddOrUpdateRewardResponse.Failure.ReasonValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            LOCKED_SLOT = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 1)
            LOCKED_REWARD = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 2)
            UNAVAILABLE_SLOTS = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 3)
            SELECTED_REWARD_LOCKED = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 4)
            REWARD_LOCKED_CANNOT_BE_REMOVED = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 5)
        LOCKED_SLOT = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 1)
        LOCKED_REWARD = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 2)
        UNAVAILABLE_SLOTS = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 3)
        SELECTED_REWARD_LOCKED = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 4)
        REWARD_LOCKED_CANNOT_BE_REMOVED = typing___cast(AddOrUpdateRewardResponse.Failure.ReasonValue, 5)
        type___Reason = Reason

        class SelectedRewardLocked(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            waiting_time: builtin___int = ...

            def __init__(self,
                *,
                waiting_time : typing___Optional[builtin___int] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"waiting_time",b"waiting_time"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"waiting_time",b"waiting_time"]) -> None: ...
        type___SelectedRewardLocked = SelectedRewardLocked

        class RewardLockedCannotBeRemoved(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            waiting_time: builtin___int = ...

            def __init__(self,
                *,
                waiting_time : typing___Optional[builtin___int] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"waiting_time",b"waiting_time"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"waiting_time",b"waiting_time"]) -> None: ...
        type___RewardLockedCannotBeRemoved = RewardLockedCannotBeRemoved

        reason: type___AddOrUpdateRewardResponse.Failure.ReasonValue = ...

        @property
        def selected_reward_locked(self) -> type___AddOrUpdateRewardResponse.Failure.SelectedRewardLocked: ...

        @property
        def reward_locked_cannot_be_removed(self) -> type___AddOrUpdateRewardResponse.Failure.RewardLockedCannotBeRemoved: ...

        def __init__(self,
            *,
            reason : typing___Optional[type___AddOrUpdateRewardResponse.Failure.ReasonValue] = None,
            selected_reward_locked : typing___Optional[type___AddOrUpdateRewardResponse.Failure.SelectedRewardLocked] = None,
            reward_locked_cannot_be_removed : typing___Optional[type___AddOrUpdateRewardResponse.Failure.RewardLockedCannotBeRemoved] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"Data",b"Data",u"reason",b"reason",u"reward_locked_cannot_be_removed",b"reward_locked_cannot_be_removed",u"selected_reward_locked",b"selected_reward_locked"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"Data",b"Data",u"reason",b"reason",u"reward_locked_cannot_be_removed",b"reward_locked_cannot_be_removed",u"selected_reward_locked",b"selected_reward_locked"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"Data",b"Data"]) -> typing_extensions___Literal["selected_reward_locked","reward_locked_cannot_be_removed"]: ...
    type___Failure = Failure

    class Result(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def success(self) -> type___AddOrUpdateRewardResponse.Success: ...

        @property
        def failure(self) -> type___AddOrUpdateRewardResponse.Failure: ...

        @property
        def blocked_on_requirements(self) -> squareup___rewardly___common_pb2___BlockedOnRequirements: ...

        def __init__(self,
            *,
            success : typing___Optional[type___AddOrUpdateRewardResponse.Success] = None,
            failure : typing___Optional[type___AddOrUpdateRewardResponse.Failure] = None,
            blocked_on_requirements : typing___Optional[squareup___rewardly___common_pb2___BlockedOnRequirements] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"blocked_on_requirements",b"blocked_on_requirements",u"failure",b"failure",u"result",b"result",u"success",b"success"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"blocked_on_requirements",b"blocked_on_requirements",u"failure",b"failure",u"result",b"result",u"success",b"success"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["success","failure","blocked_on_requirements"]: ...
    type___Result = Result


    @property
    def result(self) -> type___AddOrUpdateRewardResponse.Result: ...

    @property
    def response_context(self) -> type___RewardResponseContext: ...

    @property
    def ui_flow(self) -> squareup___cash___plasma___ui___UiFlowProto_pb2___UiFlow: ...

    def __init__(self,
        *,
        result : typing___Optional[type___AddOrUpdateRewardResponse.Result] = None,
        response_context : typing___Optional[type___RewardResponseContext] = None,
        ui_flow : typing___Optional[squareup___cash___plasma___ui___UiFlowProto_pb2___UiFlow] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"response_context",b"response_context",u"result",b"result",u"ui_flow",b"ui_flow"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"response_context",b"response_context",u"result",b"result",u"ui_flow",b"ui_flow"]) -> None: ...
type___AddOrUpdateRewardResponse = AddOrUpdateRewardResponse

class ReportMissingRewardRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    transaction_token: typing___Text = ...

    @property
    def client_info(self) -> squareup___cash___client___client_info_pb2___ClientInfo: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        transaction_token : typing___Optional[typing___Text] = None,
        client_info : typing___Optional[squareup___cash___client___client_info_pb2___ClientInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"client_info",b"client_info",u"customer_token",b"customer_token",u"transaction_token",b"transaction_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_info",b"client_info",u"customer_token",b"customer_token",u"transaction_token",b"transaction_token"]) -> None: ...
type___ReportMissingRewardRequest = ReportMissingRewardRequest

class ReportMissingRewardResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ReportCreated(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___ReportCreated = ReportCreated

    class ReportInReview(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___ReportInReview = ReportInReview

    class ReportDenied(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ReasonValue = typing___NewType('ReasonValue', builtin___int)
        type___ReasonValue = ReasonValue
        Reason: _Reason
        class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ReportMissingRewardResponse.ReportDenied.ReasonValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            NO_ACTIVE_SELECTED_REWARDS = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 1)
            UNQUALIFIED_TRANSACTION = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 2)
            RATE_LIMITED = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 3)
            MINIMUM_NOT_MET = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 4)
            NON_CATEGORY_BOOST = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 5)
            INELIGIBLE_MERCHANT_CATEGORY = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 6)
            INELIGIBLE_PARENT_MERCHANT_CATEGORY = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 7)
        NO_ACTIVE_SELECTED_REWARDS = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 1)
        UNQUALIFIED_TRANSACTION = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 2)
        RATE_LIMITED = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 3)
        MINIMUM_NOT_MET = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 4)
        NON_CATEGORY_BOOST = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 5)
        INELIGIBLE_MERCHANT_CATEGORY = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 6)
        INELIGIBLE_PARENT_MERCHANT_CATEGORY = typing___cast(ReportMissingRewardResponse.ReportDenied.ReasonValue, 7)
        type___Reason = Reason

        class NoActiveSelectedRewards(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            def __init__(self,
                ) -> None: ...
        type___NoActiveSelectedRewards = NoActiveSelectedRewards

        class UnqualifiedTransaction(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            def __init__(self,
                ) -> None: ...
        type___UnqualifiedTransaction = UnqualifiedTransaction

        class RateLimited(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            time_window_ms: builtin___int = ...

            def __init__(self,
                *,
                time_window_ms : typing___Optional[builtin___int] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"time_window_ms",b"time_window_ms"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"time_window_ms",b"time_window_ms"]) -> None: ...
        type___RateLimited = RateLimited

        class MinimumNotMet(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            @property
            def amount(self) -> squareup___common___currency_pb2___Money: ...

            def __init__(self,
                *,
                amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount"]) -> None: ...
        type___MinimumNotMet = MinimumNotMet

        class NonCategoryBoost(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            def __init__(self,
                ) -> None: ...
        type___NonCategoryBoost = NonCategoryBoost

        class IneligibleCategoryBoost(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

            def __init__(self,
                ) -> None: ...
        type___IneligibleCategoryBoost = IneligibleCategoryBoost

        reason: type___ReportMissingRewardResponse.ReportDenied.ReasonValue = ...

        @property
        def no_active_selected_rewards(self) -> type___ReportMissingRewardResponse.ReportDenied.NoActiveSelectedRewards: ...

        @property
        def unqualified_transaction(self) -> type___ReportMissingRewardResponse.ReportDenied.UnqualifiedTransaction: ...

        @property
        def rate_limited(self) -> type___ReportMissingRewardResponse.ReportDenied.RateLimited: ...

        @property
        def minimum_not_met(self) -> type___ReportMissingRewardResponse.ReportDenied.MinimumNotMet: ...

        @property
        def non_category_boost(self) -> type___ReportMissingRewardResponse.ReportDenied.NonCategoryBoost: ...

        @property
        def ineligible_category_boost(self) -> type___ReportMissingRewardResponse.ReportDenied.IneligibleCategoryBoost: ...

        def __init__(self,
            *,
            reason : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.ReasonValue] = None,
            no_active_selected_rewards : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.NoActiveSelectedRewards] = None,
            unqualified_transaction : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.UnqualifiedTransaction] = None,
            rate_limited : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.RateLimited] = None,
            minimum_not_met : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.MinimumNotMet] = None,
            non_category_boost : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.NonCategoryBoost] = None,
            ineligible_category_boost : typing___Optional[type___ReportMissingRewardResponse.ReportDenied.IneligibleCategoryBoost] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"ineligible_category_boost",b"ineligible_category_boost",u"minimum_not_met",b"minimum_not_met",u"no_active_selected_rewards",b"no_active_selected_rewards",u"non_category_boost",b"non_category_boost",u"rate_limited",b"rate_limited",u"reason",b"reason",u"result",b"result",u"unqualified_transaction",b"unqualified_transaction"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ineligible_category_boost",b"ineligible_category_boost",u"minimum_not_met",b"minimum_not_met",u"no_active_selected_rewards",b"no_active_selected_rewards",u"non_category_boost",b"non_category_boost",u"rate_limited",b"rate_limited",u"reason",b"reason",u"result",b"result",u"unqualified_transaction",b"unqualified_transaction"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["no_active_selected_rewards","unqualified_transaction","rate_limited","minimum_not_met","non_category_boost","ineligible_category_boost"]: ...
    type___ReportDenied = ReportDenied

    class ReportApproved(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        def __init__(self,
            ) -> None: ...
    type___ReportApproved = ReportApproved


    @property
    def report_created(self) -> type___ReportMissingRewardResponse.ReportCreated: ...

    @property
    def report_in_review(self) -> type___ReportMissingRewardResponse.ReportInReview: ...

    @property
    def report_denied(self) -> type___ReportMissingRewardResponse.ReportDenied: ...

    @property
    def report_approved(self) -> type___ReportMissingRewardResponse.ReportApproved: ...

    def __init__(self,
        *,
        report_created : typing___Optional[type___ReportMissingRewardResponse.ReportCreated] = None,
        report_in_review : typing___Optional[type___ReportMissingRewardResponse.ReportInReview] = None,
        report_denied : typing___Optional[type___ReportMissingRewardResponse.ReportDenied] = None,
        report_approved : typing___Optional[type___ReportMissingRewardResponse.ReportApproved] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"report_approved",b"report_approved",u"report_created",b"report_created",u"report_denied",b"report_denied",u"report_in_review",b"report_in_review",u"result",b"result"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"report_approved",b"report_approved",u"report_created",b"report_created",u"report_denied",b"report_denied",u"report_in_review",b"report_in_review",u"result",b"result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"result",b"result"]) -> typing_extensions___Literal["report_created","report_in_review","report_denied","report_approved"]: ...
type___ReportMissingRewardResponse = ReportMissingRewardResponse

class UnlockRewardRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    reward_token: typing___Text = ...
    app_token: typing___Text = ...

    @property
    def client_info(self) -> squareup___cash___client___client_info_pb2___ClientInfo: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        reward_token : typing___Optional[typing___Text] = None,
        app_token : typing___Optional[typing___Text] = None,
        client_info : typing___Optional[squareup___cash___client___client_info_pb2___ClientInfo] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"app_token",b"app_token",u"client_info",b"client_info",u"customer_token",b"customer_token",u"reward_token",b"reward_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"app_token",b"app_token",u"client_info",b"client_info",u"customer_token",b"customer_token",u"reward_token",b"reward_token"]) -> None: ...
type___UnlockRewardRequest = UnlockRewardRequest

class UnlockRewardResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def rewards_data(self) -> squareup___rewardly___ui_pb2___UiRewardsData: ...

    def __init__(self,
        *,
        rewards_data : typing___Optional[squareup___rewardly___ui_pb2___UiRewardsData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"rewards_data",b"rewards_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"rewards_data",b"rewards_data"]) -> None: ...
type___UnlockRewardResponse = UnlockRewardResponse

class GetBoostConfigRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___GetBoostConfigRequest = GetBoostConfigRequest

class GetBoostConfigResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class BtcBoostUpsell(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class Button(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            label_text: typing___Text = ...
            url: typing___Text = ...

            def __init__(self,
                *,
                label_text : typing___Optional[typing___Text] = None,
                url : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"label_text",b"label_text",u"url",b"url"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"label_text",b"label_text",u"url",b"url"]) -> None: ...
        type___Button = Button

        image_url: typing___Text = ...
        title_text: typing___Text = ...
        body_text: typing___Text = ...

        @property
        def primary_button(self) -> type___GetBoostConfigResponse.BtcBoostUpsell.Button: ...

        def __init__(self,
            *,
            image_url : typing___Optional[typing___Text] = None,
            title_text : typing___Optional[typing___Text] = None,
            body_text : typing___Optional[typing___Text] = None,
            primary_button : typing___Optional[type___GetBoostConfigResponse.BtcBoostUpsell.Button] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"body_text",b"body_text",u"image_url",b"image_url",u"primary_button",b"primary_button",u"title_text",b"title_text"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"body_text",b"body_text",u"image_url",b"image_url",u"primary_button",b"primary_button",u"title_text",b"title_text"]) -> None: ...
    type___BtcBoostUpsell = BtcBoostUpsell

    boost_expiration_hint_threshold_basis_points: builtin___int = ...

    @property
    def btc_boost_upsell(self) -> type___GetBoostConfigResponse.BtcBoostUpsell: ...

    def __init__(self,
        *,
        boost_expiration_hint_threshold_basis_points : typing___Optional[builtin___int] = None,
        btc_boost_upsell : typing___Optional[type___GetBoostConfigResponse.BtcBoostUpsell] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"boost_expiration_hint_threshold_basis_points",b"boost_expiration_hint_threshold_basis_points",u"btc_boost_upsell",b"btc_boost_upsell"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"boost_expiration_hint_threshold_basis_points",b"boost_expiration_hint_threshold_basis_points",u"btc_boost_upsell",b"btc_boost_upsell"]) -> None: ...
type___GetBoostConfigResponse = GetBoostConfigResponse
