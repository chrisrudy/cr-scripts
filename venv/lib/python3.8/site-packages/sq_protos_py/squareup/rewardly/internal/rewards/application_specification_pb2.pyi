# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class ApplicationSpecification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class TransactionDiscountSpecification(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        RewardTypeValue = typing___NewType('RewardTypeValue', builtin___int)
        type___RewardTypeValue = RewardTypeValue
        RewardType: _RewardType
        class _RewardType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            SINGLE_CURRENCY = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue, 1)
            CROSS_CURRENCY = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue, 2)
        SINGLE_CURRENCY = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue, 1)
        CROSS_CURRENCY = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue, 2)
        type___RewardType = RewardType

        class RateLimit(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            TimeUnitValue = typing___NewType('TimeUnitValue', builtin___int)
            type___TimeUnitValue = TimeUnitValue
            TimeUnit: _TimeUnit
            class _TimeUnit(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                MINUTES = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue, 1)
                HOURS = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue, 2)
                DAYS = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue, 3)
            MINUTES = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue, 1)
            HOURS = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue, 2)
            DAYS = typing___cast(ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue, 3)
            type___TimeUnit = TimeUnit

            count: builtin___int = ...
            duration: builtin___int = ...
            time_unit: type___ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue = ...

            def __init__(self,
                *,
                count : typing___Optional[builtin___int] = None,
                duration : typing___Optional[builtin___int] = None,
                time_unit : typing___Optional[type___ApplicationSpecification.TransactionDiscountSpecification.RateLimit.TimeUnitValue] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"count",b"count",u"duration",b"duration",u"time_unit",b"time_unit"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"count",b"count",u"duration",b"duration",u"time_unit",b"time_unit"]) -> None: ...
        type___RateLimit = RateLimit

        basis_points: builtin___int = ...
        total_num_uses: builtin___int = ...
        reward_type: type___ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue = ...
        cross_currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...

        @property
        def amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def maximum_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def rate_limit(self) -> type___ApplicationSpecification.TransactionDiscountSpecification.RateLimit: ...

        def __init__(self,
            *,
            basis_points : typing___Optional[builtin___int] = None,
            amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            maximum_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            total_num_uses : typing___Optional[builtin___int] = None,
            rate_limit : typing___Optional[type___ApplicationSpecification.TransactionDiscountSpecification.RateLimit] = None,
            reward_type : typing___Optional[type___ApplicationSpecification.TransactionDiscountSpecification.RewardTypeValue] = None,
            cross_currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"basis_points",b"basis_points",u"cross_currency_code",b"cross_currency_code",u"discount",b"discount",u"maximum_amount",b"maximum_amount",u"rate_limit",b"rate_limit",u"reward_type",b"reward_type",u"total_num_uses",b"total_num_uses"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"basis_points",b"basis_points",u"cross_currency_code",b"cross_currency_code",u"discount",b"discount",u"maximum_amount",b"maximum_amount",u"rate_limit",b"rate_limit",u"reward_type",b"reward_type",u"total_num_uses",b"total_num_uses"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"discount",b"discount"]) -> typing_extensions___Literal["basis_points","amount"]: ...
    type___TransactionDiscountSpecification = TransactionDiscountSpecification

    class Specification(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def transaction_discount_specification(self) -> type___ApplicationSpecification.TransactionDiscountSpecification: ...

        def __init__(self,
            *,
            transaction_discount_specification : typing___Optional[type___ApplicationSpecification.TransactionDiscountSpecification] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"specification",b"specification",u"transaction_discount_specification",b"transaction_discount_specification"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"specification",b"specification",u"transaction_discount_specification",b"transaction_discount_specification"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"specification",b"specification"]) -> typing_extensions___Literal["transaction_discount_specification"]: ...
    type___Specification = Specification


    @property
    def specification(self) -> type___ApplicationSpecification.Specification: ...

    def __init__(self,
        *,
        specification : typing___Optional[type___ApplicationSpecification.Specification] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"specification",b"specification"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"specification",b"specification"]) -> None: ...
type___ApplicationSpecification = ApplicationSpecification
