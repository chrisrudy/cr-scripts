# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payabtest import service_pb2 as squareup_dot_payabtest_dot_service__pb2


class PayabtestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateExperiment = channel.unary_unary(
                '/squareup.payabtest.service.PayabtestService/CreateExperiment',
                request_serializer=squareup_dot_payabtest_dot_service__pb2.CreateExperimentRequest.SerializeToString,
                response_deserializer=squareup_dot_payabtest_dot_service__pb2.CreateExperimentResponse.FromString,
                )
        self.ChangeExperimentStatus = channel.unary_unary(
                '/squareup.payabtest.service.PayabtestService/ChangeExperimentStatus',
                request_serializer=squareup_dot_payabtest_dot_service__pb2.ChangeExperimentStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_payabtest_dot_service__pb2.ChangeExperimentStatusResponse.FromString,
                )
        self.GetExperiments = channel.unary_unary(
                '/squareup.payabtest.service.PayabtestService/GetExperiments',
                request_serializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentsRequest.SerializeToString,
                response_deserializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentsResponse.FromString,
                )
        self.UpdateExperiment = channel.unary_unary(
                '/squareup.payabtest.service.PayabtestService/UpdateExperiment',
                request_serializer=squareup_dot_payabtest_dot_service__pb2.UpdateExperimentRequest.SerializeToString,
                response_deserializer=squareup_dot_payabtest_dot_service__pb2.UpdateExperimentResponse.FromString,
                )
        self.GetExperimentChangeLog = channel.unary_unary(
                '/squareup.payabtest.service.PayabtestService/GetExperimentChangeLog',
                request_serializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentChangeLogRequest.SerializeToString,
                response_deserializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentChangeLogResponse.FromString,
                )
        self.GetExperiment = channel.unary_unary(
                '/squareup.payabtest.service.PayabtestService/GetExperiment',
                request_serializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentRequest.SerializeToString,
                response_deserializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentResponse.FromString,
                )


class PayabtestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeExperimentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperimentChangeLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExperiment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PayabtestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateExperiment,
                    request_deserializer=squareup_dot_payabtest_dot_service__pb2.CreateExperimentRequest.FromString,
                    response_serializer=squareup_dot_payabtest_dot_service__pb2.CreateExperimentResponse.SerializeToString,
            ),
            'ChangeExperimentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeExperimentStatus,
                    request_deserializer=squareup_dot_payabtest_dot_service__pb2.ChangeExperimentStatusRequest.FromString,
                    response_serializer=squareup_dot_payabtest_dot_service__pb2.ChangeExperimentStatusResponse.SerializeToString,
            ),
            'GetExperiments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiments,
                    request_deserializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentsRequest.FromString,
                    response_serializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentsResponse.SerializeToString,
            ),
            'UpdateExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateExperiment,
                    request_deserializer=squareup_dot_payabtest_dot_service__pb2.UpdateExperimentRequest.FromString,
                    response_serializer=squareup_dot_payabtest_dot_service__pb2.UpdateExperimentResponse.SerializeToString,
            ),
            'GetExperimentChangeLog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperimentChangeLog,
                    request_deserializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentChangeLogRequest.FromString,
                    response_serializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentChangeLogResponse.SerializeToString,
            ),
            'GetExperiment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExperiment,
                    request_deserializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentRequest.FromString,
                    response_serializer=squareup_dot_payabtest_dot_service__pb2.GetExperimentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payabtest.service.PayabtestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PayabtestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payabtest.service.PayabtestService/CreateExperiment',
            squareup_dot_payabtest_dot_service__pb2.CreateExperimentRequest.SerializeToString,
            squareup_dot_payabtest_dot_service__pb2.CreateExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeExperimentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payabtest.service.PayabtestService/ChangeExperimentStatus',
            squareup_dot_payabtest_dot_service__pb2.ChangeExperimentStatusRequest.SerializeToString,
            squareup_dot_payabtest_dot_service__pb2.ChangeExperimentStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperiments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payabtest.service.PayabtestService/GetExperiments',
            squareup_dot_payabtest_dot_service__pb2.GetExperimentsRequest.SerializeToString,
            squareup_dot_payabtest_dot_service__pb2.GetExperimentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payabtest.service.PayabtestService/UpdateExperiment',
            squareup_dot_payabtest_dot_service__pb2.UpdateExperimentRequest.SerializeToString,
            squareup_dot_payabtest_dot_service__pb2.UpdateExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperimentChangeLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payabtest.service.PayabtestService/GetExperimentChangeLog',
            squareup_dot_payabtest_dot_service__pb2.GetExperimentChangeLogRequest.SerializeToString,
            squareup_dot_payabtest_dot_service__pb2.GetExperimentChangeLogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetExperiment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payabtest.service.PayabtestService/GetExperiment',
            squareup_dot_payabtest_dot_service__pb2.GetExperimentRequest.SerializeToString,
            squareup_dot_payabtest_dot_service__pb2.GetExperimentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
