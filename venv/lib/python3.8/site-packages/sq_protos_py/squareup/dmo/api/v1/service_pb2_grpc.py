# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.dmo.api.v1 import banner_service_pb2 as squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2
from sq_protos_py.squareup.dmo.api.v1 import identity_service_pb2 as squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2
from sq_protos_py.squareup.dmo.api.v1 import notifications_settings_service_pb2 as squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2
from sq_protos_py.squareup.dmo.api.v1 import test_service_pb2 as squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2


class IdentityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetIdentity = channel.unary_unary(
                '/squareup.dmo.api.v1.IdentityService/GetIdentity',
                request_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2.GetIdentityRequest.SerializeToString,
                response_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2.GetIdentityResponse.FromString,
                )


class IdentityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IdentityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIdentity,
                    request_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2.GetIdentityRequest.FromString,
                    response_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2.GetIdentityResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.dmo.api.v1.IdentityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IdentityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.dmo.api.v1.IdentityService/GetIdentity',
            squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2.GetIdentityRequest.SerializeToString,
            squareup_dot_dmo_dot_api_dot_v1_dot_identity__service__pb2.GetIdentityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NotificationsSettingsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeviceMerchantNotificationsSettings = channel.unary_unary(
                '/squareup.dmo.api.v1.NotificationsSettingsService/GetDeviceMerchantNotificationsSettings',
                request_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.GetDeviceMerchantNotificationsSettingsRequest.SerializeToString,
                response_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.GetDeviceMerchantNotificationsSettingsResponse.FromString,
                )
        self.PutDeviceMerchantNotificationsSettings = channel.unary_unary(
                '/squareup.dmo.api.v1.NotificationsSettingsService/PutDeviceMerchantNotificationsSettings',
                request_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.PutDeviceMerchantNotificationsSettingsRequest.SerializeToString,
                response_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.PutDeviceMerchantNotificationsSettingsResponse.FromString,
                )


class NotificationsSettingsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDeviceMerchantNotificationsSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutDeviceMerchantNotificationsSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NotificationsSettingsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeviceMerchantNotificationsSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceMerchantNotificationsSettings,
                    request_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.GetDeviceMerchantNotificationsSettingsRequest.FromString,
                    response_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.GetDeviceMerchantNotificationsSettingsResponse.SerializeToString,
            ),
            'PutDeviceMerchantNotificationsSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.PutDeviceMerchantNotificationsSettings,
                    request_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.PutDeviceMerchantNotificationsSettingsRequest.FromString,
                    response_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.PutDeviceMerchantNotificationsSettingsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.dmo.api.v1.NotificationsSettingsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NotificationsSettingsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDeviceMerchantNotificationsSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.dmo.api.v1.NotificationsSettingsService/GetDeviceMerchantNotificationsSettings',
            squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.GetDeviceMerchantNotificationsSettingsRequest.SerializeToString,
            squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.GetDeviceMerchantNotificationsSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutDeviceMerchantNotificationsSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.dmo.api.v1.NotificationsSettingsService/PutDeviceMerchantNotificationsSettings',
            squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.PutDeviceMerchantNotificationsSettingsRequest.SerializeToString,
            squareup_dot_dmo_dot_api_dot_v1_dot_notifications__settings__service__pb2.PutDeviceMerchantNotificationsSettingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/squareup.dmo.api.v1.TestService/Ping',
                request_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2.PingRequest.SerializeToString,
                response_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2.PingResponse.FromString,
                )


class TestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2.PingRequest.FromString,
                    response_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2.PingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.dmo.api.v1.TestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.dmo.api.v1.TestService/Ping',
            squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2.PingRequest.SerializeToString,
            squareup_dot_dmo_dot_api_dot_v1_dot_test__service__pb2.PingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class BannerServiceStub(object):
    """
    A deprecated service that only exists so old clients don't post erroneous errors.
    If for some reason this service were to be removed, clients would fail silently, but cause noise
    to error logging services.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBanners = channel.unary_unary(
                '/squareup.dmo.api.v1.BannerService/GetBanners',
                request_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.GetBannersRequest.SerializeToString,
                response_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.GetBannersResponse.FromString,
                )
        self.PostBannerEvent = channel.unary_unary(
                '/squareup.dmo.api.v1.BannerService/PostBannerEvent',
                request_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.PostBannerEventRequest.SerializeToString,
                response_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.PostBannerEventResponse.FromString,
                )


class BannerServiceServicer(object):
    """
    A deprecated service that only exists so old clients don't post erroneous errors.
    If for some reason this service were to be removed, clients would fail silently, but cause noise
    to error logging services.
    """

    def GetBanners(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostBannerEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BannerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBanners': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBanners,
                    request_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.GetBannersRequest.FromString,
                    response_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.GetBannersResponse.SerializeToString,
            ),
            'PostBannerEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.PostBannerEvent,
                    request_deserializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.PostBannerEventRequest.FromString,
                    response_serializer=squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.PostBannerEventResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.dmo.api.v1.BannerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BannerService(object):
    """
    A deprecated service that only exists so old clients don't post erroneous errors.
    If for some reason this service were to be removed, clients would fail silently, but cause noise
    to error logging services.
    """

    @staticmethod
    def GetBanners(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.dmo.api.v1.BannerService/GetBanners',
            squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.GetBannersRequest.SerializeToString,
            squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.GetBannersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostBannerEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.dmo.api.v1.BannerService/PostBannerEvent',
            squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.PostBannerEventRequest.SerializeToString,
            squareup_dot_dmo_dot_api_dot_v1_dot_banner__service__pb2.PostBannerEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
