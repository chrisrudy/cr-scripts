# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ShardingStrategyValue = typing___NewType('ShardingStrategyValue', builtin___int)
type___ShardingStrategyValue = ShardingStrategyValue
ShardingStrategy: _ShardingStrategy
class _ShardingStrategy(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ShardingStrategyValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    US_DO_NOT_USE = typing___cast(ShardingStrategyValue, 0)
    STRATEGY_A = typing___cast(ShardingStrategyValue, 1)
    STRATEGY_B = typing___cast(ShardingStrategyValue, 2)
US_DO_NOT_USE = typing___cast(ShardingStrategyValue, 0)
STRATEGY_A = typing___cast(ShardingStrategyValue, 1)
STRATEGY_B = typing___cast(ShardingStrategyValue, 2)
type___ShardingStrategy = ShardingStrategy

class Signal(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    value: builtin___float = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        value : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name",u"value",b"value"]) -> None: ...
type___Signal = Signal
