# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.beacon import internal_service_pb2 as squareup_dot_beacon_dot_internal__service__pb2


class BeaconInternalServiceStub(object):
    """* For use between risk-systems services only. *
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PersistRiskInput = channel.unary_unary(
                '/squareup.beacon.service.BeaconInternalService/PersistRiskInput',
                request_serializer=squareup_dot_beacon_dot_internal__service__pb2.StoreRiskInputRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_internal__service__pb2.StoreRiskInputResponse.FromString,
                )
        self.CreateSnapshot = channel.unary_unary(
                '/squareup.beacon.service.BeaconInternalService/CreateSnapshot',
                request_serializer=squareup_dot_beacon_dot_internal__service__pb2.CreateSnapshotRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_internal__service__pb2.CreateSnapshotResponse.FromString,
                )
        self.SyncSnapshot = channel.unary_unary(
                '/squareup.beacon.service.BeaconInternalService/SyncSnapshot',
                request_serializer=squareup_dot_beacon_dot_internal__service__pb2.SyncSnapshotRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_internal__service__pb2.SyncSnapshotResponse.FromString,
                )
        self.UpdateSnapshotState = channel.unary_unary(
                '/squareup.beacon.service.BeaconInternalService/UpdateSnapshotState',
                request_serializer=squareup_dot_beacon_dot_internal__service__pb2.UpdateSnapshotStateRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_internal__service__pb2.UpdateSnapshotStateResponse.FromString,
                )


class BeaconInternalServiceServicer(object):
    """* For use between risk-systems services only. *
    """

    def PersistRiskInput(self, request, context):
        """*
        Persist data in beacon for signal evaluation, if the endpoint hits the inactive DC, we route it
        to the active DC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSnapshot(self, request, context):
        """*
        Create an entry in the snapshot_v5 table, if the endpoint hits the inactive DC, we route it
        to the active DC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SyncSnapshot(self, request, context):
        """*
        Mark the snapshot as ready to sync, if the endpoint hits the inactive DC, we route it
        to the active DC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSnapshotState(self, request, context):
        """*
        Update the state of the snapshot, if the endpoint hits the inactive DC, we route it
        to the active DC
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BeaconInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PersistRiskInput': grpc.unary_unary_rpc_method_handler(
                    servicer.PersistRiskInput,
                    request_deserializer=squareup_dot_beacon_dot_internal__service__pb2.StoreRiskInputRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_internal__service__pb2.StoreRiskInputResponse.SerializeToString,
            ),
            'CreateSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSnapshot,
                    request_deserializer=squareup_dot_beacon_dot_internal__service__pb2.CreateSnapshotRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_internal__service__pb2.CreateSnapshotResponse.SerializeToString,
            ),
            'SyncSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.SyncSnapshot,
                    request_deserializer=squareup_dot_beacon_dot_internal__service__pb2.SyncSnapshotRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_internal__service__pb2.SyncSnapshotResponse.SerializeToString,
            ),
            'UpdateSnapshotState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSnapshotState,
                    request_deserializer=squareup_dot_beacon_dot_internal__service__pb2.UpdateSnapshotStateRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_internal__service__pb2.UpdateSnapshotStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beacon.service.BeaconInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BeaconInternalService(object):
    """* For use between risk-systems services only. *
    """

    @staticmethod
    def PersistRiskInput(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.BeaconInternalService/PersistRiskInput',
            squareup_dot_beacon_dot_internal__service__pb2.StoreRiskInputRequest.SerializeToString,
            squareup_dot_beacon_dot_internal__service__pb2.StoreRiskInputResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.BeaconInternalService/CreateSnapshot',
            squareup_dot_beacon_dot_internal__service__pb2.CreateSnapshotRequest.SerializeToString,
            squareup_dot_beacon_dot_internal__service__pb2.CreateSnapshotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SyncSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.BeaconInternalService/SyncSnapshot',
            squareup_dot_beacon_dot_internal__service__pb2.SyncSnapshotRequest.SerializeToString,
            squareup_dot_beacon_dot_internal__service__pb2.SyncSnapshotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSnapshotState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.BeaconInternalService/UpdateSnapshotState',
            squareup_dot_beacon_dot_internal__service__pb2.UpdateSnapshotStateRequest.SerializeToString,
            squareup_dot_beacon_dot_internal__service__pb2.UpdateSnapshotStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
