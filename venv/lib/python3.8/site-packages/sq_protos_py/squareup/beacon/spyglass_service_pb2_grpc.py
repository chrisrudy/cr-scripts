# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.beacon import spyglass_service_pb2 as squareup_dot_beacon_dot_spyglass__service__pb2


class SpyglassServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSnapshotData = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/GetSnapshotData',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotDataRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotDataResponse.FromString,
                )
        self.GetRawData = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/GetRawData',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRawDataRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRawDataResponse.FromString,
                )
        self.CompareSnapshotSignals = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/CompareSnapshotSignals',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.CompareSnapshotSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.CompareSnapshotSignalsResponse.FromString,
                )
        self.GetRandomToken = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/GetRandomToken',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRandomTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRandomTokenResponse.FromString,
                )
        self.GetSnapshots = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/GetSnapshots',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotsResponse.FromString,
                )
        self.GetEventData = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/GetEventData',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetEventDataRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetEventDataResponse.FromString,
                )
        self.AnalyzeSnapshotComparison = channel.unary_unary(
                '/squareup.beacon.service.SpyglassService/AnalyzeSnapshotComparison',
                request_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.AnalyzeSnapshotComparisonRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.AnalyzeSnapshotComparisonResponse.FromString,
                )


class SpyglassServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSnapshotData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRawData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompareSnapshotSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRandomToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSnapshots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEventData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeSnapshotComparison(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpyglassServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSnapshotData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSnapshotData,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotDataRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotDataResponse.SerializeToString,
            ),
            'GetRawData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRawData,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRawDataRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRawDataResponse.SerializeToString,
            ),
            'CompareSnapshotSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.CompareSnapshotSignals,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.CompareSnapshotSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.CompareSnapshotSignalsResponse.SerializeToString,
            ),
            'GetRandomToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRandomToken,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRandomTokenRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetRandomTokenResponse.SerializeToString,
            ),
            'GetSnapshots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSnapshots,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotsResponse.SerializeToString,
            ),
            'GetEventData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEventData,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetEventDataRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.GetEventDataResponse.SerializeToString,
            ),
            'AnalyzeSnapshotComparison': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeSnapshotComparison,
                    request_deserializer=squareup_dot_beacon_dot_spyglass__service__pb2.AnalyzeSnapshotComparisonRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_spyglass__service__pb2.AnalyzeSnapshotComparisonResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beacon.service.SpyglassService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SpyglassService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSnapshotData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/GetSnapshotData',
            squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotDataRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRawData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/GetRawData',
            squareup_dot_beacon_dot_spyglass__service__pb2.GetRawDataRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.GetRawDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompareSnapshotSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/CompareSnapshotSignals',
            squareup_dot_beacon_dot_spyglass__service__pb2.CompareSnapshotSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.CompareSnapshotSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRandomToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/GetRandomToken',
            squareup_dot_beacon_dot_spyglass__service__pb2.GetRandomTokenRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.GetRandomTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSnapshots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/GetSnapshots',
            squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotsRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.GetSnapshotsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEventData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/GetEventData',
            squareup_dot_beacon_dot_spyglass__service__pb2.GetEventDataRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.GetEventDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AnalyzeSnapshotComparison(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.SpyglassService/AnalyzeSnapshotComparison',
            squareup_dot_beacon_dot_spyglass__service__pb2.AnalyzeSnapshotComparisonRequest.SerializeToString,
            squareup_dot_beacon_dot_spyglass__service__pb2.AnalyzeSnapshotComparisonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
