# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.beacon import service_pb2 as squareup_dot_beacon_dot_service__pb2
from sq_protos_py.squareup.riskapi.datasources import neustar_pb2 as squareup_dot_riskapi_dot_datasources_dot_neustar__pb2


class RegisterSignalServiceStub(object):
    """* Corresponds to signals under com.squareup.signal.lib.signals.register 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCardSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/ListCardSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.EvaluateCardSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/EvaluateCardSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateCardSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.ListMerchantSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/ListMerchantSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.EvaluateMerchantSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/EvaluateMerchantSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateMerchantSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.ListPaymentSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/ListPaymentSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.EvaluateLoginSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/EvaluateLoginSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateLoginSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateLoginSignalsSynchronous = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/EvaluateLoginSignalsSynchronous',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateLoginSignalsSynchronousRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateOnboardActivationSignals = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/EvaluateOnboardActivationSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateOnboardActivationSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluatePaymentSignalsSynchronous = channel.unary_unary(
                '/squareup.beacon.service.RegisterSignalService/EvaluatePaymentSignalsSynchronous',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluatePaymentSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )


class RegisterSignalServiceServicer(object):
    """* Corresponds to signals under com.squareup.signal.lib.signals.register 
    """

    def ListCardSignals(self, request, context):
        """List* retry_timeout_millis were picked to be 100ms. 99th %ile latencies were O(10 ms)
        Evaluate* retry_timeout_millis were picked to be 2x the 99th %ile latencies for that service.

        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateCardSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMerchantSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateMerchantSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPaymentSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateLoginSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateLoginSignalsSynchronous(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateOnboardActivationSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluatePaymentSignalsSynchronous(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegisterSignalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCardSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCardSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'EvaluateCardSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateCardSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateCardSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'ListMerchantSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMerchantSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'EvaluateMerchantSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateMerchantSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateMerchantSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'ListPaymentSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPaymentSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'EvaluateLoginSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateLoginSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateLoginSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateLoginSignalsSynchronous': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateLoginSignalsSynchronous,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateLoginSignalsSynchronousRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateOnboardActivationSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateOnboardActivationSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateOnboardActivationSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluatePaymentSignalsSynchronous': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluatePaymentSignalsSynchronous,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluatePaymentSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beacon.service.RegisterSignalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RegisterSignalService(object):
    """* Corresponds to signals under com.squareup.signal.lib.signals.register 
    """

    @staticmethod
    def ListCardSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/ListCardSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateCardSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/EvaluateCardSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateCardSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMerchantSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/ListMerchantSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateMerchantSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/EvaluateMerchantSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateMerchantSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPaymentSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/ListPaymentSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateLoginSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/EvaluateLoginSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateLoginSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateLoginSignalsSynchronous(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/EvaluateLoginSignalsSynchronous',
            squareup_dot_beacon_dot_service__pb2.EvaluateLoginSignalsSynchronousRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateOnboardActivationSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/EvaluateOnboardActivationSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateOnboardActivationSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluatePaymentSignalsSynchronous(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.RegisterSignalService/EvaluatePaymentSignalsSynchronous',
            squareup_dot_beacon_dot_service__pb2.EvaluatePaymentSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GeneralSignalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EvaluateRiskInputSignalsSynchronous = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/EvaluateRiskInputSignalsSynchronous',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateRiskInputSignalsSynchronousRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateBatchRiskInputSignalsSynchronous = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/EvaluateBatchRiskInputSignalsSynchronous',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateBatchRiskInputSignalsSynchronousRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateBatchRiskInputSignalsSynchronousResponse.FromString,
                )
        self.EvaluateSignals = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/EvaluateSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateSnapshotSignals = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/EvaluateSnapshotSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.ListSignals = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/ListSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.GetSignalInfo = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/GetSignalInfo',
                request_serializer=squareup_dot_beacon_dot_service__pb2.GetSignalInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.GetSignalInfoResponse.FromString,
                )
        self.GetAvailableEntities = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/GetAvailableEntities',
                request_serializer=squareup_dot_beacon_dot_service__pb2.GetAvailableEntitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.GetAvailableEntitiesResponse.FromString,
                )
        self.ListAvailableSnapshots = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/ListAvailableSnapshots',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListAvailableSnapshotsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListAvailableSnapshotsResponse.FromString,
                )
        self.BackfillRegulatorUpdateTagSignals = channel.unary_unary(
                '/squareup.beacon.service.GeneralSignalService/BackfillRegulatorUpdateTagSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.BackfillRegulatorUpdateTagSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.BackfillRegulatorUpdateTagSignalsResponse.FromString,
                )


class GeneralSignalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EvaluateRiskInputSignalsSynchronous(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateBatchRiskInputSignalsSynchronous(self, request, context):
        """*
        Batch RiskInput evaluation endpoint which considers multiple RiskInput events at the same time
        and returns signals for each of them. NOTE: The main purpose of this endpoint is to evaluate
        signals which depend on multiple events (i.e avg, sum, count). To calculate
        these signals the groupers will group by using all the events provided in the request
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateSignals(self, request, context):
        """* Evaluate signals for requested entity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateSnapshotSignals(self, request, context):
        """* Evaluate signals from snapshot db for requested entity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSignals(self, request, context):
        """* List signals for requested entity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSignalInfo(self, request, context):
        """*
        Get detailed information about a particular signal by name.
        Initially added for the riskarbiter UI.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAvailableEntities(self, request, context):
        """* List entities that signals can be requested for 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAvailableSnapshots(self, request, context):
        """*
        Lists snapshots that can currently be queried. That is snapshots that can be specified in
        SignalRequestMetadata.max_snapshot_id in EvaluateSignals and EvaluateSnapshotSignals calls.
        This does not include Cash snapshots.
        This exists for capital, to be able to chose which snapshot to query, and to know which
        snapshots it could query howdah for stats.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BackfillRegulatorUpdateTagSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeneralSignalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EvaluateRiskInputSignalsSynchronous': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateRiskInputSignalsSynchronous,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateRiskInputSignalsSynchronousRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateBatchRiskInputSignalsSynchronous': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateBatchRiskInputSignalsSynchronous,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateBatchRiskInputSignalsSynchronousRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateBatchRiskInputSignalsSynchronousResponse.SerializeToString,
            ),
            'EvaluateSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateSnapshotSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateSnapshotSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'ListSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'GetSignalInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSignalInfo,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.GetSignalInfoRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.GetSignalInfoResponse.SerializeToString,
            ),
            'GetAvailableEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableEntities,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.GetAvailableEntitiesRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.GetAvailableEntitiesResponse.SerializeToString,
            ),
            'ListAvailableSnapshots': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAvailableSnapshots,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListAvailableSnapshotsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListAvailableSnapshotsResponse.SerializeToString,
            ),
            'BackfillRegulatorUpdateTagSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.BackfillRegulatorUpdateTagSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.BackfillRegulatorUpdateTagSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.BackfillRegulatorUpdateTagSignalsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beacon.service.GeneralSignalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GeneralSignalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EvaluateRiskInputSignalsSynchronous(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/EvaluateRiskInputSignalsSynchronous',
            squareup_dot_beacon_dot_service__pb2.EvaluateRiskInputSignalsSynchronousRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateBatchRiskInputSignalsSynchronous(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/EvaluateBatchRiskInputSignalsSynchronous',
            squareup_dot_beacon_dot_service__pb2.EvaluateBatchRiskInputSignalsSynchronousRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateBatchRiskInputSignalsSynchronousResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/EvaluateSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateSnapshotSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/EvaluateSnapshotSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/ListSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSignalInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/GetSignalInfo',
            squareup_dot_beacon_dot_service__pb2.GetSignalInfoRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.GetSignalInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAvailableEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/GetAvailableEntities',
            squareup_dot_beacon_dot_service__pb2.GetAvailableEntitiesRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.GetAvailableEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAvailableSnapshots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/ListAvailableSnapshots',
            squareup_dot_beacon_dot_service__pb2.ListAvailableSnapshotsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListAvailableSnapshotsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BackfillRegulatorUpdateTagSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.GeneralSignalService/BackfillRegulatorUpdateTagSignals',
            squareup_dot_beacon_dot_service__pb2.BackfillRegulatorUpdateTagSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.BackfillRegulatorUpdateTagSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CashSignalServiceStub(object):
    """* Corresponds to com.squareup.signal.lib.signals.cash. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListCardSignals = channel.unary_unary(
                '/squareup.beacon.service.CashSignalService/ListCardSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.EvaluateCardSignals = channel.unary_unary(
                '/squareup.beacon.service.CashSignalService/EvaluateCardSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateCashCardSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.ListCustomerSignals = channel.unary_unary(
                '/squareup.beacon.service.CashSignalService/ListCustomerSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.EvaluateCustomerSignals = channel.unary_unary(
                '/squareup.beacon.service.CashSignalService/EvaluateCustomerSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateCashCustomerSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.ListPaymentSignals = channel.unary_unary(
                '/squareup.beacon.service.CashSignalService/ListPaymentSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
                )
        self.EvaluatePaymentSignals = channel.unary_unary(
                '/squareup.beacon.service.CashSignalService/EvaluatePaymentSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateCashPaymentSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )


class CashSignalServiceServicer(object):
    """* Corresponds to com.squareup.signal.lib.signals.cash. 
    """

    def ListCardSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateCardSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCustomerSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateCustomerSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPaymentSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluatePaymentSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CashSignalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListCardSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCardSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'EvaluateCardSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateCardSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateCashCardSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'ListCustomerSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCustomerSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'EvaluateCustomerSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateCustomerSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateCashCustomerSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'ListPaymentSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPaymentSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.SerializeToString,
            ),
            'EvaluatePaymentSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluatePaymentSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateCashPaymentSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beacon.service.CashSignalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CashSignalService(object):
    """* Corresponds to com.squareup.signal.lib.signals.cash. 
    """

    @staticmethod
    def ListCardSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.CashSignalService/ListCardSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateCardSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.CashSignalService/EvaluateCardSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateCashCardSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCustomerSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.CashSignalService/ListCustomerSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateCustomerSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.CashSignalService/EvaluateCustomerSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateCashCustomerSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPaymentSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.CashSignalService/ListPaymentSignals',
            squareup_dot_beacon_dot_service__pb2.ListSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.ListSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluatePaymentSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.CashSignalService/EvaluatePaymentSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateCashPaymentSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ThirdPartySignalServiceStub(object):
    """* Service for signals based on third parties. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EvaluateMaxMindProxyScore = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/EvaluateMaxMindProxyScore',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateMaxMindProxyScoreRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateMaxMindProxyScoreResponse.FromString,
                )
        self.GetCachedMaxMindProxyScoreBatch = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/GetCachedMaxMindProxyScoreBatch',
                request_serializer=squareup_dot_beacon_dot_service__pb2.GetCachedMaxMindProxyScoreBatchRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.GetCachedMaxMindProxyScoreBatchResponse.FromString,
                )
        self.CallProfileBooster = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/CallProfileBooster',
                request_serializer=squareup_dot_beacon_dot_service__pb2.CallProfileBoosterRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.CallProfileBoosterResponse.FromString,
                )
        self.CallEmailAge = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/CallEmailAge',
                request_serializer=squareup_dot_beacon_dot_service__pb2.CallEmailAgeRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.CallEmailAgeResponse.FromString,
                )
        self.EvaluateDunAndBradstreetSignalsForProduct1 = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/EvaluateDunAndBradstreetSignalsForProduct1',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateDunAndBradstreetSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateDunAndBradstreetSignalsForProduct2 = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/EvaluateDunAndBradstreetSignalsForProduct2',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateDunAndBradstreetSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateEmailAgeSignals = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/EvaluateEmailAgeSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateEmailAgeSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.EvaluateProfileBoosterSignals = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/EvaluateProfileBoosterSignals',
                request_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateProfileBoosterSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
                )
        self.NeustarIpParseAndUpdate = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/NeustarIpParseAndUpdate',
                request_serializer=squareup_dot_beacon_dot_service__pb2.NeustarIpParseAndUpdateRequest.SerializeToString,
                response_deserializer=squareup_dot_beacon_dot_service__pb2.NeustarIpParseAndUpdateResponse.FromString,
                )
        self.NeustarIpInformation = channel.unary_unary(
                '/squareup.beacon.service.ThirdPartySignalService/NeustarIpInformation',
                request_serializer=squareup_dot_beacon_dot_service__pb2.NeustarIpInformationRequest.SerializeToString,
                response_deserializer=squareup_dot_riskapi_dot_datasources_dot_neustar__pb2.NeustarIpInfo.FromString,
                )


class ThirdPartySignalServiceServicer(object):
    """* Service for signals based on third parties. 
    """

    def EvaluateMaxMindProxyScore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCachedMaxMindProxyScoreBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallProfileBooster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallEmailAge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateDunAndBradstreetSignalsForProduct1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateDunAndBradstreetSignalsForProduct2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateEmailAgeSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateProfileBoosterSignals(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NeustarIpParseAndUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NeustarIpInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ThirdPartySignalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EvaluateMaxMindProxyScore': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateMaxMindProxyScore,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateMaxMindProxyScoreRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateMaxMindProxyScoreResponse.SerializeToString,
            ),
            'GetCachedMaxMindProxyScoreBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCachedMaxMindProxyScoreBatch,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.GetCachedMaxMindProxyScoreBatchRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.GetCachedMaxMindProxyScoreBatchResponse.SerializeToString,
            ),
            'CallProfileBooster': grpc.unary_unary_rpc_method_handler(
                    servicer.CallProfileBooster,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.CallProfileBoosterRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.CallProfileBoosterResponse.SerializeToString,
            ),
            'CallEmailAge': grpc.unary_unary_rpc_method_handler(
                    servicer.CallEmailAge,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.CallEmailAgeRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.CallEmailAgeResponse.SerializeToString,
            ),
            'EvaluateDunAndBradstreetSignalsForProduct1': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateDunAndBradstreetSignalsForProduct1,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateDunAndBradstreetSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateDunAndBradstreetSignalsForProduct2': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateDunAndBradstreetSignalsForProduct2,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateDunAndBradstreetSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateEmailAgeSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateEmailAgeSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateEmailAgeSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'EvaluateProfileBoosterSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateProfileBoosterSignals,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.EvaluateProfileBoosterSignalsRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.SerializeToString,
            ),
            'NeustarIpParseAndUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.NeustarIpParseAndUpdate,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.NeustarIpParseAndUpdateRequest.FromString,
                    response_serializer=squareup_dot_beacon_dot_service__pb2.NeustarIpParseAndUpdateResponse.SerializeToString,
            ),
            'NeustarIpInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.NeustarIpInformation,
                    request_deserializer=squareup_dot_beacon_dot_service__pb2.NeustarIpInformationRequest.FromString,
                    response_serializer=squareup_dot_riskapi_dot_datasources_dot_neustar__pb2.NeustarIpInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beacon.service.ThirdPartySignalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ThirdPartySignalService(object):
    """* Service for signals based on third parties. 
    """

    @staticmethod
    def EvaluateMaxMindProxyScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/EvaluateMaxMindProxyScore',
            squareup_dot_beacon_dot_service__pb2.EvaluateMaxMindProxyScoreRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateMaxMindProxyScoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCachedMaxMindProxyScoreBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/GetCachedMaxMindProxyScoreBatch',
            squareup_dot_beacon_dot_service__pb2.GetCachedMaxMindProxyScoreBatchRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.GetCachedMaxMindProxyScoreBatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallProfileBooster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/CallProfileBooster',
            squareup_dot_beacon_dot_service__pb2.CallProfileBoosterRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.CallProfileBoosterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallEmailAge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/CallEmailAge',
            squareup_dot_beacon_dot_service__pb2.CallEmailAgeRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.CallEmailAgeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateDunAndBradstreetSignalsForProduct1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/EvaluateDunAndBradstreetSignalsForProduct1',
            squareup_dot_beacon_dot_service__pb2.EvaluateDunAndBradstreetSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateDunAndBradstreetSignalsForProduct2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/EvaluateDunAndBradstreetSignalsForProduct2',
            squareup_dot_beacon_dot_service__pb2.EvaluateDunAndBradstreetSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateEmailAgeSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/EvaluateEmailAgeSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateEmailAgeSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateProfileBoosterSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/EvaluateProfileBoosterSignals',
            squareup_dot_beacon_dot_service__pb2.EvaluateProfileBoosterSignalsRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.EvaluateSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NeustarIpParseAndUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/NeustarIpParseAndUpdate',
            squareup_dot_beacon_dot_service__pb2.NeustarIpParseAndUpdateRequest.SerializeToString,
            squareup_dot_beacon_dot_service__pb2.NeustarIpParseAndUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NeustarIpInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beacon.service.ThirdPartySignalService/NeustarIpInformation',
            squareup_dot_beacon_dot_service__pb2.NeustarIpInformationRequest.SerializeToString,
            squareup_dot_riskapi_dot_datasources_dot_neustar__pb2.NeustarIpInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
