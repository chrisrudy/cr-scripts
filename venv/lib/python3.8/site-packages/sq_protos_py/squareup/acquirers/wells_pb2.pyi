# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class IbEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    imported_at: typing___Text = ...
    merchant_id: typing___Text = ...
    settlement_reference_id: typing___Text = ...
    card_number: typing___Text = ...
    card_type: typing___Text = ...
    transaction_date: typing___Text = ...
    transaction_type: typing___Text = ...
    price_type: typing___Text = ...
    price_amount1: builtin___int = ...
    price_amount2: builtin___int = ...
    original: typing___Text = ...
    settlement_date: typing___Text = ...
    batch_number: builtin___int = ...
    cleared_level: typing___Text = ...
    billback_reason_code: typing___Text = ...
    qualification_reason: typing___Text = ...
    transaction_amount: builtin___int = ...
    merchant_priced_level: builtin___int = ...
    discount_rate: builtin___int = ...
    discount_amount: builtin___int = ...
    clearing_rate_amount1: builtin___int = ...
    clearing_rate_amount2: builtin___int = ...
    clearing_rate_amount3: builtin___int = ...
    interchange_amount: builtin___int = ...
    billback_amount: builtin___int = ...
    transaction_id: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        imported_at : typing___Optional[typing___Text] = None,
        merchant_id : typing___Optional[typing___Text] = None,
        settlement_reference_id : typing___Optional[typing___Text] = None,
        card_number : typing___Optional[typing___Text] = None,
        card_type : typing___Optional[typing___Text] = None,
        transaction_date : typing___Optional[typing___Text] = None,
        transaction_type : typing___Optional[typing___Text] = None,
        price_type : typing___Optional[typing___Text] = None,
        price_amount1 : typing___Optional[builtin___int] = None,
        price_amount2 : typing___Optional[builtin___int] = None,
        original : typing___Optional[typing___Text] = None,
        settlement_date : typing___Optional[typing___Text] = None,
        batch_number : typing___Optional[builtin___int] = None,
        cleared_level : typing___Optional[typing___Text] = None,
        billback_reason_code : typing___Optional[typing___Text] = None,
        qualification_reason : typing___Optional[typing___Text] = None,
        transaction_amount : typing___Optional[builtin___int] = None,
        merchant_priced_level : typing___Optional[builtin___int] = None,
        discount_rate : typing___Optional[builtin___int] = None,
        discount_amount : typing___Optional[builtin___int] = None,
        clearing_rate_amount1 : typing___Optional[builtin___int] = None,
        clearing_rate_amount2 : typing___Optional[builtin___int] = None,
        clearing_rate_amount3 : typing___Optional[builtin___int] = None,
        interchange_amount : typing___Optional[builtin___int] = None,
        billback_amount : typing___Optional[builtin___int] = None,
        transaction_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"batch_number",b"batch_number",u"billback_amount",b"billback_amount",u"billback_reason_code",b"billback_reason_code",u"card_number",b"card_number",u"card_type",b"card_type",u"cleared_level",b"cleared_level",u"clearing_rate_amount1",b"clearing_rate_amount1",u"clearing_rate_amount2",b"clearing_rate_amount2",u"clearing_rate_amount3",b"clearing_rate_amount3",u"discount_amount",b"discount_amount",u"discount_rate",b"discount_rate",u"id",b"id",u"imported_at",b"imported_at",u"interchange_amount",b"interchange_amount",u"merchant_id",b"merchant_id",u"merchant_priced_level",b"merchant_priced_level",u"original",b"original",u"price_amount1",b"price_amount1",u"price_amount2",b"price_amount2",u"price_type",b"price_type",u"qualification_reason",b"qualification_reason",u"settlement_date",b"settlement_date",u"settlement_reference_id",b"settlement_reference_id",u"transaction_amount",b"transaction_amount",u"transaction_date",b"transaction_date",u"transaction_id",b"transaction_id",u"transaction_type",b"transaction_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"batch_number",b"batch_number",u"billback_amount",b"billback_amount",u"billback_reason_code",b"billback_reason_code",u"card_number",b"card_number",u"card_type",b"card_type",u"cleared_level",b"cleared_level",u"clearing_rate_amount1",b"clearing_rate_amount1",u"clearing_rate_amount2",b"clearing_rate_amount2",u"clearing_rate_amount3",b"clearing_rate_amount3",u"discount_amount",b"discount_amount",u"discount_rate",b"discount_rate",u"id",b"id",u"imported_at",b"imported_at",u"interchange_amount",b"interchange_amount",u"merchant_id",b"merchant_id",u"merchant_priced_level",b"merchant_priced_level",u"original",b"original",u"price_amount1",b"price_amount1",u"price_amount2",b"price_amount2",u"price_type",b"price_type",u"qualification_reason",b"qualification_reason",u"settlement_date",b"settlement_date",u"settlement_reference_id",b"settlement_reference_id",u"transaction_amount",b"transaction_amount",u"transaction_date",b"transaction_date",u"transaction_id",b"transaction_id",u"transaction_type",b"transaction_type"]) -> None: ...
type___IbEntry = IbEntry

class DfmAdjustmentDetailEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    imported_at: typing___Text = ...
    record_type: typing___Text = ...
    hierarchy_id: typing___Text = ...
    hierarchy_level_no: typing___Text = ...
    location_id: typing___Text = ...
    location_dba_name: typing___Text = ...
    store_number: typing___Text = ...
    external_id: typing___Text = ...
    funded_date: typing___Text = ...
    processed_date: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    dda_number: typing___Text = ...
    aba_number: typing___Text = ...
    adjustment_date: typing___Text = ...
    card_type: typing___Text = ...
    adjustment_code: typing___Text = ...
    adjustment_description: typing___Text = ...
    adjustment_amount: builtin___int = ...
    adjustment_type: typing___Text = ...
    invoice_date: typing___Text = ...
    adjustment_invoice_number: typing___Text = ...
    batch_number: typing___Text = ...
    card_number: typing___Text = ...
    chargeback_code: typing___Text = ...
    case_number: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        imported_at : typing___Optional[typing___Text] = None,
        record_type : typing___Optional[typing___Text] = None,
        hierarchy_id : typing___Optional[typing___Text] = None,
        hierarchy_level_no : typing___Optional[typing___Text] = None,
        location_id : typing___Optional[typing___Text] = None,
        location_dba_name : typing___Optional[typing___Text] = None,
        store_number : typing___Optional[typing___Text] = None,
        external_id : typing___Optional[typing___Text] = None,
        funded_date : typing___Optional[typing___Text] = None,
        processed_date : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        dda_number : typing___Optional[typing___Text] = None,
        aba_number : typing___Optional[typing___Text] = None,
        adjustment_date : typing___Optional[typing___Text] = None,
        card_type : typing___Optional[typing___Text] = None,
        adjustment_code : typing___Optional[typing___Text] = None,
        adjustment_description : typing___Optional[typing___Text] = None,
        adjustment_amount : typing___Optional[builtin___int] = None,
        adjustment_type : typing___Optional[typing___Text] = None,
        invoice_date : typing___Optional[typing___Text] = None,
        adjustment_invoice_number : typing___Optional[typing___Text] = None,
        batch_number : typing___Optional[typing___Text] = None,
        card_number : typing___Optional[typing___Text] = None,
        chargeback_code : typing___Optional[typing___Text] = None,
        case_number : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aba_number",b"aba_number",u"adjustment_amount",b"adjustment_amount",u"adjustment_code",b"adjustment_code",u"adjustment_date",b"adjustment_date",u"adjustment_description",b"adjustment_description",u"adjustment_invoice_number",b"adjustment_invoice_number",u"adjustment_type",b"adjustment_type",u"batch_number",b"batch_number",u"card_number",b"card_number",u"card_type",b"card_type",u"case_number",b"case_number",u"chargeback_code",b"chargeback_code",u"currency_code",b"currency_code",u"dda_number",b"dda_number",u"external_id",b"external_id",u"funded_date",b"funded_date",u"hierarchy_id",b"hierarchy_id",u"hierarchy_level_no",b"hierarchy_level_no",u"id",b"id",u"imported_at",b"imported_at",u"invoice_date",b"invoice_date",u"location_dba_name",b"location_dba_name",u"location_id",b"location_id",u"processed_date",b"processed_date",u"record_type",b"record_type",u"store_number",b"store_number"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aba_number",b"aba_number",u"adjustment_amount",b"adjustment_amount",u"adjustment_code",b"adjustment_code",u"adjustment_date",b"adjustment_date",u"adjustment_description",b"adjustment_description",u"adjustment_invoice_number",b"adjustment_invoice_number",u"adjustment_type",b"adjustment_type",u"batch_number",b"batch_number",u"card_number",b"card_number",u"card_type",b"card_type",u"case_number",b"case_number",u"chargeback_code",b"chargeback_code",u"currency_code",b"currency_code",u"dda_number",b"dda_number",u"external_id",b"external_id",u"funded_date",b"funded_date",u"hierarchy_id",b"hierarchy_id",u"hierarchy_level_no",b"hierarchy_level_no",u"id",b"id",u"imported_at",b"imported_at",u"invoice_date",b"invoice_date",u"location_dba_name",b"location_dba_name",u"location_id",b"location_id",u"processed_date",b"processed_date",u"record_type",b"record_type",u"store_number",b"store_number"]) -> None: ...
type___DfmAdjustmentDetailEntry = DfmAdjustmentDetailEntry

class DfmQualificationExpenseEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    imported_at: typing___Text = ...
    record_type: typing___Text = ...
    hierarchy_id: typing___Text = ...
    hierarchy_level_no: typing___Text = ...
    location_id: typing___Text = ...
    location_dba_name: typing___Text = ...
    store_number: typing___Text = ...
    external_id: typing___Text = ...
    batch_date: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    card_type: typing___Text = ...
    transaction_type: typing___Text = ...
    interchange_rate_code: typing___Text = ...
    interchange_rate_description: typing___Text = ...
    transaction_count: builtin___int = ...
    transaction_amount: builtin___int = ...
    interchange_expense: builtin___float = ...
    net_amount: builtin___float = ...
    rate: typing___Text = ...
    sales_percent_by_amount: builtin___float = ...
    sales_percent_by_count: builtin___float = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        imported_at : typing___Optional[typing___Text] = None,
        record_type : typing___Optional[typing___Text] = None,
        hierarchy_id : typing___Optional[typing___Text] = None,
        hierarchy_level_no : typing___Optional[typing___Text] = None,
        location_id : typing___Optional[typing___Text] = None,
        location_dba_name : typing___Optional[typing___Text] = None,
        store_number : typing___Optional[typing___Text] = None,
        external_id : typing___Optional[typing___Text] = None,
        batch_date : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        card_type : typing___Optional[typing___Text] = None,
        transaction_type : typing___Optional[typing___Text] = None,
        interchange_rate_code : typing___Optional[typing___Text] = None,
        interchange_rate_description : typing___Optional[typing___Text] = None,
        transaction_count : typing___Optional[builtin___int] = None,
        transaction_amount : typing___Optional[builtin___int] = None,
        interchange_expense : typing___Optional[builtin___float] = None,
        net_amount : typing___Optional[builtin___float] = None,
        rate : typing___Optional[typing___Text] = None,
        sales_percent_by_amount : typing___Optional[builtin___float] = None,
        sales_percent_by_count : typing___Optional[builtin___float] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"batch_date",b"batch_date",u"card_type",b"card_type",u"currency_code",b"currency_code",u"external_id",b"external_id",u"hierarchy_id",b"hierarchy_id",u"hierarchy_level_no",b"hierarchy_level_no",u"id",b"id",u"imported_at",b"imported_at",u"interchange_expense",b"interchange_expense",u"interchange_rate_code",b"interchange_rate_code",u"interchange_rate_description",b"interchange_rate_description",u"location_dba_name",b"location_dba_name",u"location_id",b"location_id",u"net_amount",b"net_amount",u"rate",b"rate",u"record_type",b"record_type",u"sales_percent_by_amount",b"sales_percent_by_amount",u"sales_percent_by_count",b"sales_percent_by_count",u"store_number",b"store_number",u"transaction_amount",b"transaction_amount",u"transaction_count",b"transaction_count",u"transaction_type",b"transaction_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"batch_date",b"batch_date",u"card_type",b"card_type",u"currency_code",b"currency_code",u"external_id",b"external_id",u"hierarchy_id",b"hierarchy_id",u"hierarchy_level_no",b"hierarchy_level_no",u"id",b"id",u"imported_at",b"imported_at",u"interchange_expense",b"interchange_expense",u"interchange_rate_code",b"interchange_rate_code",u"interchange_rate_description",b"interchange_rate_description",u"location_dba_name",b"location_dba_name",u"location_id",b"location_id",u"net_amount",b"net_amount",u"rate",b"rate",u"record_type",b"record_type",u"sales_percent_by_amount",b"sales_percent_by_amount",u"sales_percent_by_count",b"sales_percent_by_count",u"store_number",b"store_number",u"transaction_amount",b"transaction_amount",u"transaction_count",b"transaction_count",u"transaction_type",b"transaction_type"]) -> None: ...
type___DfmQualificationExpenseEntry = DfmQualificationExpenseEntry

class DfmCreditDetailFundedEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    imported_at: typing___Text = ...
    record_type: typing___Text = ...
    hierarchy_id: typing___Text = ...
    hierarchy_level_no: typing___Text = ...
    location_id: typing___Text = ...
    location_dba_name: typing___Text = ...
    store_number: typing___Text = ...
    external_id: typing___Text = ...
    funded_date: typing___Text = ...
    card_type: typing___Text = ...
    card_number: typing___Text = ...
    terminal_id: typing___Text = ...
    batch_number: builtin___int = ...
    batch_date: typing___Text = ...
    authorization_code: typing___Text = ...
    invoice_trace_id: typing___Text = ...
    reference_number: typing___Text = ...
    transaction_id: typing___Text = ...
    transaction_date: typing___Text = ...
    transaction_amount: builtin___int = ...
    processed_currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    submitted_currency_amount: builtin___int = ...
    submitted_currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    currency_conversion_rate: builtin___float = ...
    transaction_status: typing___Text = ...
    reject_indicator: typing___Text = ...
    reject_reason: typing___Text = ...
    entry_mode: typing___Text = ...
    pc_terminal_capability: typing___Text = ...
    pinless_debit: typing___Text = ...
    plan_code: typing___Text = ...
    billback_reason: typing___Text = ...
    reclass_code: typing___Text = ...
    partial_auth_indicator: typing___Text = ...
    transaction_type: typing___Text = ...
    transaction_mode: typing___Text = ...
    transaction_source: typing___Text = ...
    health_care_card: typing___Text = ...
    afd_completion_code: typing___Text = ...
    authorization_amount: builtin___int = ...
    authorization_date: typing___Text = ...
    transaction_time: typing___Text = ...
    expiration_date: typing___Text = ...
    authorization_sic_code: typing___Text = ...
    avs_flag: typing___Text = ...
    response_code: typing___Text = ...
    cvc2_result: typing___Text = ...
    cvv2_result: typing___Text = ...
    sales_tax_amount: builtin___int = ...
    invoice_amount: builtin___int = ...
    product1_code: typing___Text = ...
    product1_gallons: builtin___float = ...
    product1_amount: builtin___int = ...
    product2_code: typing___Text = ...
    product2_gallons: builtin___float = ...
    product2_amount: builtin___int = ...
    product3_code: typing___Text = ...
    product3_gallons: builtin___float = ...
    product3_amount: builtin___int = ...
    product4_code: typing___Text = ...
    product4_gallons: builtin___float = ...
    product4_amount: builtin___int = ...
    product5_code: typing___Text = ...
    product5_gallons: builtin___float = ...
    product5_amount: builtin___int = ...
    vehicle_number: typing___Text = ...
    odometer: typing___Text = ...
    driver_id: typing___Text = ...
    special_reference_1: typing___Text = ...
    special_reference_2: typing___Text = ...
    authorization_response_code: typing___Text = ...
    convenience_fee_amount: builtin___int = ...
    submerchant_id: typing___Text = ...
    soft_descriptor: typing___Text = ...
    gateway_order_token: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        imported_at : typing___Optional[typing___Text] = None,
        record_type : typing___Optional[typing___Text] = None,
        hierarchy_id : typing___Optional[typing___Text] = None,
        hierarchy_level_no : typing___Optional[typing___Text] = None,
        location_id : typing___Optional[typing___Text] = None,
        location_dba_name : typing___Optional[typing___Text] = None,
        store_number : typing___Optional[typing___Text] = None,
        external_id : typing___Optional[typing___Text] = None,
        funded_date : typing___Optional[typing___Text] = None,
        card_type : typing___Optional[typing___Text] = None,
        card_number : typing___Optional[typing___Text] = None,
        terminal_id : typing___Optional[typing___Text] = None,
        batch_number : typing___Optional[builtin___int] = None,
        batch_date : typing___Optional[typing___Text] = None,
        authorization_code : typing___Optional[typing___Text] = None,
        invoice_trace_id : typing___Optional[typing___Text] = None,
        reference_number : typing___Optional[typing___Text] = None,
        transaction_id : typing___Optional[typing___Text] = None,
        transaction_date : typing___Optional[typing___Text] = None,
        transaction_amount : typing___Optional[builtin___int] = None,
        processed_currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        submitted_currency_amount : typing___Optional[builtin___int] = None,
        submitted_currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        currency_conversion_rate : typing___Optional[builtin___float] = None,
        transaction_status : typing___Optional[typing___Text] = None,
        reject_indicator : typing___Optional[typing___Text] = None,
        reject_reason : typing___Optional[typing___Text] = None,
        entry_mode : typing___Optional[typing___Text] = None,
        pc_terminal_capability : typing___Optional[typing___Text] = None,
        pinless_debit : typing___Optional[typing___Text] = None,
        plan_code : typing___Optional[typing___Text] = None,
        billback_reason : typing___Optional[typing___Text] = None,
        reclass_code : typing___Optional[typing___Text] = None,
        partial_auth_indicator : typing___Optional[typing___Text] = None,
        transaction_type : typing___Optional[typing___Text] = None,
        transaction_mode : typing___Optional[typing___Text] = None,
        transaction_source : typing___Optional[typing___Text] = None,
        health_care_card : typing___Optional[typing___Text] = None,
        afd_completion_code : typing___Optional[typing___Text] = None,
        authorization_amount : typing___Optional[builtin___int] = None,
        authorization_date : typing___Optional[typing___Text] = None,
        transaction_time : typing___Optional[typing___Text] = None,
        expiration_date : typing___Optional[typing___Text] = None,
        authorization_sic_code : typing___Optional[typing___Text] = None,
        avs_flag : typing___Optional[typing___Text] = None,
        response_code : typing___Optional[typing___Text] = None,
        cvc2_result : typing___Optional[typing___Text] = None,
        cvv2_result : typing___Optional[typing___Text] = None,
        sales_tax_amount : typing___Optional[builtin___int] = None,
        invoice_amount : typing___Optional[builtin___int] = None,
        product1_code : typing___Optional[typing___Text] = None,
        product1_gallons : typing___Optional[builtin___float] = None,
        product1_amount : typing___Optional[builtin___int] = None,
        product2_code : typing___Optional[typing___Text] = None,
        product2_gallons : typing___Optional[builtin___float] = None,
        product2_amount : typing___Optional[builtin___int] = None,
        product3_code : typing___Optional[typing___Text] = None,
        product3_gallons : typing___Optional[builtin___float] = None,
        product3_amount : typing___Optional[builtin___int] = None,
        product4_code : typing___Optional[typing___Text] = None,
        product4_gallons : typing___Optional[builtin___float] = None,
        product4_amount : typing___Optional[builtin___int] = None,
        product5_code : typing___Optional[typing___Text] = None,
        product5_gallons : typing___Optional[builtin___float] = None,
        product5_amount : typing___Optional[builtin___int] = None,
        vehicle_number : typing___Optional[typing___Text] = None,
        odometer : typing___Optional[typing___Text] = None,
        driver_id : typing___Optional[typing___Text] = None,
        special_reference_1 : typing___Optional[typing___Text] = None,
        special_reference_2 : typing___Optional[typing___Text] = None,
        authorization_response_code : typing___Optional[typing___Text] = None,
        convenience_fee_amount : typing___Optional[builtin___int] = None,
        submerchant_id : typing___Optional[typing___Text] = None,
        soft_descriptor : typing___Optional[typing___Text] = None,
        gateway_order_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"afd_completion_code",b"afd_completion_code",u"authorization_amount",b"authorization_amount",u"authorization_code",b"authorization_code",u"authorization_date",b"authorization_date",u"authorization_response_code",b"authorization_response_code",u"authorization_sic_code",b"authorization_sic_code",u"avs_flag",b"avs_flag",u"batch_date",b"batch_date",u"batch_number",b"batch_number",u"billback_reason",b"billback_reason",u"card_number",b"card_number",u"card_type",b"card_type",u"convenience_fee_amount",b"convenience_fee_amount",u"currency_conversion_rate",b"currency_conversion_rate",u"cvc2_result",b"cvc2_result",u"cvv2_result",b"cvv2_result",u"driver_id",b"driver_id",u"entry_mode",b"entry_mode",u"expiration_date",b"expiration_date",u"external_id",b"external_id",u"funded_date",b"funded_date",u"gateway_order_token",b"gateway_order_token",u"health_care_card",b"health_care_card",u"hierarchy_id",b"hierarchy_id",u"hierarchy_level_no",b"hierarchy_level_no",u"id",b"id",u"imported_at",b"imported_at",u"invoice_amount",b"invoice_amount",u"invoice_trace_id",b"invoice_trace_id",u"location_dba_name",b"location_dba_name",u"location_id",b"location_id",u"odometer",b"odometer",u"partial_auth_indicator",b"partial_auth_indicator",u"pc_terminal_capability",b"pc_terminal_capability",u"pinless_debit",b"pinless_debit",u"plan_code",b"plan_code",u"processed_currency_code",b"processed_currency_code",u"product1_amount",b"product1_amount",u"product1_code",b"product1_code",u"product1_gallons",b"product1_gallons",u"product2_amount",b"product2_amount",u"product2_code",b"product2_code",u"product2_gallons",b"product2_gallons",u"product3_amount",b"product3_amount",u"product3_code",b"product3_code",u"product3_gallons",b"product3_gallons",u"product4_amount",b"product4_amount",u"product4_code",b"product4_code",u"product4_gallons",b"product4_gallons",u"product5_amount",b"product5_amount",u"product5_code",b"product5_code",u"product5_gallons",b"product5_gallons",u"reclass_code",b"reclass_code",u"record_type",b"record_type",u"reference_number",b"reference_number",u"reject_indicator",b"reject_indicator",u"reject_reason",b"reject_reason",u"response_code",b"response_code",u"sales_tax_amount",b"sales_tax_amount",u"soft_descriptor",b"soft_descriptor",u"special_reference_1",b"special_reference_1",u"special_reference_2",b"special_reference_2",u"store_number",b"store_number",u"submerchant_id",b"submerchant_id",u"submitted_currency_amount",b"submitted_currency_amount",u"submitted_currency_code",b"submitted_currency_code",u"terminal_id",b"terminal_id",u"transaction_amount",b"transaction_amount",u"transaction_date",b"transaction_date",u"transaction_id",b"transaction_id",u"transaction_mode",b"transaction_mode",u"transaction_source",b"transaction_source",u"transaction_status",b"transaction_status",u"transaction_time",b"transaction_time",u"transaction_type",b"transaction_type",u"vehicle_number",b"vehicle_number"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"afd_completion_code",b"afd_completion_code",u"authorization_amount",b"authorization_amount",u"authorization_code",b"authorization_code",u"authorization_date",b"authorization_date",u"authorization_response_code",b"authorization_response_code",u"authorization_sic_code",b"authorization_sic_code",u"avs_flag",b"avs_flag",u"batch_date",b"batch_date",u"batch_number",b"batch_number",u"billback_reason",b"billback_reason",u"card_number",b"card_number",u"card_type",b"card_type",u"convenience_fee_amount",b"convenience_fee_amount",u"currency_conversion_rate",b"currency_conversion_rate",u"cvc2_result",b"cvc2_result",u"cvv2_result",b"cvv2_result",u"driver_id",b"driver_id",u"entry_mode",b"entry_mode",u"expiration_date",b"expiration_date",u"external_id",b"external_id",u"funded_date",b"funded_date",u"gateway_order_token",b"gateway_order_token",u"health_care_card",b"health_care_card",u"hierarchy_id",b"hierarchy_id",u"hierarchy_level_no",b"hierarchy_level_no",u"id",b"id",u"imported_at",b"imported_at",u"invoice_amount",b"invoice_amount",u"invoice_trace_id",b"invoice_trace_id",u"location_dba_name",b"location_dba_name",u"location_id",b"location_id",u"odometer",b"odometer",u"partial_auth_indicator",b"partial_auth_indicator",u"pc_terminal_capability",b"pc_terminal_capability",u"pinless_debit",b"pinless_debit",u"plan_code",b"plan_code",u"processed_currency_code",b"processed_currency_code",u"product1_amount",b"product1_amount",u"product1_code",b"product1_code",u"product1_gallons",b"product1_gallons",u"product2_amount",b"product2_amount",u"product2_code",b"product2_code",u"product2_gallons",b"product2_gallons",u"product3_amount",b"product3_amount",u"product3_code",b"product3_code",u"product3_gallons",b"product3_gallons",u"product4_amount",b"product4_amount",u"product4_code",b"product4_code",u"product4_gallons",b"product4_gallons",u"product5_amount",b"product5_amount",u"product5_code",b"product5_code",u"product5_gallons",b"product5_gallons",u"reclass_code",b"reclass_code",u"record_type",b"record_type",u"reference_number",b"reference_number",u"reject_indicator",b"reject_indicator",u"reject_reason",b"reject_reason",u"response_code",b"response_code",u"sales_tax_amount",b"sales_tax_amount",u"soft_descriptor",b"soft_descriptor",u"special_reference_1",b"special_reference_1",u"special_reference_2",b"special_reference_2",u"store_number",b"store_number",u"submerchant_id",b"submerchant_id",u"submitted_currency_amount",b"submitted_currency_amount",u"submitted_currency_code",b"submitted_currency_code",u"terminal_id",b"terminal_id",u"transaction_amount",b"transaction_amount",u"transaction_date",b"transaction_date",u"transaction_id",b"transaction_id",u"transaction_mode",b"transaction_mode",u"transaction_source",b"transaction_source",u"transaction_status",b"transaction_status",u"transaction_time",b"transaction_time",u"transaction_type",b"transaction_type",u"vehicle_number",b"vehicle_number"]) -> None: ...
type___DfmCreditDetailFundedEntry = DfmCreditDetailFundedEntry
