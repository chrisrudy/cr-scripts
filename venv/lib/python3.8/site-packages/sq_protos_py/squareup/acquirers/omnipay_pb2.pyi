# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class DwGenericTransactionEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    dw_file_id: builtin___int = ...
    dw_record_id: builtin___int = ...
    imported_at: typing___Text = ...
    merch_id: typing___Text = ...
    btch_no: typing___Text = ...
    btch_date: typing___Text = ...
    tran_date: typing___Text = ...
    post_date: typing___Text = ...
    item_no: typing___Text = ...
    tran_type: typing___Text = ...
    card_num: typing___Text = ...
    cap_met: typing___Text = ...
    term_id: typing___Text = ...
    term_cap: typing___Text = ...
    auth_code: typing___Text = ...
    tran_curr: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    tran_amt: builtin___int = ...
    tran_stat: typing___Text = ...
    rrn: typing___Text = ...
    acc_curr: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    acc_amt_gr: builtin___int = ...
    acc_amt_ch: builtin___int = ...
    acc_amt_nt: builtin___int = ...
    fpi: typing___Text = ...
    orig_slip_num: typing___Text = ...
    merch_name: typing___Text = ...
    arn: typing___Text = ...
    dcc_indicator: typing___Text = ...
    custom_data: typing___Text = ...
    ucaf_eci: typing___Text = ...
    rt_flag: typing___Text = ...
    card_brnd: typing___Text = ...
    mcc_code: typing___Text = ...
    pos_mode: typing___Text = ...
    bin_country: typing___Text = ...
    service_type_desc: typing___Text = ...
    merchant_country: typing___Text = ...
    base: builtin___int = ...
    perc: builtin___int = ...
    min: builtin___int = ...
    max: builtin___int = ...
    record_id: typing___Text = ...
    merch_city: typing___Text = ...
    area_of_event: typing___Text = ...
    e_wallet_type: typing___Text = ...
    vme_add_auth_method: typing___Text = ...
    vme_add_auth_reason_code: typing___Text = ...
    ppol_program_data: typing___Text = ...
    service_id: typing___Text = ...
    batch_slip: typing___Text = ...
    deposit_slip: typing___Text = ...
    tran_type_code: typing___Text = ...
    term_cap_code: typing___Text = ...
    tran_status_code: typing___Text = ...
    internal_merch_acc: typing___Text = ...
    cross_rate: builtin___float = ...
    client_number: typing___Text = ...
    service_id_code: typing___Text = ...
    card_scheme_code: typing___Text = ...
    card_scheme: typing___Text = ...
    capture_method_code: typing___Text = ...
    spend_qualified_indicator: typing___Text = ...
    visa_tran_id: typing___Text = ...
    mc_banknet_ref: typing___Text = ...
    card_num_fidelius_token: typing___Text = ...
    retrieval_reference: typing___Text = ...
    mc_banknet_ref_settle_date: typing___Text = ...
    fee_currency: typing___Text = ...
    unique_tran_id: typing___Text = ...
    merch_street: typing___Text = ...
    merch_post_code: typing___Text = ...
    merch_state_code: typing___Text = ...
    custom_tracking_number: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        dw_file_id : typing___Optional[builtin___int] = None,
        dw_record_id : typing___Optional[builtin___int] = None,
        imported_at : typing___Optional[typing___Text] = None,
        merch_id : typing___Optional[typing___Text] = None,
        btch_no : typing___Optional[typing___Text] = None,
        btch_date : typing___Optional[typing___Text] = None,
        tran_date : typing___Optional[typing___Text] = None,
        post_date : typing___Optional[typing___Text] = None,
        item_no : typing___Optional[typing___Text] = None,
        tran_type : typing___Optional[typing___Text] = None,
        card_num : typing___Optional[typing___Text] = None,
        cap_met : typing___Optional[typing___Text] = None,
        term_id : typing___Optional[typing___Text] = None,
        term_cap : typing___Optional[typing___Text] = None,
        auth_code : typing___Optional[typing___Text] = None,
        tran_curr : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        tran_amt : typing___Optional[builtin___int] = None,
        tran_stat : typing___Optional[typing___Text] = None,
        rrn : typing___Optional[typing___Text] = None,
        acc_curr : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        acc_amt_gr : typing___Optional[builtin___int] = None,
        acc_amt_ch : typing___Optional[builtin___int] = None,
        acc_amt_nt : typing___Optional[builtin___int] = None,
        fpi : typing___Optional[typing___Text] = None,
        orig_slip_num : typing___Optional[typing___Text] = None,
        merch_name : typing___Optional[typing___Text] = None,
        arn : typing___Optional[typing___Text] = None,
        dcc_indicator : typing___Optional[typing___Text] = None,
        custom_data : typing___Optional[typing___Text] = None,
        ucaf_eci : typing___Optional[typing___Text] = None,
        rt_flag : typing___Optional[typing___Text] = None,
        card_brnd : typing___Optional[typing___Text] = None,
        mcc_code : typing___Optional[typing___Text] = None,
        pos_mode : typing___Optional[typing___Text] = None,
        bin_country : typing___Optional[typing___Text] = None,
        service_type_desc : typing___Optional[typing___Text] = None,
        merchant_country : typing___Optional[typing___Text] = None,
        base : typing___Optional[builtin___int] = None,
        perc : typing___Optional[builtin___int] = None,
        min : typing___Optional[builtin___int] = None,
        max : typing___Optional[builtin___int] = None,
        record_id : typing___Optional[typing___Text] = None,
        merch_city : typing___Optional[typing___Text] = None,
        area_of_event : typing___Optional[typing___Text] = None,
        e_wallet_type : typing___Optional[typing___Text] = None,
        vme_add_auth_method : typing___Optional[typing___Text] = None,
        vme_add_auth_reason_code : typing___Optional[typing___Text] = None,
        ppol_program_data : typing___Optional[typing___Text] = None,
        service_id : typing___Optional[typing___Text] = None,
        batch_slip : typing___Optional[typing___Text] = None,
        deposit_slip : typing___Optional[typing___Text] = None,
        tran_type_code : typing___Optional[typing___Text] = None,
        term_cap_code : typing___Optional[typing___Text] = None,
        tran_status_code : typing___Optional[typing___Text] = None,
        internal_merch_acc : typing___Optional[typing___Text] = None,
        cross_rate : typing___Optional[builtin___float] = None,
        client_number : typing___Optional[typing___Text] = None,
        service_id_code : typing___Optional[typing___Text] = None,
        card_scheme_code : typing___Optional[typing___Text] = None,
        card_scheme : typing___Optional[typing___Text] = None,
        capture_method_code : typing___Optional[typing___Text] = None,
        spend_qualified_indicator : typing___Optional[typing___Text] = None,
        visa_tran_id : typing___Optional[typing___Text] = None,
        mc_banknet_ref : typing___Optional[typing___Text] = None,
        card_num_fidelius_token : typing___Optional[typing___Text] = None,
        retrieval_reference : typing___Optional[typing___Text] = None,
        mc_banknet_ref_settle_date : typing___Optional[typing___Text] = None,
        fee_currency : typing___Optional[typing___Text] = None,
        unique_tran_id : typing___Optional[typing___Text] = None,
        merch_street : typing___Optional[typing___Text] = None,
        merch_post_code : typing___Optional[typing___Text] = None,
        merch_state_code : typing___Optional[typing___Text] = None,
        custom_tracking_number : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acc_amt_ch",b"acc_amt_ch",u"acc_amt_gr",b"acc_amt_gr",u"acc_amt_nt",b"acc_amt_nt",u"acc_curr",b"acc_curr",u"area_of_event",b"area_of_event",u"arn",b"arn",u"auth_code",b"auth_code",u"base",b"base",u"batch_slip",b"batch_slip",u"bin_country",b"bin_country",u"btch_date",b"btch_date",u"btch_no",b"btch_no",u"cap_met",b"cap_met",u"capture_method_code",b"capture_method_code",u"card_brnd",b"card_brnd",u"card_num",b"card_num",u"card_num_fidelius_token",b"card_num_fidelius_token",u"card_scheme",b"card_scheme",u"card_scheme_code",b"card_scheme_code",u"client_number",b"client_number",u"cross_rate",b"cross_rate",u"custom_data",b"custom_data",u"custom_tracking_number",b"custom_tracking_number",u"dcc_indicator",b"dcc_indicator",u"deposit_slip",b"deposit_slip",u"dw_file_id",b"dw_file_id",u"dw_record_id",b"dw_record_id",u"e_wallet_type",b"e_wallet_type",u"fee_currency",b"fee_currency",u"fpi",b"fpi",u"id",b"id",u"imported_at",b"imported_at",u"internal_merch_acc",b"internal_merch_acc",u"item_no",b"item_no",u"max",b"max",u"mc_banknet_ref",b"mc_banknet_ref",u"mc_banknet_ref_settle_date",b"mc_banknet_ref_settle_date",u"mcc_code",b"mcc_code",u"merch_city",b"merch_city",u"merch_id",b"merch_id",u"merch_name",b"merch_name",u"merch_post_code",b"merch_post_code",u"merch_state_code",b"merch_state_code",u"merch_street",b"merch_street",u"merchant_country",b"merchant_country",u"min",b"min",u"orig_slip_num",b"orig_slip_num",u"perc",b"perc",u"pos_mode",b"pos_mode",u"post_date",b"post_date",u"ppol_program_data",b"ppol_program_data",u"record_id",b"record_id",u"retrieval_reference",b"retrieval_reference",u"rrn",b"rrn",u"rt_flag",b"rt_flag",u"service_id",b"service_id",u"service_id_code",b"service_id_code",u"service_type_desc",b"service_type_desc",u"spend_qualified_indicator",b"spend_qualified_indicator",u"term_cap",b"term_cap",u"term_cap_code",b"term_cap_code",u"term_id",b"term_id",u"tran_amt",b"tran_amt",u"tran_curr",b"tran_curr",u"tran_date",b"tran_date",u"tran_stat",b"tran_stat",u"tran_status_code",b"tran_status_code",u"tran_type",b"tran_type",u"tran_type_code",b"tran_type_code",u"ucaf_eci",b"ucaf_eci",u"unique_tran_id",b"unique_tran_id",u"visa_tran_id",b"visa_tran_id",u"vme_add_auth_method",b"vme_add_auth_method",u"vme_add_auth_reason_code",b"vme_add_auth_reason_code"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acc_amt_ch",b"acc_amt_ch",u"acc_amt_gr",b"acc_amt_gr",u"acc_amt_nt",b"acc_amt_nt",u"acc_curr",b"acc_curr",u"area_of_event",b"area_of_event",u"arn",b"arn",u"auth_code",b"auth_code",u"base",b"base",u"batch_slip",b"batch_slip",u"bin_country",b"bin_country",u"btch_date",b"btch_date",u"btch_no",b"btch_no",u"cap_met",b"cap_met",u"capture_method_code",b"capture_method_code",u"card_brnd",b"card_brnd",u"card_num",b"card_num",u"card_num_fidelius_token",b"card_num_fidelius_token",u"card_scheme",b"card_scheme",u"card_scheme_code",b"card_scheme_code",u"client_number",b"client_number",u"cross_rate",b"cross_rate",u"custom_data",b"custom_data",u"custom_tracking_number",b"custom_tracking_number",u"dcc_indicator",b"dcc_indicator",u"deposit_slip",b"deposit_slip",u"dw_file_id",b"dw_file_id",u"dw_record_id",b"dw_record_id",u"e_wallet_type",b"e_wallet_type",u"fee_currency",b"fee_currency",u"fpi",b"fpi",u"id",b"id",u"imported_at",b"imported_at",u"internal_merch_acc",b"internal_merch_acc",u"item_no",b"item_no",u"max",b"max",u"mc_banknet_ref",b"mc_banknet_ref",u"mc_banknet_ref_settle_date",b"mc_banknet_ref_settle_date",u"mcc_code",b"mcc_code",u"merch_city",b"merch_city",u"merch_id",b"merch_id",u"merch_name",b"merch_name",u"merch_post_code",b"merch_post_code",u"merch_state_code",b"merch_state_code",u"merch_street",b"merch_street",u"merchant_country",b"merchant_country",u"min",b"min",u"orig_slip_num",b"orig_slip_num",u"perc",b"perc",u"pos_mode",b"pos_mode",u"post_date",b"post_date",u"ppol_program_data",b"ppol_program_data",u"record_id",b"record_id",u"retrieval_reference",b"retrieval_reference",u"rrn",b"rrn",u"rt_flag",b"rt_flag",u"service_id",b"service_id",u"service_id_code",b"service_id_code",u"service_type_desc",b"service_type_desc",u"spend_qualified_indicator",b"spend_qualified_indicator",u"term_cap",b"term_cap",u"term_cap_code",b"term_cap_code",u"term_id",b"term_id",u"tran_amt",b"tran_amt",u"tran_curr",b"tran_curr",u"tran_date",b"tran_date",u"tran_stat",b"tran_stat",u"tran_status_code",b"tran_status_code",u"tran_type",b"tran_type",u"tran_type_code",b"tran_type_code",u"ucaf_eci",b"ucaf_eci",u"unique_tran_id",b"unique_tran_id",u"visa_tran_id",b"visa_tran_id",u"vme_add_auth_method",b"vme_add_auth_method",u"vme_add_auth_reason_code",b"vme_add_auth_reason_code"]) -> None: ...
type___DwGenericTransactionEntry = DwGenericTransactionEntry

class DwInterchangeDetailEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    dw_file_id: builtin___int = ...
    dw_record_id: builtin___int = ...
    imported_at: typing___Text = ...
    merch_id: typing___Text = ...
    post_date: typing___Text = ...
    item_no: typing___Text = ...
    card_brnd: typing___Text = ...
    int_amt: builtin___int = ...
    pay_prod: typing___Text = ...
    reg: typing___Text = ...
    fee_prec: builtin___int = ...
    base: builtin___int = ...
    fee_no: typing___Text = ...
    clearing_srv: typing___Text = ...
    fee_tier: typing___Text = ...
    base_currency: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    intch_currency: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    service_type: typing___Text = ...
    rrn: typing___Text = ...
    client_number: typing___Text = ...
    min: builtin___int = ...
    max: builtin___int = ...
    tran_sett_amt_gr: builtin___int = ...
    int_amt_tran_curr: builtin___int = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        dw_file_id : typing___Optional[builtin___int] = None,
        dw_record_id : typing___Optional[builtin___int] = None,
        imported_at : typing___Optional[typing___Text] = None,
        merch_id : typing___Optional[typing___Text] = None,
        post_date : typing___Optional[typing___Text] = None,
        item_no : typing___Optional[typing___Text] = None,
        card_brnd : typing___Optional[typing___Text] = None,
        int_amt : typing___Optional[builtin___int] = None,
        pay_prod : typing___Optional[typing___Text] = None,
        reg : typing___Optional[typing___Text] = None,
        fee_prec : typing___Optional[builtin___int] = None,
        base : typing___Optional[builtin___int] = None,
        fee_no : typing___Optional[typing___Text] = None,
        clearing_srv : typing___Optional[typing___Text] = None,
        fee_tier : typing___Optional[typing___Text] = None,
        base_currency : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        intch_currency : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        service_type : typing___Optional[typing___Text] = None,
        rrn : typing___Optional[typing___Text] = None,
        client_number : typing___Optional[typing___Text] = None,
        min : typing___Optional[builtin___int] = None,
        max : typing___Optional[builtin___int] = None,
        tran_sett_amt_gr : typing___Optional[builtin___int] = None,
        int_amt_tran_curr : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"base",b"base",u"base_currency",b"base_currency",u"card_brnd",b"card_brnd",u"clearing_srv",b"clearing_srv",u"client_number",b"client_number",u"dw_file_id",b"dw_file_id",u"dw_record_id",b"dw_record_id",u"fee_no",b"fee_no",u"fee_prec",b"fee_prec",u"fee_tier",b"fee_tier",u"id",b"id",u"imported_at",b"imported_at",u"int_amt",b"int_amt",u"int_amt_tran_curr",b"int_amt_tran_curr",u"intch_currency",b"intch_currency",u"item_no",b"item_no",u"max",b"max",u"merch_id",b"merch_id",u"min",b"min",u"pay_prod",b"pay_prod",u"post_date",b"post_date",u"reg",b"reg",u"rrn",b"rrn",u"service_type",b"service_type",u"tran_sett_amt_gr",b"tran_sett_amt_gr"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"base",b"base",u"base_currency",b"base_currency",u"card_brnd",b"card_brnd",u"clearing_srv",b"clearing_srv",u"client_number",b"client_number",u"dw_file_id",b"dw_file_id",u"dw_record_id",b"dw_record_id",u"fee_no",b"fee_no",u"fee_prec",b"fee_prec",u"fee_tier",b"fee_tier",u"id",b"id",u"imported_at",b"imported_at",u"int_amt",b"int_amt",u"int_amt_tran_curr",b"int_amt_tran_curr",u"intch_currency",b"intch_currency",u"item_no",b"item_no",u"max",b"max",u"merch_id",b"merch_id",u"min",b"min",u"pay_prod",b"pay_prod",u"post_date",b"post_date",u"reg",b"reg",u"rrn",b"rrn",u"service_type",b"service_type",u"tran_sett_amt_gr",b"tran_sett_amt_gr"]) -> None: ...
type___DwInterchangeDetailEntry = DwInterchangeDetailEntry

class DwPresentmentChargeEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    dw_file_id: builtin___int = ...
    dw_record_id: builtin___int = ...
    imported_at: typing___Text = ...
    merch_id: typing___Text = ...
    post_date: typing___Text = ...
    acct_id: typing___Text = ...
    presentment_slip: typing___Text = ...
    charge_slip: typing___Text = ...
    tran_type: typing___Text = ...
    tran_curr: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    tran_amt: builtin___float = ...
    charge_curr: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    charge_amt: builtin___float = ...
    posted_net_amt: builtin___int = ...
    perc: builtin___float = ...
    base: builtin___float = ...
    rec_id: typing___Text = ...
    client_number: typing___Text = ...
    service_id: typing___Text = ...
    fee_currency: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        dw_file_id : typing___Optional[builtin___int] = None,
        dw_record_id : typing___Optional[builtin___int] = None,
        imported_at : typing___Optional[typing___Text] = None,
        merch_id : typing___Optional[typing___Text] = None,
        post_date : typing___Optional[typing___Text] = None,
        acct_id : typing___Optional[typing___Text] = None,
        presentment_slip : typing___Optional[typing___Text] = None,
        charge_slip : typing___Optional[typing___Text] = None,
        tran_type : typing___Optional[typing___Text] = None,
        tran_curr : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        tran_amt : typing___Optional[builtin___float] = None,
        charge_curr : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        charge_amt : typing___Optional[builtin___float] = None,
        posted_net_amt : typing___Optional[builtin___int] = None,
        perc : typing___Optional[builtin___float] = None,
        base : typing___Optional[builtin___float] = None,
        rec_id : typing___Optional[typing___Text] = None,
        client_number : typing___Optional[typing___Text] = None,
        service_id : typing___Optional[typing___Text] = None,
        fee_currency : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acct_id",b"acct_id",u"base",b"base",u"charge_amt",b"charge_amt",u"charge_curr",b"charge_curr",u"charge_slip",b"charge_slip",u"client_number",b"client_number",u"dw_file_id",b"dw_file_id",u"dw_record_id",b"dw_record_id",u"fee_currency",b"fee_currency",u"id",b"id",u"imported_at",b"imported_at",u"merch_id",b"merch_id",u"perc",b"perc",u"post_date",b"post_date",u"posted_net_amt",b"posted_net_amt",u"presentment_slip",b"presentment_slip",u"rec_id",b"rec_id",u"service_id",b"service_id",u"tran_amt",b"tran_amt",u"tran_curr",b"tran_curr",u"tran_type",b"tran_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acct_id",b"acct_id",u"base",b"base",u"charge_amt",b"charge_amt",u"charge_curr",b"charge_curr",u"charge_slip",b"charge_slip",u"client_number",b"client_number",u"dw_file_id",b"dw_file_id",u"dw_record_id",b"dw_record_id",u"fee_currency",b"fee_currency",u"id",b"id",u"imported_at",b"imported_at",u"merch_id",b"merch_id",u"perc",b"perc",u"post_date",b"post_date",u"posted_net_amt",b"posted_net_amt",u"presentment_slip",b"presentment_slip",u"rec_id",b"rec_id",u"service_id",b"service_id",u"tran_amt",b"tran_amt",u"tran_curr",b"tran_curr",u"tran_type",b"tran_type"]) -> None: ...
type___DwPresentmentChargeEntry = DwPresentmentChargeEntry

class DwFundingAccountEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    imported_at: typing___Text = ...
    merch_id: typing___Text = ...
    acct_id: typing___Text = ...
    acct_type: typing___Text = ...
    post_date: typing___Text = ...
    tran_type: typing___Text = ...
    slips: builtin___int = ...
    ref_no: typing___Text = ...
    rev: builtin___bool = ...
    tran_curr: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    tran_amt: builtin___int = ...
    acc_amt: builtin___int = ...
    acc_chgs: builtin___int = ...
    acc_amt_net: builtin___int = ...
    card_type: typing___Text = ...
    btch_no: typing___Text = ...
    arn: typing___Text = ...
    add_arn: typing___Text = ...
    fee_seq: typing___Text = ...
    fee_seq_desc: typing___Text = ...
    funding_date: typing___Text = ...
    value_date: typing___Text = ...
    tran_category_code: typing___Text = ...
    tran_category: typing___Text = ...
    client_number: typing___Text = ...
    payment_status: typing___Text = ...
    bank_reference: typing___Text = ...
    acct_type_code: typing___Text = ...
    related_slip: typing___Text = ...
    tran_type_code: typing___Text = ...
    local_currency: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    local_amount_gr: builtin___int = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        imported_at : typing___Optional[typing___Text] = None,
        merch_id : typing___Optional[typing___Text] = None,
        acct_id : typing___Optional[typing___Text] = None,
        acct_type : typing___Optional[typing___Text] = None,
        post_date : typing___Optional[typing___Text] = None,
        tran_type : typing___Optional[typing___Text] = None,
        slips : typing___Optional[builtin___int] = None,
        ref_no : typing___Optional[typing___Text] = None,
        rev : typing___Optional[builtin___bool] = None,
        tran_curr : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        tran_amt : typing___Optional[builtin___int] = None,
        acc_amt : typing___Optional[builtin___int] = None,
        acc_chgs : typing___Optional[builtin___int] = None,
        acc_amt_net : typing___Optional[builtin___int] = None,
        card_type : typing___Optional[typing___Text] = None,
        btch_no : typing___Optional[typing___Text] = None,
        arn : typing___Optional[typing___Text] = None,
        add_arn : typing___Optional[typing___Text] = None,
        fee_seq : typing___Optional[typing___Text] = None,
        fee_seq_desc : typing___Optional[typing___Text] = None,
        funding_date : typing___Optional[typing___Text] = None,
        value_date : typing___Optional[typing___Text] = None,
        tran_category_code : typing___Optional[typing___Text] = None,
        tran_category : typing___Optional[typing___Text] = None,
        client_number : typing___Optional[typing___Text] = None,
        payment_status : typing___Optional[typing___Text] = None,
        bank_reference : typing___Optional[typing___Text] = None,
        acct_type_code : typing___Optional[typing___Text] = None,
        related_slip : typing___Optional[typing___Text] = None,
        tran_type_code : typing___Optional[typing___Text] = None,
        local_currency : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        local_amount_gr : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acc_amt",b"acc_amt",u"acc_amt_net",b"acc_amt_net",u"acc_chgs",b"acc_chgs",u"acct_id",b"acct_id",u"acct_type",b"acct_type",u"acct_type_code",b"acct_type_code",u"add_arn",b"add_arn",u"arn",b"arn",u"bank_reference",b"bank_reference",u"btch_no",b"btch_no",u"card_type",b"card_type",u"client_number",b"client_number",u"fee_seq",b"fee_seq",u"fee_seq_desc",b"fee_seq_desc",u"funding_date",b"funding_date",u"id",b"id",u"imported_at",b"imported_at",u"local_amount_gr",b"local_amount_gr",u"local_currency",b"local_currency",u"merch_id",b"merch_id",u"payment_status",b"payment_status",u"post_date",b"post_date",u"ref_no",b"ref_no",u"related_slip",b"related_slip",u"rev",b"rev",u"slips",b"slips",u"tran_amt",b"tran_amt",u"tran_category",b"tran_category",u"tran_category_code",b"tran_category_code",u"tran_curr",b"tran_curr",u"tran_type",b"tran_type",u"tran_type_code",b"tran_type_code",u"value_date",b"value_date"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acc_amt",b"acc_amt",u"acc_amt_net",b"acc_amt_net",u"acc_chgs",b"acc_chgs",u"acct_id",b"acct_id",u"acct_type",b"acct_type",u"acct_type_code",b"acct_type_code",u"add_arn",b"add_arn",u"arn",b"arn",u"bank_reference",b"bank_reference",u"btch_no",b"btch_no",u"card_type",b"card_type",u"client_number",b"client_number",u"fee_seq",b"fee_seq",u"fee_seq_desc",b"fee_seq_desc",u"funding_date",b"funding_date",u"id",b"id",u"imported_at",b"imported_at",u"local_amount_gr",b"local_amount_gr",u"local_currency",b"local_currency",u"merch_id",b"merch_id",u"payment_status",b"payment_status",u"post_date",b"post_date",u"ref_no",b"ref_no",u"related_slip",b"related_slip",u"rev",b"rev",u"slips",b"slips",u"tran_amt",b"tran_amt",u"tran_category",b"tran_category",u"tran_category_code",b"tran_category_code",u"tran_curr",b"tran_curr",u"tran_type",b"tran_type",u"tran_type_code",b"tran_type_code",u"value_date",b"value_date"]) -> None: ...
type___DwFundingAccountEntry = DwFundingAccountEntry
