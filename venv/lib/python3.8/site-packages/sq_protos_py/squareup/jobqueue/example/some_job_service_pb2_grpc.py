# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.jobqueue.example import some_job_service_pb2 as squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2
from sq_protos_py.squareup.jobqueue import options_pb2 as squareup_dot_jobqueue_dot_options__pb2


class SomeJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SomeJob = channel.unary_unary(
                '/squareup.jobqueue.example.SomeJobService/SomeJob',
                request_serializer=squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class SomeJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SomeJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SomeJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SomeJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SomeJob,
                    request_deserializer=squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.jobqueue.example.SomeJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SomeJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SomeJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobqueue.example.SomeJobService/SomeJob',
            squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SomeUniqueJobServiceStub(object):
    """Queue that will reject enqueues with a request that is identical to an existing request.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SomeUniqueJob = channel.unary_unary(
                '/squareup.jobqueue.example.SomeUniqueJobService/SomeUniqueJob',
                request_serializer=squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeUniqueJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class SomeUniqueJobServiceServicer(object):
    """Queue that will reject enqueues with a request that is identical to an existing request.
    """

    def SomeUniqueJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SomeUniqueJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SomeUniqueJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SomeUniqueJob,
                    request_deserializer=squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeUniqueJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.jobqueue.example.SomeUniqueJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SomeUniqueJobService(object):
    """Queue that will reject enqueues with a request that is identical to an existing request.
    """

    @staticmethod
    def SomeUniqueJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobqueue.example.SomeUniqueJobService/SomeUniqueJob',
            squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeUniqueJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DisabledJobServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DisabledJob = channel.unary_unary(
                '/squareup.jobqueue.example.DisabledJobService/DisabledJob',
                request_serializer=squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeJobRequest.SerializeToString,
                response_deserializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
                )


class DisabledJobServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DisabledJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DisabledJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DisabledJob': grpc.unary_unary_rpc_method_handler(
                    servicer.DisabledJob,
                    request_deserializer=squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeJobRequest.FromString,
                    response_serializer=squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.jobqueue.example.DisabledJobService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DisabledJobService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DisabledJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.jobqueue.example.DisabledJobService/DisabledJob',
            squareup_dot_jobqueue_dot_example_dot_some__job__service__pb2.SomeJobRequest.SerializeToString,
            squareup_dot_jobqueue_dot_options__pb2.IgnoredResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
