# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.idmatch.service_pb2 import (
    GoalValue as squareup___idmatch___service_pb2___GoalValue,
    HardFailureValue as squareup___idmatch___service_pb2___HardFailureValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class FeedEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FeedEntry.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        EVENT_TYPE_NOT_SET = typing___cast(FeedEntry.EventTypeValue, 0)
        MATCH = typing___cast(FeedEntry.EventTypeValue, 1)
        QUIZ = typing___cast(FeedEntry.EventTypeValue, 2)
        VERIFY = typing___cast(FeedEntry.EventTypeValue, 3)
        UNDERWRITING_DECISION = typing___cast(FeedEntry.EventTypeValue, 4)
        RISK_DECISION = typing___cast(FeedEntry.EventTypeValue, 5)
        SIGNUP = typing___cast(FeedEntry.EventTypeValue, 6)
    EVENT_TYPE_NOT_SET = typing___cast(FeedEntry.EventTypeValue, 0)
    MATCH = typing___cast(FeedEntry.EventTypeValue, 1)
    QUIZ = typing___cast(FeedEntry.EventTypeValue, 2)
    VERIFY = typing___cast(FeedEntry.EventTypeValue, 3)
    UNDERWRITING_DECISION = typing___cast(FeedEntry.EventTypeValue, 4)
    RISK_DECISION = typing___cast(FeedEntry.EventTypeValue, 5)
    SIGNUP = typing___cast(FeedEntry.EventTypeValue, 6)
    type___EventType = EventType

    class MatchEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        vendor: typing___Text = ...
        summary: builtin___bool = ...
        total_vendors: builtin___int = ...
        matched_attributes: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___idmatch___service_pb2___GoalValue] = ...
        non_matched_attributes: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___idmatch___service_pb2___GoalValue] = ...
        match_poll_token: typing___Text = ...
        located_attributes: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___idmatch___service_pb2___GoalValue] = ...
        hard_failures: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___idmatch___service_pb2___HardFailureValue] = ...

        @property
        def started_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def finished_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            vendor : typing___Optional[typing___Text] = None,
            summary : typing___Optional[builtin___bool] = None,
            total_vendors : typing___Optional[builtin___int] = None,
            started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            finished_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            matched_attributes : typing___Optional[typing___Iterable[squareup___idmatch___service_pb2___GoalValue]] = None,
            non_matched_attributes : typing___Optional[typing___Iterable[squareup___idmatch___service_pb2___GoalValue]] = None,
            match_poll_token : typing___Optional[typing___Text] = None,
            located_attributes : typing___Optional[typing___Iterable[squareup___idmatch___service_pb2___GoalValue]] = None,
            hard_failures : typing___Optional[typing___Iterable[squareup___idmatch___service_pb2___HardFailureValue]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"finished_at",b"finished_at",u"match_poll_token",b"match_poll_token",u"started_at",b"started_at",u"summary",b"summary",u"tag",b"tag",u"total_vendors",b"total_vendors",u"vendor",b"vendor"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"finished_at",b"finished_at",u"hard_failures",b"hard_failures",u"located_attributes",b"located_attributes",u"match_poll_token",b"match_poll_token",u"matched_attributes",b"matched_attributes",u"non_matched_attributes",b"non_matched_attributes",u"started_at",b"started_at",u"summary",b"summary",u"tag",b"tag",u"total_vendors",b"total_vendors",u"vendor",b"vendor"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"tag",b"tag"]) -> typing_extensions___Literal["vendor","summary"]: ...
    type___MatchEvent = MatchEvent

    class QuizEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        vendor: typing___Text = ...
        quiz_generated: builtin___bool = ...
        match_poll_token: typing___Text = ...

        @property
        def started_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def finished_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            vendor : typing___Optional[typing___Text] = None,
            started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            finished_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            quiz_generated : typing___Optional[builtin___bool] = None,
            match_poll_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"finished_at",b"finished_at",u"match_poll_token",b"match_poll_token",u"quiz_generated",b"quiz_generated",u"started_at",b"started_at",u"vendor",b"vendor"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"finished_at",b"finished_at",u"match_poll_token",b"match_poll_token",u"quiz_generated",b"quiz_generated",u"started_at",b"started_at",u"vendor",b"vendor"]) -> None: ...
    type___QuizEvent = QuizEvent

    class VerifyEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        vendor: typing___Text = ...
        ms_from_quiz_start: builtin___int = ...
        total_questions: builtin___int = ...
        correct_answers: builtin___int = ...
        match_poll_token: typing___Text = ...

        @property
        def started_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def finished_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            vendor : typing___Optional[typing___Text] = None,
            started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            finished_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            ms_from_quiz_start : typing___Optional[builtin___int] = None,
            total_questions : typing___Optional[builtin___int] = None,
            correct_answers : typing___Optional[builtin___int] = None,
            match_poll_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"correct_answers",b"correct_answers",u"finished_at",b"finished_at",u"match_poll_token",b"match_poll_token",u"ms_from_quiz_start",b"ms_from_quiz_start",u"started_at",b"started_at",u"total_questions",b"total_questions",u"vendor",b"vendor"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"correct_answers",b"correct_answers",u"finished_at",b"finished_at",u"match_poll_token",b"match_poll_token",u"ms_from_quiz_start",b"ms_from_quiz_start",u"started_at",b"started_at",u"total_questions",b"total_questions",u"vendor",b"vendor"]) -> None: ...
    type___VerifyEvent = VerifyEvent

    class UnderwritingDecisionEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        decision: type___Underwriting.DecisionValue = ...
        decision_comment: typing___Text = ...

        @property
        def started_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def finished_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            finished_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            decision : typing___Optional[type___Underwriting.DecisionValue] = None,
            decision_comment : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"decision",b"decision",u"decision_comment",b"decision_comment",u"finished_at",b"finished_at",u"started_at",b"started_at"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"decision",b"decision",u"decision_comment",b"decision_comment",u"finished_at",b"finished_at",u"started_at",b"started_at"]) -> None: ...
    type___UnderwritingDecisionEvent = UnderwritingDecisionEvent

    class RiskDecisionEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        risk_decision: type___Risk.DecisionValue = ...
        decision_comment: typing___Text = ...

        @property
        def started_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def finished_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            finished_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            risk_decision : typing___Optional[type___Risk.DecisionValue] = None,
            decision_comment : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"decision_comment",b"decision_comment",u"finished_at",b"finished_at",u"risk_decision",b"risk_decision",u"started_at",b"started_at"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"decision_comment",b"decision_comment",u"finished_at",b"finished_at",u"risk_decision",b"risk_decision",u"started_at",b"started_at"]) -> None: ...
    type___RiskDecisionEvent = RiskDecisionEvent

    class SignupEvent(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def started_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def finished_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            finished_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"finished_at",b"finished_at",u"started_at",b"started_at"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"finished_at",b"finished_at",u"started_at",b"started_at"]) -> None: ...
    type___SignupEvent = SignupEvent

    subject_token: typing___Text = ...
    attempt_id: builtin___int = ...
    service_ou: typing___Text = ...
    product: typing___Text = ...
    event_type: type___FeedEntry.EventTypeValue = ...
    country: squareup___common___countries_pb2___CountryValue = ...

    @property
    def event_created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def match_event(self) -> type___FeedEntry.MatchEvent: ...

    @property
    def quiz_event(self) -> type___FeedEntry.QuizEvent: ...

    @property
    def verify_event(self) -> type___FeedEntry.VerifyEvent: ...

    @property
    def underwriting_decision_event(self) -> type___FeedEntry.UnderwritingDecisionEvent: ...

    @property
    def risk_decision_event(self) -> type___FeedEntry.RiskDecisionEvent: ...

    @property
    def signup_event(self) -> type___FeedEntry.SignupEvent: ...

    def __init__(self,
        *,
        subject_token : typing___Optional[typing___Text] = None,
        attempt_id : typing___Optional[builtin___int] = None,
        service_ou : typing___Optional[typing___Text] = None,
        product : typing___Optional[typing___Text] = None,
        event_type : typing___Optional[type___FeedEntry.EventTypeValue] = None,
        event_created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        match_event : typing___Optional[type___FeedEntry.MatchEvent] = None,
        quiz_event : typing___Optional[type___FeedEntry.QuizEvent] = None,
        verify_event : typing___Optional[type___FeedEntry.VerifyEvent] = None,
        underwriting_decision_event : typing___Optional[type___FeedEntry.UnderwritingDecisionEvent] = None,
        risk_decision_event : typing___Optional[type___FeedEntry.RiskDecisionEvent] = None,
        signup_event : typing___Optional[type___FeedEntry.SignupEvent] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"attempt_id",b"attempt_id",u"country",b"country",u"event",b"event",u"event_created_at",b"event_created_at",u"event_type",b"event_type",u"match_event",b"match_event",u"product",b"product",u"quiz_event",b"quiz_event",u"risk_decision_event",b"risk_decision_event",u"service_ou",b"service_ou",u"signup_event",b"signup_event",u"subject_token",b"subject_token",u"underwriting_decision_event",b"underwriting_decision_event",u"verify_event",b"verify_event"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"attempt_id",b"attempt_id",u"country",b"country",u"event",b"event",u"event_created_at",b"event_created_at",u"event_type",b"event_type",u"match_event",b"match_event",u"product",b"product",u"quiz_event",b"quiz_event",u"risk_decision_event",b"risk_decision_event",u"service_ou",b"service_ou",u"signup_event",b"signup_event",u"subject_token",b"subject_token",u"underwriting_decision_event",b"underwriting_decision_event",u"verify_event",b"verify_event"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"event",b"event"]) -> typing_extensions___Literal["match_event","quiz_event","verify_event","underwriting_decision_event","risk_decision_event","signup_event"]: ...
type___FeedEntry = FeedEntry

class Underwriting(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DecisionValue = typing___NewType('DecisionValue', builtin___int)
    type___DecisionValue = DecisionValue
    Decision: _Decision
    class _Decision(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Underwriting.DecisionValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DECISION_NOT_SET = typing___cast(Underwriting.DecisionValue, 0)
        PENDING = typing___cast(Underwriting.DecisionValue, 1)
        APPROVED = typing___cast(Underwriting.DecisionValue, 2)
        DECLINED = typing___cast(Underwriting.DecisionValue, 3)
        OPTIMISTIC_APPROVED = typing___cast(Underwriting.DecisionValue, 4)
        MANUAL_REVIEW = typing___cast(Underwriting.DecisionValue, 5)
    DECISION_NOT_SET = typing___cast(Underwriting.DecisionValue, 0)
    PENDING = typing___cast(Underwriting.DecisionValue, 1)
    APPROVED = typing___cast(Underwriting.DecisionValue, 2)
    DECLINED = typing___cast(Underwriting.DecisionValue, 3)
    OPTIMISTIC_APPROVED = typing___cast(Underwriting.DecisionValue, 4)
    MANUAL_REVIEW = typing___cast(Underwriting.DecisionValue, 5)
    type___Decision = Decision


    def __init__(self,
        ) -> None: ...
type___Underwriting = Underwriting

class Risk(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DecisionValue = typing___NewType('DecisionValue', builtin___int)
    type___DecisionValue = DecisionValue
    Decision: _Decision
    class _Decision(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Risk.DecisionValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DECISION_NOT_SET = typing___cast(Risk.DecisionValue, 0)
        PENDING = typing___cast(Risk.DecisionValue, 1)
        NOT_APPLICABLE = typing___cast(Risk.DecisionValue, 2)
        APPROVED = typing___cast(Risk.DecisionValue, 3)
        DECLINED = typing___cast(Risk.DecisionValue, 4)
        MANUAL_REVIEW = typing___cast(Risk.DecisionValue, 5)
    DECISION_NOT_SET = typing___cast(Risk.DecisionValue, 0)
    PENDING = typing___cast(Risk.DecisionValue, 1)
    NOT_APPLICABLE = typing___cast(Risk.DecisionValue, 2)
    APPROVED = typing___cast(Risk.DecisionValue, 3)
    DECLINED = typing___cast(Risk.DecisionValue, 4)
    MANUAL_REVIEW = typing___cast(Risk.DecisionValue, 5)
    type___Decision = Decision


    def __init__(self,
        ) -> None: ...
type___Risk = Risk
