# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.sawmill import service_pb2 as squareup_dot_sawmill_dot_service__pb2


class SawmillServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LogEventStream = channel.unary_unary(
                '/squareup.sawmill.SawmillService/LogEventStream',
                request_serializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamRequest.SerializeToString,
                response_deserializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamResponse.FromString,
                )
        self.LogEventStreamV2 = channel.unary_unary(
                '/squareup.sawmill.SawmillService/LogEventStreamV2',
                request_serializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamV2Request.SerializeToString,
                response_deserializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamV2Response.FromString,
                )


class SawmillServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LogEventStream(self, request, context):
        """* Log an event to sawmill. It will get forwarded to Samsa. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogEventStreamV2(self, request, context):
        """* Log an ES-V2 event to sawmill. The event will get forwarded to Samsa. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SawmillServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LogEventStream': grpc.unary_unary_rpc_method_handler(
                    servicer.LogEventStream,
                    request_deserializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamRequest.FromString,
                    response_serializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamResponse.SerializeToString,
            ),
            'LogEventStreamV2': grpc.unary_unary_rpc_method_handler(
                    servicer.LogEventStreamV2,
                    request_deserializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamV2Request.FromString,
                    response_serializer=squareup_dot_sawmill_dot_service__pb2.LogEventStreamV2Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.sawmill.SawmillService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SawmillService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LogEventStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sawmill.SawmillService/LogEventStream',
            squareup_dot_sawmill_dot_service__pb2.LogEventStreamRequest.SerializeToString,
            squareup_dot_sawmill_dot_service__pb2.LogEventStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LogEventStreamV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sawmill.SawmillService/LogEventStreamV2',
            squareup_dot_sawmill_dot_service__pb2.LogEventStreamV2Request.SerializeToString,
            squareup_dot_sawmill_dot_service__pb2.LogEventStreamV2Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
