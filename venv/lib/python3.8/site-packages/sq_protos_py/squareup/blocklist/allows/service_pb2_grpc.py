# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.blocklist.allows.message import batch_create_allow_pb2 as squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2
from sq_protos_py.squareup.blocklist.allows.message import delete_allow_pb2 as squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2
from sq_protos_py.squareup.blocklist.allows.message import list_allows_pb2 as squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2
from sq_protos_py.squareup.blocklist.allows.message import search_allows_pb2 as squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2


class AllowsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchAllows = channel.unary_unary(
                '/squareup.blocklist.allows.AllowsService/SearchAllows',
                request_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2.SearchAllowsRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2.SearchAllowsResponse.FromString,
                )
        self.ListAllows = channel.unary_unary(
                '/squareup.blocklist.allows.AllowsService/ListAllows',
                request_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2.ListAllowsRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2.ListAllowsResponse.FromString,
                )
        self.BatchCreateAllow = channel.unary_unary(
                '/squareup.blocklist.allows.AllowsService/BatchCreateAllow',
                request_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2.BatchCreateAllowRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2.BatchCreateAllowResponse.FromString,
                )
        self.DeleteAllow = channel.unary_unary(
                '/squareup.blocklist.allows.AllowsService/DeleteAllow',
                request_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2.DeleteAllowRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2.DeleteAllowResponse.FromString,
                )


class AllowsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SearchAllows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllows(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateAllow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAllow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AllowsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SearchAllows': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchAllows,
                    request_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2.SearchAllowsRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2.SearchAllowsResponse.SerializeToString,
            ),
            'ListAllows': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllows,
                    request_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2.ListAllowsRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2.ListAllowsResponse.SerializeToString,
            ),
            'BatchCreateAllow': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateAllow,
                    request_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2.BatchCreateAllowRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2.BatchCreateAllowResponse.SerializeToString,
            ),
            'DeleteAllow': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAllow,
                    request_deserializer=squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2.DeleteAllowRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2.DeleteAllowResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.blocklist.allows.AllowsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AllowsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SearchAllows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.allows.AllowsService/SearchAllows',
            squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2.SearchAllowsRequest.SerializeToString,
            squareup_dot_blocklist_dot_allows_dot_message_dot_search__allows__pb2.SearchAllowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAllows(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.allows.AllowsService/ListAllows',
            squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2.ListAllowsRequest.SerializeToString,
            squareup_dot_blocklist_dot_allows_dot_message_dot_list__allows__pb2.ListAllowsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateAllow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.allows.AllowsService/BatchCreateAllow',
            squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2.BatchCreateAllowRequest.SerializeToString,
            squareup_dot_blocklist_dot_allows_dot_message_dot_batch__create__allow__pb2.BatchCreateAllowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAllow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.allows.AllowsService/DeleteAllow',
            squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2.DeleteAllowRequest.SerializeToString,
            squareup_dot_blocklist_dot_allows_dot_message_dot_delete__allow__pb2.DeleteAllowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
