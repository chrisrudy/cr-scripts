# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.blocklist.internal.message import disable_all_blocks_for_merchant_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2
from sq_protos_py.squareup.blocklist.internal.message import disable_all_merchant_configured_blocks_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2
from sq_protos_py.squareup.blocklist.internal.message import disable_block_for_merchant_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2
from sq_protos_py.squareup.blocklist.internal.message import is_blocked_or_allowed_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2
from sq_protos_py.squareup.blocklist.internal.message import is_blocked_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2
from sq_protos_py.squareup.blocklist.internal.message import list_blocks_for_merchant_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2
from sq_protos_py.squareup.blocklist.internal.message import upsert_block_for_merchant_pb2 as squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2


class BlockedPaymentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IsBlocked = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/IsBlocked',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2.IsBlockedRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2.IsBlockedResponse.FromString,
                )
        self.IsBlockedOrAllowed = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/IsBlockedOrAllowed',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2.IsBlockedOrAllowedRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2.IsBlockedOrAllowedResponse.FromString,
                )
        self.DisableBlockForMerchant = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/DisableBlockForMerchant',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2.DisableBlockForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2.DisableBlockForMerchantResponse.FromString,
                )
        self.UpsertBlockForMerchant = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/UpsertBlockForMerchant',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2.UpsertBlockForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2.UpsertBlockForMerchantResponse.FromString,
                )
        self.ListBlocksForMerchant = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/ListBlocksForMerchant',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2.ListBlocksForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2.ListBlocksForMerchantResponse.FromString,
                )
        self.DisableAllBlocksForMerchant = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/DisableAllBlocksForMerchant',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2.DisableAllBlocksForMerchantRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2.DisableAllBlocksForMerchantResponse.FromString,
                )
        self.DisableAllMerchantConfiguredBlocks = channel.unary_unary(
                '/squareup.blocklist.internal.BlockedPaymentService/DisableAllMerchantConfiguredBlocks',
                request_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2.DisableAllMerchantConfiguredBlocksRequest.SerializeToString,
                response_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2.DisableAllMerchantConfiguredBlocksResponse.FromString,
                )


class BlockedPaymentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def IsBlocked(self, request, context):
        """TODO: remove when deprecated in favor of IsBlockedOrAllowed
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsBlockedOrAllowed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableBlockForMerchant(self, request, context):
        """Disables a square-configured blocklist identifier for a given merchant. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpsertBlockForMerchant(self, request, context):
        """Upsert a square-configured blocklist identifier for a merchant 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBlocksForMerchant(self, request, context):
        """List internal blocks for a merchant 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableAllBlocksForMerchant(self, request, context):
        """Disables all square-configured blocklist identifiers for a merchant 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableAllMerchantConfiguredBlocks(self, request, context):
        """Disables all merchant-configured blocklist identifiers for a merchant 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlockedPaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IsBlocked': grpc.unary_unary_rpc_method_handler(
                    servicer.IsBlocked,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2.IsBlockedRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2.IsBlockedResponse.SerializeToString,
            ),
            'IsBlockedOrAllowed': grpc.unary_unary_rpc_method_handler(
                    servicer.IsBlockedOrAllowed,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2.IsBlockedOrAllowedRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2.IsBlockedOrAllowedResponse.SerializeToString,
            ),
            'DisableBlockForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableBlockForMerchant,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2.DisableBlockForMerchantRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2.DisableBlockForMerchantResponse.SerializeToString,
            ),
            'UpsertBlockForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpsertBlockForMerchant,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2.UpsertBlockForMerchantRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2.UpsertBlockForMerchantResponse.SerializeToString,
            ),
            'ListBlocksForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBlocksForMerchant,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2.ListBlocksForMerchantRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2.ListBlocksForMerchantResponse.SerializeToString,
            ),
            'DisableAllBlocksForMerchant': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableAllBlocksForMerchant,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2.DisableAllBlocksForMerchantRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2.DisableAllBlocksForMerchantResponse.SerializeToString,
            ),
            'DisableAllMerchantConfiguredBlocks': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableAllMerchantConfiguredBlocks,
                    request_deserializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2.DisableAllMerchantConfiguredBlocksRequest.FromString,
                    response_serializer=squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2.DisableAllMerchantConfiguredBlocksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.blocklist.internal.BlockedPaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BlockedPaymentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def IsBlocked(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/IsBlocked',
            squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2.IsBlockedRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__pb2.IsBlockedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsBlockedOrAllowed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/IsBlockedOrAllowed',
            squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2.IsBlockedOrAllowedRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_is__blocked__or__allowed__pb2.IsBlockedOrAllowedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableBlockForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/DisableBlockForMerchant',
            squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2.DisableBlockForMerchantRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_disable__block__for__merchant__pb2.DisableBlockForMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpsertBlockForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/UpsertBlockForMerchant',
            squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2.UpsertBlockForMerchantRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_upsert__block__for__merchant__pb2.UpsertBlockForMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBlocksForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/ListBlocksForMerchant',
            squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2.ListBlocksForMerchantRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_list__blocks__for__merchant__pb2.ListBlocksForMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableAllBlocksForMerchant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/DisableAllBlocksForMerchant',
            squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2.DisableAllBlocksForMerchantRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__blocks__for__merchant__pb2.DisableAllBlocksForMerchantResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableAllMerchantConfiguredBlocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.blocklist.internal.BlockedPaymentService/DisableAllMerchantConfiguredBlocks',
            squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2.DisableAllMerchantConfiguredBlocksRequest.SerializeToString,
            squareup_dot_blocklist_dot_internal_dot_message_dot_disable__all__merchant__configured__blocks__pb2.DisableAllMerchantConfiguredBlocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
