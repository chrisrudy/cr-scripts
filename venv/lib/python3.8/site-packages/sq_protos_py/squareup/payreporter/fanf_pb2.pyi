# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Fanf(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    PartnerValue = typing___NewType('PartnerValue', builtin___int)
    type___PartnerValue = PartnerValue
    Partner: _Partner
    class _Partner(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Fanf.PartnerValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        WELLS_FARGO = typing___cast(Fanf.PartnerValue, 0)
        PAYMENTECH = typing___cast(Fanf.PartnerValue, 1)
    WELLS_FARGO = typing___cast(Fanf.PartnerValue, 0)
    PAYMENTECH = typing___cast(Fanf.PartnerValue, 1)
    type___Partner = Partner

    unit_token: typing___Text = ...
    partner: type___Fanf.PartnerValue = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def charged_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        partner : typing___Optional[type___Fanf.PartnerValue] = None,
        charged_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"charged_at",b"charged_at",u"partner",b"partner",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"charged_at",b"charged_at",u"partner",b"partner",u"unit_token",b"unit_token"]) -> None: ...
type___Fanf = Fanf
