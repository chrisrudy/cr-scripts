# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.snooplogg import service_pb2 as squareup_dot_snooplogg_dot_service__pb2


class SnooploggIngestionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PutMessage = channel.unary_unary(
                '/squareup.snooplogg.service.SnooploggIngestionService/PutMessage',
                request_serializer=squareup_dot_snooplogg_dot_service__pb2.PutMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_snooplogg_dot_service__pb2.PutMessageResponse.FromString,
                )
        self.AppendMessage = channel.unary_unary(
                '/squareup.snooplogg.service.SnooploggIngestionService/AppendMessage',
                request_serializer=squareup_dot_snooplogg_dot_service__pb2.AppendMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_snooplogg_dot_service__pb2.AppendMessageResponse.FromString,
                )
        self.AnnotateMessage = channel.unary_unary(
                '/squareup.snooplogg.service.SnooploggIngestionService/AnnotateMessage',
                request_serializer=squareup_dot_snooplogg_dot_service__pb2.AnnotateMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_snooplogg_dot_service__pb2.AnnotateMessageResponse.FromString,
                )


class SnooploggIngestionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PutMessage(self, request, context):
        """*
        Add the message to the snooplogg service. Use this interface for
        messages to be contained in a single transmission.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AppendMessage(self, request, context):
        """*
        Add segment(s) to an existing message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnnotateMessage(self, request, context):
        """*
        Add indices to the specified message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnooploggIngestionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PutMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PutMessage,
                    request_deserializer=squareup_dot_snooplogg_dot_service__pb2.PutMessageRequest.FromString,
                    response_serializer=squareup_dot_snooplogg_dot_service__pb2.PutMessageResponse.SerializeToString,
            ),
            'AppendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.AppendMessage,
                    request_deserializer=squareup_dot_snooplogg_dot_service__pb2.AppendMessageRequest.FromString,
                    response_serializer=squareup_dot_snooplogg_dot_service__pb2.AppendMessageResponse.SerializeToString,
            ),
            'AnnotateMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.AnnotateMessage,
                    request_deserializer=squareup_dot_snooplogg_dot_service__pb2.AnnotateMessageRequest.FromString,
                    response_serializer=squareup_dot_snooplogg_dot_service__pb2.AnnotateMessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.snooplogg.service.SnooploggIngestionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SnooploggIngestionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PutMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.snooplogg.service.SnooploggIngestionService/PutMessage',
            squareup_dot_snooplogg_dot_service__pb2.PutMessageRequest.SerializeToString,
            squareup_dot_snooplogg_dot_service__pb2.PutMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AppendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.snooplogg.service.SnooploggIngestionService/AppendMessage',
            squareup_dot_snooplogg_dot_service__pb2.AppendMessageRequest.SerializeToString,
            squareup_dot_snooplogg_dot_service__pb2.AppendMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AnnotateMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.snooplogg.service.SnooploggIngestionService/AnnotateMessage',
            squareup_dot_snooplogg_dot_service__pb2.AnnotateMessageRequest.SerializeToString,
            squareup_dot_snooplogg_dot_service__pb2.AnnotateMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SnooploggSimpleSearchServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMessage = channel.unary_unary(
                '/squareup.snooplogg.service.SnooploggSimpleSearchService/GetMessage',
                request_serializer=squareup_dot_snooplogg_dot_service__pb2.GetMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_snooplogg_dot_service__pb2.GetMessageResponse.FromString,
                )
        self.SearchMessages = channel.unary_unary(
                '/squareup.snooplogg.service.SnooploggSimpleSearchService/SearchMessages',
                request_serializer=squareup_dot_snooplogg_dot_service__pb2.SearchMessagesRequest.SerializeToString,
                response_deserializer=squareup_dot_snooplogg_dot_service__pb2.SearchMessagesResponse.FromString,
                )


class SnooploggSimpleSearchServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMessage(self, request, context):
        """*
        Retrieve a specific message
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchMessages(self, request, context):
        """*
        Request segments that meet the search criteria
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SnooploggSimpleSearchServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=squareup_dot_snooplogg_dot_service__pb2.GetMessageRequest.FromString,
                    response_serializer=squareup_dot_snooplogg_dot_service__pb2.GetMessageResponse.SerializeToString,
            ),
            'SearchMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchMessages,
                    request_deserializer=squareup_dot_snooplogg_dot_service__pb2.SearchMessagesRequest.FromString,
                    response_serializer=squareup_dot_snooplogg_dot_service__pb2.SearchMessagesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.snooplogg.service.SnooploggSimpleSearchService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SnooploggSimpleSearchService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.snooplogg.service.SnooploggSimpleSearchService/GetMessage',
            squareup_dot_snooplogg_dot_service__pb2.GetMessageRequest.SerializeToString,
            squareup_dot_snooplogg_dot_service__pb2.GetMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.snooplogg.service.SnooploggSimpleSearchService/SearchMessages',
            squareup_dot_snooplogg_dot_service__pb2.SearchMessagesRequest.SerializeToString,
            squareup_dot_snooplogg_dot_service__pb2.SearchMessagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
