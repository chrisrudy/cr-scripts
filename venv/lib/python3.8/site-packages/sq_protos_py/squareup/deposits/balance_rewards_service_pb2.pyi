# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

BalanceRewardTypeValue = typing___NewType('BalanceRewardTypeValue', builtin___int)
type___BalanceRewardTypeValue = BalanceRewardTypeValue
BalanceRewardType: _BalanceRewardType
class _BalanceRewardType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BalanceRewardTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_REWARD_TYPE_DO_NOT_USE = typing___cast(BalanceRewardTypeValue, 0)
    FREE_PROCESSING = typing___cast(BalanceRewardTypeValue, 1)
    INTEREST_INCOME = typing___cast(BalanceRewardTypeValue, 2)
    INSTANT_TRANSFERS = typing___cast(BalanceRewardTypeValue, 3)
DEFAULT_REWARD_TYPE_DO_NOT_USE = typing___cast(BalanceRewardTypeValue, 0)
FREE_PROCESSING = typing___cast(BalanceRewardTypeValue, 1)
INTEREST_INCOME = typing___cast(BalanceRewardTypeValue, 2)
INSTANT_TRANSFERS = typing___cast(BalanceRewardTypeValue, 3)
type___BalanceRewardType = BalanceRewardType

TierDesignationValue = typing___NewType('TierDesignationValue', builtin___int)
type___TierDesignationValue = TierDesignationValue
TierDesignation: _TierDesignation
class _TierDesignation(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TierDesignationValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_TIER_DESIGNATION_DO_NOT_USE = typing___cast(TierDesignationValue, 0)
    NONE = typing___cast(TierDesignationValue, 1)
    SILVER = typing___cast(TierDesignationValue, 2)
    GOLD = typing___cast(TierDesignationValue, 3)
    PLATINUM = typing___cast(TierDesignationValue, 4)
    TITANIUM = typing___cast(TierDesignationValue, 5)
DEFAULT_TIER_DESIGNATION_DO_NOT_USE = typing___cast(TierDesignationValue, 0)
NONE = typing___cast(TierDesignationValue, 1)
SILVER = typing___cast(TierDesignationValue, 2)
GOLD = typing___cast(TierDesignationValue, 3)
PLATINUM = typing___cast(TierDesignationValue, 4)
TITANIUM = typing___cast(TierDesignationValue, 5)
type___TierDesignation = TierDesignation

class BalanceRewardTier(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class BalanceReward(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        FrequencyValue = typing___NewType('FrequencyValue', builtin___int)
        type___FrequencyValue = FrequencyValue
        Frequency: _Frequency
        class _Frequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BalanceRewardTier.BalanceReward.FrequencyValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DEFAULT_FREQUENCY_DO_NOT_USE = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 0)
            DAILY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 1)
            WEEKLY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 2)
            MONTHLY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 3)
            ANNUALLY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 4)
            MINUTELY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 5)
        DEFAULT_FREQUENCY_DO_NOT_USE = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 0)
        DAILY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 1)
        WEEKLY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 2)
        MONTHLY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 3)
        ANNUALLY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 4)
        MINUTELY = typing___cast(BalanceRewardTier.BalanceReward.FrequencyValue, 5)
        type___Frequency = Frequency

        balance_reward_type: type___BalanceRewardTypeValue = ...
        reward_frequency: type___BalanceRewardTier.BalanceReward.FrequencyValue = ...
        reward_basis_points: builtin___int = ...
        reward_count: builtin___int = ...

        @property
        def reward_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            balance_reward_type : typing___Optional[type___BalanceRewardTypeValue] = None,
            reward_frequency : typing___Optional[type___BalanceRewardTier.BalanceReward.FrequencyValue] = None,
            reward_basis_points : typing___Optional[builtin___int] = None,
            reward_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            reward_count : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"balance_reward_type",b"balance_reward_type",u"reward_basis_points",b"reward_basis_points",u"reward_count",b"reward_count",u"reward_frequency",b"reward_frequency",u"reward_money",b"reward_money",u"reward_quantity",b"reward_quantity"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"balance_reward_type",b"balance_reward_type",u"reward_basis_points",b"reward_basis_points",u"reward_count",b"reward_count",u"reward_frequency",b"reward_frequency",u"reward_money",b"reward_money",u"reward_quantity",b"reward_quantity"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"reward_quantity",b"reward_quantity"]) -> typing_extensions___Literal["reward_basis_points","reward_money","reward_count"]: ...
    type___BalanceReward = BalanceReward

    tier_designation: type___TierDesignationValue = ...

    @property
    def minimum_balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def balance_reward(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___BalanceRewardTier.BalanceReward]: ...

    def __init__(self,
        *,
        tier_designation : typing___Optional[type___TierDesignationValue] = None,
        minimum_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        balance_reward : typing___Optional[typing___Iterable[type___BalanceRewardTier.BalanceReward]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"minimum_balance",b"minimum_balance",u"tier_designation",b"tier_designation"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"balance_reward",b"balance_reward",u"minimum_balance",b"minimum_balance",u"tier_designation",b"tier_designation"]) -> None: ...
type___BalanceRewardTier = BalanceRewardTier

class GetRewardTiersRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"unit_token",b"unit_token"]) -> None: ...
type___GetRewardTiersRequest = GetRewardTiersRequest

class GetRewardTiersResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def balance_reward_tier(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___BalanceRewardTier]: ...

    def __init__(self,
        *,
        balance_reward_tier : typing___Optional[typing___Iterable[type___BalanceRewardTier]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"balance_reward_tier",b"balance_reward_tier"]) -> None: ...
type___GetRewardTiersResponse = GetRewardTiersResponse

class GetRewardsStatusRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"unit_token",b"unit_token"]) -> None: ...
type___GetRewardsStatusRequest = GetRewardsStatusRequest

class GetRewardsStatusResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class BalanceRewardStatus(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        balance_reward_type: type___BalanceRewardTypeValue = ...
        earned_count: builtin___int = ...

        @property
        def earned_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            balance_reward_type : typing___Optional[type___BalanceRewardTypeValue] = None,
            earned_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            earned_count : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"balance_reward_type",b"balance_reward_type",u"earned_count",b"earned_count",u"earned_money",b"earned_money",u"earned_quantity",b"earned_quantity"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"balance_reward_type",b"balance_reward_type",u"earned_count",b"earned_count",u"earned_money",b"earned_money",u"earned_quantity",b"earned_quantity"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"earned_quantity",b"earned_quantity"]) -> typing_extensions___Literal["earned_money","earned_count"]: ...
    type___BalanceRewardStatus = BalanceRewardStatus

    current_tier_designation: type___TierDesignationValue = ...

    @property
    def reward_status(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GetRewardsStatusResponse.BalanceRewardStatus]: ...

    def __init__(self,
        *,
        current_tier_designation : typing___Optional[type___TierDesignationValue] = None,
        reward_status : typing___Optional[typing___Iterable[type___GetRewardsStatusResponse.BalanceRewardStatus]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_tier_designation",b"current_tier_designation"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_tier_designation",b"current_tier_designation",u"reward_status",b"reward_status"]) -> None: ...
type___GetRewardsStatusResponse = GetRewardsStatusResponse
