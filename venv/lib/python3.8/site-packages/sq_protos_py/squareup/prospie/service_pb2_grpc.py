# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.prospie import service_pb2 as squareup_dot_prospie_dot_service__pb2


class ProspieDataServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBusiness = channel.unary_unary(
                '/squareup.prospie.service.ProspieDataService/GetBusiness',
                request_serializer=squareup_dot_prospie_dot_service__pb2.GetBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_prospie_dot_service__pb2.GetBusinessResponse.FromString,
                )
        self.BatchGetBusiness = channel.unary_unary(
                '/squareup.prospie.service.ProspieDataService/BatchGetBusiness',
                request_serializer=squareup_dot_prospie_dot_service__pb2.BatchGetBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_prospie_dot_service__pb2.BatchGetBusinessResponse.FromString,
                )
        self.MatchBusiness = channel.unary_unary(
                '/squareup.prospie.service.ProspieDataService/MatchBusiness',
                request_serializer=squareup_dot_prospie_dot_service__pb2.MatchBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_prospie_dot_service__pb2.MatchBusinessResponse.FromString,
                )
        self.BatchMatchBusiness = channel.unary_unary(
                '/squareup.prospie.service.ProspieDataService/BatchMatchBusiness',
                request_serializer=squareup_dot_prospie_dot_service__pb2.BatchMatchBusinessRequest.SerializeToString,
                response_deserializer=squareup_dot_prospie_dot_service__pb2.BatchMatchBusinessResponse.FromString,
                )


class ProspieDataServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBusiness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchGetBusiness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MatchBusiness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchMatchBusiness(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProspieDataServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBusiness,
                    request_deserializer=squareup_dot_prospie_dot_service__pb2.GetBusinessRequest.FromString,
                    response_serializer=squareup_dot_prospie_dot_service__pb2.GetBusinessResponse.SerializeToString,
            ),
            'BatchGetBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchGetBusiness,
                    request_deserializer=squareup_dot_prospie_dot_service__pb2.BatchGetBusinessRequest.FromString,
                    response_serializer=squareup_dot_prospie_dot_service__pb2.BatchGetBusinessResponse.SerializeToString,
            ),
            'MatchBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.MatchBusiness,
                    request_deserializer=squareup_dot_prospie_dot_service__pb2.MatchBusinessRequest.FromString,
                    response_serializer=squareup_dot_prospie_dot_service__pb2.MatchBusinessResponse.SerializeToString,
            ),
            'BatchMatchBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchMatchBusiness,
                    request_deserializer=squareup_dot_prospie_dot_service__pb2.BatchMatchBusinessRequest.FromString,
                    response_serializer=squareup_dot_prospie_dot_service__pb2.BatchMatchBusinessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.prospie.service.ProspieDataService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProspieDataService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.prospie.service.ProspieDataService/GetBusiness',
            squareup_dot_prospie_dot_service__pb2.GetBusinessRequest.SerializeToString,
            squareup_dot_prospie_dot_service__pb2.GetBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchGetBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.prospie.service.ProspieDataService/BatchGetBusiness',
            squareup_dot_prospie_dot_service__pb2.BatchGetBusinessRequest.SerializeToString,
            squareup_dot_prospie_dot_service__pb2.BatchGetBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MatchBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.prospie.service.ProspieDataService/MatchBusiness',
            squareup_dot_prospie_dot_service__pb2.MatchBusinessRequest.SerializeToString,
            squareup_dot_prospie_dot_service__pb2.MatchBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchMatchBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.prospie.service.ProspieDataService/BatchMatchBusiness',
            squareup_dot_prospie_dot_service__pb2.BatchMatchBusinessRequest.SerializeToString,
            squareup_dot_prospie_dot_service__pb2.BatchMatchBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
