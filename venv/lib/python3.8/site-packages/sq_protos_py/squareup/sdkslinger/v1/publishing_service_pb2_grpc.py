# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.sdkslinger.v1.actions import release_pb2 as squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2


class SDKSlingerPublishingAPIV1Stub(object):
    """Internal API for Continuous Integration (CI) and Mobile Release. Teams publishing
    ReaderSDKs can use SDKSlingerPublishingAPIV1 to verify the SDK's upload status and
    indicate that the SDK is ready for publication.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateRelease = channel.unary_unary(
                '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/CreateRelease',
                request_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseRequest.SerializeToString,
                response_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
                )
        self.RetrieveRelease = channel.unary_unary(
                '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/RetrieveRelease',
                request_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.RetrieveReleaseRequest.SerializeToString,
                response_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
                )
        self.PublishRelease = channel.unary_unary(
                '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/PublishRelease',
                request_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.PublishReleaseRequest.SerializeToString,
                response_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
                )
        self.ExpireRelease = channel.unary_unary(
                '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/ExpireRelease',
                request_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.RetrieveReleaseRequest.SerializeToString,
                response_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
                )


class SDKSlingerPublishingAPIV1Servicer(object):
    """Internal API for Continuous Integration (CI) and Mobile Release. Teams publishing
    ReaderSDKs can use SDKSlingerPublishingAPIV1 to verify the SDK's upload status and
    indicate that the SDK is ready for publication.
    """

    def CreateRelease(self, request, context):
        """--
        @desc CreateRelease stores all the information needed by SDK Slinger to manage
        an SDK release. A release represents a specific version of the Reader SDK for a
        specific platform and includes a library consisting of a binary file (.aar or .zip)
        and a specification file (a .pom or a .podspec file). A release can optionally
        include one or more dependency libraries (each one consisting of binaries and
        specification files).

        The payload expected by this endpoint contains all the necessary information for
        SDK Slinger to schedule an asynchronous job that will pull SDK and related
        libraries from Square internal sources, check for their file integrity using
        SHA256 sums and deploy them to the appropriate external Maven or Cocoapods
        repository. The provided payload also defines all the information needed for
        SDK Slinger to generate and deploy Whitebox Key artifacts for each application
        registered in the system (See `SDKSlingerManagmentAPIV1`)

        The `RetrieveRelease` endpoint should be used to check for the status of a
        created release. Once a release is marked as `PUBLISHABLE` by SDK Slinger, a user can
        choose to publish a release by calling `PublishRelease`. If a release is not
        published within 4 hours of being created, SDK Slinger will expire it and delete
        all created repositories and uploaded files.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveRelease(self, request, context):
        """--
        @desc RetrieveRelease returns all information about a ReaderSDK release.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PublishRelease(self, request, context):
        """--
        @desc PublishRelease marks a ReaderSDK release to be ready for publication.

        SDK Slinger will enable the release to be used by current application developers.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpireRelease(self, request, context):
        """--
        @desc ExpireRelease marks a ReaderSDK release as expired as long as it has
        not been deployed yet.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SDKSlingerPublishingAPIV1Servicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateRelease,
                    request_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseRequest.FromString,
                    response_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.SerializeToString,
            ),
            'RetrieveRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveRelease,
                    request_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.RetrieveReleaseRequest.FromString,
                    response_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.SerializeToString,
            ),
            'PublishRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.PublishRelease,
                    request_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.PublishReleaseRequest.FromString,
                    response_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.SerializeToString,
            ),
            'ExpireRelease': grpc.unary_unary_rpc_method_handler(
                    servicer.ExpireRelease,
                    request_deserializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.RetrieveReleaseRequest.FromString,
                    response_serializer=squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SDKSlingerPublishingAPIV1(object):
    """Internal API for Continuous Integration (CI) and Mobile Release. Teams publishing
    ReaderSDKs can use SDKSlingerPublishingAPIV1 to verify the SDK's upload status and
    indicate that the SDK is ready for publication.
    """

    @staticmethod
    def CreateRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/CreateRelease',
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseRequest.SerializeToString,
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/RetrieveRelease',
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.RetrieveReleaseRequest.SerializeToString,
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PublishRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/PublishRelease',
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.PublishReleaseRequest.SerializeToString,
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExpireRelease(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sdkslinger.v1.SDKSlingerPublishingAPIV1/ExpireRelease',
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.RetrieveReleaseRequest.SerializeToString,
            squareup_dot_sdkslinger_dot_v1_dot_actions_dot_release__pb2.CreateReleaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
