# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.retail.fe import service_pb2 as squareup_dot_retail_dot_fe_dot_service__pb2


class ContactServiceStub(object):
    """* ContactService defines the service API for unit-owned contact information. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateContact = channel.unary_unary(
                '/squareup.retail.fe.ContactService/CreateContact',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateContactRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateContactResponse.FromString,
                )
        self.GetContact = channel.unary_unary(
                '/squareup.retail.fe.ContactService/GetContact',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.GetContactRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.GetContactResponse.FromString,
                )
        self.ListContacts = channel.unary_unary(
                '/squareup.retail.fe.ContactService/ListContacts',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListContactsRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListContactsResponse.FromString,
                )
        self.UpdateContactProfile = channel.unary_unary(
                '/squareup.retail.fe.ContactService/UpdateContactProfile',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateContactProfileRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateContactProfileResponse.FromString,
                )
        self.SetContactForTenders = channel.unary_unary(
                '/squareup.retail.fe.ContactService/SetContactForTenders',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.SetContactForTendersRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.SetContactForTendersResponse.FromString,
                )
        self.ListBillsForContact = channel.unary_unary(
                '/squareup.retail.fe.ContactService/ListBillsForContact',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListBillsForContactRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListBillsForContactResponse.FromString,
                )


class ContactServiceServicer(object):
    """* ContactService defines the service API for unit-owned contact information. 
    """

    def CreateContact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContact(self, request, context):
        """*
        Fetches a single contact by token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListContacts(self, request, context):
        """*
        Fetches all contacts for a unit with an optional query performing a search on contact email and name
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateContactProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetContactForTenders(self, request, context):
        """*
        Associates a contact with tenders
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBillsForContact(self, request, context):
        """*
        Fetches all bills for a contact based on the provided contact token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ContactServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateContact': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContact,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateContactRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateContactResponse.SerializeToString,
            ),
            'GetContact': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContact,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.GetContactRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.GetContactResponse.SerializeToString,
            ),
            'ListContacts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListContacts,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListContactsRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListContactsResponse.SerializeToString,
            ),
            'UpdateContactProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateContactProfile,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateContactProfileRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateContactProfileResponse.SerializeToString,
            ),
            'SetContactForTenders': grpc.unary_unary_rpc_method_handler(
                    servicer.SetContactForTenders,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.SetContactForTendersRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.SetContactForTendersResponse.SerializeToString,
            ),
            'ListBillsForContact': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBillsForContact,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListBillsForContactRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.ListBillsForContactResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.retail.fe.ContactService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ContactService(object):
    """* ContactService defines the service API for unit-owned contact information. 
    """

    @staticmethod
    def CreateContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ContactService/CreateContact',
            squareup_dot_retail_dot_fe_dot_service__pb2.CreateContactRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.CreateContactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ContactService/GetContact',
            squareup_dot_retail_dot_fe_dot_service__pb2.GetContactRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.GetContactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListContacts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ContactService/ListContacts',
            squareup_dot_retail_dot_fe_dot_service__pb2.ListContactsRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.ListContactsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateContactProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ContactService/UpdateContactProfile',
            squareup_dot_retail_dot_fe_dot_service__pb2.UpdateContactProfileRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.UpdateContactProfileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetContactForTenders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ContactService/SetContactForTenders',
            squareup_dot_retail_dot_fe_dot_service__pb2.SetContactForTendersRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.SetContactForTendersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBillsForContact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ContactService/ListBillsForContact',
            squareup_dot_retail_dot_fe_dot_service__pb2.ListBillsForContactRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.ListBillsForContactResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ItemsServiceStub(object):
    """*
    ItemsService exposes a subset of the ItemsV2 API.

    Duplicating the service API is the easiest way to namespace a version of
    the items v2 api. See ItemsApi vs InternalItemsApi in squareup/itemsv2/api.proto.

    NOTE: The way we handle items it likely to change but this is expedient for the first demo.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDiscount = channel.unary_unary(
                '/squareup.retail.fe.ItemsService/CreateDiscount',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateDiscountRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateDiscountResponse.FromString,
                )
        self.DeleteDiscount = channel.unary_unary(
                '/squareup.retail.fe.ItemsService/DeleteDiscount',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.DeleteDiscountRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.DeleteDiscountResponse.FromString,
                )
        self.UpdateDiscount = channel.unary_unary(
                '/squareup.retail.fe.ItemsService/UpdateDiscount',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateDiscountRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateDiscountResponse.FromString,
                )


class ItemsServiceServicer(object):
    """*
    ItemsService exposes a subset of the ItemsV2 API.

    Duplicating the service API is the easiest way to namespace a version of
    the items v2 api. See ItemsApi vs InternalItemsApi in squareup/itemsv2/api.proto.

    NOTE: The way we handle items it likely to change but this is expedient for the first demo.
    """

    def CreateDiscount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDiscount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDiscount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ItemsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDiscount,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateDiscountRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.CreateDiscountResponse.SerializeToString,
            ),
            'DeleteDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDiscount,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.DeleteDiscountRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.DeleteDiscountResponse.SerializeToString,
            ),
            'UpdateDiscount': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDiscount,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateDiscountRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.UpdateDiscountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.retail.fe.ItemsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ItemsService(object):
    """*
    ItemsService exposes a subset of the ItemsV2 API.

    Duplicating the service API is the easiest way to namespace a version of
    the items v2 api. See ItemsApi vs InternalItemsApi in squareup/itemsv2/api.proto.

    NOTE: The way we handle items it likely to change but this is expedient for the first demo.
    """

    @staticmethod
    def CreateDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ItemsService/CreateDiscount',
            squareup_dot_retail_dot_fe_dot_service__pb2.CreateDiscountRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.CreateDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ItemsService/DeleteDiscount',
            squareup_dot_retail_dot_fe_dot_service__pb2.DeleteDiscountRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.DeleteDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDiscount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ItemsService/UpdateDiscount',
            squareup_dot_retail_dot_fe_dot_service__pb2.UpdateDiscountRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.UpdateDiscountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class CartServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CalculateCart = channel.unary_unary(
                '/squareup.retail.fe.CartService/CalculateCart',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.CalculateCartRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.CalculateCartResponse.FromString,
                )


class CartServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CalculateCart(self, request, context):
        """*
        Apply bundles and taxes, and calculate provided cart.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CartServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CalculateCart': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateCart,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.CalculateCartRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.CalculateCartResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.retail.fe.CartService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CartService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CalculateCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.CartService/CalculateCart',
            squareup_dot_retail_dot_fe_dot_service__pb2.CalculateCartRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.CalculateCartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ClientValidationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ValidateClient = channel.unary_unary(
                '/squareup.retail.fe.ClientValidationService/ValidateClient',
                request_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.ValidateClientRequest.SerializeToString,
                response_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.ValidateClientResponse.FromString,
                )


class ClientValidationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ValidateClient(self, request, context):
        """*
        Ensures that the client is not outdated and can be run safely
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClientValidationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ValidateClient': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateClient,
                    request_deserializer=squareup_dot_retail_dot_fe_dot_service__pb2.ValidateClientRequest.FromString,
                    response_serializer=squareup_dot_retail_dot_fe_dot_service__pb2.ValidateClientResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.retail.fe.ClientValidationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ClientValidationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ValidateClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.retail.fe.ClientValidationService/ValidateClient',
            squareup_dot_retail_dot_fe_dot_service__pb2.ValidateClientRequest.SerializeToString,
            squareup_dot_retail_dot_fe_dot_service__pb2.ValidateClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
