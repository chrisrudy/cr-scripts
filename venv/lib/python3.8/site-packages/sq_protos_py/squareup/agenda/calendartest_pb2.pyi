# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.agenda.calendar_pb2 import (
    RecurrenceRule as squareup___agenda___calendar_pb2___RecurrenceRule,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class RecurRuleTestCase(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    orig_rrule: typing___Text = ...
    dtstart_tz_id: typing___Text = ...
    is_full_set: builtin___bool = ...

    @property
    def dtstart(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def exdate(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___common___time_pb2___DateTime]: ...

    @property
    def rule(self) -> squareup___agenda___calendar_pb2___RecurrenceRule: ...

    @property
    def expected_instance(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___common___time_pb2___DateTime]: ...

    def __init__(self,
        *,
        orig_rrule : typing___Optional[typing___Text] = None,
        dtstart_tz_id : typing___Optional[typing___Text] = None,
        dtstart : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        exdate : typing___Optional[typing___Iterable[squareup___common___time_pb2___DateTime]] = None,
        rule : typing___Optional[squareup___agenda___calendar_pb2___RecurrenceRule] = None,
        expected_instance : typing___Optional[typing___Iterable[squareup___common___time_pb2___DateTime]] = None,
        is_full_set : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"dtstart",b"dtstart",u"dtstart_tz_id",b"dtstart_tz_id",u"is_full_set",b"is_full_set",u"orig_rrule",b"orig_rrule",u"rule",b"rule"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dtstart",b"dtstart",u"dtstart_tz_id",b"dtstart_tz_id",u"exdate",b"exdate",u"expected_instance",b"expected_instance",u"is_full_set",b"is_full_set",u"orig_rrule",b"orig_rrule",u"rule",b"rule"]) -> None: ...
type___RecurRuleTestCase = RecurRuleTestCase

class RecurRuleTestCaseList(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def case(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___RecurRuleTestCase]: ...

    def __init__(self,
        *,
        case : typing___Optional[typing___Iterable[type___RecurRuleTestCase]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"case",b"case"]) -> None: ...
type___RecurRuleTestCaseList = RecurRuleTestCaseList
