# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.agenda import agenda_pb2 as squareup_dot_agenda_dot_agenda__pb2
from sq_protos_py.squareup.agenda import common_pb2 as squareup_dot_agenda_dot_common__pb2
from sq_protos_py.squareup.api.rpc import rpc_pb2 as squareup_dot_api_dot_rpc_dot_rpc__pb2


class AgendaSyncServiceStub(object):
    """* Handler for cogs request/response batch 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Sync = channel.unary_unary(
                '/squareup.agenda.AgendaSyncService/Sync',
                request_serializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.RequestBatch.SerializeToString,
                response_deserializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.ResponseBatch.FromString,
                )


class AgendaSyncServiceServicer(object):
    """* Handler for cogs request/response batch 
    """

    def Sync(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgendaSyncServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Sync': grpc.unary_unary_rpc_method_handler(
                    servicer.Sync,
                    request_deserializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.RequestBatch.FromString,
                    response_serializer=squareup_dot_api_dot_rpc_dot_rpc__pb2.ResponseBatch.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.agenda.AgendaSyncService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgendaSyncService(object):
    """* Handler for cogs request/response batch 
    """

    @staticmethod
    def Sync(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaSyncService/Sync',
            squareup_dot_api_dot_rpc_dot_rpc__pb2.RequestBatch.SerializeToString,
            squareup_dot_api_dot_rpc_dot_rpc__pb2.ResponseBatch.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AgendaAccountServiceStub(object):
    """* Service for updating account information that is specific to appointments 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckNotifications = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/CheckNotifications',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.CheckNotificationsRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.CheckNotificationsResponse.FromString,
                )
        self.ListActivityFeed = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/ListActivityFeed',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.ListActivityFeedRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.ListActivityFeedResponse.FromString,
                )
        self.GetReferralInfo = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/GetReferralInfo',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.ReferralInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.ReferralInfoResponse.FromString,
                )
        self.MarkActivityFeedItemDismissed = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/MarkActivityFeedItemDismissed',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.MarkActivityFeedItemDismissedRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.MarkActivityFeedItemDismissedResponse.FromString,
                )
        self.GetPersonInfo = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/GetPersonInfo',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.GetPersonInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.GetPersonInfoResponse.FromString,
                )
        self.GetFeatureFlags = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/GetFeatureFlags',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.GetFeatureFlagsRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.GetFeatureFlagsResponse.FromString,
                )
        self.RegisterRemoteNotificationToken = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/RegisterRemoteNotificationToken',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.RegisterRemoteNotificationTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.RegisterRemoteNotificationTokenResponse.FromString,
                )
        self.UnregisterRemoteNotificationToken = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/UnregisterRemoteNotificationToken',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.UnregisterRemoteNotificationTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.UnregisterRemoteNotificationTokenResponse.FromString,
                )
        self.CreateMerchantFeedback = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/CreateMerchantFeedback',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.CreateMerchantFeedbackRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.CreateMerchantFeedbackResponse.FromString,
                )
        self.ForceDowngrade = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/ForceDowngrade',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.ForceDowngradeRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.ForceDowngradeResponse.FromString,
                )
        self.ChangeAppointmentStatus = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/ChangeAppointmentStatus',
                request_serializer=squareup_dot_agenda_dot_common__pb2.ChangeAppointmentStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_common__pb2.ChangeAppointmentStatusResponse.FromString,
                )
        self.SendConfirmationMessage = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/SendConfirmationMessage',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.SendConfirmationMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.SendConfirmationMessageResponse.FromString,
                )
        self.GetAppointmentCart = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/GetAppointmentCart',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.GetAppointmentCartRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.GetAppointmentCartResponse.FromString,
                )
        self.CheckAppointmentsOnboarded = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/CheckAppointmentsOnboarded',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.CheckAppointmentsOnboardedRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.CheckAppointmentsOnboardedResponse.FromString,
                )
        self.OnboardAppointments = channel.unary_unary(
                '/squareup.agenda.AgendaAccountService/OnboardAppointments',
                request_serializer=squareup_dot_agenda_dot_agenda__pb2.OnboardAppointmentsRequest.SerializeToString,
                response_deserializer=squareup_dot_agenda_dot_agenda__pb2.OnboardAppointmentsResponse.FromString,
                )


class AgendaAccountServiceServicer(object):
    """* Service for updating account information that is specific to appointments 
    """

    def CheckNotifications(self, request, context):
        """
        Checks if there are any notifications that should be presented to the user.
        This method is called on login, app launching, and app becoming active.
        The processing of its requests must block app login and launching (if stale).

        It requires a unit to be selected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListActivityFeed(self, request, context):
        """
        Retrieves the activity feed information that should be presented to the user.
        This method is called on login, app launching, and app becoming active.

        It requires a unit to be selected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReferralInfo(self, request, context):
        """
        Retrieves the referral info for the current logged-in user
        (i.e. the unique referral link)

        It requires a unit to be selected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkActivityFeedItemDismissed(self, request, context):
        """
        Marks a promotional message as dismissed for this unit. Other devices will no longer see this message
        in their activity feed.

        It requires a unit to be selected.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPersonInfo(self, request, context):
        """
        Gets person information retrieved from multipass credential.
        This should be called immediately after logging in. and before doing merchant selection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeatureFlags(self, request, context):
        """
        Gets feature flags for a user.
        This method is called on login, app launching, and app becoming active.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterRemoteNotificationToken(self, request, context):
        """
        Registers/updates a push token to be mapped to a unit/employment/device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnregisterRemoteNotificationToken(self, request, context):
        """
        Unregisters a push token to be mapped to a unit/employment/device
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMerchantFeedback(self, request, context):
        """
        Create merchant feedback in the backend which may be sent to the support team.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForceDowngrade(self, request, context):
        """
        Force merchant to free version of appointments
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeAppointmentStatus(self, request, context):
        """
        Change appointment status. It has the options to send out customized notifications
        and charge a fee.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendConfirmationMessage(self, request, context):
        """
        Send messages to the client asking them to confirm the appointment.
        What types of messages will be sent are determined by settings on the business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAppointmentCart(self, request, context):
        """
        Get the client cart associated with an Appointment
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckAppointmentsOnboarded(self, request, context):
        """
        Check if a Square merchant is already an Appointments business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OnboardAppointments(self, request, context):
        """
        Onboard an existing Square merchant to Appointments
        if the business is already onboarded this endpoint just returns 200.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AgendaAccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckNotifications': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckNotifications,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.CheckNotificationsRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.CheckNotificationsResponse.SerializeToString,
            ),
            'ListActivityFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.ListActivityFeed,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.ListActivityFeedRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.ListActivityFeedResponse.SerializeToString,
            ),
            'GetReferralInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReferralInfo,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.ReferralInfoRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.ReferralInfoResponse.SerializeToString,
            ),
            'MarkActivityFeedItemDismissed': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkActivityFeedItemDismissed,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.MarkActivityFeedItemDismissedRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.MarkActivityFeedItemDismissedResponse.SerializeToString,
            ),
            'GetPersonInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPersonInfo,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.GetPersonInfoRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.GetPersonInfoResponse.SerializeToString,
            ),
            'GetFeatureFlags': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeatureFlags,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.GetFeatureFlagsRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.GetFeatureFlagsResponse.SerializeToString,
            ),
            'RegisterRemoteNotificationToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterRemoteNotificationToken,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.RegisterRemoteNotificationTokenRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.RegisterRemoteNotificationTokenResponse.SerializeToString,
            ),
            'UnregisterRemoteNotificationToken': grpc.unary_unary_rpc_method_handler(
                    servicer.UnregisterRemoteNotificationToken,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.UnregisterRemoteNotificationTokenRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.UnregisterRemoteNotificationTokenResponse.SerializeToString,
            ),
            'CreateMerchantFeedback': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMerchantFeedback,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.CreateMerchantFeedbackRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.CreateMerchantFeedbackResponse.SerializeToString,
            ),
            'ForceDowngrade': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceDowngrade,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.ForceDowngradeRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.ForceDowngradeResponse.SerializeToString,
            ),
            'ChangeAppointmentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeAppointmentStatus,
                    request_deserializer=squareup_dot_agenda_dot_common__pb2.ChangeAppointmentStatusRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_common__pb2.ChangeAppointmentStatusResponse.SerializeToString,
            ),
            'SendConfirmationMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendConfirmationMessage,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.SendConfirmationMessageRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.SendConfirmationMessageResponse.SerializeToString,
            ),
            'GetAppointmentCart': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAppointmentCart,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.GetAppointmentCartRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.GetAppointmentCartResponse.SerializeToString,
            ),
            'CheckAppointmentsOnboarded': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckAppointmentsOnboarded,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.CheckAppointmentsOnboardedRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.CheckAppointmentsOnboardedResponse.SerializeToString,
            ),
            'OnboardAppointments': grpc.unary_unary_rpc_method_handler(
                    servicer.OnboardAppointments,
                    request_deserializer=squareup_dot_agenda_dot_agenda__pb2.OnboardAppointmentsRequest.FromString,
                    response_serializer=squareup_dot_agenda_dot_agenda__pb2.OnboardAppointmentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.agenda.AgendaAccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AgendaAccountService(object):
    """* Service for updating account information that is specific to appointments 
    """

    @staticmethod
    def CheckNotifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/CheckNotifications',
            squareup_dot_agenda_dot_agenda__pb2.CheckNotificationsRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.CheckNotificationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListActivityFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/ListActivityFeed',
            squareup_dot_agenda_dot_agenda__pb2.ListActivityFeedRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.ListActivityFeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReferralInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/GetReferralInfo',
            squareup_dot_agenda_dot_agenda__pb2.ReferralInfoRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.ReferralInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkActivityFeedItemDismissed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/MarkActivityFeedItemDismissed',
            squareup_dot_agenda_dot_agenda__pb2.MarkActivityFeedItemDismissedRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.MarkActivityFeedItemDismissedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPersonInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/GetPersonInfo',
            squareup_dot_agenda_dot_agenda__pb2.GetPersonInfoRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.GetPersonInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeatureFlags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/GetFeatureFlags',
            squareup_dot_agenda_dot_agenda__pb2.GetFeatureFlagsRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.GetFeatureFlagsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterRemoteNotificationToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/RegisterRemoteNotificationToken',
            squareup_dot_agenda_dot_agenda__pb2.RegisterRemoteNotificationTokenRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.RegisterRemoteNotificationTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnregisterRemoteNotificationToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/UnregisterRemoteNotificationToken',
            squareup_dot_agenda_dot_agenda__pb2.UnregisterRemoteNotificationTokenRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.UnregisterRemoteNotificationTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMerchantFeedback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/CreateMerchantFeedback',
            squareup_dot_agenda_dot_agenda__pb2.CreateMerchantFeedbackRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.CreateMerchantFeedbackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForceDowngrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/ForceDowngrade',
            squareup_dot_agenda_dot_agenda__pb2.ForceDowngradeRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.ForceDowngradeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeAppointmentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/ChangeAppointmentStatus',
            squareup_dot_agenda_dot_common__pb2.ChangeAppointmentStatusRequest.SerializeToString,
            squareup_dot_agenda_dot_common__pb2.ChangeAppointmentStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendConfirmationMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/SendConfirmationMessage',
            squareup_dot_agenda_dot_agenda__pb2.SendConfirmationMessageRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.SendConfirmationMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAppointmentCart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/GetAppointmentCart',
            squareup_dot_agenda_dot_agenda__pb2.GetAppointmentCartRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.GetAppointmentCartResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckAppointmentsOnboarded(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/CheckAppointmentsOnboarded',
            squareup_dot_agenda_dot_agenda__pb2.CheckAppointmentsOnboardedRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.CheckAppointmentsOnboardedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OnboardAppointments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.agenda.AgendaAccountService/OnboardAppointments',
            squareup_dot_agenda_dot_agenda__pb2.OnboardAppointmentsRequest.SerializeToString,
            squareup_dot_agenda_dot_agenda__pb2.OnboardAppointmentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
