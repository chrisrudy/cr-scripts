# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/agenda/calendartest.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.common import time_pb2 as squareup_dot_common_dot_time__pb2
from sq_protos_py.squareup.agenda import calendar_pb2 as squareup_dot_agenda_dot_calendar__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/agenda/calendartest.proto',
  package='squareup.agenda',
  syntax='proto2',
  serialized_options=_b('\n\032com.squareup.protos.agendaB\030AgendaCalendarTestProtos'),
  serialized_pb=_b('\n\"squareup/agenda/calendartest.proto\x12\x0fsquareup.agenda\x1a\x1asquareup/common/time.proto\x1a\x1esquareup/agenda/calendar.proto\"\xa4\x02\n\x11RecurRuleTestCase\x12\x12\n\norig_rrule\x18\x01 \x01(\t\x12\x15\n\rdtstart_tz_id\x18\x02 \x01(\t\x12/\n\x07\x64tstart\x18\x03 \x01(\x0b\x32\x1e.squareup.common.time.DateTime\x12.\n\x06\x65xdate\x18\x04 \x03(\x0b\x32\x1e.squareup.common.time.DateTime\x12-\n\x04rule\x18\x05 \x01(\x0b\x32\x1f.squareup.agenda.RecurrenceRule\x12\x39\n\x11\x65xpected_instance\x18\x06 \x03(\x0b\x32\x1e.squareup.common.time.DateTime\x12\x19\n\x0bis_full_set\x18\x07 \x01(\x08:\x04true\"I\n\x15RecurRuleTestCaseList\x12\x30\n\x04\x63\x61se\x18\x01 \x03(\x0b\x32\".squareup.agenda.RecurRuleTestCaseB6\n\x1a\x63om.squareup.protos.agendaB\x18\x41gendaCalendarTestProtos')
  ,
  dependencies=[squareup_dot_common_dot_time__pb2.DESCRIPTOR,squareup_dot_agenda_dot_calendar__pb2.DESCRIPTOR,])




_RECURRULETESTCASE = _descriptor.Descriptor(
  name='RecurRuleTestCase',
  full_name='squareup.agenda.RecurRuleTestCase',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='orig_rrule', full_name='squareup.agenda.RecurRuleTestCase.orig_rrule', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtstart_tz_id', full_name='squareup.agenda.RecurRuleTestCase.dtstart_tz_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dtstart', full_name='squareup.agenda.RecurRuleTestCase.dtstart', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exdate', full_name='squareup.agenda.RecurRuleTestCase.exdate', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rule', full_name='squareup.agenda.RecurRuleTestCase.rule', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expected_instance', full_name='squareup.agenda.RecurRuleTestCase.expected_instance', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_full_set', full_name='squareup.agenda.RecurRuleTestCase.is_full_set', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=True,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=116,
  serialized_end=408,
)


_RECURRULETESTCASELIST = _descriptor.Descriptor(
  name='RecurRuleTestCaseList',
  full_name='squareup.agenda.RecurRuleTestCaseList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='case', full_name='squareup.agenda.RecurRuleTestCaseList.case', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=410,
  serialized_end=483,
)

_RECURRULETESTCASE.fields_by_name['dtstart'].message_type = squareup_dot_common_dot_time__pb2._DATETIME
_RECURRULETESTCASE.fields_by_name['exdate'].message_type = squareup_dot_common_dot_time__pb2._DATETIME
_RECURRULETESTCASE.fields_by_name['rule'].message_type = squareup_dot_agenda_dot_calendar__pb2._RECURRENCERULE
_RECURRULETESTCASE.fields_by_name['expected_instance'].message_type = squareup_dot_common_dot_time__pb2._DATETIME
_RECURRULETESTCASELIST.fields_by_name['case'].message_type = _RECURRULETESTCASE
DESCRIPTOR.message_types_by_name['RecurRuleTestCase'] = _RECURRULETESTCASE
DESCRIPTOR.message_types_by_name['RecurRuleTestCaseList'] = _RECURRULETESTCASELIST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RecurRuleTestCase = _reflection.GeneratedProtocolMessageType('RecurRuleTestCase', (_message.Message,), {
  'DESCRIPTOR' : _RECURRULETESTCASE,
  '__module__' : 'squareup.agenda.calendartest_pb2'
  # @@protoc_insertion_point(class_scope:squareup.agenda.RecurRuleTestCase)
  })
_sym_db.RegisterMessage(RecurRuleTestCase)

RecurRuleTestCaseList = _reflection.GeneratedProtocolMessageType('RecurRuleTestCaseList', (_message.Message,), {
  'DESCRIPTOR' : _RECURRULETESTCASELIST,
  '__module__' : 'squareup.agenda.calendartest_pb2'
  # @@protoc_insertion_point(class_scope:squareup.agenda.RecurRuleTestCaseList)
  })
_sym_db.RegisterMessage(RecurRuleTestCaseList)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
