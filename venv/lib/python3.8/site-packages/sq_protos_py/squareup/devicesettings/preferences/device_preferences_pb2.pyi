# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

TippingCalculationPhaseValue = typing___NewType('TippingCalculationPhaseValue', builtin___int)
type___TippingCalculationPhaseValue = TippingCalculationPhaseValue
TippingCalculationPhase: _TippingCalculationPhase
class _TippingCalculationPhase(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[TippingCalculationPhaseValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    POST_TAX_TIP_CALCULATION = typing___cast(TippingCalculationPhaseValue, 0)
    PRE_TAX_TIP_CALCULATION = typing___cast(TippingCalculationPhaseValue, 1)
POST_TAX_TIP_CALCULATION = typing___cast(TippingCalculationPhaseValue, 0)
PRE_TAX_TIP_CALCULATION = typing___cast(TippingCalculationPhaseValue, 1)
type___TippingCalculationPhase = TippingCalculationPhase

class Preferences(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    for_open_tickets_send_daily_deletion_email: builtin___bool = ...
    for_paper_signature_always_print_customer_copy: builtin___bool = ...
    for_paper_signature_use_quick_tip_receipt: builtin___bool = ...
    open_tickets_enabled: builtin___bool = ...
    opted_into_open_tickets_preview: builtin___bool = ...
    store_and_forward_enabled: builtin___bool = ...
    store_and_forward_single_transaction_limit: typing___Text = ...
    tax_enabled: builtin___bool = ...
    tax_rate: typing___Text = ...
    use_curated_image_for_receipt: builtin___bool = ...
    use_paper_signature: builtin___bool = ...
    use_separate_tipping_screen: builtin___bool = ...
    updated_at: typing___Text = ...
    for_paper_signature_print_additional_auth_slip: builtin___bool = ...
    use_allow_swipe_for_chip_cards: builtin___bool = ...
    for_paper_signature_print_itemized_auth_slip: builtin___bool = ...
    skip_receipt_screen: builtin___bool = ...
    use_predefined_tickets: builtin___bool = ...
    use_open_tickets_menu_as_home_screen: builtin___bool = ...
    custom_tender_options_proto: typing___Text = ...
    skip_signature: builtin___bool = ...
    skip_signature_always: builtin___bool = ...
    use_instant_deposits: builtin___bool = ...
    allow_instant_deposit: builtin___bool = ...

    def __init__(self,
        *,
        for_open_tickets_send_daily_deletion_email : typing___Optional[builtin___bool] = None,
        for_paper_signature_always_print_customer_copy : typing___Optional[builtin___bool] = None,
        for_paper_signature_use_quick_tip_receipt : typing___Optional[builtin___bool] = None,
        open_tickets_enabled : typing___Optional[builtin___bool] = None,
        opted_into_open_tickets_preview : typing___Optional[builtin___bool] = None,
        store_and_forward_enabled : typing___Optional[builtin___bool] = None,
        store_and_forward_single_transaction_limit : typing___Optional[typing___Text] = None,
        tax_enabled : typing___Optional[builtin___bool] = None,
        tax_rate : typing___Optional[typing___Text] = None,
        use_curated_image_for_receipt : typing___Optional[builtin___bool] = None,
        use_paper_signature : typing___Optional[builtin___bool] = None,
        use_separate_tipping_screen : typing___Optional[builtin___bool] = None,
        updated_at : typing___Optional[typing___Text] = None,
        for_paper_signature_print_additional_auth_slip : typing___Optional[builtin___bool] = None,
        use_allow_swipe_for_chip_cards : typing___Optional[builtin___bool] = None,
        for_paper_signature_print_itemized_auth_slip : typing___Optional[builtin___bool] = None,
        skip_receipt_screen : typing___Optional[builtin___bool] = None,
        use_predefined_tickets : typing___Optional[builtin___bool] = None,
        use_open_tickets_menu_as_home_screen : typing___Optional[builtin___bool] = None,
        custom_tender_options_proto : typing___Optional[typing___Text] = None,
        skip_signature : typing___Optional[builtin___bool] = None,
        skip_signature_always : typing___Optional[builtin___bool] = None,
        use_instant_deposits : typing___Optional[builtin___bool] = None,
        allow_instant_deposit : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"allow_instant_deposit",b"allow_instant_deposit",u"custom_tender_options_proto",b"custom_tender_options_proto",u"for_open_tickets_send_daily_deletion_email",b"for_open_tickets_send_daily_deletion_email",u"for_paper_signature_always_print_customer_copy",b"for_paper_signature_always_print_customer_copy",u"for_paper_signature_print_additional_auth_slip",b"for_paper_signature_print_additional_auth_slip",u"for_paper_signature_print_itemized_auth_slip",b"for_paper_signature_print_itemized_auth_slip",u"for_paper_signature_use_quick_tip_receipt",b"for_paper_signature_use_quick_tip_receipt",u"open_tickets_enabled",b"open_tickets_enabled",u"opted_into_open_tickets_preview",b"opted_into_open_tickets_preview",u"skip_receipt_screen",b"skip_receipt_screen",u"skip_signature",b"skip_signature",u"skip_signature_always",b"skip_signature_always",u"store_and_forward_enabled",b"store_and_forward_enabled",u"store_and_forward_single_transaction_limit",b"store_and_forward_single_transaction_limit",u"tax_enabled",b"tax_enabled",u"tax_rate",b"tax_rate",u"updated_at",b"updated_at",u"use_allow_swipe_for_chip_cards",b"use_allow_swipe_for_chip_cards",u"use_curated_image_for_receipt",b"use_curated_image_for_receipt",u"use_instant_deposits",b"use_instant_deposits",u"use_open_tickets_menu_as_home_screen",b"use_open_tickets_menu_as_home_screen",u"use_paper_signature",b"use_paper_signature",u"use_predefined_tickets",b"use_predefined_tickets",u"use_separate_tipping_screen",b"use_separate_tipping_screen"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"allow_instant_deposit",b"allow_instant_deposit",u"custom_tender_options_proto",b"custom_tender_options_proto",u"for_open_tickets_send_daily_deletion_email",b"for_open_tickets_send_daily_deletion_email",u"for_paper_signature_always_print_customer_copy",b"for_paper_signature_always_print_customer_copy",u"for_paper_signature_print_additional_auth_slip",b"for_paper_signature_print_additional_auth_slip",u"for_paper_signature_print_itemized_auth_slip",b"for_paper_signature_print_itemized_auth_slip",u"for_paper_signature_use_quick_tip_receipt",b"for_paper_signature_use_quick_tip_receipt",u"open_tickets_enabled",b"open_tickets_enabled",u"opted_into_open_tickets_preview",b"opted_into_open_tickets_preview",u"skip_receipt_screen",b"skip_receipt_screen",u"skip_signature",b"skip_signature",u"skip_signature_always",b"skip_signature_always",u"store_and_forward_enabled",b"store_and_forward_enabled",u"store_and_forward_single_transaction_limit",b"store_and_forward_single_transaction_limit",u"tax_enabled",b"tax_enabled",u"tax_rate",b"tax_rate",u"updated_at",b"updated_at",u"use_allow_swipe_for_chip_cards",b"use_allow_swipe_for_chip_cards",u"use_curated_image_for_receipt",b"use_curated_image_for_receipt",u"use_instant_deposits",b"use_instant_deposits",u"use_open_tickets_menu_as_home_screen",b"use_open_tickets_menu_as_home_screen",u"use_paper_signature",b"use_paper_signature",u"use_predefined_tickets",b"use_predefined_tickets",u"use_separate_tipping_screen",b"use_separate_tipping_screen"]) -> None: ...
type___Preferences = Preferences

class TippingPreferences(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    tipping_custom_percentages: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float] = ...
    tipping_enabled: builtin___bool = ...
    tipping_use_custom_percentages: builtin___bool = ...
    tipping_use_manual_tip_entry: builtin___bool = ...
    updated_at: typing___Text = ...
    tipping_calculation_phase: type___TippingCalculationPhaseValue = ...

    def __init__(self,
        *,
        tipping_custom_percentages : typing___Optional[typing___Iterable[builtin___float]] = None,
        tipping_enabled : typing___Optional[builtin___bool] = None,
        tipping_use_custom_percentages : typing___Optional[builtin___bool] = None,
        tipping_use_manual_tip_entry : typing___Optional[builtin___bool] = None,
        updated_at : typing___Optional[typing___Text] = None,
        tipping_calculation_phase : typing___Optional[type___TippingCalculationPhaseValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"tipping_calculation_phase",b"tipping_calculation_phase",u"tipping_enabled",b"tipping_enabled",u"tipping_use_custom_percentages",b"tipping_use_custom_percentages",u"tipping_use_manual_tip_entry",b"tipping_use_manual_tip_entry",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"tipping_calculation_phase",b"tipping_calculation_phase",u"tipping_custom_percentages",b"tipping_custom_percentages",u"tipping_enabled",b"tipping_enabled",u"tipping_use_custom_percentages",b"tipping_use_custom_percentages",u"tipping_use_manual_tip_entry",b"tipping_use_manual_tip_entry",u"updated_at",b"updated_at"]) -> None: ...
type___TippingPreferences = TippingPreferences

class EmployeeManagementPreferences(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    enabled_for_account: builtin___bool = ...
    enabled_for_device: builtin___bool = ...
    tracking_level: typing___Text = ...
    inactivity_timeout: typing___Text = ...
    requires_employee_logout_after_completed_transaction: builtin___bool = ...
    break_tracking_enabled: builtin___bool = ...
    track_time: builtin___bool = ...
    require_passcode_to_cancel_transaction: builtin___bool = ...
    require_passcode_after_logout: builtin___bool = ...
    support_legacy_guest_mode: builtin___bool = ...

    def __init__(self,
        *,
        enabled_for_account : typing___Optional[builtin___bool] = None,
        enabled_for_device : typing___Optional[builtin___bool] = None,
        tracking_level : typing___Optional[typing___Text] = None,
        inactivity_timeout : typing___Optional[typing___Text] = None,
        requires_employee_logout_after_completed_transaction : typing___Optional[builtin___bool] = None,
        break_tracking_enabled : typing___Optional[builtin___bool] = None,
        track_time : typing___Optional[builtin___bool] = None,
        require_passcode_to_cancel_transaction : typing___Optional[builtin___bool] = None,
        require_passcode_after_logout : typing___Optional[builtin___bool] = None,
        support_legacy_guest_mode : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"break_tracking_enabled",b"break_tracking_enabled",u"enabled_for_account",b"enabled_for_account",u"enabled_for_device",b"enabled_for_device",u"inactivity_timeout",b"inactivity_timeout",u"require_passcode_after_logout",b"require_passcode_after_logout",u"require_passcode_to_cancel_transaction",b"require_passcode_to_cancel_transaction",u"requires_employee_logout_after_completed_transaction",b"requires_employee_logout_after_completed_transaction",u"support_legacy_guest_mode",b"support_legacy_guest_mode",u"track_time",b"track_time",u"tracking_level",b"tracking_level"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"break_tracking_enabled",b"break_tracking_enabled",u"enabled_for_account",b"enabled_for_account",u"enabled_for_device",b"enabled_for_device",u"inactivity_timeout",b"inactivity_timeout",u"require_passcode_after_logout",b"require_passcode_after_logout",u"require_passcode_to_cancel_transaction",b"require_passcode_to_cancel_transaction",u"requires_employee_logout_after_completed_transaction",b"requires_employee_logout_after_completed_transaction",u"support_legacy_guest_mode",b"support_legacy_guest_mode",u"track_time",b"track_time",u"tracking_level",b"tracking_level"]) -> None: ...
type___EmployeeManagementPreferences = EmployeeManagementPreferences

class DeviceConnectivityPreferences(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    connected_mode_enabled: builtin___bool = ...

    def __init__(self,
        *,
        connected_mode_enabled : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"connected_mode_enabled",b"connected_mode_enabled"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"connected_mode_enabled",b"connected_mode_enabled"]) -> None: ...
type___DeviceConnectivityPreferences = DeviceConnectivityPreferences
