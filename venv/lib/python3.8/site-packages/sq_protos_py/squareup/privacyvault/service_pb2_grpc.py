# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.privacyvault import service_pb2 as squareup_dot_privacyvault_dot_service__pb2


class PrivacyVaultServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Protect = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/Protect',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.ProtectRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.ProtectResponse.FromString,
                )
        self.Fetch = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/Fetch',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.FetchRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.FetchResponse.FromString,
                )
        self.Export = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/Export',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.ExportRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.ExportResponse.FromString,
                )
        self.CreatePrivacyRequest = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/CreatePrivacyRequest',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.CreatePrivacyRequestRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.CreatePrivacyRequestResponse.FromString,
                )
        self.CompletePrivacyRequest = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/CompletePrivacyRequest',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.CompletePrivacyRequestRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.CompletePrivacyRequestResponse.FromString,
                )
        self.CancelPrivacyRequest = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/CancelPrivacyRequest',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.CancelPrivacyRequestRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.CancelPrivacyRequestResponse.FromString,
                )
        self.PutAuditLog = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/PutAuditLog',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.PutAuditLogRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.PutAuditLogResponse.FromString,
                )
        self.SecureTransfer = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/SecureTransfer',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferResponse.FromString,
                )
        self.SecureTransferInformation = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultService/SecureTransferInformation',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferInformationRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferInformationResponse.FromString,
                )


class PrivacyVaultServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Protect(self, request, context):
        """* Protect data 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Fetch(self, request, context):
        """* Fetch data 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Export(self, request, context):
        """* Export data to the creator of the request 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePrivacyRequest(self, request, context):
        """* Create a Privacy Request (GDPR Request) Record in Privacy Vault. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CompletePrivacyRequest(self, request, context):
        """* Complete a Privacy Request (GDPR Request) Record in Privacy Vault. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelPrivacyRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutAuditLog(self, request, context):
        """* Put audit log for a Privacy Request or Protected data access 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SecureTransfer(self, request, context):
        """* trigger the secure transfer flow by creating a sendsafely package and returning the url 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SecureTransferInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyVaultServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Protect': grpc.unary_unary_rpc_method_handler(
                    servicer.Protect,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.ProtectRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.ProtectResponse.SerializeToString,
            ),
            'Fetch': grpc.unary_unary_rpc_method_handler(
                    servicer.Fetch,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.FetchRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.FetchResponse.SerializeToString,
            ),
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.ExportRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.ExportResponse.SerializeToString,
            ),
            'CreatePrivacyRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePrivacyRequest,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.CreatePrivacyRequestRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.CreatePrivacyRequestResponse.SerializeToString,
            ),
            'CompletePrivacyRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CompletePrivacyRequest,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.CompletePrivacyRequestRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.CompletePrivacyRequestResponse.SerializeToString,
            ),
            'CancelPrivacyRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelPrivacyRequest,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.CancelPrivacyRequestRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.CancelPrivacyRequestResponse.SerializeToString,
            ),
            'PutAuditLog': grpc.unary_unary_rpc_method_handler(
                    servicer.PutAuditLog,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.PutAuditLogRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.PutAuditLogResponse.SerializeToString,
            ),
            'SecureTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.SecureTransfer,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferResponse.SerializeToString,
            ),
            'SecureTransferInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.SecureTransferInformation,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferInformationRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.SecureTransferInformationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.privacyvault.service.PrivacyVaultService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyVaultService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Protect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/Protect',
            squareup_dot_privacyvault_dot_service__pb2.ProtectRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.ProtectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/Fetch',
            squareup_dot_privacyvault_dot_service__pb2.FetchRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/Export',
            squareup_dot_privacyvault_dot_service__pb2.ExportRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.ExportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreatePrivacyRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/CreatePrivacyRequest',
            squareup_dot_privacyvault_dot_service__pb2.CreatePrivacyRequestRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.CreatePrivacyRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CompletePrivacyRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/CompletePrivacyRequest',
            squareup_dot_privacyvault_dot_service__pb2.CompletePrivacyRequestRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.CompletePrivacyRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelPrivacyRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/CancelPrivacyRequest',
            squareup_dot_privacyvault_dot_service__pb2.CancelPrivacyRequestRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.CancelPrivacyRequestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutAuditLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/PutAuditLog',
            squareup_dot_privacyvault_dot_service__pb2.PutAuditLogRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.PutAuditLogResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SecureTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/SecureTransfer',
            squareup_dot_privacyvault_dot_service__pb2.SecureTransferRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.SecureTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SecureTransferInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultService/SecureTransferInformation',
            squareup_dot_privacyvault_dot_service__pb2.SecureTransferInformationRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.SecureTransferInformationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrivacyVaultAdminServiceStub(object):
    """* This service is used internally by the bot, and sometimes by humans 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CollectAndExportFiles = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultAdminService/CollectAndExportFiles',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.CollectAndExportFilesRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.CollectAndExportFilesResponse.FromString,
                )
        self.DeleteExportedFiles = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultAdminService/DeleteExportedFiles',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.DeleteExportedFilesRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.DeleteExportedFilesResponse.FromString,
                )


class PrivacyVaultAdminServiceServicer(object):
    """* This service is used internally by the bot, and sometimes by humans 
    """

    def CollectAndExportFiles(self, request, context):
        """*  Collect the files associated with this token from Trunk and save them in SendSafely. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteExportedFiles(self, request, context):
        """* Remove data which has been exported 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyVaultAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CollectAndExportFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.CollectAndExportFiles,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.CollectAndExportFilesRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.CollectAndExportFilesResponse.SerializeToString,
            ),
            'DeleteExportedFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteExportedFiles,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.DeleteExportedFilesRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.DeleteExportedFilesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.privacyvault.service.PrivacyVaultAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyVaultAdminService(object):
    """* This service is used internally by the bot, and sometimes by humans 
    """

    @staticmethod
    def CollectAndExportFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultAdminService/CollectAndExportFiles',
            squareup_dot_privacyvault_dot_service__pb2.CollectAndExportFilesRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.CollectAndExportFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteExportedFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultAdminService/DeleteExportedFiles',
            squareup_dot_privacyvault_dot_service__pb2.DeleteExportedFilesRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.DeleteExportedFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrivacyVaultForgetEntityServiceStub(object):
    """*
    See java/privacyvault/docs/VAULTING_AND_DELETING.md "What do I need to do to stop getting JIRA
    tickets for my service and get automatic RPC calls from Privacy Vault instead?"
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ForgetEntity = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultForgetEntityService/ForgetEntity',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.ForgetEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.ForgetEntityResponse.FromString,
                )


class PrivacyVaultForgetEntityServiceServicer(object):
    """*
    See java/privacyvault/docs/VAULTING_AND_DELETING.md "What do I need to do to stop getting JIRA
    tickets for my service and get automatic RPC calls from Privacy Vault instead?"
    """

    def ForgetEntity(self, request, context):
        """* Consistent definition for forgetting an entity in other services. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyVaultForgetEntityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ForgetEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgetEntity,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.ForgetEntityRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.ForgetEntityResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.privacyvault.service.PrivacyVaultForgetEntityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyVaultForgetEntityService(object):
    """*
    See java/privacyvault/docs/VAULTING_AND_DELETING.md "What do I need to do to stop getting JIRA
    tickets for my service and get automatic RPC calls from Privacy Vault instead?"
    """

    @staticmethod
    def ForgetEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultForgetEntityService/ForgetEntity',
            squareup_dot_privacyvault_dot_service__pb2.ForgetEntityRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.ForgetEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrivacyVaultExportForEntityServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Export = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultExportForEntityService/Export',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.ExportForEntityRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.ExportForEntityResponse.FromString,
                )


class PrivacyVaultExportForEntityServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Export(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyVaultExportForEntityServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.ExportForEntityRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.ExportForEntityResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.privacyvault.service.PrivacyVaultExportForEntityService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyVaultExportForEntityService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultExportForEntityService/Export',
            squareup_dot_privacyvault_dot_service__pb2.ExportForEntityRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.ExportForEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrivacyVaultRequestCompletionNotificationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RequestCompletionNotification = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultRequestCompletionNotificationService/RequestCompletionNotification',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.RequestCompletionNotificationRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.RequestCompletionNotificationResponse.FromString,
                )


class PrivacyVaultRequestCompletionNotificationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RequestCompletionNotification(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyVaultRequestCompletionNotificationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RequestCompletionNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestCompletionNotification,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.RequestCompletionNotificationRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.RequestCompletionNotificationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.privacyvault.service.PrivacyVaultRequestCompletionNotificationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyVaultRequestCompletionNotificationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RequestCompletionNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultRequestCompletionNotificationService/RequestCompletionNotification',
            squareup_dot_privacyvault_dot_service__pb2.RequestCompletionNotificationRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.RequestCompletionNotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrivacyVaultCompletePreconditionsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CompletePreconditions = channel.unary_unary(
                '/squareup.privacyvault.service.PrivacyVaultCompletePreconditionsService/CompletePreconditions',
                request_serializer=squareup_dot_privacyvault_dot_service__pb2.CompletePreconditionsRequest.SerializeToString,
                response_deserializer=squareup_dot_privacyvault_dot_service__pb2.CompletePreconditionsResponse.FromString,
                )


class PrivacyVaultCompletePreconditionsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CompletePreconditions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyVaultCompletePreconditionsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CompletePreconditions': grpc.unary_unary_rpc_method_handler(
                    servicer.CompletePreconditions,
                    request_deserializer=squareup_dot_privacyvault_dot_service__pb2.CompletePreconditionsRequest.FromString,
                    response_serializer=squareup_dot_privacyvault_dot_service__pb2.CompletePreconditionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.privacyvault.service.PrivacyVaultCompletePreconditionsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyVaultCompletePreconditionsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CompletePreconditions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.privacyvault.service.PrivacyVaultCompletePreconditionsService/CompletePreconditions',
            squareup_dot_privacyvault_dot_service__pb2.CompletePreconditionsRequest.SerializeToString,
            squareup_dot_privacyvault_dot_service__pb2.CompletePreconditionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
