# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

PrivacyScopeValue = typing___NewType('PrivacyScopeValue', builtin___int)
type___PrivacyScopeValue = PrivacyScopeValue
PrivacyScope: _PrivacyScope
class _PrivacyScope(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PrivacyScopeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN = typing___cast(PrivacyScopeValue, 0)
    REGISTER_MERCHANT = typing___cast(PrivacyScopeValue, 1)
    REGISTER_BUYER = typing___cast(PrivacyScopeValue, 2)
    CASH_SENDER = typing___cast(PrivacyScopeValue, 3)
    CASH_RECIPIENT = typing___cast(PrivacyScopeValue, 4)
    CASH_CUSTOMER = typing___cast(PrivacyScopeValue, 5)
UNKNOWN = typing___cast(PrivacyScopeValue, 0)
REGISTER_MERCHANT = typing___cast(PrivacyScopeValue, 1)
REGISTER_BUYER = typing___cast(PrivacyScopeValue, 2)
CASH_SENDER = typing___cast(PrivacyScopeValue, 3)
CASH_RECIPIENT = typing___cast(PrivacyScopeValue, 4)
CASH_CUSTOMER = typing___cast(PrivacyScopeValue, 5)
type___PrivacyScope = PrivacyScope

FlowTypeValue = typing___NewType('FlowTypeValue', builtin___int)
type___FlowTypeValue = FlowTypeValue
FlowType: _FlowType
class _FlowType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FlowTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_FLOW = typing___cast(FlowTypeValue, 0)
    GDPR = typing___cast(FlowTypeValue, 1)
    CCPA = typing___cast(FlowTypeValue, 2)
    COPPA = typing___cast(FlowTypeValue, 3)
UNKNOWN_FLOW = typing___cast(FlowTypeValue, 0)
GDPR = typing___cast(FlowTypeValue, 1)
CCPA = typing___cast(FlowTypeValue, 2)
COPPA = typing___cast(FlowTypeValue, 3)
type___FlowType = FlowType

PlumbingActionValue = typing___NewType('PlumbingActionValue', builtin___int)
type___PlumbingActionValue = PlumbingActionValue
PlumbingAction: _PlumbingAction
class _PlumbingAction(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PlumbingActionValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_PLUMBING_ACTION = typing___cast(PlumbingActionValue, 0)
    FORGET = typing___cast(PlumbingActionValue, 1)
    EXPORT = typing___cast(PlumbingActionValue, 2)
    PRECONDITION = typing___cast(PlumbingActionValue, 3)
    COMPLETION = typing___cast(PlumbingActionValue, 4)
UNKNOWN_PLUMBING_ACTION = typing___cast(PlumbingActionValue, 0)
FORGET = typing___cast(PlumbingActionValue, 1)
EXPORT = typing___cast(PlumbingActionValue, 2)
PRECONDITION = typing___cast(PlumbingActionValue, 3)
COMPLETION = typing___cast(PlumbingActionValue, 4)
type___PlumbingAction = PlumbingAction

PlumbingValue = typing___NewType('PlumbingValue', builtin___int)
type___PlumbingValue = PlumbingValue
Plumbing: _Plumbing
class _Plumbing(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PlumbingValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    UNKNOWN_PLUMBING = typing___cast(PlumbingValue, 0)
    MANUAL = typing___cast(PlumbingValue, 1)
    GNS = typing___cast(PlumbingValue, 2)
    ENVOY = typing___cast(PlumbingValue, 3)
    GRPC = typing___cast(PlumbingValue, 4)
UNKNOWN_PLUMBING = typing___cast(PlumbingValue, 0)
MANUAL = typing___cast(PlumbingValue, 1)
GNS = typing___cast(PlumbingValue, 2)
ENVOY = typing___cast(PlumbingValue, 3)
GRPC = typing___cast(PlumbingValue, 4)
type___Plumbing = Plumbing

DataUseValue = typing___NewType('DataUseValue', builtin___int)
type___DataUseValue = DataUseValue
DataUse: _DataUse
class _DataUse(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DataUseValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DO_NOT_USE = typing___cast(DataUseValue, 0)
    RISK = typing___cast(DataUseValue, 1)
    COMPLIANCE = typing___cast(DataUseValue, 2)
    LEGAL_INVESTIGATION = typing___cast(DataUseValue, 3)
    EXPORT_TO_OWNER = typing___cast(DataUseValue, 4)
    AUDIT_LOGGING = typing___cast(DataUseValue, 5)
DO_NOT_USE = typing___cast(DataUseValue, 0)
RISK = typing___cast(DataUseValue, 1)
COMPLIANCE = typing___cast(DataUseValue, 2)
LEGAL_INVESTIGATION = typing___cast(DataUseValue, 3)
EXPORT_TO_OWNER = typing___cast(DataUseValue, 4)
AUDIT_LOGGING = typing___cast(DataUseValue, 5)
type___DataUse = DataUse

CompletionStatusValue = typing___NewType('CompletionStatusValue', builtin___int)
type___CompletionStatusValue = CompletionStatusValue
CompletionStatus: _CompletionStatus
class _CompletionStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CompletionStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    COMPLETION_STATUS_DO_NOT_USE = typing___cast(CompletionStatusValue, 0)
    ENQUEUED = typing___cast(CompletionStatusValue, 1)
    COMPLETE = typing___cast(CompletionStatusValue, 2)
    ENTITY_NOT_FOUND = typing___cast(CompletionStatusValue, 3)
    ENTITY_NOT_APPLICABLE = typing___cast(CompletionStatusValue, 4)
    UNABLE_TO_COMPLETE = typing___cast(CompletionStatusValue, 5)
COMPLETION_STATUS_DO_NOT_USE = typing___cast(CompletionStatusValue, 0)
ENQUEUED = typing___cast(CompletionStatusValue, 1)
COMPLETE = typing___cast(CompletionStatusValue, 2)
ENTITY_NOT_FOUND = typing___cast(CompletionStatusValue, 3)
ENTITY_NOT_APPLICABLE = typing___cast(CompletionStatusValue, 4)
UNABLE_TO_COMPLETE = typing___cast(CompletionStatusValue, 5)
type___CompletionStatus = CompletionStatus

class KeyDerivationInputV1(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token_type: type___Entity.TokenTypeValue = ...
    token: typing___Text = ...

    def __init__(self,
        *,
        token_type : typing___Optional[type___Entity.TokenTypeValue] = None,
        token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> None: ...
type___KeyDerivationInputV1 = KeyDerivationInputV1

class Entity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TokenTypeValue = typing___NewType('TokenTypeValue', builtin___int)
    type___TokenTypeValue = TokenTypeValue
    TokenType: _TokenType
    class _TokenType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Entity.TokenTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(Entity.TokenTypeValue, 0)
        MERCHANT_MASTER = typing___cast(Entity.TokenTypeValue, 1)
        MERCHANT_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 2)
        MERCHANT_CONTACT = typing___cast(Entity.TokenTypeValue, 3)
        LOYALTY_CONTACT = typing___cast(Entity.TokenTypeValue, 4)
        CASH_CUSTOMER = typing___cast(Entity.TokenTypeValue, 5)
        SQUARE_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 6)
        SQUARE_JOB_CANDIDATE = typing___cast(Entity.TokenTypeValue, 15)
        PERSON = typing___cast(Entity.TokenTypeValue, 11)
        PAYMENT = typing___cast(Entity.TokenTypeValue, 12)
        CAPITAL_CUSTOMER = typing___cast(Entity.TokenTypeValue, 7)
        APPOINTMENTS_CUSTOMER = typing___cast(Entity.TokenTypeValue, 8)
        CAVIAR_CUSTOMER = typing___cast(Entity.TokenTypeValue, 9)
        CAVIAR_MERCHANT = typing___cast(Entity.TokenTypeValue, 10)
        CAVIAR_COURIER = typing___cast(Entity.TokenTypeValue, 13)
        BUYER = typing___cast(Entity.TokenTypeValue, 14)
        WEEBLY_SITE_OWNER = typing___cast(Entity.TokenTypeValue, 16)
        CAVIAR_COMPANY_CAPTAIN = typing___cast(Entity.TokenTypeValue, 17)
        CAVIAR_COMPANY_CLIENT = typing___cast(Entity.TokenTypeValue, 18)
        CAVIAR_COMPANY_CLIENT_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 19)
        CAVIAR_COMPANY_CORPORATE_DINER = typing___cast(Entity.TokenTypeValue, 20)
        CAVIAR_COMPANY_RESTAURANT = typing___cast(Entity.TokenTypeValue, 21)
        CAVIAR_COMPANY_RESTAURANT_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 22)
    UNKNOWN = typing___cast(Entity.TokenTypeValue, 0)
    MERCHANT_MASTER = typing___cast(Entity.TokenTypeValue, 1)
    MERCHANT_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 2)
    MERCHANT_CONTACT = typing___cast(Entity.TokenTypeValue, 3)
    LOYALTY_CONTACT = typing___cast(Entity.TokenTypeValue, 4)
    CASH_CUSTOMER = typing___cast(Entity.TokenTypeValue, 5)
    SQUARE_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 6)
    SQUARE_JOB_CANDIDATE = typing___cast(Entity.TokenTypeValue, 15)
    PERSON = typing___cast(Entity.TokenTypeValue, 11)
    PAYMENT = typing___cast(Entity.TokenTypeValue, 12)
    CAPITAL_CUSTOMER = typing___cast(Entity.TokenTypeValue, 7)
    APPOINTMENTS_CUSTOMER = typing___cast(Entity.TokenTypeValue, 8)
    CAVIAR_CUSTOMER = typing___cast(Entity.TokenTypeValue, 9)
    CAVIAR_MERCHANT = typing___cast(Entity.TokenTypeValue, 10)
    CAVIAR_COURIER = typing___cast(Entity.TokenTypeValue, 13)
    BUYER = typing___cast(Entity.TokenTypeValue, 14)
    WEEBLY_SITE_OWNER = typing___cast(Entity.TokenTypeValue, 16)
    CAVIAR_COMPANY_CAPTAIN = typing___cast(Entity.TokenTypeValue, 17)
    CAVIAR_COMPANY_CLIENT = typing___cast(Entity.TokenTypeValue, 18)
    CAVIAR_COMPANY_CLIENT_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 19)
    CAVIAR_COMPANY_CORPORATE_DINER = typing___cast(Entity.TokenTypeValue, 20)
    CAVIAR_COMPANY_RESTAURANT = typing___cast(Entity.TokenTypeValue, 21)
    CAVIAR_COMPANY_RESTAURANT_EMPLOYEE = typing___cast(Entity.TokenTypeValue, 22)
    type___TokenType = TokenType

    token_type: type___Entity.TokenTypeValue = ...
    token: typing___Text = ...

    def __init__(self,
        *,
        token_type : typing___Optional[type___Entity.TokenTypeValue] = None,
        token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"token",b"token",u"token_type",b"token_type"]) -> None: ...
type___Entity = Entity

class AlternativeIdentifiers(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    IdentifierTypeValue = typing___NewType('IdentifierTypeValue', builtin___int)
    type___IdentifierTypeValue = IdentifierTypeValue
    IdentifierType: _IdentifierType
    class _IdentifierType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AlternativeIdentifiers.IdentifierTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 0)
        UNIT_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 1)
        EMAIL = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 2)
        PHONE = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 3)
        NAME = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 4)
        EMAIL_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 5)
        PHONE_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 6)
        PAN_FIDELIUS_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 7)
        ENTITY_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 8)
        INSTRUMENT_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 9)
    DO_NOT_USE = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 0)
    UNIT_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 1)
    EMAIL = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 2)
    PHONE = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 3)
    NAME = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 4)
    EMAIL_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 5)
    PHONE_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 6)
    PAN_FIDELIUS_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 7)
    ENTITY_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 8)
    INSTRUMENT_TOKEN = typing___cast(AlternativeIdentifiers.IdentifierTypeValue, 9)
    type___IdentifierType = IdentifierType

    identifier_type: type___AlternativeIdentifiers.IdentifierTypeValue = ...
    identifier: typing___Text = ...

    @property
    def entity_identifier(self) -> type___Entity: ...

    @property
    def scoping_entity(self) -> type___Entity: ...

    def __init__(self,
        *,
        identifier_type : typing___Optional[type___AlternativeIdentifiers.IdentifierTypeValue] = None,
        identifier : typing___Optional[typing___Text] = None,
        entity_identifier : typing___Optional[type___Entity] = None,
        scoping_entity : typing___Optional[type___Entity] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"entity_identifier",b"entity_identifier",u"identifier",b"identifier",u"identifier_type",b"identifier_type",u"scoping_entity",b"scoping_entity",u"string_or_entity_identifier",b"string_or_entity_identifier"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"entity_identifier",b"entity_identifier",u"identifier",b"identifier",u"identifier_type",b"identifier_type",u"scoping_entity",b"scoping_entity",u"string_or_entity_identifier",b"string_or_entity_identifier"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"string_or_entity_identifier",b"string_or_entity_identifier"]) -> typing_extensions___Literal["identifier","entity_identifier"]: ...
type___AlternativeIdentifiers = AlternativeIdentifiers

class PrivacyRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    RequestTypeValue = typing___NewType('RequestTypeValue', builtin___int)
    type___RequestTypeValue = RequestTypeValue
    RequestType: _RequestType
    class _RequestType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PrivacyRequest.RequestTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(PrivacyRequest.RequestTypeValue, 0)
        ACCESS = typing___cast(PrivacyRequest.RequestTypeValue, 1)
        DELETION = typing___cast(PrivacyRequest.RequestTypeValue, 2)
        PROFILING = typing___cast(PrivacyRequest.RequestTypeValue, 3)
        CORRECTION = typing___cast(PrivacyRequest.RequestTypeValue, 4)
        EXPORT = typing___cast(PrivacyRequest.RequestTypeValue, 5)
        RESTRICT_PROCESSING = typing___cast(PrivacyRequest.RequestTypeValue, 6)
    UNKNOWN = typing___cast(PrivacyRequest.RequestTypeValue, 0)
    ACCESS = typing___cast(PrivacyRequest.RequestTypeValue, 1)
    DELETION = typing___cast(PrivacyRequest.RequestTypeValue, 2)
    PROFILING = typing___cast(PrivacyRequest.RequestTypeValue, 3)
    CORRECTION = typing___cast(PrivacyRequest.RequestTypeValue, 4)
    EXPORT = typing___cast(PrivacyRequest.RequestTypeValue, 5)
    RESTRICT_PROCESSING = typing___cast(PrivacyRequest.RequestTypeValue, 6)
    type___RequestType = RequestType

    case_identifier: typing___Text = ...
    request_type: type___PrivacyRequest.RequestTypeValue = ...
    requestor_email: typing___Text = ...
    requestor_phone: typing___Text = ...
    request_text: typing___Text = ...
    received_at_ms: builtin___int = ...
    requestor_name: typing___Text = ...
    flow_type: type___FlowTypeValue = ...
    scope: type___PrivacyScopeValue = ...

    @property
    def requestor_entity(self) -> type___Entity: ...

    @property
    def alternative_identifiers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___AlternativeIdentifiers]: ...

    def __init__(self,
        *,
        case_identifier : typing___Optional[typing___Text] = None,
        request_type : typing___Optional[type___PrivacyRequest.RequestTypeValue] = None,
        requestor_entity : typing___Optional[type___Entity] = None,
        requestor_email : typing___Optional[typing___Text] = None,
        requestor_phone : typing___Optional[typing___Text] = None,
        request_text : typing___Optional[typing___Text] = None,
        received_at_ms : typing___Optional[builtin___int] = None,
        requestor_name : typing___Optional[typing___Text] = None,
        flow_type : typing___Optional[type___FlowTypeValue] = None,
        scope : typing___Optional[type___PrivacyScopeValue] = None,
        alternative_identifiers : typing___Optional[typing___Iterable[type___AlternativeIdentifiers]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"case_identifier",b"case_identifier",u"flow_type",b"flow_type",u"received_at_ms",b"received_at_ms",u"request_text",b"request_text",u"request_type",b"request_type",u"requestor_email",b"requestor_email",u"requestor_entity",b"requestor_entity",u"requestor_name",b"requestor_name",u"requestor_phone",b"requestor_phone",u"scope",b"scope"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"alternative_identifiers",b"alternative_identifiers",u"case_identifier",b"case_identifier",u"flow_type",b"flow_type",u"received_at_ms",b"received_at_ms",u"request_text",b"request_text",u"request_type",b"request_type",u"requestor_email",b"requestor_email",u"requestor_entity",b"requestor_entity",u"requestor_name",b"requestor_name",u"requestor_phone",b"requestor_phone",u"scope",b"scope"]) -> None: ...
type___PrivacyRequest = PrivacyRequest

class DataRequestJustification(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    data_use: type___DataUseValue = ...
    service_name: typing___Text = ...
    ldap: typing___Text = ...
    jira_ticket_identifier: typing___Text = ...
    free_text: typing___Text = ...
    service_account: typing___Text = ...

    def __init__(self,
        *,
        data_use : typing___Optional[type___DataUseValue] = None,
        service_name : typing___Optional[typing___Text] = None,
        ldap : typing___Optional[typing___Text] = None,
        jira_ticket_identifier : typing___Optional[typing___Text] = None,
        free_text : typing___Optional[typing___Text] = None,
        service_account : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"data_use",b"data_use",u"free_text",b"free_text",u"jira_ticket_identifier",b"jira_ticket_identifier",u"ldap",b"ldap",u"reason",b"reason",u"service_account",b"service_account",u"service_name",b"service_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"data_use",b"data_use",u"free_text",b"free_text",u"jira_ticket_identifier",b"jira_ticket_identifier",u"ldap",b"ldap",u"reason",b"reason",u"service_account",b"service_account",u"service_name",b"service_name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"reason",b"reason"]) -> typing_extensions___Literal["jira_ticket_identifier","free_text"]: ...
type___DataRequestJustification = DataRequestJustification

class AuditLog(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class RequestMetatask(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        StateChangeValue = typing___NewType('StateChangeValue', builtin___int)
        type___StateChangeValue = StateChangeValue
        StateChange: _StateChange
        class _StateChange(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AuditLog.RequestMetatask.StateChangeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DO_NOT_USE = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 0)
            RECEIVED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 1)
            SUPPORT_REVIEW_COMPLETED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 2)
            LEGAL_REVIEW_COMPLETED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 3)
            APPROVED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 4)
            COMPLETED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 5)
            REJECTED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 6)
            CANCELED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 7)
        DO_NOT_USE = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 0)
        RECEIVED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 1)
        SUPPORT_REVIEW_COMPLETED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 2)
        LEGAL_REVIEW_COMPLETED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 3)
        APPROVED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 4)
        COMPLETED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 5)
        REJECTED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 6)
        CANCELED = typing___cast(AuditLog.RequestMetatask.StateChangeValue, 7)
        type___StateChange = StateChange

        case_identifier: typing___Text = ...
        responsible_ldap: typing___Text = ...
        state_change: type___AuditLog.RequestMetatask.StateChangeValue = ...
        jira_ticket_identifier: typing___Text = ...
        service_name: typing___Text = ...
        privacy_request_token: typing___Text = ...

        @property
        def requestor_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            case_identifier : typing___Optional[typing___Text] = None,
            responsible_ldap : typing___Optional[typing___Text] = None,
            state_change : typing___Optional[type___AuditLog.RequestMetatask.StateChangeValue] = None,
            jira_ticket_identifier : typing___Optional[typing___Text] = None,
            requestor_entity : typing___Optional[type___Entity] = None,
            service_name : typing___Optional[typing___Text] = None,
            privacy_request_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"case_identifier",b"case_identifier",u"jira_ticket_identifier",b"jira_ticket_identifier",u"privacy_request_token",b"privacy_request_token",u"requestor_entity",b"requestor_entity",u"responsible_ldap",b"responsible_ldap",u"service_name",b"service_name",u"state_change",b"state_change"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"case_identifier",b"case_identifier",u"jira_ticket_identifier",b"jira_ticket_identifier",u"privacy_request_token",b"privacy_request_token",u"requestor_entity",b"requestor_entity",u"responsible_ldap",b"responsible_ldap",u"service_name",b"service_name",u"state_change",b"state_change"]) -> None: ...
    type___RequestMetatask = RequestMetatask

    class RequestSubtask(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        StateChangeValue = typing___NewType('StateChangeValue', builtin___int)
        type___StateChangeValue = StateChangeValue
        StateChange: _StateChange
        class _StateChange(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AuditLog.RequestSubtask.StateChangeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DO_NOT_USE = typing___cast(AuditLog.RequestSubtask.StateChangeValue, 0)
            CREATED = typing___cast(AuditLog.RequestSubtask.StateChangeValue, 1)
            RESOLVED = typing___cast(AuditLog.RequestSubtask.StateChangeValue, 2)
        DO_NOT_USE = typing___cast(AuditLog.RequestSubtask.StateChangeValue, 0)
        CREATED = typing___cast(AuditLog.RequestSubtask.StateChangeValue, 1)
        RESOLVED = typing___cast(AuditLog.RequestSubtask.StateChangeValue, 2)
        type___StateChange = StateChange

        privacy_request_token: typing___Text = ...
        responsible_ldap: typing___Text = ...
        state_change: type___AuditLog.RequestSubtask.StateChangeValue = ...
        service_name: typing___Text = ...
        subtask_description: typing___Text = ...
        jira_ticket_identifier: typing___Text = ...

        @property
        def requestor_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            privacy_request_token : typing___Optional[typing___Text] = None,
            responsible_ldap : typing___Optional[typing___Text] = None,
            state_change : typing___Optional[type___AuditLog.RequestSubtask.StateChangeValue] = None,
            service_name : typing___Optional[typing___Text] = None,
            subtask_description : typing___Optional[typing___Text] = None,
            jira_ticket_identifier : typing___Optional[typing___Text] = None,
            requestor_entity : typing___Optional[type___Entity] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"jira_ticket_identifier",b"jira_ticket_identifier",u"privacy_request_token",b"privacy_request_token",u"requestor_entity",b"requestor_entity",u"responsible_ldap",b"responsible_ldap",u"service_name",b"service_name",u"state_change",b"state_change",u"subtask_description",b"subtask_description"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"jira_ticket_identifier",b"jira_ticket_identifier",u"privacy_request_token",b"privacy_request_token",u"requestor_entity",b"requestor_entity",u"responsible_ldap",b"responsible_ldap",u"service_name",b"service_name",u"state_change",b"state_change",u"subtask_description",b"subtask_description"]) -> None: ...
    type___RequestSubtask = RequestSubtask

    class RequestFulfillment(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        FulfillmentTypeValue = typing___NewType('FulfillmentTypeValue', builtin___int)
        type___FulfillmentTypeValue = FulfillmentTypeValue
        FulfillmentType: _FulfillmentType
        class _FulfillmentType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AuditLog.RequestFulfillment.FulfillmentTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DO_NOT_USE = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 0)
            DELETE = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 1)
            VAULT = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 2)
            THIRD_PARTY_VENDOR_NOTIFICATION = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 3)
            THIRD_PARTY_VENDOR_COMPLETION = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 4)
            EXPORT = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 5)
            CORRECTION = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 6)
            RESTRICT_PROCESSING = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 7)
            STILL_IN_USE = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 8)
        DO_NOT_USE = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 0)
        DELETE = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 1)
        VAULT = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 2)
        THIRD_PARTY_VENDOR_NOTIFICATION = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 3)
        THIRD_PARTY_VENDOR_COMPLETION = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 4)
        EXPORT = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 5)
        CORRECTION = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 6)
        RESTRICT_PROCESSING = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 7)
        STILL_IN_USE = typing___cast(AuditLog.RequestFulfillment.FulfillmentTypeValue, 8)
        type___FulfillmentType = FulfillmentType

        privacy_request_token: typing___Text = ...
        service_name: typing___Text = ...
        responsible_ldap: typing___Text = ...
        fulfillment_type: type___AuditLog.RequestFulfillment.FulfillmentTypeValue = ...
        data_description: typing___Text = ...

        @property
        def scoped_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            privacy_request_token : typing___Optional[typing___Text] = None,
            service_name : typing___Optional[typing___Text] = None,
            responsible_ldap : typing___Optional[typing___Text] = None,
            fulfillment_type : typing___Optional[type___AuditLog.RequestFulfillment.FulfillmentTypeValue] = None,
            scoped_entity : typing___Optional[type___Entity] = None,
            data_description : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"data_description",b"data_description",u"fulfillment_type",b"fulfillment_type",u"privacy_request_token",b"privacy_request_token",u"responsible_ldap",b"responsible_ldap",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data_description",b"data_description",u"fulfillment_type",b"fulfillment_type",u"privacy_request_token",b"privacy_request_token",u"responsible_ldap",b"responsible_ldap",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name"]) -> None: ...
    type___RequestFulfillment = RequestFulfillment

    class AuditLogCorrection(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        LogTypeValue = typing___NewType('LogTypeValue', builtin___int)
        type___LogTypeValue = LogTypeValue
        LogType: _LogType
        class _LogType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AuditLog.AuditLogCorrection.LogTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DO_NOT_USE = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 0)
            SUBTASK = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 1)
            METATASK = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 2)
            FULFILLMENT = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 3)
        DO_NOT_USE = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 0)
        SUBTASK = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 1)
        METATASK = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 2)
        FULFILLMENT = typing___cast(AuditLog.AuditLogCorrection.LogTypeValue, 3)
        type___LogType = LogType

        privacy_request_token: typing___Text = ...
        service_name: typing___Text = ...
        responsible_ldap: typing___Text = ...
        log_type: type___AuditLog.AuditLogCorrection.LogTypeValue = ...
        correction_description: typing___Text = ...

        @property
        def scoped_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            privacy_request_token : typing___Optional[typing___Text] = None,
            service_name : typing___Optional[typing___Text] = None,
            responsible_ldap : typing___Optional[typing___Text] = None,
            log_type : typing___Optional[type___AuditLog.AuditLogCorrection.LogTypeValue] = None,
            scoped_entity : typing___Optional[type___Entity] = None,
            correction_description : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"correction_description",b"correction_description",u"log_type",b"log_type",u"privacy_request_token",b"privacy_request_token",u"responsible_ldap",b"responsible_ldap",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"correction_description",b"correction_description",u"log_type",b"log_type",u"privacy_request_token",b"privacy_request_token",u"responsible_ldap",b"responsible_ldap",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name"]) -> None: ...
    type___AuditLogCorrection = AuditLogCorrection

    class DataAccess(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        data_description: typing___Text = ...

        @property
        def data_request_justification(self) -> type___DataRequestJustification: ...

        @property
        def scoped_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            data_request_justification : typing___Optional[type___DataRequestJustification] = None,
            scoped_entity : typing___Optional[type___Entity] = None,
            data_description : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"data_description",b"data_description",u"data_request_justification",b"data_request_justification",u"scoped_entity",b"scoped_entity"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"data_description",b"data_description",u"data_request_justification",b"data_request_justification",u"scoped_entity",b"scoped_entity"]) -> None: ...
    type___DataAccess = DataAccess

    class Communication(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        CommunicationTypeValue = typing___NewType('CommunicationTypeValue', builtin___int)
        type___CommunicationTypeValue = CommunicationTypeValue
        CommunicationType: _CommunicationType
        class _CommunicationType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AuditLog.Communication.CommunicationTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DO_NOT_USE = typing___cast(AuditLog.Communication.CommunicationTypeValue, 0)
            RECEIVED = typing___cast(AuditLog.Communication.CommunicationTypeValue, 1)
            FULFILLED = typing___cast(AuditLog.Communication.CommunicationTypeValue, 2)
            DID_NOT_FULFILL = typing___cast(AuditLog.Communication.CommunicationTypeValue, 3)
        DO_NOT_USE = typing___cast(AuditLog.Communication.CommunicationTypeValue, 0)
        RECEIVED = typing___cast(AuditLog.Communication.CommunicationTypeValue, 1)
        FULFILLED = typing___cast(AuditLog.Communication.CommunicationTypeValue, 2)
        DID_NOT_FULFILL = typing___cast(AuditLog.Communication.CommunicationTypeValue, 3)
        type___CommunicationType = CommunicationType

        privacy_request_token: typing___Text = ...
        service_name: typing___Text = ...
        communication_type: type___AuditLog.Communication.CommunicationTypeValue = ...

        @property
        def scoped_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            privacy_request_token : typing___Optional[typing___Text] = None,
            service_name : typing___Optional[typing___Text] = None,
            communication_type : typing___Optional[type___AuditLog.Communication.CommunicationTypeValue] = None,
            scoped_entity : typing___Optional[type___Entity] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"communication_type",b"communication_type",u"privacy_request_token",b"privacy_request_token",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"communication_type",b"communication_type",u"privacy_request_token",b"privacy_request_token",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name"]) -> None: ...
    type___Communication = Communication

    class PreconditionFulfillment(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        service_name: typing___Text = ...
        privacy_request_token: typing___Text = ...
        status: type___CompletionStatusValue = ...
        reason: typing___Text = ...

        @property
        def scoped_entity(self) -> type___Entity: ...

        def __init__(self,
            *,
            service_name : typing___Optional[typing___Text] = None,
            scoped_entity : typing___Optional[type___Entity] = None,
            privacy_request_token : typing___Optional[typing___Text] = None,
            status : typing___Optional[type___CompletionStatusValue] = None,
            reason : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"privacy_request_token",b"privacy_request_token",u"reason",b"reason",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name",u"status",b"status"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"privacy_request_token",b"privacy_request_token",u"reason",b"reason",u"scoped_entity",b"scoped_entity",u"service_name",b"service_name",u"status",b"status"]) -> None: ...
    type___PreconditionFulfillment = PreconditionFulfillment


    @property
    def request_metatask(self) -> type___AuditLog.RequestMetatask: ...

    @property
    def request_subtask(self) -> type___AuditLog.RequestSubtask: ...

    @property
    def request_fulfillment(self) -> type___AuditLog.RequestFulfillment: ...

    @property
    def data_access(self) -> type___AuditLog.DataAccess: ...

    @property
    def audit_log_correction(self) -> type___AuditLog.AuditLogCorrection: ...

    @property
    def communication(self) -> type___AuditLog.Communication: ...

    @property
    def precondition_fulfillment(self) -> type___AuditLog.PreconditionFulfillment: ...

    @property
    def occurred_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        request_metatask : typing___Optional[type___AuditLog.RequestMetatask] = None,
        request_subtask : typing___Optional[type___AuditLog.RequestSubtask] = None,
        request_fulfillment : typing___Optional[type___AuditLog.RequestFulfillment] = None,
        data_access : typing___Optional[type___AuditLog.DataAccess] = None,
        audit_log_correction : typing___Optional[type___AuditLog.AuditLogCorrection] = None,
        communication : typing___Optional[type___AuditLog.Communication] = None,
        precondition_fulfillment : typing___Optional[type___AuditLog.PreconditionFulfillment] = None,
        occurred_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"audit_log_correction",b"audit_log_correction",u"audit_message",b"audit_message",u"communication",b"communication",u"data_access",b"data_access",u"occurred_at",b"occurred_at",u"precondition_fulfillment",b"precondition_fulfillment",u"request_fulfillment",b"request_fulfillment",u"request_metatask",b"request_metatask",u"request_subtask",b"request_subtask"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"audit_log_correction",b"audit_log_correction",u"audit_message",b"audit_message",u"communication",b"communication",u"data_access",b"data_access",u"occurred_at",b"occurred_at",u"precondition_fulfillment",b"precondition_fulfillment",u"request_fulfillment",b"request_fulfillment",u"request_metatask",b"request_metatask",u"request_subtask",b"request_subtask"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"audit_message",b"audit_message"]) -> typing_extensions___Literal["request_metatask","request_subtask","request_fulfillment","data_access","audit_log_correction","communication","precondition_fulfillment"]: ...
type___AuditLog = AuditLog

class SecureTransferObject(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    plaintext: builtin___bytes = ...
    trunk_token: typing___Text = ...
    trunk_token_with_encryption: typing___Text = ...
    filename: typing___Text = ...

    def __init__(self,
        *,
        plaintext : typing___Optional[builtin___bytes] = None,
        trunk_token : typing___Optional[typing___Text] = None,
        trunk_token_with_encryption : typing___Optional[typing___Text] = None,
        filename : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"filename",b"filename",u"plaintext",b"plaintext",u"secure_transfer_object",b"secure_transfer_object",u"trunk_token",b"trunk_token",u"trunk_token_with_encryption",b"trunk_token_with_encryption"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filename",b"filename",u"plaintext",b"plaintext",u"secure_transfer_object",b"secure_transfer_object",u"trunk_token",b"trunk_token",u"trunk_token_with_encryption",b"trunk_token_with_encryption"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"secure_transfer_object",b"secure_transfer_object"]) -> typing_extensions___Literal["plaintext","trunk_token","trunk_token_with_encryption"]: ...
type___SecureTransferObject = SecureTransferObject
