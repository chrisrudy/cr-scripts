# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.common import messages_pb2 as squareup_dot_common_dot_messages__pb2
from sq_protos_py.squareup.gns import service_pb2 as squareup_dot_gns_dot_service__pb2


class SyncServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Push = channel.unary_unary(
                '/squareup.gns.service.SyncService/Push',
                request_serializer=squareup_dot_gns_dot_service__pb2.PushRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.PushResponse.FromString,
                )


class SyncServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Push(self, request, context):
        """*
        An update notification that supplies all of the ServiceClusters for the specified datacenter.
        All SyncServices send Push messages when their ZooKeeper servers have been updated.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SyncServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Push': grpc.unary_unary_rpc_method_handler(
                    servicer.Push,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.PushRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.PushResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gns.service.SyncService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SyncService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Push(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.SyncService/Push',
            squareup_dot_gns_dot_service__pb2.PushRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.PushResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class UpdateServiceStub(object):
    """* Update cluster information in Zookeeper. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddOrUpdate = channel.unary_unary(
                '/squareup.gns.service.UpdateService/AddOrUpdate',
                request_serializer=squareup_dot_gns_dot_service__pb2.AddOrUpdateRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.AddOrUpdateResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/squareup.gns.service.UpdateService/Delete',
                request_serializer=squareup_dot_gns_dot_service__pb2.DeleteRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.DeleteResponse.FromString,
                )
        self.UpdateClusterWeights = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdateClusterWeights',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsResponse.FromString,
                )
        self.UpdateCapabilities = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdateCapabilities',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesResponse.FromString,
                )
        self.UpdateLabels = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdateLabels',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsResponse.FromString,
                )
        self.UpdateHosts = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdateHosts',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateHostsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateHostsResponse.FromString,
                )
        self.UpdatePorts = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdatePorts',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdatePortsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdatePortsResponse.FromString,
                )
        self.UpdateDatacenterRegions = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdateDatacenterRegions',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateDatacenterRegionsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateDatacenterRegionsResponse.FromString,
                )
        self.Export = channel.unary_unary(
                '/squareup.gns.service.UpdateService/Export',
                request_serializer=squareup_dot_gns_dot_service__pb2.ExportRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.ExportResponse.FromString,
                )
        self.ImportApps = channel.unary_unary(
                '/squareup.gns.service.UpdateService/ImportApps',
                request_serializer=squareup_dot_gns_dot_service__pb2.ImportRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.ImportResponse.FromString,
                )
        self.UpdateNodeProtocols = channel.unary_unary(
                '/squareup.gns.service.UpdateService/UpdateNodeProtocols',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateNodeProtocolsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateNodeProtocolsResponse.FromString,
                )


class UpdateServiceServicer(object):
    """* Update cluster information in Zookeeper. 
    """

    def AddOrUpdate(self, request, context):
        """* Add or update a single cluster in GNS at the local datacenter. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """* Delete a cluster for an app in the local datacenter. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClusterWeights(self, request, context):
        """* Update cluster weights for a given application at the local datacenter. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCapabilities(self, request, context):
        """* Update cluster capabilities for a given application and cluster in the local datacenter. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateHosts(self, request, context):
        """* Update cluster members (hosts/nodes). 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePorts(self, request, context):
        """* Update cluster external ports. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDatacenterRegions(self, request, context):
        """* Update datacenter region definitions for a given application and clusterType. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Export(self, request, context):
        """* Export AppAndServiceClusterData for a datacenter. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImportApps(self, request, context):
        """* Import AppAndServiceClusterData in datacenter. Deviates from pattern - "import" is keyword 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateNodeProtocols(self, request, context):
        """* Update cluster's node protocols 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UpdateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddOrUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.AddOrUpdate,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.AddOrUpdateRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.AddOrUpdateResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.DeleteRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.DeleteResponse.SerializeToString,
            ),
            'UpdateClusterWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClusterWeights,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsResponse.SerializeToString,
            ),
            'UpdateCapabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCapabilities,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesResponse.SerializeToString,
            ),
            'UpdateLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLabels,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsResponse.SerializeToString,
            ),
            'UpdateHosts': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateHosts,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateHostsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateHostsResponse.SerializeToString,
            ),
            'UpdatePorts': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePorts,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdatePortsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdatePortsResponse.SerializeToString,
            ),
            'UpdateDatacenterRegions': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDatacenterRegions,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateDatacenterRegionsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateDatacenterRegionsResponse.SerializeToString,
            ),
            'Export': grpc.unary_unary_rpc_method_handler(
                    servicer.Export,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.ExportRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.ExportResponse.SerializeToString,
            ),
            'ImportApps': grpc.unary_unary_rpc_method_handler(
                    servicer.ImportApps,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.ImportRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.ImportResponse.SerializeToString,
            ),
            'UpdateNodeProtocols': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateNodeProtocols,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateNodeProtocolsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateNodeProtocolsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gns.service.UpdateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UpdateService(object):
    """* Update cluster information in Zookeeper. 
    """

    @staticmethod
    def AddOrUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/AddOrUpdate',
            squareup_dot_gns_dot_service__pb2.AddOrUpdateRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.AddOrUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/Delete',
            squareup_dot_gns_dot_service__pb2.DeleteRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateClusterWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdateClusterWeights',
            squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCapabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdateCapabilities',
            squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdateLabels',
            squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateHosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdateHosts',
            squareup_dot_gns_dot_service__pb2.UpdateHostsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateHostsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePorts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdatePorts',
            squareup_dot_gns_dot_service__pb2.UpdatePortsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdatePortsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDatacenterRegions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdateDatacenterRegions',
            squareup_dot_gns_dot_service__pb2.UpdateDatacenterRegionsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateDatacenterRegionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Export(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/Export',
            squareup_dot_gns_dot_service__pb2.ExportRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.ExportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImportApps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/ImportApps',
            squareup_dot_gns_dot_service__pb2.ImportRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.ImportResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateNodeProtocols(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.UpdateService/UpdateNodeProtocols',
            squareup_dot_gns_dot_service__pb2.UpdateNodeProtocolsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateNodeProtocolsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GnsConfigServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ValidateDeploy = channel.unary_unary(
                '/squareup.gns.service.GnsConfigService/ValidateDeploy',
                request_serializer=squareup_dot_gns_dot_service__pb2.ProcessDeployRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.ProcessDeployResponse.FromString,
                )
        self.ProcessDeploy = channel.unary_unary(
                '/squareup.gns.service.GnsConfigService/ProcessDeploy',
                request_serializer=squareup_dot_gns_dot_service__pb2.ProcessDeployRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.ProcessDeployResponse.FromString,
                )


class GnsConfigServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ValidateDeploy(self, request, context):
        """* Validates a process deploy request but does not register anything. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessDeploy(self, request, context):
        """* Processes a deploy request and issues a corresponding AddOrUpdate request. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GnsConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ValidateDeploy': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateDeploy,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.ProcessDeployRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.ProcessDeployResponse.SerializeToString,
            ),
            'ProcessDeploy': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessDeploy,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.ProcessDeployRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.ProcessDeployResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gns.service.GnsConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GnsConfigService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ValidateDeploy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GnsConfigService/ValidateDeploy',
            squareup_dot_gns_dot_service__pb2.ProcessDeployRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.ProcessDeployResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcessDeploy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GnsConfigService/ProcessDeploy',
            squareup_dot_gns_dot_service__pb2.ProcessDeployRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.ProcessDeployResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class GlobalNameServiceStub(object):
    """* The public service provided by gns-server. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListApps = channel.unary_unary(
                '/squareup.gns.service.GlobalNameService/ListApps',
                request_serializer=squareup_dot_gns_dot_service__pb2.ListAppsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.ListAppsResponse.FromString,
                )
        self.QueryClusters = channel.unary_unary(
                '/squareup.gns.service.GlobalNameService/QueryClusters',
                request_serializer=squareup_dot_gns_dot_service__pb2.QueryClustersRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.QueryClustersResponse.FromString,
                )
        self.UpdateClusterWeights = channel.unary_unary(
                '/squareup.gns.service.GlobalNameService/UpdateClusterWeights',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsResponse.FromString,
                )
        self.UpdateCapabilities = channel.unary_unary(
                '/squareup.gns.service.GlobalNameService/UpdateCapabilities',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesResponse.FromString,
                )
        self.UpdateLabels = channel.unary_unary(
                '/squareup.gns.service.GlobalNameService/UpdateLabels',
                request_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsRequest.SerializeToString,
                response_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsResponse.FromString,
                )


class GlobalNameServiceServicer(object):
    """* The public service provided by gns-server. 
    """

    def ListApps(self, request, context):
        """*
        Queries for the list of apps in a datacenter
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryClusters(self, request, context):
        """*
        Queries for information for a single cluster or a group of clusters that match a given
        cluster spec. This can be used by non-Zookeeper clients, for one-off or ad-hoc queries. This
        should <em>not</em> be used to watch a service: a proper Zookeeper client should be used for
        that. (Please do not poll this endpoint!)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClusterWeights(self, request, context):
        """*
        Updates cluster weights for a given application at the local datacenter. The app name given
        must match the requester. (E.g. clients aren't allowed to change weights for other apps via
        this method.)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCapabilities(self, request, context):
        """*
        Updates cluster capabilities for a given application and cluster in the local datacenter. The
        app name given must match the requester. (E.g. clients aren't allowed to change weights for
        other apps via this method.)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GlobalNameServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListApps': grpc.unary_unary_rpc_method_handler(
                    servicer.ListApps,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.ListAppsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.ListAppsResponse.SerializeToString,
            ),
            'QueryClusters': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryClusters,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.QueryClustersRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.QueryClustersResponse.SerializeToString,
            ),
            'UpdateClusterWeights': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClusterWeights,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsResponse.SerializeToString,
            ),
            'UpdateCapabilities': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCapabilities,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesResponse.SerializeToString,
            ),
            'UpdateLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLabels,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsRequest.FromString,
                    response_serializer=squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gns.service.GlobalNameService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GlobalNameService(object):
    """* The public service provided by gns-server. 
    """

    @staticmethod
    def ListApps(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GlobalNameService/ListApps',
            squareup_dot_gns_dot_service__pb2.ListAppsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.ListAppsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryClusters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GlobalNameService/QueryClusters',
            squareup_dot_gns_dot_service__pb2.QueryClustersRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.QueryClustersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateClusterWeights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GlobalNameService/UpdateClusterWeights',
            squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateClusterWeightsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCapabilities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GlobalNameService/UpdateCapabilities',
            squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateClusterCapabilitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.GlobalNameService/UpdateLabels',
            squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsRequest.SerializeToString,
            squareup_dot_gns_dot_service__pb2.UpdateClusterLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class AdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RewriteTree = channel.unary_unary(
                '/squareup.gns.service.AdminService/RewriteTree',
                request_serializer=squareup_dot_gns_dot_service__pb2.RewriteTreeRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )


class AdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RewriteTree(self, request, context):
        """*
        Triggers a rewrite of the local clusters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RewriteTree': grpc.unary_unary_rpc_method_handler(
                    servicer.RewriteTree,
                    request_deserializer=squareup_dot_gns_dot_service__pb2.RewriteTreeRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.gns.service.AdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RewriteTree(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.gns.service.AdminService/RewriteTree',
            squareup_dot_gns_dot_service__pb2.RewriteTreeRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
