# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.bank_accounts.bank_accounts_pb2 import (
    BankAccountTypeValue as squareup___bank_accounts___bank_accounts_pb2___BankAccountTypeValue,
)

from sq_protos_py.squareup.common.business_type_pb2 import (
    BusinessTypeValue as squareup___common___business_type_pb2___BusinessTypeValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.franklin.events_pb2 import (
    Event as squareup___franklin___events_pb2___Event,
)

from sq_protos_py.squareup.franklin.link_result_pb2 import (
    LinkResultValue as squareup___franklin___link_result_pb2___LinkResultValue,
)

from sq_protos_py.squareup.santa.event_pb2 import (
    BlacklistEvent as squareup___santa___event_pb2___BlacklistEvent,
)

from sq_protos_py.squareup.simple_instrument_store.model_pb2 import (
    LinkAttemptStatusValue as squareup___simple_instrument_store___model_pb2___LinkAttemptStatusValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EntityValue = typing___NewType('EntityValue', builtin___int)
type___EntityValue = EntityValue
Entity: _Entity
class _Entity(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EntityValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ENTITY_DO_NOT_USE = typing___cast(EntityValue, 0)
    FRANKLIN_PAYMENT = typing___cast(EntityValue, 1)
    FRANKLIN_CUSTOMER = typing___cast(EntityValue, 2)
    FRANKLIN_PAYMENT_CARD = typing___cast(EntityValue, 3)
    FRANKLIN_SENDER = typing___cast(EntityValue, 4)
    FRANKLIN_RECIPIENT = typing___cast(EntityValue, 5)
    FRANKLIN_EVENT_CUSTOMER = typing___cast(EntityValue, 6)
    FRANKLIN_SENDER_CARD_TOKEN = typing___cast(EntityValue, 7)
    FRANKLIN_RECIPIENT_CARD_TOKEN = typing___cast(EntityValue, 8)
    REGISTER_PAYMENT = typing___cast(EntityValue, 9)
    REGISTER_MERCHANT = typing___cast(EntityValue, 10)
    REGISTER_PAYMENT_CARD = typing___cast(EntityValue, 11)
    REGISTER_BUSINESS_NAME = typing___cast(EntityValue, 12)
    REGISTER_BUSINESS_TYPE = typing___cast(EntityValue, 13)
    REGISTER_AUTH_DESCRIPTION = typing___cast(EntityValue, 14)
    REGISTER_DEVICE_OS = typing___cast(EntityValue, 15)
    REGISTER_DEVICE_HARDWARE = typing___cast(EntityValue, 16)
    REGISTER_BUSINESS_CITY = typing___cast(EntityValue, 17)
    REGISTER_LAT_LON_0_DECIMAL_PLACES = typing___cast(EntityValue, 18)
    REGISTER_LAT_LON_1_DECIMAL_PLACE = typing___cast(EntityValue, 19)
    REGISTER_LAT_LON_2_DECIMAL_PLACES = typing___cast(EntityValue, 20)
    REGISTER_LAT_LON_3_DECIMAL_PLACES = typing___cast(EntityValue, 21)
    REGISTER_TIME_ZONE = typing___cast(EntityValue, 23)
    REGISTER_EMAIL_DOMAIN = typing___cast(EntityValue, 24)
    REGISTER_ROUTING_NUMBER = typing___cast(EntityValue, 25)
    REGISTER_DEVICE_LANGUAGE_CODE = typing___cast(EntityValue, 26)
    REGISTER_PAYMENT_LOCATION_STATE = typing___cast(EntityValue, 27)
    REGISTER_PAYMENT_LOCATION_ZIP = typing___cast(EntityValue, 28)
    REGISTER_PAYMENT_LOCATION_ZIP_FIRST_3 = typing___cast(EntityValue, 29)
    REGISTER_PHONE_NUMBER_FIRST_3 = typing___cast(EntityValue, 30)
    REGISTER_IP_1_OCTET = typing___cast(EntityValue, 31)
    REGISTER_IP_2_OCTETS = typing___cast(EntityValue, 32)
    REGISTER_IP_3_OCTETS = typing___cast(EntityValue, 33)
    REGISTER_BIN_COUNTRY = typing___cast(EntityValue, 34)
    REGISTER_INSTANT_DEPOSIT_CARD_BIN = typing___cast(EntityValue, 35)
    REGISTER_BUYER_IP = typing___cast(EntityValue, 36)
    REGISTER_BUYER_AVT = typing___cast(EntityValue, 37)
    REGISTER_MERCHANT_AVT = typing___cast(EntityValue, 38)
    REGISTER_MERCHANT_DEVICE = typing___cast(EntityValue, 39)
    PERSON = typing___cast(EntityValue, 40)
    SESSION = typing___cast(EntityValue, 41)
    LOGIN = typing___cast(EntityValue, 42)
    IP = typing___cast(EntityValue, 43)
    DEPOSIT_LINK = typing___cast(EntityValue, 44)
    BANK_ACCOUNT = typing___cast(EntityValue, 45)
    MASTER_MERCHANT = typing___cast(EntityValue, 46)
    MASTER_MERCHANT_ACTIVATION = typing___cast(EntityValue, 47)
    ASN = typing___cast(EntityValue, 49)
    DEVICE_ID = typing___cast(EntityValue, 53)
    MERCHANT_AND_CARD = typing___cast(EntityValue, 48)
    BROWSER_FINGERPRINT = typing___cast(EntityValue, 50)
    EVENTSTREAM_USER = typing___cast(EntityValue, 22)
    PAYROLL_RUN = typing___cast(EntityValue, 51)
    PAYROLL_RUN_UPDATE = typing___cast(EntityValue, 52)
    PAYMENT_CARD_BIN = typing___cast(EntityValue, 54)
    BANK_FIDELIUS_TOKEN = typing___cast(EntityValue, 55)
    SHOP_ORDER = typing___cast(EntityValue, 56)
    SHOP_ORDER_DECISION = typing___cast(EntityValue, 57)
    MINESWEEPER_DEVICE_ID = typing___cast(EntityValue, 58)
    HASHED_SHIPPING_ADDRESS = typing___cast(EntityValue, 59)
    HASHED_EMAIL = typing___cast(EntityValue, 60)
    EMAIL_AGE_REQUEST = typing___cast(EntityValue, 61)
    LEXIS_NEXIS_PROFILE_BOOSTER_REQUEST = typing___cast(EntityValue, 62)
    CAPITAL_INSTALLMENTS_APPLICATION = typing___cast(EntityValue, 63)
    POSTOFFICE_PROMOTION = typing___cast(EntityValue, 64)
    INVOICE = typing___cast(EntityValue, 65)
    GEOLOCATION = typing___cast(EntityValue, 66)
    ETL2SIGNAL_EXAMPLE = typing___cast(EntityValue, 67)
    CASH_CUSTOMER = typing___cast(EntityValue, 68)
    CASH_CUSTOMER_SENDER_AND_RECIPIENT = typing___cast(EntityValue, 79)
    CASH_PAYMENT_TRANSITION = typing___cast(EntityValue, 69)
    INAPP_SQUARE_DEVICE_ID = typing___cast(EntityValue, 70)
    CAPITAL_INSTALLMENTS_APPLICATION_PENDING = typing___cast(EntityValue, 71)
    CAPITAL_INSTALLMENTS_APPLICATION_PREQUALIFICATION = typing___cast(EntityValue, 72)
    CAPITAL_INSTALLMENTS_APPLICATION_SUBMISSION = typing___cast(EntityValue, 73)
    CAPITAL_INSTALLMENTS_APPLICATION_CANCELLATION = typing___cast(EntityValue, 74)
    CAPITAL_INSTALLMENTS_APPLICATION_DECLINE = typing___cast(EntityValue, 75)
    CAPITAL_INSTALLMENTS_APPLICATION_COMPLETION = typing___cast(EntityValue, 76)
    CASH_PAYMENT = typing___cast(EntityValue, 77)
    SUPPORT_CASE_CREATION = typing___cast(EntityValue, 78)
    CAPITAL_CUSTOMER = typing___cast(EntityValue, 80)
    MERCHANT_AND_BROWSER_FINGERPRINT = typing___cast(EntityValue, 81)
    CAPITAL_VENDOR_DATA_SOURCE = typing___cast(EntityValue, 82)
    CAPITAL_VENDOR_DATA_FETCH = typing___cast(EntityValue, 83)
    SQUARE_CARD = typing___cast(EntityValue, 84)
    CAPITAL_LEXIS_NEXIS_FRAUD_POINT_REPORT = typing___cast(EntityValue, 85)
    CAPITAL_EXPERIAN_CREDIT_PROFILE = typing___cast(EntityValue, 86)
    SUPPORT_PAGE_VIEW = typing___cast(EntityValue, 87)
    LEGAL_ENTITY = typing___cast(EntityValue, 88)
    BIZBANK_TRANSACTION_EVENT = typing___cast(EntityValue, 89)
    CAPITAL_APPLICATION = typing___cast(EntityValue, 90)
    CAPITAL_DECISION = typing___cast(EntityValue, 91)
    CASH_MERCHANT_ENHANCEMENT = typing___cast(EntityValue, 92)
    CASH_MERCHANT_ENHANCEMENT_SET = typing___cast(EntityValue, 93)
    CASH_MERCHANT_ENHANCEMENT_PROVIDER_SET = typing___cast(EntityValue, 94)
    REGULATOR_CASE_UPDATE = typing___cast(EntityValue, 95)
    FRANKLIN_RECIPIENT_BANK_TOKEN = typing___cast(EntityValue, 96)
    FRANKLIN_INITIATOR_DEVICE_ID = typing___cast(EntityValue, 97)
    OFFSET_REQUEST = typing___cast(EntityValue, 98)
    CASH_DEVICE = typing___cast(EntityValue, 99)
    CASH_INSTRUMENT_LINK = typing___cast(EntityValue, 100)
    CASH_TRANSFER_TRANSITION = typing___cast(EntityValue, 101)
    CASH_TRANSFER_EVENT = typing___cast(EntityValue, 102)
    CASH_LOGIN = typing___cast(EntityValue, 103)
    INSTALLATION_ID = typing___cast(EntityValue, 104)
    CASH_BALANCE = typing___cast(EntityValue, 105)
    CASH_LINE_OF_CREDIT = typing___cast(EntityValue, 106)
    LEGIT_SCRIPT_RESPONSE = typing___cast(EntityValue, 107)
    BALANCE_ACTIVITY = typing___cast(EntityValue, 108)
    BIZBANK_ADDRESS_UPDATE = typing___cast(EntityValue, 109)
    CASH_SUPPORT_CASE_CREATION = typing___cast(EntityValue, 110)
    DUNANDBRADSTREET_REQUEST = typing___cast(EntityValue, 111)
    BALANCE_ACTIVITY_EVENT = typing___cast(EntityValue, 112)
    CASH_VERIFIED_LOGIN_ATTEMPT = typing___cast(EntityValue, 113)
    CASH_INSTRUMENT_LINK_ATTEMPT = typing___cast(EntityValue, 114)
    CASH_INSTRUMENT_LINK_RESULT = typing___cast(EntityValue, 115)
    CASH_INSTRUMENT_UNLINK = typing___cast(EntityValue, 116)
    CASH_EMAILAGE_EVENT = typing___cast(EntityValue, 117)
    CASH_BALANCE_TOKEN = typing___cast(EntityValue, 118)
    CASH_IDENTITY_VERIFICATION_ATTEMPT = typing___cast(EntityValue, 119)
    POSTAL_CODE = typing___cast(EntityValue, 120)
    DISPUTE_EVENT = typing___cast(EntityValue, 121)
    CASH_ALIAS_EVENT = typing___cast(EntityValue, 122)
    INSTALLER_PACKAGE = typing___cast(EntityValue, 123)
    TRACKING_COOKIE = typing___cast(EntityValue, 124)
    DEVICE_MODEL = typing___cast(EntityValue, 125)
    CASH_ACH_TRANSACTION = typing___cast(EntityValue, 126)
    CASH_ACH_COMPANY_NAME = typing___cast(EntityValue, 127)
    CASH_CUSTOMER_AND_CARD = typing___cast(EntityValue, 128)
    BANK_SETTLEMENT_RETURN = typing___cast(EntityValue, 129)
    REFUND_REQUEST = typing___cast(EntityValue, 130)
    CASH_SUPPORT_CASE_CREATION_EVENT = typing___cast(EntityValue, 131)
    DUNANDBRADSTREET_REQUEST_PRODUCT1 = typing___cast(EntityValue, 132)
    DUNANDBRADSTREET_REQUEST_PRODUCT2 = typing___cast(EntityValue, 133)
    EMAILAGE_RAPIDRISK_REQUEST = typing___cast(EntityValue, 134)
    SSN = typing___cast(EntityValue, 135)
    DRM_ID = typing___cast(EntityValue, 136)
    CAPITAL_PLAN = typing___cast(EntityValue, 137)
    CAPITAL_PLAN_EVENT = typing___cast(EntityValue, 138)
    PHONE_NUMBER = typing___cast(EntityValue, 139)
    CASH_SUPPORT_CHAT = typing___cast(EntityValue, 140)
    CASH_EVALUATE_ENHANCED_VERIFICATION_EVENT = typing___cast(EntityValue, 141)
    CASH_DISPUTE_EVENT = typing___cast(EntityValue, 142)
ENTITY_DO_NOT_USE = typing___cast(EntityValue, 0)
FRANKLIN_PAYMENT = typing___cast(EntityValue, 1)
FRANKLIN_CUSTOMER = typing___cast(EntityValue, 2)
FRANKLIN_PAYMENT_CARD = typing___cast(EntityValue, 3)
FRANKLIN_SENDER = typing___cast(EntityValue, 4)
FRANKLIN_RECIPIENT = typing___cast(EntityValue, 5)
FRANKLIN_EVENT_CUSTOMER = typing___cast(EntityValue, 6)
FRANKLIN_SENDER_CARD_TOKEN = typing___cast(EntityValue, 7)
FRANKLIN_RECIPIENT_CARD_TOKEN = typing___cast(EntityValue, 8)
REGISTER_PAYMENT = typing___cast(EntityValue, 9)
REGISTER_MERCHANT = typing___cast(EntityValue, 10)
REGISTER_PAYMENT_CARD = typing___cast(EntityValue, 11)
REGISTER_BUSINESS_NAME = typing___cast(EntityValue, 12)
REGISTER_BUSINESS_TYPE = typing___cast(EntityValue, 13)
REGISTER_AUTH_DESCRIPTION = typing___cast(EntityValue, 14)
REGISTER_DEVICE_OS = typing___cast(EntityValue, 15)
REGISTER_DEVICE_HARDWARE = typing___cast(EntityValue, 16)
REGISTER_BUSINESS_CITY = typing___cast(EntityValue, 17)
REGISTER_LAT_LON_0_DECIMAL_PLACES = typing___cast(EntityValue, 18)
REGISTER_LAT_LON_1_DECIMAL_PLACE = typing___cast(EntityValue, 19)
REGISTER_LAT_LON_2_DECIMAL_PLACES = typing___cast(EntityValue, 20)
REGISTER_LAT_LON_3_DECIMAL_PLACES = typing___cast(EntityValue, 21)
REGISTER_TIME_ZONE = typing___cast(EntityValue, 23)
REGISTER_EMAIL_DOMAIN = typing___cast(EntityValue, 24)
REGISTER_ROUTING_NUMBER = typing___cast(EntityValue, 25)
REGISTER_DEVICE_LANGUAGE_CODE = typing___cast(EntityValue, 26)
REGISTER_PAYMENT_LOCATION_STATE = typing___cast(EntityValue, 27)
REGISTER_PAYMENT_LOCATION_ZIP = typing___cast(EntityValue, 28)
REGISTER_PAYMENT_LOCATION_ZIP_FIRST_3 = typing___cast(EntityValue, 29)
REGISTER_PHONE_NUMBER_FIRST_3 = typing___cast(EntityValue, 30)
REGISTER_IP_1_OCTET = typing___cast(EntityValue, 31)
REGISTER_IP_2_OCTETS = typing___cast(EntityValue, 32)
REGISTER_IP_3_OCTETS = typing___cast(EntityValue, 33)
REGISTER_BIN_COUNTRY = typing___cast(EntityValue, 34)
REGISTER_INSTANT_DEPOSIT_CARD_BIN = typing___cast(EntityValue, 35)
REGISTER_BUYER_IP = typing___cast(EntityValue, 36)
REGISTER_BUYER_AVT = typing___cast(EntityValue, 37)
REGISTER_MERCHANT_AVT = typing___cast(EntityValue, 38)
REGISTER_MERCHANT_DEVICE = typing___cast(EntityValue, 39)
PERSON = typing___cast(EntityValue, 40)
SESSION = typing___cast(EntityValue, 41)
LOGIN = typing___cast(EntityValue, 42)
IP = typing___cast(EntityValue, 43)
DEPOSIT_LINK = typing___cast(EntityValue, 44)
BANK_ACCOUNT = typing___cast(EntityValue, 45)
MASTER_MERCHANT = typing___cast(EntityValue, 46)
MASTER_MERCHANT_ACTIVATION = typing___cast(EntityValue, 47)
ASN = typing___cast(EntityValue, 49)
DEVICE_ID = typing___cast(EntityValue, 53)
MERCHANT_AND_CARD = typing___cast(EntityValue, 48)
BROWSER_FINGERPRINT = typing___cast(EntityValue, 50)
EVENTSTREAM_USER = typing___cast(EntityValue, 22)
PAYROLL_RUN = typing___cast(EntityValue, 51)
PAYROLL_RUN_UPDATE = typing___cast(EntityValue, 52)
PAYMENT_CARD_BIN = typing___cast(EntityValue, 54)
BANK_FIDELIUS_TOKEN = typing___cast(EntityValue, 55)
SHOP_ORDER = typing___cast(EntityValue, 56)
SHOP_ORDER_DECISION = typing___cast(EntityValue, 57)
MINESWEEPER_DEVICE_ID = typing___cast(EntityValue, 58)
HASHED_SHIPPING_ADDRESS = typing___cast(EntityValue, 59)
HASHED_EMAIL = typing___cast(EntityValue, 60)
EMAIL_AGE_REQUEST = typing___cast(EntityValue, 61)
LEXIS_NEXIS_PROFILE_BOOSTER_REQUEST = typing___cast(EntityValue, 62)
CAPITAL_INSTALLMENTS_APPLICATION = typing___cast(EntityValue, 63)
POSTOFFICE_PROMOTION = typing___cast(EntityValue, 64)
INVOICE = typing___cast(EntityValue, 65)
GEOLOCATION = typing___cast(EntityValue, 66)
ETL2SIGNAL_EXAMPLE = typing___cast(EntityValue, 67)
CASH_CUSTOMER = typing___cast(EntityValue, 68)
CASH_CUSTOMER_SENDER_AND_RECIPIENT = typing___cast(EntityValue, 79)
CASH_PAYMENT_TRANSITION = typing___cast(EntityValue, 69)
INAPP_SQUARE_DEVICE_ID = typing___cast(EntityValue, 70)
CAPITAL_INSTALLMENTS_APPLICATION_PENDING = typing___cast(EntityValue, 71)
CAPITAL_INSTALLMENTS_APPLICATION_PREQUALIFICATION = typing___cast(EntityValue, 72)
CAPITAL_INSTALLMENTS_APPLICATION_SUBMISSION = typing___cast(EntityValue, 73)
CAPITAL_INSTALLMENTS_APPLICATION_CANCELLATION = typing___cast(EntityValue, 74)
CAPITAL_INSTALLMENTS_APPLICATION_DECLINE = typing___cast(EntityValue, 75)
CAPITAL_INSTALLMENTS_APPLICATION_COMPLETION = typing___cast(EntityValue, 76)
CASH_PAYMENT = typing___cast(EntityValue, 77)
SUPPORT_CASE_CREATION = typing___cast(EntityValue, 78)
CAPITAL_CUSTOMER = typing___cast(EntityValue, 80)
MERCHANT_AND_BROWSER_FINGERPRINT = typing___cast(EntityValue, 81)
CAPITAL_VENDOR_DATA_SOURCE = typing___cast(EntityValue, 82)
CAPITAL_VENDOR_DATA_FETCH = typing___cast(EntityValue, 83)
SQUARE_CARD = typing___cast(EntityValue, 84)
CAPITAL_LEXIS_NEXIS_FRAUD_POINT_REPORT = typing___cast(EntityValue, 85)
CAPITAL_EXPERIAN_CREDIT_PROFILE = typing___cast(EntityValue, 86)
SUPPORT_PAGE_VIEW = typing___cast(EntityValue, 87)
LEGAL_ENTITY = typing___cast(EntityValue, 88)
BIZBANK_TRANSACTION_EVENT = typing___cast(EntityValue, 89)
CAPITAL_APPLICATION = typing___cast(EntityValue, 90)
CAPITAL_DECISION = typing___cast(EntityValue, 91)
CASH_MERCHANT_ENHANCEMENT = typing___cast(EntityValue, 92)
CASH_MERCHANT_ENHANCEMENT_SET = typing___cast(EntityValue, 93)
CASH_MERCHANT_ENHANCEMENT_PROVIDER_SET = typing___cast(EntityValue, 94)
REGULATOR_CASE_UPDATE = typing___cast(EntityValue, 95)
FRANKLIN_RECIPIENT_BANK_TOKEN = typing___cast(EntityValue, 96)
FRANKLIN_INITIATOR_DEVICE_ID = typing___cast(EntityValue, 97)
OFFSET_REQUEST = typing___cast(EntityValue, 98)
CASH_DEVICE = typing___cast(EntityValue, 99)
CASH_INSTRUMENT_LINK = typing___cast(EntityValue, 100)
CASH_TRANSFER_TRANSITION = typing___cast(EntityValue, 101)
CASH_TRANSFER_EVENT = typing___cast(EntityValue, 102)
CASH_LOGIN = typing___cast(EntityValue, 103)
INSTALLATION_ID = typing___cast(EntityValue, 104)
CASH_BALANCE = typing___cast(EntityValue, 105)
CASH_LINE_OF_CREDIT = typing___cast(EntityValue, 106)
LEGIT_SCRIPT_RESPONSE = typing___cast(EntityValue, 107)
BALANCE_ACTIVITY = typing___cast(EntityValue, 108)
BIZBANK_ADDRESS_UPDATE = typing___cast(EntityValue, 109)
CASH_SUPPORT_CASE_CREATION = typing___cast(EntityValue, 110)
DUNANDBRADSTREET_REQUEST = typing___cast(EntityValue, 111)
BALANCE_ACTIVITY_EVENT = typing___cast(EntityValue, 112)
CASH_VERIFIED_LOGIN_ATTEMPT = typing___cast(EntityValue, 113)
CASH_INSTRUMENT_LINK_ATTEMPT = typing___cast(EntityValue, 114)
CASH_INSTRUMENT_LINK_RESULT = typing___cast(EntityValue, 115)
CASH_INSTRUMENT_UNLINK = typing___cast(EntityValue, 116)
CASH_EMAILAGE_EVENT = typing___cast(EntityValue, 117)
CASH_BALANCE_TOKEN = typing___cast(EntityValue, 118)
CASH_IDENTITY_VERIFICATION_ATTEMPT = typing___cast(EntityValue, 119)
POSTAL_CODE = typing___cast(EntityValue, 120)
DISPUTE_EVENT = typing___cast(EntityValue, 121)
CASH_ALIAS_EVENT = typing___cast(EntityValue, 122)
INSTALLER_PACKAGE = typing___cast(EntityValue, 123)
TRACKING_COOKIE = typing___cast(EntityValue, 124)
DEVICE_MODEL = typing___cast(EntityValue, 125)
CASH_ACH_TRANSACTION = typing___cast(EntityValue, 126)
CASH_ACH_COMPANY_NAME = typing___cast(EntityValue, 127)
CASH_CUSTOMER_AND_CARD = typing___cast(EntityValue, 128)
BANK_SETTLEMENT_RETURN = typing___cast(EntityValue, 129)
REFUND_REQUEST = typing___cast(EntityValue, 130)
CASH_SUPPORT_CASE_CREATION_EVENT = typing___cast(EntityValue, 131)
DUNANDBRADSTREET_REQUEST_PRODUCT1 = typing___cast(EntityValue, 132)
DUNANDBRADSTREET_REQUEST_PRODUCT2 = typing___cast(EntityValue, 133)
EMAILAGE_RAPIDRISK_REQUEST = typing___cast(EntityValue, 134)
SSN = typing___cast(EntityValue, 135)
DRM_ID = typing___cast(EntityValue, 136)
CAPITAL_PLAN = typing___cast(EntityValue, 137)
CAPITAL_PLAN_EVENT = typing___cast(EntityValue, 138)
PHONE_NUMBER = typing___cast(EntityValue, 139)
CASH_SUPPORT_CHAT = typing___cast(EntityValue, 140)
CASH_EVALUATE_ENHANCED_VERIFICATION_EVENT = typing___cast(EntityValue, 141)
CASH_DISPUTE_EVENT = typing___cast(EntityValue, 142)
type___Entity = Entity

class WebAuditLog(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    target_token: typing___Text = ...
    action_name: typing___Text = ...
    old_value: typing___Text = ...
    new_value: typing___Text = ...
    created_at_millis: builtin___int = ...
    actor_id: builtin___int = ...
    id: typing___Text = ...

    def __init__(self,
        *,
        target_token : typing___Optional[typing___Text] = None,
        action_name : typing___Optional[typing___Text] = None,
        old_value : typing___Optional[typing___Text] = None,
        new_value : typing___Optional[typing___Text] = None,
        created_at_millis : typing___Optional[builtin___int] = None,
        actor_id : typing___Optional[builtin___int] = None,
        id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"action_name",b"action_name",u"actor_id",b"actor_id",u"created_at_millis",b"created_at_millis",u"id",b"id",u"new_value",b"new_value",u"old_value",b"old_value",u"target_token",b"target_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"action_name",b"action_name",u"actor_id",b"actor_id",u"created_at_millis",b"created_at_millis",u"id",b"id",u"new_value",b"new_value",u"old_value",b"old_value",u"target_token",b"target_token"]) -> None: ...
type___WebAuditLog = WebAuditLog

class WebPrivateInformation(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    private_information_id: builtin___int = ...
    user_token: typing___Text = ...
    user_created_at_millis: builtin___int = ...
    user_activated_at_millis: builtin___int = ...
    business_name: typing___Text = ...
    business_type: squareup___common___business_type_pb2___BusinessTypeValue = ...
    postal_code: typing___Text = ...
    latitude: builtin___float = ...
    longitude: builtin___float = ...
    user_year_of_birth: builtin___int = ...
    created_at_millis: builtin___int = ...
    updated_at_millis: builtin___int = ...
    email_domain_token: typing___Text = ...
    business_category: typing___Text = ...
    business_sub_category: typing___Text = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...

    def __init__(self,
        *,
        private_information_id : typing___Optional[builtin___int] = None,
        user_token : typing___Optional[typing___Text] = None,
        user_created_at_millis : typing___Optional[builtin___int] = None,
        user_activated_at_millis : typing___Optional[builtin___int] = None,
        business_name : typing___Optional[typing___Text] = None,
        business_type : typing___Optional[squareup___common___business_type_pb2___BusinessTypeValue] = None,
        postal_code : typing___Optional[typing___Text] = None,
        latitude : typing___Optional[builtin___float] = None,
        longitude : typing___Optional[builtin___float] = None,
        user_year_of_birth : typing___Optional[builtin___int] = None,
        created_at_millis : typing___Optional[builtin___int] = None,
        updated_at_millis : typing___Optional[builtin___int] = None,
        email_domain_token : typing___Optional[typing___Text] = None,
        business_category : typing___Optional[typing___Text] = None,
        business_sub_category : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"business_category",b"business_category",u"business_name",b"business_name",u"business_sub_category",b"business_sub_category",u"business_type",b"business_type",u"created_at_millis",b"created_at_millis",u"currency_code",b"currency_code",u"email_domain_token",b"email_domain_token",u"latitude",b"latitude",u"longitude",b"longitude",u"postal_code",b"postal_code",u"private_information_id",b"private_information_id",u"updated_at_millis",b"updated_at_millis",u"user_activated_at_millis",b"user_activated_at_millis",u"user_created_at_millis",b"user_created_at_millis",u"user_token",b"user_token",u"user_year_of_birth",b"user_year_of_birth"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"business_category",b"business_category",u"business_name",b"business_name",u"business_sub_category",b"business_sub_category",u"business_type",b"business_type",u"created_at_millis",b"created_at_millis",u"currency_code",b"currency_code",u"email_domain_token",b"email_domain_token",u"latitude",b"latitude",u"longitude",b"longitude",u"postal_code",b"postal_code",u"private_information_id",b"private_information_id",u"updated_at_millis",b"updated_at_millis",u"user_activated_at_millis",b"user_activated_at_millis",u"user_created_at_millis",b"user_created_at_millis",u"user_token",b"user_token",u"user_year_of_birth",b"user_year_of_birth"]) -> None: ...
type___WebPrivateInformation = WebPrivateInformation

class BankAccountLinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    user_token: typing___Text = ...
    bank_account_fidelius_token: typing___Text = ...
    routing_number: typing___Text = ...
    account_type: squareup___bank_accounts___bank_accounts_pb2___BankAccountTypeValue = ...
    linked_at_millis: builtin___int = ...
    unlinked_at_millis: builtin___int = ...
    verified_at_millis: builtin___int = ...
    frozen_at_millis: builtin___int = ...
    instrument_token: typing___Text = ...
    bank_account_token: typing___Text = ...
    ip: typing___Text = ...
    avt: typing___Text = ...

    def __init__(self,
        *,
        user_token : typing___Optional[typing___Text] = None,
        bank_account_fidelius_token : typing___Optional[typing___Text] = None,
        routing_number : typing___Optional[typing___Text] = None,
        account_type : typing___Optional[squareup___bank_accounts___bank_accounts_pb2___BankAccountTypeValue] = None,
        linked_at_millis : typing___Optional[builtin___int] = None,
        unlinked_at_millis : typing___Optional[builtin___int] = None,
        verified_at_millis : typing___Optional[builtin___int] = None,
        frozen_at_millis : typing___Optional[builtin___int] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        bank_account_token : typing___Optional[typing___Text] = None,
        ip : typing___Optional[typing___Text] = None,
        avt : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"avt",b"avt",u"bank_account_fidelius_token",b"bank_account_fidelius_token",u"bank_account_token",b"bank_account_token",u"frozen_at_millis",b"frozen_at_millis",u"instrument_token",b"instrument_token",u"ip",b"ip",u"linked_at_millis",b"linked_at_millis",u"routing_number",b"routing_number",u"unlinked_at_millis",b"unlinked_at_millis",u"user_token",b"user_token",u"verified_at_millis",b"verified_at_millis"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"avt",b"avt",u"bank_account_fidelius_token",b"bank_account_fidelius_token",u"bank_account_token",b"bank_account_token",u"frozen_at_millis",b"frozen_at_millis",u"instrument_token",b"instrument_token",u"ip",b"ip",u"linked_at_millis",b"linked_at_millis",u"routing_number",b"routing_number",u"unlinked_at_millis",b"unlinked_at_millis",u"user_token",b"user_token",u"verified_at_millis",b"verified_at_millis"]) -> None: ...
type___BankAccountLinkEvent = BankAccountLinkEvent

class InstantDepositCardLinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    register_user_token: typing___Text = ...
    franklin_customer_token: typing___Text = ...
    linked_at_millis: builtin___int = ...
    card_fidelius_token: typing___Text = ...
    bin: typing___Text = ...
    franklin_result: squareup___franklin___events_pb2___Event.ResultValue = ...
    franklin_message: typing___Text = ...
    link_result: squareup___franklin___link_result_pb2___LinkResultValue = ...
    event_token: typing___Text = ...

    def __init__(self,
        *,
        register_user_token : typing___Optional[typing___Text] = None,
        franklin_customer_token : typing___Optional[typing___Text] = None,
        linked_at_millis : typing___Optional[builtin___int] = None,
        card_fidelius_token : typing___Optional[typing___Text] = None,
        bin : typing___Optional[typing___Text] = None,
        franklin_result : typing___Optional[squareup___franklin___events_pb2___Event.ResultValue] = None,
        franklin_message : typing___Optional[typing___Text] = None,
        link_result : typing___Optional[squareup___franklin___link_result_pb2___LinkResultValue] = None,
        event_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bin",b"bin",u"card_fidelius_token",b"card_fidelius_token",u"event_token",b"event_token",u"franklin_customer_token",b"franklin_customer_token",u"franklin_message",b"franklin_message",u"franklin_result",b"franklin_result",u"link_result",b"link_result",u"linked_at_millis",b"linked_at_millis",u"register_user_token",b"register_user_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bin",b"bin",u"card_fidelius_token",b"card_fidelius_token",u"event_token",b"event_token",u"franklin_customer_token",b"franklin_customer_token",u"franklin_message",b"franklin_message",u"franklin_result",b"franklin_result",u"link_result",b"link_result",u"linked_at_millis",b"linked_at_millis",u"register_user_token",b"register_user_token"]) -> None: ...
type___InstantDepositCardLinkEvent = InstantDepositCardLinkEvent

class InstrumentInstantDepositCardLinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    instrument_token: typing___Text = ...
    unit_token: typing___Text = ...
    linked_at_millis: builtin___int = ...
    unlinked_at_millis: builtin___int = ...
    card_fidelius_token: typing___Text = ...
    bin: typing___Text = ...
    attempt_status: squareup___simple_instrument_store___model_pb2___LinkAttemptStatusValue = ...
    ip: typing___Text = ...
    postal_code: typing___Text = ...

    def __init__(self,
        *,
        instrument_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        linked_at_millis : typing___Optional[builtin___int] = None,
        unlinked_at_millis : typing___Optional[builtin___int] = None,
        card_fidelius_token : typing___Optional[typing___Text] = None,
        bin : typing___Optional[typing___Text] = None,
        attempt_status : typing___Optional[squareup___simple_instrument_store___model_pb2___LinkAttemptStatusValue] = None,
        ip : typing___Optional[typing___Text] = None,
        postal_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"attempt_status",b"attempt_status",u"bin",b"bin",u"card_fidelius_token",b"card_fidelius_token",u"instrument_token",b"instrument_token",u"ip",b"ip",u"linked_at_millis",b"linked_at_millis",u"postal_code",b"postal_code",u"unit_token",b"unit_token",u"unlinked_at_millis",b"unlinked_at_millis"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"attempt_status",b"attempt_status",u"bin",b"bin",u"card_fidelius_token",b"card_fidelius_token",u"instrument_token",b"instrument_token",u"ip",b"ip",u"linked_at_millis",b"linked_at_millis",u"postal_code",b"postal_code",u"unit_token",b"unit_token",u"unlinked_at_millis",b"unlinked_at_millis"]) -> None: ...
type___InstrumentInstantDepositCardLinkEvent = InstrumentInstantDepositCardLinkEvent

class CardOnFileLinkEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    user_token: typing___Text = ...
    millis: builtin___int = ...
    pan_fidelius_token: typing___Text = ...
    attempt_status: squareup___simple_instrument_store___model_pb2___LinkAttemptStatusValue = ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        user_token : typing___Optional[typing___Text] = None,
        millis : typing___Optional[builtin___int] = None,
        pan_fidelius_token : typing___Optional[typing___Text] = None,
        attempt_status : typing___Optional[squareup___simple_instrument_store___model_pb2___LinkAttemptStatusValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"attempt_status",b"attempt_status",u"millis",b"millis",u"pan_fidelius_token",b"pan_fidelius_token",u"token",b"token",u"user_token",b"user_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"attempt_status",b"attempt_status",u"millis",b"millis",u"pan_fidelius_token",b"pan_fidelius_token",u"token",b"token",u"user_token",b"user_token"]) -> None: ...
type___CardOnFileLinkEvent = CardOnFileLinkEvent

class WebDeviceUsage(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    PlatformValue = typing___NewType('PlatformValue', builtin___int)
    type___PlatformValue = PlatformValue
    Platform: _Platform
    class _Platform(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[WebDeviceUsage.PlatformValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        IOS = typing___cast(WebDeviceUsage.PlatformValue, 1)
        ANDROID = typing___cast(WebDeviceUsage.PlatformValue, 2)
    IOS = typing___cast(WebDeviceUsage.PlatformValue, 1)
    ANDROID = typing___cast(WebDeviceUsage.PlatformValue, 2)
    type___Platform = Platform

    device_usage_id: builtin___int = ...
    user_token: typing___Text = ...
    hardware: typing___Text = ...
    platform: type___WebDeviceUsage.PlatformValue = ...
    register_app_version: typing___Text = ...
    jailbroken: builtin___bool = ...
    device_udid: typing___Text = ...
    created_at_millis: builtin___int = ...
    id: typing___Text = ...

    def __init__(self,
        *,
        device_usage_id : typing___Optional[builtin___int] = None,
        user_token : typing___Optional[typing___Text] = None,
        hardware : typing___Optional[typing___Text] = None,
        platform : typing___Optional[type___WebDeviceUsage.PlatformValue] = None,
        register_app_version : typing___Optional[typing___Text] = None,
        jailbroken : typing___Optional[builtin___bool] = None,
        device_udid : typing___Optional[typing___Text] = None,
        created_at_millis : typing___Optional[builtin___int] = None,
        id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at_millis",b"created_at_millis",u"device_udid",b"device_udid",u"device_usage_id",b"device_usage_id",u"hardware",b"hardware",u"id",b"id",u"jailbroken",b"jailbroken",u"platform",b"platform",u"register_app_version",b"register_app_version",u"user_token",b"user_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at_millis",b"created_at_millis",u"device_udid",b"device_udid",u"device_usage_id",b"device_usage_id",u"hardware",b"hardware",u"id",b"id",u"jailbroken",b"jailbroken",u"platform",b"platform",u"register_app_version",b"register_app_version",u"user_token",b"user_token"]) -> None: ...
type___WebDeviceUsage = WebDeviceUsage

class EventstreamEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EventstreamEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        INVOICE_CREATED = typing___cast(EventstreamEvent.TypeValue, 1)
        INVOICE_SENT = typing___cast(EventstreamEvent.TypeValue, 2)
        INVOICE_PAID = typing___cast(EventstreamEvent.TypeValue, 3)
        INVOICE_EDITED = typing___cast(EventstreamEvent.TypeValue, 4)
        INVOICE_CANCELED = typing___cast(EventstreamEvent.TypeValue, 5)
        INVOICE_DELETED = typing___cast(EventstreamEvent.TypeValue, 6)
        DASHBOARD_VIEW = typing___cast(EventstreamEvent.TypeValue, 7)
        DASHBOARD_VIEW_SALES_SUMMARY = typing___cast(EventstreamEvent.TypeValue, 8)
        HELP_CENTER_VIEW = typing___cast(EventstreamEvent.TypeValue, 9)
        HELP_CENTER_CONTACT = typing___cast(EventstreamEvent.TypeValue, 10)
        EMAIL_VIEW = typing___cast(EventstreamEvent.TypeValue, 11)
        EMAIL_CLICK = typing___cast(EventstreamEvent.TypeValue, 12)
        EMAIL_CLICK_V2 = typing___cast(EventstreamEvent.TypeValue, 17)
        PAYROLL_EMPLOYEE_BANK_ACCOUNT_LINKED = typing___cast(EventstreamEvent.TypeValue, 13)
        PAYROLL_EMPLOYEE_CREATED = typing___cast(EventstreamEvent.TypeValue, 14)
        BANK_VIEW = typing___cast(EventstreamEvent.TypeValue, 15)
        ONBOARD_NEW_SIGNUP = typing___cast(EventstreamEvent.TypeValue, 16)
        PAGE_VIEW = typing___cast(EventstreamEvent.TypeValue, 18)
    INVOICE_CREATED = typing___cast(EventstreamEvent.TypeValue, 1)
    INVOICE_SENT = typing___cast(EventstreamEvent.TypeValue, 2)
    INVOICE_PAID = typing___cast(EventstreamEvent.TypeValue, 3)
    INVOICE_EDITED = typing___cast(EventstreamEvent.TypeValue, 4)
    INVOICE_CANCELED = typing___cast(EventstreamEvent.TypeValue, 5)
    INVOICE_DELETED = typing___cast(EventstreamEvent.TypeValue, 6)
    DASHBOARD_VIEW = typing___cast(EventstreamEvent.TypeValue, 7)
    DASHBOARD_VIEW_SALES_SUMMARY = typing___cast(EventstreamEvent.TypeValue, 8)
    HELP_CENTER_VIEW = typing___cast(EventstreamEvent.TypeValue, 9)
    HELP_CENTER_CONTACT = typing___cast(EventstreamEvent.TypeValue, 10)
    EMAIL_VIEW = typing___cast(EventstreamEvent.TypeValue, 11)
    EMAIL_CLICK = typing___cast(EventstreamEvent.TypeValue, 12)
    EMAIL_CLICK_V2 = typing___cast(EventstreamEvent.TypeValue, 17)
    PAYROLL_EMPLOYEE_BANK_ACCOUNT_LINKED = typing___cast(EventstreamEvent.TypeValue, 13)
    PAYROLL_EMPLOYEE_CREATED = typing___cast(EventstreamEvent.TypeValue, 14)
    BANK_VIEW = typing___cast(EventstreamEvent.TypeValue, 15)
    ONBOARD_NEW_SIGNUP = typing___cast(EventstreamEvent.TypeValue, 16)
    PAGE_VIEW = typing___cast(EventstreamEvent.TypeValue, 18)
    type___Type = Type

    user_token: typing___Text = ...
    unit_token: typing___Text = ...
    time: builtin___int = ...
    type: type___EventstreamEvent.TypeValue = ...
    avt: typing___Text = ...
    ip: typing___Text = ...
    data: typing___Text = ...
    event_name: typing___Text = ...
    event_value: typing___Text = ...
    master_merchant_token: typing___Text = ...

    def __init__(self,
        *,
        user_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        time : typing___Optional[builtin___int] = None,
        type : typing___Optional[type___EventstreamEvent.TypeValue] = None,
        avt : typing___Optional[typing___Text] = None,
        ip : typing___Optional[typing___Text] = None,
        data : typing___Optional[typing___Text] = None,
        event_name : typing___Optional[typing___Text] = None,
        event_value : typing___Optional[typing___Text] = None,
        master_merchant_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"avt",b"avt",u"data",b"data",u"event_name",b"event_name",u"event_value",b"event_value",u"ip",b"ip",u"master_merchant_token",b"master_merchant_token",u"time",b"time",u"type",b"type",u"unit_token",b"unit_token",u"user_token",b"user_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"avt",b"avt",u"data",b"data",u"event_name",b"event_name",u"event_value",b"event_value",u"ip",b"ip",u"master_merchant_token",b"master_merchant_token",u"time",b"time",u"type",b"type",u"unit_token",b"unit_token",u"user_token",b"user_token"]) -> None: ...
type___EventstreamEvent = EventstreamEvent

class CapitalEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CapitalEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN_CAPITAL_EVENT = typing___cast(CapitalEvent.TypeValue, 0)
        ADVANCE = typing___cast(CapitalEvent.TypeValue, 1)
        REPAYMENT = typing___cast(CapitalEvent.TypeValue, 2)
        REPAYMENT_REFUND = typing___cast(CapitalEvent.TypeValue, 3)
        FIXED_DEPOSIT = typing___cast(CapitalEvent.TypeValue, 4)
        UNDO_ADVANCE = typing___cast(CapitalEvent.TypeValue, 5)
        FIXED_PAYMENT = typing___cast(CapitalEvent.TypeValue, 6)
        UNDO_FIXED_DEPOSIT = typing___cast(CapitalEvent.TypeValue, 7)
    UNKNOWN_CAPITAL_EVENT = typing___cast(CapitalEvent.TypeValue, 0)
    ADVANCE = typing___cast(CapitalEvent.TypeValue, 1)
    REPAYMENT = typing___cast(CapitalEvent.TypeValue, 2)
    REPAYMENT_REFUND = typing___cast(CapitalEvent.TypeValue, 3)
    FIXED_DEPOSIT = typing___cast(CapitalEvent.TypeValue, 4)
    UNDO_ADVANCE = typing___cast(CapitalEvent.TypeValue, 5)
    FIXED_PAYMENT = typing___cast(CapitalEvent.TypeValue, 6)
    UNDO_FIXED_DEPOSIT = typing___cast(CapitalEvent.TypeValue, 7)
    type___Type = Type

    event_type: type___CapitalEvent.TypeValue = ...
    user_token: typing___Text = ...
    effective_at_millis: builtin___int = ...
    source_ids: typing___Text = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        event_type : typing___Optional[type___CapitalEvent.TypeValue] = None,
        user_token : typing___Optional[typing___Text] = None,
        effective_at_millis : typing___Optional[builtin___int] = None,
        source_ids : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"effective_at_millis",b"effective_at_millis",u"event_type",b"event_type",u"source_ids",b"source_ids",u"user_token",b"user_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"effective_at_millis",b"effective_at_millis",u"event_type",b"event_type",u"source_ids",b"source_ids",u"user_token",b"user_token"]) -> None: ...
type___CapitalEvent = CapitalEvent

class CategoryEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CategoryEvent.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NEW_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 1)
        BAD_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 2)
        IDA_SCORE = typing___cast(CategoryEvent.EventTypeValue, 3)
        CHANGED_TO_GOOD_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 4)
        CHANGED_TO_BAD_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 5)
        KNOWN_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 6)
    NEW_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 1)
    BAD_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 2)
    IDA_SCORE = typing___cast(CategoryEvent.EventTypeValue, 3)
    CHANGED_TO_GOOD_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 4)
    CHANGED_TO_BAD_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 5)
    KNOWN_MERCHANT = typing___cast(CategoryEvent.EventTypeValue, 6)
    type___EventType = EventType

    entity: type___EntityValue = ...
    category: typing___Text = ...
    time: builtin___int = ...
    ida_score: builtin___int = ...
    event_type: type___CategoryEvent.EventTypeValue = ...

    def __init__(self,
        *,
        entity : typing___Optional[type___EntityValue] = None,
        category : typing___Optional[typing___Text] = None,
        time : typing___Optional[builtin___int] = None,
        ida_score : typing___Optional[builtin___int] = None,
        event_type : typing___Optional[type___CategoryEvent.EventTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"category",b"category",u"entity",b"entity",u"event_type",b"event_type",u"ida_score",b"ida_score",u"time",b"time"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"category",b"category",u"entity",b"entity",u"event_type",b"event_type",u"ida_score",b"ida_score",u"time",b"time"]) -> None: ...
type___CategoryEvent = CategoryEvent

class LeakyBlacklistEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def blacklist_event(self) -> squareup___santa___event_pb2___BlacklistEvent: ...

    def __init__(self,
        *,
        blacklist_event : typing___Optional[squareup___santa___event_pb2___BlacklistEvent] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"blacklist_event",b"blacklist_event"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"blacklist_event",b"blacklist_event"]) -> None: ...
type___LeakyBlacklistEvent = LeakyBlacklistEvent

class SummaryEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entity: type___EntityValue = ...
    key: typing___Text = ...
    end_millis: builtin___int = ...
    data: builtin___bytes = ...
    event_id: typing___Text = ...

    def __init__(self,
        *,
        entity : typing___Optional[type___EntityValue] = None,
        key : typing___Optional[typing___Text] = None,
        end_millis : typing___Optional[builtin___int] = None,
        data : typing___Optional[builtin___bytes] = None,
        event_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"data",b"data",u"end_millis",b"end_millis",u"entity",b"entity",u"event_id",b"event_id",u"key",b"key"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"end_millis",b"end_millis",u"entity",b"entity",u"event_id",b"event_id",u"key",b"key"]) -> None: ...
type___SummaryEvent = SummaryEvent

class EffectEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entity: type___EntityValue = ...
    millis: builtin___int = ...
    data: builtin___bytes = ...
    input_type_id: builtin___int = ...
    es2_uuid_hash: builtin___int = ...
    event_id: typing___Text = ...

    def __init__(self,
        *,
        entity : typing___Optional[type___EntityValue] = None,
        millis : typing___Optional[builtin___int] = None,
        data : typing___Optional[builtin___bytes] = None,
        input_type_id : typing___Optional[builtin___int] = None,
        es2_uuid_hash : typing___Optional[builtin___int] = None,
        event_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"data",b"data",u"entity",b"entity",u"es2_uuid_hash",b"es2_uuid_hash",u"event_id",b"event_id",u"input_type_id",b"input_type_id",u"millis",b"millis"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"data",b"data",u"entity",b"entity",u"es2_uuid_hash",b"es2_uuid_hash",u"event_id",b"event_id",u"input_type_id",b"input_type_id",u"millis",b"millis"]) -> None: ...
type___EffectEvent = EffectEvent

class AccumulatorHistory(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    current_accumulators: builtin___bytes = ...
    job_id: typing___Text = ...

    def __init__(self,
        *,
        current_accumulators : typing___Optional[builtin___bytes] = None,
        job_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"current_accumulators",b"current_accumulators",u"job_id",b"job_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"current_accumulators",b"current_accumulators",u"job_id",b"job_id"]) -> None: ...
type___AccumulatorHistory = AccumulatorHistory

class MergeSummary(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    active_customer_token: typing___Text = ...
    merge_time_millis: builtin___int = ...
    inactive_customer_token: typing___Text = ...
    signal_accmap: builtin___bytes = ...
    feature_accmap: builtin___bytes = ...

    def __init__(self,
        *,
        active_customer_token : typing___Optional[typing___Text] = None,
        merge_time_millis : typing___Optional[builtin___int] = None,
        inactive_customer_token : typing___Optional[typing___Text] = None,
        signal_accmap : typing___Optional[builtin___bytes] = None,
        feature_accmap : typing___Optional[builtin___bytes] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accumulators",b"accumulators",u"active_customer_token",b"active_customer_token",u"feature_accmap",b"feature_accmap",u"inactive_customer_token",b"inactive_customer_token",u"merge_time_millis",b"merge_time_millis",u"signal_accmap",b"signal_accmap"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accumulators",b"accumulators",u"active_customer_token",b"active_customer_token",u"feature_accmap",b"feature_accmap",u"inactive_customer_token",b"inactive_customer_token",u"merge_time_millis",b"merge_time_millis",u"signal_accmap",b"signal_accmap"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"accumulators",b"accumulators"]) -> typing_extensions___Literal["signal_accmap","feature_accmap"]: ...
type___MergeSummary = MergeSummary
