# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.binfo.api_pb2 import (
    BinProperties as squareup___binfo___api_pb2___BinProperties,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PaymentAuthInfo(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_token: typing___Text = ...
    merchant_token: typing___Text = ...
    bin: typing___Text = ...
    auth_intent_created_at_millis: builtin___int = ...
    card_present: builtin___bool = ...
    payment_is_success: builtin___bool = ...
    merchant_country: squareup___common___countries_pb2___CountryValue = ...
    card_token: typing___Text = ...

    @property
    def bin_properties(self) -> squareup___binfo___api_pb2___BinProperties: ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        payment_token : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        bin : typing___Optional[typing___Text] = None,
        bin_properties : typing___Optional[squareup___binfo___api_pb2___BinProperties] = None,
        auth_intent_created_at_millis : typing___Optional[builtin___int] = None,
        card_present : typing___Optional[builtin___bool] = None,
        payment_is_success : typing___Optional[builtin___bool] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        merchant_country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        card_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"auth_intent_created_at_millis",b"auth_intent_created_at_millis",u"bin",b"bin",u"bin_properties",b"bin_properties",u"card_present",b"card_present",u"card_token",b"card_token",u"merchant_country",b"merchant_country",u"merchant_token",b"merchant_token",u"payment_is_success",b"payment_is_success",u"payment_token",b"payment_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"auth_intent_created_at_millis",b"auth_intent_created_at_millis",u"bin",b"bin",u"bin_properties",b"bin_properties",u"card_present",b"card_present",u"card_token",b"card_token",u"merchant_country",b"merchant_country",u"merchant_token",b"merchant_token",u"payment_is_success",b"payment_is_success",u"payment_token",b"payment_token"]) -> None: ...
type___PaymentAuthInfo = PaymentAuthInfo
