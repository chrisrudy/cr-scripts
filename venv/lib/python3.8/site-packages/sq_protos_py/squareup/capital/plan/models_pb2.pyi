# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Product(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TermTypeValue = typing___NewType('TermTypeValue', builtin___int)
    type___TermTypeValue = TermTypeValue
    TermType: _TermType
    class _TermType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Product.TermTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        TT_DO_NOT_USE = typing___cast(Product.TermTypeValue, 0)
        FIXED = typing___cast(Product.TermTypeValue, 1)
        VARIABLE = typing___cast(Product.TermTypeValue, 2)
    TT_DO_NOT_USE = typing___cast(Product.TermTypeValue, 0)
    FIXED = typing___cast(Product.TermTypeValue, 1)
    VARIABLE = typing___cast(Product.TermTypeValue, 2)
    type___TermType = TermType

    name: typing___Text = ...
    version: builtin___int = ...
    payment_method: typing___Text = ...
    payment_period: typing___Text = ...
    prepay_allowed: builtin___bool = ...
    term_type: type___Product.TermTypeValue = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        payment_method : typing___Optional[typing___Text] = None,
        payment_period : typing___Optional[typing___Text] = None,
        prepay_allowed : typing___Optional[builtin___bool] = None,
        term_type : typing___Optional[type___Product.TermTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name",u"payment_method",b"payment_method",u"payment_period",b"payment_period",u"prepay_allowed",b"prepay_allowed",u"term_type",b"term_type",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name",u"payment_method",b"payment_method",u"payment_period",b"payment_period",u"prepay_allowed",b"prepay_allowed",u"term_type",b"term_type",u"version",b"version"]) -> None: ...
type___Product = Product

class ChargeOff(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ReasonValue = typing___NewType('ReasonValue', builtin___int)
    type___ReasonValue = ReasonValue
    Reason: _Reason
    class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ChargeOff.ReasonValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NONE = typing___cast(ChargeOff.ReasonValue, 0)
        BANKRUPTCY = typing___cast(ChargeOff.ReasonValue, 1)
        DECEASED = typing___cast(ChargeOff.ReasonValue, 2)
        FRAUDULENT = typing___cast(ChargeOff.ReasonValue, 3)
        DAYS_PAST_DUE_120 = typing___cast(ChargeOff.ReasonValue, 4)
    NONE = typing___cast(ChargeOff.ReasonValue, 0)
    BANKRUPTCY = typing___cast(ChargeOff.ReasonValue, 1)
    DECEASED = typing___cast(ChargeOff.ReasonValue, 2)
    FRAUDULENT = typing___cast(ChargeOff.ReasonValue, 3)
    DAYS_PAST_DUE_120 = typing___cast(ChargeOff.ReasonValue, 4)
    type___Reason = Reason

    ReversalReasonValue = typing___NewType('ReversalReasonValue', builtin___int)
    type___ReversalReasonValue = ReversalReasonValue
    ReversalReason: _ReversalReason
    class _ReversalReason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ChargeOff.ReversalReasonValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        GENERIC_ERROR = typing___cast(ChargeOff.ReversalReasonValue, 0)
        LAST_PAYMENT_APPLICATION = typing___cast(ChargeOff.ReversalReasonValue, 1)
    GENERIC_ERROR = typing___cast(ChargeOff.ReversalReasonValue, 0)
    LAST_PAYMENT_APPLICATION = typing___cast(ChargeOff.ReversalReasonValue, 1)
    type___ReversalReason = ReversalReason

    charge_off_reason: type___ChargeOff.ReasonValue = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def charge_off_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def charge_off_principal_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def charge_off_interest_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        charge_off_reason : typing___Optional[type___ChargeOff.ReasonValue] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        charge_off_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        charge_off_principal_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        charge_off_interest_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"charge_off_amount",b"charge_off_amount",u"charge_off_interest_amount",b"charge_off_interest_amount",u"charge_off_principal_amount",b"charge_off_principal_amount",u"charge_off_reason",b"charge_off_reason",u"created_at",b"created_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"charge_off_amount",b"charge_off_amount",u"charge_off_interest_amount",b"charge_off_interest_amount",u"charge_off_principal_amount",b"charge_off_principal_amount",u"charge_off_reason",b"charge_off_reason",u"created_at",b"created_at"]) -> None: ...
type___ChargeOff = ChargeOff

class Plan(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StatusValue = typing___NewType('StatusValue', builtin___int)
    type___StatusValue = StatusValue
    Status: _Status
    class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Plan.StatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        S_DO_NOT_USE = typing___cast(Plan.StatusValue, 0)
        PENDING = typing___cast(Plan.StatusValue, 1)
        ORIGINATED = typing___cast(Plan.StatusValue, 2)
        ALLOCATED = typing___cast(Plan.StatusValue, 3)
        CHARGED_OFF = typing___cast(Plan.StatusValue, 4)
        CLOSED = typing___cast(Plan.StatusValue, 10)
        CANCELED = typing___cast(Plan.StatusValue, 11)
        RENEWED = typing___cast(Plan.StatusValue, 12)
        PREPAID = typing___cast(Plan.StatusValue, 13)
        BREACHED = typing___cast(Plan.StatusValue, 14)
        WRITTEN_OFF = typing___cast(Plan.StatusValue, 15)
        CANCEL_PENDING = typing___cast(Plan.StatusValue, 16)
        TRANSFERRED = typing___cast(Plan.StatusValue, 17)
        DECLINED = typing___cast(Plan.StatusValue, 18)
    S_DO_NOT_USE = typing___cast(Plan.StatusValue, 0)
    PENDING = typing___cast(Plan.StatusValue, 1)
    ORIGINATED = typing___cast(Plan.StatusValue, 2)
    ALLOCATED = typing___cast(Plan.StatusValue, 3)
    CHARGED_OFF = typing___cast(Plan.StatusValue, 4)
    CLOSED = typing___cast(Plan.StatusValue, 10)
    CANCELED = typing___cast(Plan.StatusValue, 11)
    RENEWED = typing___cast(Plan.StatusValue, 12)
    PREPAID = typing___cast(Plan.StatusValue, 13)
    BREACHED = typing___cast(Plan.StatusValue, 14)
    WRITTEN_OFF = typing___cast(Plan.StatusValue, 15)
    CANCEL_PENDING = typing___cast(Plan.StatusValue, 16)
    TRANSFERRED = typing___cast(Plan.StatusValue, 17)
    DECLINED = typing___cast(Plan.StatusValue, 18)
    type___Status = Status

    RiskGradeValue = typing___NewType('RiskGradeValue', builtin___int)
    type___RiskGradeValue = RiskGradeValue
    RiskGrade: _RiskGrade
    class _RiskGrade(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Plan.RiskGradeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        R_DO_NOT_USE = typing___cast(Plan.RiskGradeValue, 0)
        A = typing___cast(Plan.RiskGradeValue, 13)
        A1 = typing___cast(Plan.RiskGradeValue, 1)
        A2 = typing___cast(Plan.RiskGradeValue, 2)
        B = typing___cast(Plan.RiskGradeValue, 14)
        B1 = typing___cast(Plan.RiskGradeValue, 3)
        B2 = typing___cast(Plan.RiskGradeValue, 4)
        C = typing___cast(Plan.RiskGradeValue, 15)
        C1 = typing___cast(Plan.RiskGradeValue, 5)
        C2 = typing___cast(Plan.RiskGradeValue, 6)
        D = typing___cast(Plan.RiskGradeValue, 16)
        D1 = typing___cast(Plan.RiskGradeValue, 7)
        D2 = typing___cast(Plan.RiskGradeValue, 8)
        E = typing___cast(Plan.RiskGradeValue, 17)
        E1 = typing___cast(Plan.RiskGradeValue, 9)
        E2 = typing___cast(Plan.RiskGradeValue, 10)
        E3 = typing___cast(Plan.RiskGradeValue, 19)
        E4 = typing___cast(Plan.RiskGradeValue, 20)
        F = typing___cast(Plan.RiskGradeValue, 11)
        F1 = typing___cast(Plan.RiskGradeValue, 21)
        F2 = typing___cast(Plan.RiskGradeValue, 22)
        F3 = typing___cast(Plan.RiskGradeValue, 23)
        N = typing___cast(Plan.RiskGradeValue, 12)
        NIL = typing___cast(Plan.RiskGradeValue, 18)
    R_DO_NOT_USE = typing___cast(Plan.RiskGradeValue, 0)
    A = typing___cast(Plan.RiskGradeValue, 13)
    A1 = typing___cast(Plan.RiskGradeValue, 1)
    A2 = typing___cast(Plan.RiskGradeValue, 2)
    B = typing___cast(Plan.RiskGradeValue, 14)
    B1 = typing___cast(Plan.RiskGradeValue, 3)
    B2 = typing___cast(Plan.RiskGradeValue, 4)
    C = typing___cast(Plan.RiskGradeValue, 15)
    C1 = typing___cast(Plan.RiskGradeValue, 5)
    C2 = typing___cast(Plan.RiskGradeValue, 6)
    D = typing___cast(Plan.RiskGradeValue, 16)
    D1 = typing___cast(Plan.RiskGradeValue, 7)
    D2 = typing___cast(Plan.RiskGradeValue, 8)
    E = typing___cast(Plan.RiskGradeValue, 17)
    E1 = typing___cast(Plan.RiskGradeValue, 9)
    E2 = typing___cast(Plan.RiskGradeValue, 10)
    E3 = typing___cast(Plan.RiskGradeValue, 19)
    E4 = typing___cast(Plan.RiskGradeValue, 20)
    F = typing___cast(Plan.RiskGradeValue, 11)
    F1 = typing___cast(Plan.RiskGradeValue, 21)
    F2 = typing___cast(Plan.RiskGradeValue, 22)
    F3 = typing___cast(Plan.RiskGradeValue, 23)
    N = typing___cast(Plan.RiskGradeValue, 12)
    NIL = typing___cast(Plan.RiskGradeValue, 18)
    type___RiskGrade = RiskGrade

    PaymentFrequencyValue = typing___NewType('PaymentFrequencyValue', builtin___int)
    type___PaymentFrequencyValue = PaymentFrequencyValue
    PaymentFrequency: _PaymentFrequency
    class _PaymentFrequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Plan.PaymentFrequencyValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PF_DO_NOT_USE = typing___cast(Plan.PaymentFrequencyValue, 0)
        MONTHLY = typing___cast(Plan.PaymentFrequencyValue, 1)
    PF_DO_NOT_USE = typing___cast(Plan.PaymentFrequencyValue, 0)
    MONTHLY = typing___cast(Plan.PaymentFrequencyValue, 1)
    type___PaymentFrequency = PaymentFrequency

    token: typing___Text = ...
    product_name: typing___Text = ...
    product_version: typing___Text = ...
    status: type___Plan.StatusValue = ...
    interest_rate_bps: builtin___float = ...
    apr_bps: builtin___float = ...
    number_payment_periods: builtin___float = ...
    customer_token: typing___Text = ...
    is_renewal: builtin___bool = ...
    payment_hold_rate: builtin___float = ...
    risk_grade: type___Plan.RiskGradeValue = ...
    tags: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    hold_rate_bps: builtin___float = ...
    payment_frequency: type___Plan.PaymentFrequencyValue = ...
    identity_token: typing___Text = ...
    plan_id: typing___Text = ...
    number_months_to_maturity: builtin___int = ...
    cra_eligible: builtin___bool = ...
    effective_hold_rate_bps: builtin___float = ...
    fund_plan_token: typing___Text = ...

    @property
    def financed_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def fee_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def payment_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def amortization_schedule_final_payment_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def amortization_schedule_interest_finance_charge(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def originated_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def allocated_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def closed_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def maturity_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def repayment_start_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def acceptance_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def required_payment_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def close_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def product(self) -> type___Product: ...

    @property
    def credit_limit_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        product_name : typing___Optional[typing___Text] = None,
        product_version : typing___Optional[typing___Text] = None,
        status : typing___Optional[type___Plan.StatusValue] = None,
        financed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        fee_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        interest_rate_bps : typing___Optional[builtin___float] = None,
        apr_bps : typing___Optional[builtin___float] = None,
        payment_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        number_payment_periods : typing___Optional[builtin___float] = None,
        remaining_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        customer_token : typing___Optional[typing___Text] = None,
        amortization_schedule_final_payment_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        amortization_schedule_interest_finance_charge : typing___Optional[squareup___common___currency_pb2___Money] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        originated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        allocated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        closed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        maturity_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        is_renewal : typing___Optional[builtin___bool] = None,
        repayment_start_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        payment_hold_rate : typing___Optional[builtin___float] = None,
        acceptance_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        risk_grade : typing___Optional[type___Plan.RiskGradeValue] = None,
        tags : typing___Optional[typing___Iterable[typing___Text]] = None,
        hold_rate_bps : typing___Optional[builtin___float] = None,
        payment_frequency : typing___Optional[type___Plan.PaymentFrequencyValue] = None,
        required_payment_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        identity_token : typing___Optional[typing___Text] = None,
        plan_id : typing___Optional[typing___Text] = None,
        close_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        number_months_to_maturity : typing___Optional[builtin___int] = None,
        cra_eligible : typing___Optional[builtin___bool] = None,
        product : typing___Optional[type___Product] = None,
        credit_limit_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        effective_hold_rate_bps : typing___Optional[builtin___float] = None,
        fund_plan_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acceptance_date",b"acceptance_date",u"allocated_at",b"allocated_at",u"amortization_schedule_final_payment_amount",b"amortization_schedule_final_payment_amount",u"amortization_schedule_interest_finance_charge",b"amortization_schedule_interest_finance_charge",u"apr_bps",b"apr_bps",u"close_amount",b"close_amount",u"closed_at",b"closed_at",u"cra_eligible",b"cra_eligible",u"created_at",b"created_at",u"credit_limit_amount",b"credit_limit_amount",u"customer_token",b"customer_token",u"effective_hold_rate_bps",b"effective_hold_rate_bps",u"fee_amount",b"fee_amount",u"financed_amount",b"financed_amount",u"fund_plan_token",b"fund_plan_token",u"hold_rate_bps",b"hold_rate_bps",u"identity_token",b"identity_token",u"interest_rate_bps",b"interest_rate_bps",u"is_renewal",b"is_renewal",u"maturity_at",b"maturity_at",u"number_months_to_maturity",b"number_months_to_maturity",u"number_payment_periods",b"number_payment_periods",u"originated_at",b"originated_at",u"payment_amount",b"payment_amount",u"payment_frequency",b"payment_frequency",u"payment_hold_rate",b"payment_hold_rate",u"plan_id",b"plan_id",u"product",b"product",u"product_name",b"product_name",u"product_version",b"product_version",u"remaining_balance",b"remaining_balance",u"repayment_start_date",b"repayment_start_date",u"required_payment_amount",b"required_payment_amount",u"risk_grade",b"risk_grade",u"status",b"status",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acceptance_date",b"acceptance_date",u"allocated_at",b"allocated_at",u"amortization_schedule_final_payment_amount",b"amortization_schedule_final_payment_amount",u"amortization_schedule_interest_finance_charge",b"amortization_schedule_interest_finance_charge",u"apr_bps",b"apr_bps",u"close_amount",b"close_amount",u"closed_at",b"closed_at",u"cra_eligible",b"cra_eligible",u"created_at",b"created_at",u"credit_limit_amount",b"credit_limit_amount",u"customer_token",b"customer_token",u"effective_hold_rate_bps",b"effective_hold_rate_bps",u"fee_amount",b"fee_amount",u"financed_amount",b"financed_amount",u"fund_plan_token",b"fund_plan_token",u"hold_rate_bps",b"hold_rate_bps",u"identity_token",b"identity_token",u"interest_rate_bps",b"interest_rate_bps",u"is_renewal",b"is_renewal",u"maturity_at",b"maturity_at",u"number_months_to_maturity",b"number_months_to_maturity",u"number_payment_periods",b"number_payment_periods",u"originated_at",b"originated_at",u"payment_amount",b"payment_amount",u"payment_frequency",b"payment_frequency",u"payment_hold_rate",b"payment_hold_rate",u"plan_id",b"plan_id",u"product",b"product",u"product_name",b"product_name",u"product_version",b"product_version",u"remaining_balance",b"remaining_balance",u"repayment_start_date",b"repayment_start_date",u"required_payment_amount",b"required_payment_amount",u"risk_grade",b"risk_grade",u"status",b"status",u"tags",b"tags",u"token",b"token"]) -> None: ...
type___Plan = Plan

class PlanMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...
    value: typing___Text = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name",u"value",b"value"]) -> None: ...
type___PlanMetadata = PlanMetadata

class PlanDelinquency(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PlanDelinquency.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PDT_DO_NOT_USE = typing___cast(PlanDelinquency.TypeValue, 0)
        PRIMARY = typing___cast(PlanDelinquency.TypeValue, 1)
        MONTHLY_STATEMENT = typing___cast(PlanDelinquency.TypeValue, 2)
    PDT_DO_NOT_USE = typing___cast(PlanDelinquency.TypeValue, 0)
    PRIMARY = typing___cast(PlanDelinquency.TypeValue, 1)
    MONTHLY_STATEMENT = typing___cast(PlanDelinquency.TypeValue, 2)
    type___Type = Type

    plan_token: typing___Text = ...
    type: type___PlanDelinquency.TypeValue = ...
    days_past_due: builtin___int = ...

    @property
    def as_of(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def non_due_balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def upcoming_due_balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def past_due_balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def upcoming_due_payable_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def upcoming_due_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        plan_token : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___PlanDelinquency.TypeValue] = None,
        as_of : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        non_due_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        upcoming_due_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        past_due_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        days_past_due : typing___Optional[builtin___int] = None,
        upcoming_due_payable_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        upcoming_due_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"as_of",b"as_of",u"days_past_due",b"days_past_due",u"non_due_balance",b"non_due_balance",u"past_due_balance",b"past_due_balance",u"plan_token",b"plan_token",u"type",b"type",u"upcoming_due_at",b"upcoming_due_at",u"upcoming_due_balance",b"upcoming_due_balance",u"upcoming_due_payable_at",b"upcoming_due_payable_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"as_of",b"as_of",u"days_past_due",b"days_past_due",u"non_due_balance",b"non_due_balance",u"past_due_balance",b"past_due_balance",u"plan_token",b"plan_token",u"type",b"type",u"upcoming_due_at",b"upcoming_due_at",u"upcoming_due_balance",b"upcoming_due_balance",u"upcoming_due_payable_at",b"upcoming_due_payable_at"]) -> None: ...
type___PlanDelinquency = PlanDelinquency

class Txn(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    type: typing___Text = ...

    @property
    def settlement_detail(self) -> type___SettlementDetail: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        settlement_detail : typing___Optional[type___SettlementDetail] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"settlement_detail",b"settlement_detail",u"token",b"token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"settlement_detail",b"settlement_detail",u"token",b"token",u"type",b"type"]) -> None: ...
type___Txn = Txn

class SettlementDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def to_payer(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SettlementInstruction]: ...

    @property
    def to_investor(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SettlementInstruction]: ...

    @property
    def to_borrower(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SettlementInstruction]: ...

    def __init__(self,
        *,
        to_payer : typing___Optional[typing___Iterable[type___SettlementInstruction]] = None,
        to_investor : typing___Optional[typing___Iterable[type___SettlementInstruction]] = None,
        to_borrower : typing___Optional[typing___Iterable[type___SettlementInstruction]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"to_borrower",b"to_borrower",u"to_investor",b"to_investor",u"to_payer",b"to_payer"]) -> None: ...
type___SettlementDetail = SettlementDetail

class SettlementInstruction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    entry_token: typing___Text = ...
    amount_cents: builtin___int = ...

    def __init__(self,
        *,
        entry_token : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"entry_token",b"entry_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"entry_token",b"entry_token"]) -> None: ...
type___SettlementInstruction = SettlementInstruction

class PlanPerformance(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    plan_token: typing___Text = ...
    fund_plan_token: typing___Text = ...
    days_past_due: builtin___int = ...
    forecasted_loss: builtin___float = ...
    days_past_due_30plus_at_plan_close: builtin___int = ...
    contiguous_delinquency_period_30plus_day_count: builtin___int = ...

    @property
    def estimated_completion_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def amount_past_due(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def last_payment_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def past_due_start_date(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def charge_off(self) -> type___ChargeOff: ...

    @property
    def contiguous_delinquency_period_30plus_started_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def next_due_time(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        plan_token : typing___Optional[typing___Text] = None,
        fund_plan_token : typing___Optional[typing___Text] = None,
        estimated_completion_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        days_past_due : typing___Optional[builtin___int] = None,
        amount_past_due : typing___Optional[squareup___common___currency_pb2___Money] = None,
        forecasted_loss : typing___Optional[builtin___float] = None,
        last_payment_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        past_due_start_date : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        days_past_due_30plus_at_plan_close : typing___Optional[builtin___int] = None,
        charge_off : typing___Optional[type___ChargeOff] = None,
        contiguous_delinquency_period_30plus_started_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        contiguous_delinquency_period_30plus_day_count : typing___Optional[builtin___int] = None,
        next_due_time : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_past_due",b"amount_past_due",u"charge_off",b"charge_off",u"contiguous_delinquency_period_30plus_day_count",b"contiguous_delinquency_period_30plus_day_count",u"contiguous_delinquency_period_30plus_started_at",b"contiguous_delinquency_period_30plus_started_at",u"days_past_due",b"days_past_due",u"days_past_due_30plus_at_plan_close",b"days_past_due_30plus_at_plan_close",u"estimated_completion_date",b"estimated_completion_date",u"forecasted_loss",b"forecasted_loss",u"fund_plan_token",b"fund_plan_token",u"last_payment_date",b"last_payment_date",u"next_due_time",b"next_due_time",u"past_due_start_date",b"past_due_start_date",u"plan_token",b"plan_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_past_due",b"amount_past_due",u"charge_off",b"charge_off",u"contiguous_delinquency_period_30plus_day_count",b"contiguous_delinquency_period_30plus_day_count",u"contiguous_delinquency_period_30plus_started_at",b"contiguous_delinquency_period_30plus_started_at",u"days_past_due",b"days_past_due",u"days_past_due_30plus_at_plan_close",b"days_past_due_30plus_at_plan_close",u"estimated_completion_date",b"estimated_completion_date",u"forecasted_loss",b"forecasted_loss",u"fund_plan_token",b"fund_plan_token",u"last_payment_date",b"last_payment_date",u"next_due_time",b"next_due_time",u"past_due_start_date",b"past_due_start_date",u"plan_token",b"plan_token"]) -> None: ...
type___PlanPerformance = PlanPerformance

class PlanPastDueSnapshot(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    plan_token: typing___Text = ...
    as_of_days_since_origination: builtin___int = ...
    amount_cents: builtin___int = ...
    days: builtin___int = ...

    @property
    def as_of_time(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        plan_token : typing___Optional[typing___Text] = None,
        as_of_time : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        as_of_days_since_origination : typing___Optional[builtin___int] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        days : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"as_of_days_since_origination",b"as_of_days_since_origination",u"as_of_time",b"as_of_time",u"days",b"days",u"plan_token",b"plan_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"as_of_days_since_origination",b"as_of_days_since_origination",u"as_of_time",b"as_of_time",u"days",b"days",u"plan_token",b"plan_token"]) -> None: ...
type___PlanPastDueSnapshot = PlanPastDueSnapshot

class PlanFilter(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    product_name: typing___Text = ...

    def __init__(self,
        *,
        product_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"product_name",b"product_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"product_name",b"product_name"]) -> None: ...
type___PlanFilter = PlanFilter

class PlanQuery(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def filter(self) -> type___PlanFilter: ...

    def __init__(self,
        *,
        filter : typing___Optional[type___PlanFilter] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"filter",b"filter"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter",b"filter"]) -> None: ...
type___PlanQuery = PlanQuery
