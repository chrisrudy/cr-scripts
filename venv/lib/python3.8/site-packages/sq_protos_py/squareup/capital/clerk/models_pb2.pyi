# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.common.universal_token_pb2 import (
    UniversalToken as squareup___common___universal_token_pb2___UniversalToken,
)

from typing import (
    Iterable as typing___Iterable,
    Mapping as typing___Mapping,
    MutableMapping as typing___MutableMapping,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

ErrorCodeValue = typing___NewType('ErrorCodeValue', builtin___int)
type___ErrorCodeValue = ErrorCodeValue
ErrorCode: _ErrorCode
class _ErrorCode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ErrorCodeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    EC_DO_NOT_USE = typing___cast(ErrorCodeValue, 0)
    CLERK_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1)
    CLERK_VENDOR_SERVICE_UNAVAILABLE = typing___cast(ErrorCodeValue, 2)
    CLERK_VENDOR_TIMEOUT = typing___cast(ErrorCodeValue, 3)
    CLERK_VENDOR_ERROR_UNKNOWN = typing___cast(ErrorCodeValue, 4)
    CLERK_INVALID_ACCESS = typing___cast(ErrorCodeValue, 5)
    CLERK_NO_RECORD_FOUND = typing___cast(ErrorCodeValue, 6)
    CLERK_INVALIDATED_RECORD = typing___cast(ErrorCodeValue, 7)
    CLERK_VENDOR_BAD_GATEWAY = typing___cast(ErrorCodeValue, 8)
    CLERK_FORGOTTEN_AT_USERS_REQUEST = typing___cast(ErrorCodeValue, 9)
    CLERK_VENDOR_TOO_MANY_REQUESTS = typing___cast(ErrorCodeValue, 10)
    CLERK_VENDOR_SOCKET_ERROR = typing___cast(ErrorCodeValue, 11)
    CLERK_FOUNDRY_ERROR = typing___cast(ErrorCodeValue, 12)
    CLERK_MISSING_ENTITY_TOKEN = typing___cast(ErrorCodeValue, 13)
    CLERK_MULTIPLE_ENTITY_TOKENS = typing___cast(ErrorCodeValue, 14)
    HTTP_400_BAD_REQUEST = typing___cast(ErrorCodeValue, 400)
    HTTP_401_UNAUTHORIZED = typing___cast(ErrorCodeValue, 401)
    HTTP_402_PAYMENT_REQUIRED = typing___cast(ErrorCodeValue, 402)
    HTTP_403_FORBIDDEN = typing___cast(ErrorCodeValue, 403)
    HTTP_404_NOT_FOUND = typing___cast(ErrorCodeValue, 404)
    HTTP_405_METHOD_NOT_ALLOWED = typing___cast(ErrorCodeValue, 405)
    HTTP_406_NOT_ACCEPTABLE = typing___cast(ErrorCodeValue, 406)
    HTTP_407_PROXY_AUTHENTICATION_REQUIRED = typing___cast(ErrorCodeValue, 407)
    HTTP_408_REQUEST_TIMEOUT = typing___cast(ErrorCodeValue, 408)
    HTTP_409_CONFLICT = typing___cast(ErrorCodeValue, 409)
    HTTP_410_GONE = typing___cast(ErrorCodeValue, 410)
    HTTP_411_LENGTH_REQUIRED = typing___cast(ErrorCodeValue, 411)
    HTTP_412_PRECONDITION_FAILED = typing___cast(ErrorCodeValue, 412)
    HTTP_413_PAYLOAD_TOO_LARGE = typing___cast(ErrorCodeValue, 413)
    HTTP_414_REQUEST_URI_TOO_LONG = typing___cast(ErrorCodeValue, 414)
    HTTP_415_UNSUPPORTED_MEDIA_TYPE = typing___cast(ErrorCodeValue, 415)
    HTTP_416_REQUEST_RANGE_NOT_SATISFIABLE = typing___cast(ErrorCodeValue, 416)
    HTTP_417_EXPECTATION_FAILED = typing___cast(ErrorCodeValue, 417)
    HTTP_418_IM_A_TEAPOT = typing___cast(ErrorCodeValue, 418)
    HTTP_412_MISDIRECTED_REQUEST = typing___cast(ErrorCodeValue, 421)
    HTTP_422_UNPROCESSABLE_ENTITY = typing___cast(ErrorCodeValue, 422)
    HTTP_423_LOCKED = typing___cast(ErrorCodeValue, 423)
    HTTP_424_FAILED_DEPENDENCY = typing___cast(ErrorCodeValue, 424)
    HTTP_426_UPGRADE_REQUIRED = typing___cast(ErrorCodeValue, 426)
    HTTP_428_PRECONDITION_REQUIRED = typing___cast(ErrorCodeValue, 428)
    HTTP_429_TOO_MANY_REQUESTS = typing___cast(ErrorCodeValue, 429)
    HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE = typing___cast(ErrorCodeValue, 431)
    HTTP_444_CONNECTION_CLOSED_WITHOUT_RESPONSE = typing___cast(ErrorCodeValue, 444)
    HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS = typing___cast(ErrorCodeValue, 451)
    HTTP_499_CLIENT_CLOSED_REQUEST = typing___cast(ErrorCodeValue, 499)
    HTTP_500_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 500)
    HTTP_501_NOT_IMPLEMENTED = typing___cast(ErrorCodeValue, 501)
    HTTP_502_BAD_GATEWAY = typing___cast(ErrorCodeValue, 502)
    HTTP_503_SERVICE_UNAVAILABLE = typing___cast(ErrorCodeValue, 503)
    HTTP_504_GATEWAY_TIMEOUT = typing___cast(ErrorCodeValue, 504)
    HTTP_505_HTTP_VERSION_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 505)
    HTTP_506_VARIANT_ALSO_NEGOTIATES = typing___cast(ErrorCodeValue, 506)
    HTTP_507_INSUFFICIENT_STORAGE = typing___cast(ErrorCodeValue, 507)
    HTTP_508_LOOP_DETECTED = typing___cast(ErrorCodeValue, 508)
    HTTP_510_NOT_EXTENDED = typing___cast(ErrorCodeValue, 510)
    HTTP_511_NETWORK_AUTHENTICATION_REQUIRED = typing___cast(ErrorCodeValue, 511)
    HTTP_599_NETWORK_CONNECT_TIMEOUT = typing___cast(ErrorCodeValue, 599)
    PLAID_ACCOUNTS_LIMIT = typing___cast(ErrorCodeValue, 1001)
    PLAID_ADDITION_LIMIT = typing___cast(ErrorCodeValue, 1002)
    PLAID_ASSET_REPORT_GENERATION_FAILED = typing___cast(ErrorCodeValue, 1003)
    PLAID_AUTH_LIMIT = typing___cast(ErrorCodeValue, 1004)
    PLAID_DATA_UNAVAILABLE = typing___cast(ErrorCodeValue, 1005)
    PLAID_IDENTITY_LIMIT = typing___cast(ErrorCodeValue, 1006)
    PLAID_INCOME_LIMIT = typing___cast(ErrorCodeValue, 1007)
    PLAID_INCORRECT_DEPOSIT_AMOUNTS = typing___cast(ErrorCodeValue, 1008)
    PLAID_INSIGHTS_NOT_ENABLED = typing___cast(ErrorCodeValue, 1009)
    PLAID_INSIGHTS_PREVIOUSLY_NOT_ENABLED = typing___cast(ErrorCodeValue, 1010)
    PLAID_INSTITUTION_DOWN = typing___cast(ErrorCodeValue, 1011)
    PLAID_INSTITUTION_NO_LONGER_SUPPORTED = typing___cast(ErrorCodeValue, 1012)
    PLAID_INSTITUTION_NOT_AVAILABLE = typing___cast(ErrorCodeValue, 1013)
    PLAID_INSTITUTION_NOT_RESPONDING = typing___cast(ErrorCodeValue, 1014)
    PLAID_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1015)
    PLAID_INVALID_ACCESS_TOKEN = typing___cast(ErrorCodeValue, 1016)
    PLAID_INVALID_ACCOUNT_ID = typing___cast(ErrorCodeValue, 1017)
    PLAID_INVALID_API_KEYS = typing___cast(ErrorCodeValue, 1018)
    PLAID_INVALID_BODY = typing___cast(ErrorCodeValue, 1019)
    PLAID_INVALID_CREDENTIALS = typing___cast(ErrorCodeValue, 1020)
    PLAID_INVALID_FIELD = typing___cast(ErrorCodeValue, 1021)
    PLAID_INVALID_HEADERS = typing___cast(ErrorCodeValue, 1022)
    PLAID_INVALID_INSTITUTION = typing___cast(ErrorCodeValue, 1023)
    PLAID_INVALID_MFA = typing___cast(ErrorCodeValue, 1024)
    PLAID_INVALID_PARENT = typing___cast(ErrorCodeValue, 1025)
    PLAID_INVALID_PRODUCT = typing___cast(ErrorCodeValue, 1026)
    PLAID_INVALID_PUBLIC_TOKEN = typing___cast(ErrorCodeValue, 1027)
    PLAID_INVALID_UPDATED_USERNAME = typing___cast(ErrorCodeValue, 1028)
    PLAID_ITEM_GET_LIMIT = typing___cast(ErrorCodeValue, 1029)
    PLAID_ITEM_LOCKED = typing___cast(ErrorCodeValue, 1030)
    PLAID_ITEM_LOGIN_REQUIRED = typing___cast(ErrorCodeValue, 1031)
    PLAID_ITEM_NO_ERROR = typing___cast(ErrorCodeValue, 1032)
    PLAID_ITEM_NO_VERIFICATION = typing___cast(ErrorCodeValue, 1033)
    PLAID_ITEM_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 1034)
    PLAID_MFA_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 1035)
    PLAID_MISSING_FIELDS = typing___cast(ErrorCodeValue, 1036)
    PLAID_NO_ACCOUNTS = typing___cast(ErrorCodeValue, 1037)
    PLAID_NO_AUTH_ACCOUNTS = typing___cast(ErrorCodeValue, 1038)
    PLAID_NOT_FOUND = typing___cast(ErrorCodeValue, 1039)
    PLAID_PLANNED_MAINTENANCE = typing___cast(ErrorCodeValue, 1040)
    PLAID_PRODUCT_NOT_ENABLED = typing___cast(ErrorCodeValue, 1041)
    PLAID_PRODUCT_NOT_READY = typing___cast(ErrorCodeValue, 1042)
    PLAID_PRODUCTS_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 1043)
    PLAID_RATE_LIMIT = typing___cast(ErrorCodeValue, 1044)
    PLAID_SANDBOX_ONLY = typing___cast(ErrorCodeValue, 1045)
    PLAID_TOO_MANY_VERIFICATION_ATTEMPTS = typing___cast(ErrorCodeValue, 1046)
    PLAID_TRANSACTIONS_LIMIT = typing___cast(ErrorCodeValue, 1047)
    PLAID_UNAUTHORIZED_ENVIRONMENT = typing___cast(ErrorCodeValue, 1048)
    PLAID_UNKNOWN_FIELDS = typing___cast(ErrorCodeValue, 1049)
    PLAID_USER_SETUP_REQUIRED = typing___cast(ErrorCodeValue, 1050)
    PLAID_VERIFICATION_EXPIRED = typing___cast(ErrorCodeValue, 1051)
    PLAID_NO_EMPLOYER_ACCOUNTS = typing___cast(ErrorCodeValue, 1052)
    EXPERIAN_REDIRECT = typing___cast(ErrorCodeValue, 2001)
    EXPERIAN_REQUEST_VALIDATION_ERROR = typing___cast(ErrorCodeValue, 2002)
    EXPERIAN_INCORRECT_PASSWORD = typing___cast(ErrorCodeValue, 2007)
    EXPERIAN_UNABLE_TO_STANDARDIZE_ADDRESS = typing___cast(ErrorCodeValue, 2008)
    TRANS_UNION_CA_ABNORMAL_TERMINATION_DUE_TO_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 3001)
    TRANS_UNION_CA_INTERNAL_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 3002)
    TRANS_UNION_CA_INVALID_ADDRESS_SEGMENT = typing___cast(ErrorCodeValue, 3003)
    TRANS_UNION_CA_INVALID_AUTH = typing___cast(ErrorCodeValue, 3004)
    TRANS_UNION_CA_INVALID_NAME_SEGMENT = typing___cast(ErrorCodeValue, 3005)
    TRANS_UNION_CA_INVALID_PERSONAL_INFORMATION_SEGMENT = typing___cast(ErrorCodeValue, 3006)
    TRANS_UNION_CA_INVALID_PHONE_NUMBER_SEGMENT = typing___cast(ErrorCodeValue, 3007)
    TRANS_UNION_CA_INVALID_PRODUCT_CODE = typing___cast(ErrorCodeValue, 3008)
    TRANS_UNION_CA_INVALID_REQUEST_PRODUCT_SEGMENT = typing___cast(ErrorCodeValue, 3009)
    TRANS_UNION_CA_INVALID_SUBJECT_FIRST_NAME = typing___cast(ErrorCodeValue, 3010)
    TRANS_UNION_CA_INVALID_SUBJECT_SURNAME = typing___cast(ErrorCodeValue, 3011)
    TRANS_UNION_CA_UNAUTHORIZED_PRODUCT_CODE = typing___cast(ErrorCodeValue, 3012)
    TRANS_UNION_CA_SUBJECT_RECORD_TOO_LONG = typing___cast(ErrorCodeValue, 3013)
    TRANS_UNION_CA_SYSTEM_BUSY = typing___cast(ErrorCodeValue, 3014)
    TRANS_UNION_CA_SYSTEM_TIMED_OUT = typing___cast(ErrorCodeValue, 3015)
    TRANS_UNION_CA_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 3016)
    LEXIS_NEXIS_NEED_DPPA_RIGHTS = typing___cast(ErrorCodeValue, 5001)
    LEXIS_NEXIS_NEED_DID_OR_BDID_OR_UNIQUE_IDENTIFIER_OR_ST_PLUS_VEHICLE_NUMBER = typing___cast(ErrorCodeValue, 5002)
    LEXIS_NEXIS_SEARCH_IS_TOO_BROAD = typing___cast(ErrorCodeValue, 5003)
    LEXIS_NEXIS_NEED_LICENSE_STATE_AND_NUMBER = typing___cast(ErrorCodeValue, 5004)
    LEXIS_NEXIS_SOAP_CONNECTION_ERROR_OR_DATABASE_ERROR = typing___cast(ErrorCodeValue, 5005)
    LEXIS_NEXIS_TOO_MANY_SUBJECTS_FOUND = typing___cast(ErrorCodeValue, 5006)
    LEXIS_NEXIS_INSUFFICIENT_INPUT = typing___cast(ErrorCodeValue, 5007)
    LEXIS_NEXIS_NEED_AT_LEAST_THREE_LEADING_CHARACTERS = typing___cast(ErrorCodeValue, 5008)
    LEXIS_NEXIS_INCOMPLETE_ADDRESS = typing___cast(ErrorCodeValue, 5009)
    LEXIS_NEXIS_HIGHLY_POPULATED_ADDRESS = typing___cast(ErrorCodeValue, 5010)
    LEXIS_NEXIS_BAD_REQUEST = typing___cast(ErrorCodeValue, 5011)
    LEXIS_NEXIS_UNAUTHORIZED = typing___cast(ErrorCodeValue, 5012)
    LEXIS_NEXIS_FORBIDDEN = typing___cast(ErrorCodeValue, 5013)
    LEXIS_NEXIS_NOT_FOUND = typing___cast(ErrorCodeValue, 5014)
    LEXIS_NEXIS_METHOD_NOT_ALLOWED = typing___cast(ErrorCodeValue, 5015)
    LEXIS_NEXIS_NOT_ACCEPTABLE = typing___cast(ErrorCodeValue, 5016)
    LEXIS_NEXIS_PROXY_AUTHENTICATION_REQUIRED = typing___cast(ErrorCodeValue, 5017)
    LEXIS_NEXIS_REQUEST_TIMED_OUT = typing___cast(ErrorCodeValue, 5018)
    LEXIS_NEXIS_CONFLICT = typing___cast(ErrorCodeValue, 5019)
    LEXIS_NEXIS_GONE = typing___cast(ErrorCodeValue, 5020)
    LEXIS_NEXIS_LENGTH_REQUIRED = typing___cast(ErrorCodeValue, 5021)
    LEXIS_NEXIS_PRECONDITION_FAILED = typing___cast(ErrorCodeValue, 5022)
    LEXIS_NEXIS_REQUEST_ENTITY_TOO_LARGE = typing___cast(ErrorCodeValue, 5023)
    LEXIS_NEXIS_REQUEST_URL_TOO_LONG = typing___cast(ErrorCodeValue, 5024)
    LEXIS_NEXIS_UNSUPPORTED_MEDIA_TYPE = typing___cast(ErrorCodeValue, 5025)
    LEXIS_NEXIS_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 5026)
    LEXIS_NEXIS_NOT_IMPLEMENTED = typing___cast(ErrorCodeValue, 5027)
    LEXIS_NEXIS_BAD_GATEWAY = typing___cast(ErrorCodeValue, 5028)
    LEXIS_NEXIS_SERVER_UNAVAILABLE = typing___cast(ErrorCodeValue, 5029)
    LEXIS_NEXIS_GATEWAY_TIMEOUT = typing___cast(ErrorCodeValue, 5030)
    LEXIS_NEXIS_HTTP_VERSION_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 5031)
    EQUIFAX_AU_SOAP_ENV_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 6001)
    EQUIFAX_AU_PRODUCT_COMPONENT_UNAVAILABLE_ERROR = typing___cast(ErrorCodeValue, 6002)
    EQUIFAX_AU_EXTERNAL_PRODUCT_DEPENDENCY_UNAVAILABLE_ERROR = typing___cast(ErrorCodeValue, 6003)
    EQUIFAX_AU_REQUEST_CONFIGURATION_ERROR = typing___cast(ErrorCodeValue, 6004)
    EQUIFAX_AU_REQUEST_VALIDATION_ERROR = typing___cast(ErrorCodeValue, 6005)
    EQUIFAX_AU_TICKET_RESPONSE_ERROR = typing___cast(ErrorCodeValue, 6006)
    EQUIFAX_AU_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 6007)
    EKATA_AUTH_ERROR = typing___cast(ErrorCodeValue, 7001)
    EKATA_BAD_REQUEST = typing___cast(ErrorCodeValue, 7002)
    EKATA_INPUT_ERROR = typing___cast(ErrorCodeValue, 7003)
    EKATA_INPUT_FIELD_ERROR = typing___cast(ErrorCodeValue, 7004)
    EKATA_INTERNAL_ERROR = typing___cast(ErrorCodeValue, 7005)
    EKATA_INVALID_PARAMETERS_ERROR = typing___cast(ErrorCodeValue, 7006)
    EKATA_NOT_AUTHORIZED = typing___cast(ErrorCodeValue, 7007)
    EKATA_PAYMENT_REQUIRED = typing___cast(ErrorCodeValue, 7008)
    EKATA_QUOTA_EXCEEDED_ERROR = typing___cast(ErrorCodeValue, 7009)
    EKATA_SERVER_UNAVAILABLE = typing___cast(ErrorCodeValue, 7010)
    EKATA_TOO_MANY_REQUESTS = typing___cast(ErrorCodeValue, 7011)
    CREDITSAFE_UK_INTERNAL_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 8001)
    CREDITSAFE_UK_TIMED_OUT = typing___cast(ErrorCodeValue, 8002)
    CREDITSAFE_UK_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 8003)
    CREDITSAFE_UK_SOAP_CLIENT_REQUEST_ERROR = typing___cast(ErrorCodeValue, 8004)
    CREDITSAFE_UK_SOAP_CLIENT_SCHEMA_ERROR = typing___cast(ErrorCodeValue, 8005)
    CREDITSAFE_UK_SOAP_SERVER_REQUEST_ERROR = typing___cast(ErrorCodeValue, 8006)
    CREDITSAFE_UK_SOAP_SERVER_SCHEMA_ERROR = typing___cast(ErrorCodeValue, 8007)
    NEUSTAR_GENERAL_FAILURE_ERROR = typing___cast(ErrorCodeValue, 9001)
    NEUSTAR_MISSING_CUSTOMER_RECORD_ERROR = typing___cast(ErrorCodeValue, 9002)
    NUESTAR_DATA_UNAVAILABLE_ERROR = typing___cast(ErrorCodeValue, 9003)
    NEUSTAR_TASK_REFUSED_ERROR = typing___cast(ErrorCodeValue, 9004)
    NEUSTAR_QUEUE_FULL_ERROR = typing___cast(ErrorCodeValue, 9005)
    NEUSTAR_INVALID_EID_ERROR = typing___cast(ErrorCodeValue, 9006)
    NEUSTAR_TIMER_EXPIRED_ERROR = typing___cast(ErrorCodeValue, 9007)
    NEUSTAR_SYSTEM_NOT_RESPONDING_ERROR = typing___cast(ErrorCodeValue, 9008)
    NEUSTAR_UNAUTHORIZED_REQUEST_ERROR = typing___cast(ErrorCodeValue, 9009)
    NEUSTAR_ROUTING_APPLICATION_ERROR = typing___cast(ErrorCodeValue, 9010)
    NEUSTAR_INCOMPATIBLE_VERSION_ERROR = typing___cast(ErrorCodeValue, 9011)
    NEUSTAR_LOCAL_TIMER_EXPIRED_ERROR = typing___cast(ErrorCodeValue, 9012)
    NEUSTAR_NO_PATH_TO_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 9013)
    NEUSTAR_AMBIGUOUS_QUERY_ERROR = typing___cast(ErrorCodeValue, 9014)
    NEUSTAR_INVALID_OR_MISSING_PARAMETER_ERROR = typing___cast(ErrorCodeValue, 9015)
    NEUSTAR_OTHER_ERROR = typing___cast(ErrorCodeValue, 9016)
    NEUSTAR_BAD_REQUEST = typing___cast(ErrorCodeValue, 9017)
    NEUSTAR_FORBIDDEN = typing___cast(ErrorCodeValue, 9018)
    NEUSTAR_INTERNAL_ERROR = typing___cast(ErrorCodeValue, 9019)
    EMAILAGE_INVALID_INPUT_PARAMETER = typing___cast(ErrorCodeValue, 10001)
    EMAILAGE_INVALID_OR_EXPIRED_TOKEN = typing___cast(ErrorCodeValue, 10002)
    EMAILAGE_INVALID_OAUTH_REQUEST = typing___cast(ErrorCodeValue, 10003)
    EMAILAGE_FILE_OR_FOLDER_NOT_FOUND = typing___cast(ErrorCodeValue, 10004)
    EMAILAGE_REQUEST_METHOD_NOT_EXPECTED = typing___cast(ErrorCodeValue, 10005)
    EMAILAGE_EXCEEDED_THROTTLE_LIMIT = typing___cast(ErrorCodeValue, 10006)
    EMAILAGE_AUTHENTICATION_ERROR_SIGNATURE_MISMATCH = typing___cast(ErrorCodeValue, 10007)
    EMAILAGE_AUTHENTICATION_ERROR_ACCOUNT_INACTIVE = typing___cast(ErrorCodeValue, 10008)
    EMAILAGE_AUTHENTICATION_ERROR_ACCOUNT_EXPIRED = typing___cast(ErrorCodeValue, 10009)
    EMAILAGE_AUTHENTICATION_ERROR_QUERY_CREDITS = typing___cast(ErrorCodeValue, 10010)
    EMAILAGE_AUTHENTICATION_ERROR_GENERAL = typing___cast(ErrorCodeValue, 10011)
    EMAILAGE_INPUT_PARAMETER_NOT_PROVIDED = typing___cast(ErrorCodeValue, 10012)
    EMAILAGE_MALFORMED_PARAMETER = typing___cast(ErrorCodeValue, 10013)
    EMAILAGE_AUTHENTICATION_ERROR_INVALID_TIMESTAMP = typing___cast(ErrorCodeValue, 10014)
    EMAILAGE_AUTHENTICATION_ERROR_INVALID_NONCE = typing___cast(ErrorCodeValue, 10015)
    EMAILAGE_INVALID_PARTNER_ID = typing___cast(ErrorCodeValue, 10016)
    EMAILAGE_INVALID_CUSTOMER_IDENTIFIER_ID = typing___cast(ErrorCodeValue, 10017)
    EMAILAGE_INVALID_USER_EMAIL = typing___cast(ErrorCodeValue, 10018)
    EMAILAGE_USER_DEPARTMENT_MISMATCH = typing___cast(ErrorCodeValue, 10019)
    EMAILAGE_CONSUMER_KEY_NOT_FOUND = typing___cast(ErrorCodeValue, 10020)
    EMAILAGE_NO_ACCOUNT_FOR_CONSUMER_KEY = typing___cast(ErrorCodeValue, 10021)
    EMAILAGE_AUTHENTICATION_ERROR_INVALID_SIGNATURE_METHOD = typing___cast(ErrorCodeValue, 10022)
    EMAILAGE_EXCEEDED_MAXIMUM_QUERY_PARAMETERS = typing___cast(ErrorCodeValue, 10023)
    EMAILAGE_BAD_REQUEST = typing___cast(ErrorCodeValue, 10024)
    EMAILAGE_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 10025)
    FINICITY_ACCOUNT_CLOSED_ERROR = typing___cast(ErrorCodeValue, 11000)
    FINICITY_ACCOUNT_CURRENTLY_AGGREGATING_ERROR = typing___cast(ErrorCodeValue, 11001)
    FINICITY_ACCOUNT_NO_LONGER_AVAILABLE_ERROR = typing___cast(ErrorCodeValue, 11002)
    FINICITY_BANK_REQUIRES_ONE_TIME_PASSCODE_ERROR = typing___cast(ErrorCodeValue, 11003)
    FINICITY_CONFLICT_ERROR = typing___cast(ErrorCodeValue, 11004)
    FINICITY_CUSTOMER_LANGUAGE_NOT_SUPPORTED_ERROR = typing___cast(ErrorCodeValue, 11005)
    FINICITY_DUPLICATE_ACCOUNT_ERROR = typing___cast(ErrorCodeValue, 11006)
    FINICITY_EXPIRED_AUTH_TOKEN_ERROR = typing___cast(ErrorCodeValue, 11007)
    FINICITY_EXPIRED_MFA_SESSION_ERROR = typing___cast(ErrorCodeValue, 11008)
    FINICITY_INSTITUTION_AGGREGATIONS_NOT_SUPPORTED_ERROR = typing___cast(ErrorCodeValue, 11009)
    FINICITY_INSTITUTION_DOWN_FOR_MAINTENANCE_ERROR = typing___cast(ErrorCodeValue, 11010)
    FINICITY_INSTITUTION_SPECIFIC_USER_OR_GROUP_ERROR = typing___cast(ErrorCodeValue, 11011)
    FINICITY_INVALID_ACCOUNT_TYPE_ERROR = typing___cast(ErrorCodeValue, 11012)
    FINICITY_INVALID_CREDENTIALS_ERROR = typing___cast(ErrorCodeValue, 11013)
    FINICITY_INVALID_MFA_SESSION_ERROR = typing___cast(ErrorCodeValue, 11014)
    FINICITY_INVALID_USERNAME_ERROR = typing___cast(ErrorCodeValue, 11015)
    FINICITY_MISSING_OR_INCORRECT_MFA_ANSWER_ERROR = typing___cast(ErrorCodeValue, 11016)
    FINICITY_MISSING_PARAMETER_ERROR = typing___cast(ErrorCodeValue, 11017)
    FINICITY_NEW_INSTITUTION_BEING_CREATED_ERROR = typing___cast(ErrorCodeValue, 11018)
    FINICITY_PROBLEM_CONNECTING_TO_INSTITUTION_ERROR = typing___cast(ErrorCodeValue, 11019)
    FINICITY_REPORT_CURRENTLY_GENERATING_ERROR = typing___cast(ErrorCodeValue, 11020)
    FINICITY_USER_ACTION_REQUIRED_ERROR = typing___cast(ErrorCodeValue, 11021)
    FINICITY_NO_RECORD_FOUND_ERROR = typing___cast(ErrorCodeValue, 11022)
    FINICITY_FILE_LOCKED_AT_CONSUMERS_REQUEST_ERROR = typing___cast(ErrorCodeValue, 11023)
    FINICITY_INVALID_JSON_RESPONSE_BODY_ERROR = typing___cast(ErrorCodeValue, 11024)
    SENTILINK_BAD_REQUEST_ERROR = typing___cast(ErrorCodeValue, 1200)
    SENTILINK_UNAUTHORIZED_ERROR = typing___cast(ErrorCodeValue, 1201)
    SENTILINK_FORBIDDEN_ERROR = typing___cast(ErrorCodeValue, 1202)
    SENTILINK_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1203)
    SENTILINK_METHOD_NOT_ALLOWED_ERROR = typing___cast(ErrorCodeValue, 1204)
    SENTILINK_NOT_ACCEPTABLE_ERROR = typing___cast(ErrorCodeValue, 1205)
    SENTILINK_GONE_ERROR = typing___cast(ErrorCodeValue, 1206)
    SENTILINK_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1207)
    SENTILINK_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 1208)
    MITEK_UNAUTHORIZED_ERROR = typing___cast(ErrorCodeValue, 1300)
    MITEK_BAD_REQUEST_ERROR = typing___cast(ErrorCodeValue, 1301)
    MITEK_FORBIDDEN_ERROR = typing___cast(ErrorCodeValue, 1302)
    MITEK_REQUEST_TIMED_OUT_ERROR = typing___cast(ErrorCodeValue, 1303)
    MITEK_UNSUPPORTED_MEDIA_TYPE_ERROR = typing___cast(ErrorCodeValue, 1304)
    MITEK_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1305)
    MITEK_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1306)
    MITEK_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 1307)
    OCROLUS_AUTHENTICATION_ERROR = typing___cast(ErrorCodeValue, 1400)
    OCROLUS_REQUEST_VALIDATION_ERROR = typing___cast(ErrorCodeValue, 1401)
    OCROLUS_BOOK_PERMISSION_ACCESS_ERROR = typing___cast(ErrorCodeValue, 1402)
    OCROLUS_DOC_PERMISSION_ACCESS_ERROR = typing___cast(ErrorCodeValue, 1403)
    OCROLUS_BOOK_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1404)
    OCROLUS_BOOK_ALREADY_EXISTS_ERROR = typing___cast(ErrorCodeValue, 1405)
    OCROLUS_FORM_TYPE_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1406)
    OCROLUS_IMAGE_GROUP_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1407)
    OCROLUS_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1408)
    OCROLUS_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 1409)
    OCROLUS_INVALID_PDF_ERROR = typing___cast(ErrorCodeValue, 1410)
    OCROLUS_UPLOAD_EXCEEDED_PAGE_LIMIT_ERROR = typing___cast(ErrorCodeValue, 1411)
    OCROLUS_UPLOADED_FILE_ALREADY_EXISTS_ERROR = typing___cast(ErrorCodeValue, 1412)
    OCROLUS_INVALID_IMAGE_ERROR = typing___cast(ErrorCodeValue, 1413)
    OCROLUS_ALL_FORMS_REJECTED_ERROR = typing___cast(ErrorCodeValue, 1414)
EC_DO_NOT_USE = typing___cast(ErrorCodeValue, 0)
CLERK_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1)
CLERK_VENDOR_SERVICE_UNAVAILABLE = typing___cast(ErrorCodeValue, 2)
CLERK_VENDOR_TIMEOUT = typing___cast(ErrorCodeValue, 3)
CLERK_VENDOR_ERROR_UNKNOWN = typing___cast(ErrorCodeValue, 4)
CLERK_INVALID_ACCESS = typing___cast(ErrorCodeValue, 5)
CLERK_NO_RECORD_FOUND = typing___cast(ErrorCodeValue, 6)
CLERK_INVALIDATED_RECORD = typing___cast(ErrorCodeValue, 7)
CLERK_VENDOR_BAD_GATEWAY = typing___cast(ErrorCodeValue, 8)
CLERK_FORGOTTEN_AT_USERS_REQUEST = typing___cast(ErrorCodeValue, 9)
CLERK_VENDOR_TOO_MANY_REQUESTS = typing___cast(ErrorCodeValue, 10)
CLERK_VENDOR_SOCKET_ERROR = typing___cast(ErrorCodeValue, 11)
CLERK_FOUNDRY_ERROR = typing___cast(ErrorCodeValue, 12)
CLERK_MISSING_ENTITY_TOKEN = typing___cast(ErrorCodeValue, 13)
CLERK_MULTIPLE_ENTITY_TOKENS = typing___cast(ErrorCodeValue, 14)
HTTP_400_BAD_REQUEST = typing___cast(ErrorCodeValue, 400)
HTTP_401_UNAUTHORIZED = typing___cast(ErrorCodeValue, 401)
HTTP_402_PAYMENT_REQUIRED = typing___cast(ErrorCodeValue, 402)
HTTP_403_FORBIDDEN = typing___cast(ErrorCodeValue, 403)
HTTP_404_NOT_FOUND = typing___cast(ErrorCodeValue, 404)
HTTP_405_METHOD_NOT_ALLOWED = typing___cast(ErrorCodeValue, 405)
HTTP_406_NOT_ACCEPTABLE = typing___cast(ErrorCodeValue, 406)
HTTP_407_PROXY_AUTHENTICATION_REQUIRED = typing___cast(ErrorCodeValue, 407)
HTTP_408_REQUEST_TIMEOUT = typing___cast(ErrorCodeValue, 408)
HTTP_409_CONFLICT = typing___cast(ErrorCodeValue, 409)
HTTP_410_GONE = typing___cast(ErrorCodeValue, 410)
HTTP_411_LENGTH_REQUIRED = typing___cast(ErrorCodeValue, 411)
HTTP_412_PRECONDITION_FAILED = typing___cast(ErrorCodeValue, 412)
HTTP_413_PAYLOAD_TOO_LARGE = typing___cast(ErrorCodeValue, 413)
HTTP_414_REQUEST_URI_TOO_LONG = typing___cast(ErrorCodeValue, 414)
HTTP_415_UNSUPPORTED_MEDIA_TYPE = typing___cast(ErrorCodeValue, 415)
HTTP_416_REQUEST_RANGE_NOT_SATISFIABLE = typing___cast(ErrorCodeValue, 416)
HTTP_417_EXPECTATION_FAILED = typing___cast(ErrorCodeValue, 417)
HTTP_418_IM_A_TEAPOT = typing___cast(ErrorCodeValue, 418)
HTTP_412_MISDIRECTED_REQUEST = typing___cast(ErrorCodeValue, 421)
HTTP_422_UNPROCESSABLE_ENTITY = typing___cast(ErrorCodeValue, 422)
HTTP_423_LOCKED = typing___cast(ErrorCodeValue, 423)
HTTP_424_FAILED_DEPENDENCY = typing___cast(ErrorCodeValue, 424)
HTTP_426_UPGRADE_REQUIRED = typing___cast(ErrorCodeValue, 426)
HTTP_428_PRECONDITION_REQUIRED = typing___cast(ErrorCodeValue, 428)
HTTP_429_TOO_MANY_REQUESTS = typing___cast(ErrorCodeValue, 429)
HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE = typing___cast(ErrorCodeValue, 431)
HTTP_444_CONNECTION_CLOSED_WITHOUT_RESPONSE = typing___cast(ErrorCodeValue, 444)
HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS = typing___cast(ErrorCodeValue, 451)
HTTP_499_CLIENT_CLOSED_REQUEST = typing___cast(ErrorCodeValue, 499)
HTTP_500_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 500)
HTTP_501_NOT_IMPLEMENTED = typing___cast(ErrorCodeValue, 501)
HTTP_502_BAD_GATEWAY = typing___cast(ErrorCodeValue, 502)
HTTP_503_SERVICE_UNAVAILABLE = typing___cast(ErrorCodeValue, 503)
HTTP_504_GATEWAY_TIMEOUT = typing___cast(ErrorCodeValue, 504)
HTTP_505_HTTP_VERSION_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 505)
HTTP_506_VARIANT_ALSO_NEGOTIATES = typing___cast(ErrorCodeValue, 506)
HTTP_507_INSUFFICIENT_STORAGE = typing___cast(ErrorCodeValue, 507)
HTTP_508_LOOP_DETECTED = typing___cast(ErrorCodeValue, 508)
HTTP_510_NOT_EXTENDED = typing___cast(ErrorCodeValue, 510)
HTTP_511_NETWORK_AUTHENTICATION_REQUIRED = typing___cast(ErrorCodeValue, 511)
HTTP_599_NETWORK_CONNECT_TIMEOUT = typing___cast(ErrorCodeValue, 599)
PLAID_ACCOUNTS_LIMIT = typing___cast(ErrorCodeValue, 1001)
PLAID_ADDITION_LIMIT = typing___cast(ErrorCodeValue, 1002)
PLAID_ASSET_REPORT_GENERATION_FAILED = typing___cast(ErrorCodeValue, 1003)
PLAID_AUTH_LIMIT = typing___cast(ErrorCodeValue, 1004)
PLAID_DATA_UNAVAILABLE = typing___cast(ErrorCodeValue, 1005)
PLAID_IDENTITY_LIMIT = typing___cast(ErrorCodeValue, 1006)
PLAID_INCOME_LIMIT = typing___cast(ErrorCodeValue, 1007)
PLAID_INCORRECT_DEPOSIT_AMOUNTS = typing___cast(ErrorCodeValue, 1008)
PLAID_INSIGHTS_NOT_ENABLED = typing___cast(ErrorCodeValue, 1009)
PLAID_INSIGHTS_PREVIOUSLY_NOT_ENABLED = typing___cast(ErrorCodeValue, 1010)
PLAID_INSTITUTION_DOWN = typing___cast(ErrorCodeValue, 1011)
PLAID_INSTITUTION_NO_LONGER_SUPPORTED = typing___cast(ErrorCodeValue, 1012)
PLAID_INSTITUTION_NOT_AVAILABLE = typing___cast(ErrorCodeValue, 1013)
PLAID_INSTITUTION_NOT_RESPONDING = typing___cast(ErrorCodeValue, 1014)
PLAID_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1015)
PLAID_INVALID_ACCESS_TOKEN = typing___cast(ErrorCodeValue, 1016)
PLAID_INVALID_ACCOUNT_ID = typing___cast(ErrorCodeValue, 1017)
PLAID_INVALID_API_KEYS = typing___cast(ErrorCodeValue, 1018)
PLAID_INVALID_BODY = typing___cast(ErrorCodeValue, 1019)
PLAID_INVALID_CREDENTIALS = typing___cast(ErrorCodeValue, 1020)
PLAID_INVALID_FIELD = typing___cast(ErrorCodeValue, 1021)
PLAID_INVALID_HEADERS = typing___cast(ErrorCodeValue, 1022)
PLAID_INVALID_INSTITUTION = typing___cast(ErrorCodeValue, 1023)
PLAID_INVALID_MFA = typing___cast(ErrorCodeValue, 1024)
PLAID_INVALID_PARENT = typing___cast(ErrorCodeValue, 1025)
PLAID_INVALID_PRODUCT = typing___cast(ErrorCodeValue, 1026)
PLAID_INVALID_PUBLIC_TOKEN = typing___cast(ErrorCodeValue, 1027)
PLAID_INVALID_UPDATED_USERNAME = typing___cast(ErrorCodeValue, 1028)
PLAID_ITEM_GET_LIMIT = typing___cast(ErrorCodeValue, 1029)
PLAID_ITEM_LOCKED = typing___cast(ErrorCodeValue, 1030)
PLAID_ITEM_LOGIN_REQUIRED = typing___cast(ErrorCodeValue, 1031)
PLAID_ITEM_NO_ERROR = typing___cast(ErrorCodeValue, 1032)
PLAID_ITEM_NO_VERIFICATION = typing___cast(ErrorCodeValue, 1033)
PLAID_ITEM_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 1034)
PLAID_MFA_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 1035)
PLAID_MISSING_FIELDS = typing___cast(ErrorCodeValue, 1036)
PLAID_NO_ACCOUNTS = typing___cast(ErrorCodeValue, 1037)
PLAID_NO_AUTH_ACCOUNTS = typing___cast(ErrorCodeValue, 1038)
PLAID_NOT_FOUND = typing___cast(ErrorCodeValue, 1039)
PLAID_PLANNED_MAINTENANCE = typing___cast(ErrorCodeValue, 1040)
PLAID_PRODUCT_NOT_ENABLED = typing___cast(ErrorCodeValue, 1041)
PLAID_PRODUCT_NOT_READY = typing___cast(ErrorCodeValue, 1042)
PLAID_PRODUCTS_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 1043)
PLAID_RATE_LIMIT = typing___cast(ErrorCodeValue, 1044)
PLAID_SANDBOX_ONLY = typing___cast(ErrorCodeValue, 1045)
PLAID_TOO_MANY_VERIFICATION_ATTEMPTS = typing___cast(ErrorCodeValue, 1046)
PLAID_TRANSACTIONS_LIMIT = typing___cast(ErrorCodeValue, 1047)
PLAID_UNAUTHORIZED_ENVIRONMENT = typing___cast(ErrorCodeValue, 1048)
PLAID_UNKNOWN_FIELDS = typing___cast(ErrorCodeValue, 1049)
PLAID_USER_SETUP_REQUIRED = typing___cast(ErrorCodeValue, 1050)
PLAID_VERIFICATION_EXPIRED = typing___cast(ErrorCodeValue, 1051)
PLAID_NO_EMPLOYER_ACCOUNTS = typing___cast(ErrorCodeValue, 1052)
EXPERIAN_REDIRECT = typing___cast(ErrorCodeValue, 2001)
EXPERIAN_REQUEST_VALIDATION_ERROR = typing___cast(ErrorCodeValue, 2002)
EXPERIAN_INCORRECT_PASSWORD = typing___cast(ErrorCodeValue, 2007)
EXPERIAN_UNABLE_TO_STANDARDIZE_ADDRESS = typing___cast(ErrorCodeValue, 2008)
TRANS_UNION_CA_ABNORMAL_TERMINATION_DUE_TO_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 3001)
TRANS_UNION_CA_INTERNAL_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 3002)
TRANS_UNION_CA_INVALID_ADDRESS_SEGMENT = typing___cast(ErrorCodeValue, 3003)
TRANS_UNION_CA_INVALID_AUTH = typing___cast(ErrorCodeValue, 3004)
TRANS_UNION_CA_INVALID_NAME_SEGMENT = typing___cast(ErrorCodeValue, 3005)
TRANS_UNION_CA_INVALID_PERSONAL_INFORMATION_SEGMENT = typing___cast(ErrorCodeValue, 3006)
TRANS_UNION_CA_INVALID_PHONE_NUMBER_SEGMENT = typing___cast(ErrorCodeValue, 3007)
TRANS_UNION_CA_INVALID_PRODUCT_CODE = typing___cast(ErrorCodeValue, 3008)
TRANS_UNION_CA_INVALID_REQUEST_PRODUCT_SEGMENT = typing___cast(ErrorCodeValue, 3009)
TRANS_UNION_CA_INVALID_SUBJECT_FIRST_NAME = typing___cast(ErrorCodeValue, 3010)
TRANS_UNION_CA_INVALID_SUBJECT_SURNAME = typing___cast(ErrorCodeValue, 3011)
TRANS_UNION_CA_UNAUTHORIZED_PRODUCT_CODE = typing___cast(ErrorCodeValue, 3012)
TRANS_UNION_CA_SUBJECT_RECORD_TOO_LONG = typing___cast(ErrorCodeValue, 3013)
TRANS_UNION_CA_SYSTEM_BUSY = typing___cast(ErrorCodeValue, 3014)
TRANS_UNION_CA_SYSTEM_TIMED_OUT = typing___cast(ErrorCodeValue, 3015)
TRANS_UNION_CA_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 3016)
LEXIS_NEXIS_NEED_DPPA_RIGHTS = typing___cast(ErrorCodeValue, 5001)
LEXIS_NEXIS_NEED_DID_OR_BDID_OR_UNIQUE_IDENTIFIER_OR_ST_PLUS_VEHICLE_NUMBER = typing___cast(ErrorCodeValue, 5002)
LEXIS_NEXIS_SEARCH_IS_TOO_BROAD = typing___cast(ErrorCodeValue, 5003)
LEXIS_NEXIS_NEED_LICENSE_STATE_AND_NUMBER = typing___cast(ErrorCodeValue, 5004)
LEXIS_NEXIS_SOAP_CONNECTION_ERROR_OR_DATABASE_ERROR = typing___cast(ErrorCodeValue, 5005)
LEXIS_NEXIS_TOO_MANY_SUBJECTS_FOUND = typing___cast(ErrorCodeValue, 5006)
LEXIS_NEXIS_INSUFFICIENT_INPUT = typing___cast(ErrorCodeValue, 5007)
LEXIS_NEXIS_NEED_AT_LEAST_THREE_LEADING_CHARACTERS = typing___cast(ErrorCodeValue, 5008)
LEXIS_NEXIS_INCOMPLETE_ADDRESS = typing___cast(ErrorCodeValue, 5009)
LEXIS_NEXIS_HIGHLY_POPULATED_ADDRESS = typing___cast(ErrorCodeValue, 5010)
LEXIS_NEXIS_BAD_REQUEST = typing___cast(ErrorCodeValue, 5011)
LEXIS_NEXIS_UNAUTHORIZED = typing___cast(ErrorCodeValue, 5012)
LEXIS_NEXIS_FORBIDDEN = typing___cast(ErrorCodeValue, 5013)
LEXIS_NEXIS_NOT_FOUND = typing___cast(ErrorCodeValue, 5014)
LEXIS_NEXIS_METHOD_NOT_ALLOWED = typing___cast(ErrorCodeValue, 5015)
LEXIS_NEXIS_NOT_ACCEPTABLE = typing___cast(ErrorCodeValue, 5016)
LEXIS_NEXIS_PROXY_AUTHENTICATION_REQUIRED = typing___cast(ErrorCodeValue, 5017)
LEXIS_NEXIS_REQUEST_TIMED_OUT = typing___cast(ErrorCodeValue, 5018)
LEXIS_NEXIS_CONFLICT = typing___cast(ErrorCodeValue, 5019)
LEXIS_NEXIS_GONE = typing___cast(ErrorCodeValue, 5020)
LEXIS_NEXIS_LENGTH_REQUIRED = typing___cast(ErrorCodeValue, 5021)
LEXIS_NEXIS_PRECONDITION_FAILED = typing___cast(ErrorCodeValue, 5022)
LEXIS_NEXIS_REQUEST_ENTITY_TOO_LARGE = typing___cast(ErrorCodeValue, 5023)
LEXIS_NEXIS_REQUEST_URL_TOO_LONG = typing___cast(ErrorCodeValue, 5024)
LEXIS_NEXIS_UNSUPPORTED_MEDIA_TYPE = typing___cast(ErrorCodeValue, 5025)
LEXIS_NEXIS_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 5026)
LEXIS_NEXIS_NOT_IMPLEMENTED = typing___cast(ErrorCodeValue, 5027)
LEXIS_NEXIS_BAD_GATEWAY = typing___cast(ErrorCodeValue, 5028)
LEXIS_NEXIS_SERVER_UNAVAILABLE = typing___cast(ErrorCodeValue, 5029)
LEXIS_NEXIS_GATEWAY_TIMEOUT = typing___cast(ErrorCodeValue, 5030)
LEXIS_NEXIS_HTTP_VERSION_NOT_SUPPORTED = typing___cast(ErrorCodeValue, 5031)
EQUIFAX_AU_SOAP_ENV_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 6001)
EQUIFAX_AU_PRODUCT_COMPONENT_UNAVAILABLE_ERROR = typing___cast(ErrorCodeValue, 6002)
EQUIFAX_AU_EXTERNAL_PRODUCT_DEPENDENCY_UNAVAILABLE_ERROR = typing___cast(ErrorCodeValue, 6003)
EQUIFAX_AU_REQUEST_CONFIGURATION_ERROR = typing___cast(ErrorCodeValue, 6004)
EQUIFAX_AU_REQUEST_VALIDATION_ERROR = typing___cast(ErrorCodeValue, 6005)
EQUIFAX_AU_TICKET_RESPONSE_ERROR = typing___cast(ErrorCodeValue, 6006)
EQUIFAX_AU_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 6007)
EKATA_AUTH_ERROR = typing___cast(ErrorCodeValue, 7001)
EKATA_BAD_REQUEST = typing___cast(ErrorCodeValue, 7002)
EKATA_INPUT_ERROR = typing___cast(ErrorCodeValue, 7003)
EKATA_INPUT_FIELD_ERROR = typing___cast(ErrorCodeValue, 7004)
EKATA_INTERNAL_ERROR = typing___cast(ErrorCodeValue, 7005)
EKATA_INVALID_PARAMETERS_ERROR = typing___cast(ErrorCodeValue, 7006)
EKATA_NOT_AUTHORIZED = typing___cast(ErrorCodeValue, 7007)
EKATA_PAYMENT_REQUIRED = typing___cast(ErrorCodeValue, 7008)
EKATA_QUOTA_EXCEEDED_ERROR = typing___cast(ErrorCodeValue, 7009)
EKATA_SERVER_UNAVAILABLE = typing___cast(ErrorCodeValue, 7010)
EKATA_TOO_MANY_REQUESTS = typing___cast(ErrorCodeValue, 7011)
CREDITSAFE_UK_INTERNAL_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 8001)
CREDITSAFE_UK_TIMED_OUT = typing___cast(ErrorCodeValue, 8002)
CREDITSAFE_UK_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 8003)
CREDITSAFE_UK_SOAP_CLIENT_REQUEST_ERROR = typing___cast(ErrorCodeValue, 8004)
CREDITSAFE_UK_SOAP_CLIENT_SCHEMA_ERROR = typing___cast(ErrorCodeValue, 8005)
CREDITSAFE_UK_SOAP_SERVER_REQUEST_ERROR = typing___cast(ErrorCodeValue, 8006)
CREDITSAFE_UK_SOAP_SERVER_SCHEMA_ERROR = typing___cast(ErrorCodeValue, 8007)
NEUSTAR_GENERAL_FAILURE_ERROR = typing___cast(ErrorCodeValue, 9001)
NEUSTAR_MISSING_CUSTOMER_RECORD_ERROR = typing___cast(ErrorCodeValue, 9002)
NUESTAR_DATA_UNAVAILABLE_ERROR = typing___cast(ErrorCodeValue, 9003)
NEUSTAR_TASK_REFUSED_ERROR = typing___cast(ErrorCodeValue, 9004)
NEUSTAR_QUEUE_FULL_ERROR = typing___cast(ErrorCodeValue, 9005)
NEUSTAR_INVALID_EID_ERROR = typing___cast(ErrorCodeValue, 9006)
NEUSTAR_TIMER_EXPIRED_ERROR = typing___cast(ErrorCodeValue, 9007)
NEUSTAR_SYSTEM_NOT_RESPONDING_ERROR = typing___cast(ErrorCodeValue, 9008)
NEUSTAR_UNAUTHORIZED_REQUEST_ERROR = typing___cast(ErrorCodeValue, 9009)
NEUSTAR_ROUTING_APPLICATION_ERROR = typing___cast(ErrorCodeValue, 9010)
NEUSTAR_INCOMPATIBLE_VERSION_ERROR = typing___cast(ErrorCodeValue, 9011)
NEUSTAR_LOCAL_TIMER_EXPIRED_ERROR = typing___cast(ErrorCodeValue, 9012)
NEUSTAR_NO_PATH_TO_SYSTEM_ERROR = typing___cast(ErrorCodeValue, 9013)
NEUSTAR_AMBIGUOUS_QUERY_ERROR = typing___cast(ErrorCodeValue, 9014)
NEUSTAR_INVALID_OR_MISSING_PARAMETER_ERROR = typing___cast(ErrorCodeValue, 9015)
NEUSTAR_OTHER_ERROR = typing___cast(ErrorCodeValue, 9016)
NEUSTAR_BAD_REQUEST = typing___cast(ErrorCodeValue, 9017)
NEUSTAR_FORBIDDEN = typing___cast(ErrorCodeValue, 9018)
NEUSTAR_INTERNAL_ERROR = typing___cast(ErrorCodeValue, 9019)
EMAILAGE_INVALID_INPUT_PARAMETER = typing___cast(ErrorCodeValue, 10001)
EMAILAGE_INVALID_OR_EXPIRED_TOKEN = typing___cast(ErrorCodeValue, 10002)
EMAILAGE_INVALID_OAUTH_REQUEST = typing___cast(ErrorCodeValue, 10003)
EMAILAGE_FILE_OR_FOLDER_NOT_FOUND = typing___cast(ErrorCodeValue, 10004)
EMAILAGE_REQUEST_METHOD_NOT_EXPECTED = typing___cast(ErrorCodeValue, 10005)
EMAILAGE_EXCEEDED_THROTTLE_LIMIT = typing___cast(ErrorCodeValue, 10006)
EMAILAGE_AUTHENTICATION_ERROR_SIGNATURE_MISMATCH = typing___cast(ErrorCodeValue, 10007)
EMAILAGE_AUTHENTICATION_ERROR_ACCOUNT_INACTIVE = typing___cast(ErrorCodeValue, 10008)
EMAILAGE_AUTHENTICATION_ERROR_ACCOUNT_EXPIRED = typing___cast(ErrorCodeValue, 10009)
EMAILAGE_AUTHENTICATION_ERROR_QUERY_CREDITS = typing___cast(ErrorCodeValue, 10010)
EMAILAGE_AUTHENTICATION_ERROR_GENERAL = typing___cast(ErrorCodeValue, 10011)
EMAILAGE_INPUT_PARAMETER_NOT_PROVIDED = typing___cast(ErrorCodeValue, 10012)
EMAILAGE_MALFORMED_PARAMETER = typing___cast(ErrorCodeValue, 10013)
EMAILAGE_AUTHENTICATION_ERROR_INVALID_TIMESTAMP = typing___cast(ErrorCodeValue, 10014)
EMAILAGE_AUTHENTICATION_ERROR_INVALID_NONCE = typing___cast(ErrorCodeValue, 10015)
EMAILAGE_INVALID_PARTNER_ID = typing___cast(ErrorCodeValue, 10016)
EMAILAGE_INVALID_CUSTOMER_IDENTIFIER_ID = typing___cast(ErrorCodeValue, 10017)
EMAILAGE_INVALID_USER_EMAIL = typing___cast(ErrorCodeValue, 10018)
EMAILAGE_USER_DEPARTMENT_MISMATCH = typing___cast(ErrorCodeValue, 10019)
EMAILAGE_CONSUMER_KEY_NOT_FOUND = typing___cast(ErrorCodeValue, 10020)
EMAILAGE_NO_ACCOUNT_FOR_CONSUMER_KEY = typing___cast(ErrorCodeValue, 10021)
EMAILAGE_AUTHENTICATION_ERROR_INVALID_SIGNATURE_METHOD = typing___cast(ErrorCodeValue, 10022)
EMAILAGE_EXCEEDED_MAXIMUM_QUERY_PARAMETERS = typing___cast(ErrorCodeValue, 10023)
EMAILAGE_BAD_REQUEST = typing___cast(ErrorCodeValue, 10024)
EMAILAGE_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 10025)
FINICITY_ACCOUNT_CLOSED_ERROR = typing___cast(ErrorCodeValue, 11000)
FINICITY_ACCOUNT_CURRENTLY_AGGREGATING_ERROR = typing___cast(ErrorCodeValue, 11001)
FINICITY_ACCOUNT_NO_LONGER_AVAILABLE_ERROR = typing___cast(ErrorCodeValue, 11002)
FINICITY_BANK_REQUIRES_ONE_TIME_PASSCODE_ERROR = typing___cast(ErrorCodeValue, 11003)
FINICITY_CONFLICT_ERROR = typing___cast(ErrorCodeValue, 11004)
FINICITY_CUSTOMER_LANGUAGE_NOT_SUPPORTED_ERROR = typing___cast(ErrorCodeValue, 11005)
FINICITY_DUPLICATE_ACCOUNT_ERROR = typing___cast(ErrorCodeValue, 11006)
FINICITY_EXPIRED_AUTH_TOKEN_ERROR = typing___cast(ErrorCodeValue, 11007)
FINICITY_EXPIRED_MFA_SESSION_ERROR = typing___cast(ErrorCodeValue, 11008)
FINICITY_INSTITUTION_AGGREGATIONS_NOT_SUPPORTED_ERROR = typing___cast(ErrorCodeValue, 11009)
FINICITY_INSTITUTION_DOWN_FOR_MAINTENANCE_ERROR = typing___cast(ErrorCodeValue, 11010)
FINICITY_INSTITUTION_SPECIFIC_USER_OR_GROUP_ERROR = typing___cast(ErrorCodeValue, 11011)
FINICITY_INVALID_ACCOUNT_TYPE_ERROR = typing___cast(ErrorCodeValue, 11012)
FINICITY_INVALID_CREDENTIALS_ERROR = typing___cast(ErrorCodeValue, 11013)
FINICITY_INVALID_MFA_SESSION_ERROR = typing___cast(ErrorCodeValue, 11014)
FINICITY_INVALID_USERNAME_ERROR = typing___cast(ErrorCodeValue, 11015)
FINICITY_MISSING_OR_INCORRECT_MFA_ANSWER_ERROR = typing___cast(ErrorCodeValue, 11016)
FINICITY_MISSING_PARAMETER_ERROR = typing___cast(ErrorCodeValue, 11017)
FINICITY_NEW_INSTITUTION_BEING_CREATED_ERROR = typing___cast(ErrorCodeValue, 11018)
FINICITY_PROBLEM_CONNECTING_TO_INSTITUTION_ERROR = typing___cast(ErrorCodeValue, 11019)
FINICITY_REPORT_CURRENTLY_GENERATING_ERROR = typing___cast(ErrorCodeValue, 11020)
FINICITY_USER_ACTION_REQUIRED_ERROR = typing___cast(ErrorCodeValue, 11021)
FINICITY_NO_RECORD_FOUND_ERROR = typing___cast(ErrorCodeValue, 11022)
FINICITY_FILE_LOCKED_AT_CONSUMERS_REQUEST_ERROR = typing___cast(ErrorCodeValue, 11023)
FINICITY_INVALID_JSON_RESPONSE_BODY_ERROR = typing___cast(ErrorCodeValue, 11024)
SENTILINK_BAD_REQUEST_ERROR = typing___cast(ErrorCodeValue, 1200)
SENTILINK_UNAUTHORIZED_ERROR = typing___cast(ErrorCodeValue, 1201)
SENTILINK_FORBIDDEN_ERROR = typing___cast(ErrorCodeValue, 1202)
SENTILINK_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1203)
SENTILINK_METHOD_NOT_ALLOWED_ERROR = typing___cast(ErrorCodeValue, 1204)
SENTILINK_NOT_ACCEPTABLE_ERROR = typing___cast(ErrorCodeValue, 1205)
SENTILINK_GONE_ERROR = typing___cast(ErrorCodeValue, 1206)
SENTILINK_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1207)
SENTILINK_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 1208)
MITEK_UNAUTHORIZED_ERROR = typing___cast(ErrorCodeValue, 1300)
MITEK_BAD_REQUEST_ERROR = typing___cast(ErrorCodeValue, 1301)
MITEK_FORBIDDEN_ERROR = typing___cast(ErrorCodeValue, 1302)
MITEK_REQUEST_TIMED_OUT_ERROR = typing___cast(ErrorCodeValue, 1303)
MITEK_UNSUPPORTED_MEDIA_TYPE_ERROR = typing___cast(ErrorCodeValue, 1304)
MITEK_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1305)
MITEK_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1306)
MITEK_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 1307)
OCROLUS_AUTHENTICATION_ERROR = typing___cast(ErrorCodeValue, 1400)
OCROLUS_REQUEST_VALIDATION_ERROR = typing___cast(ErrorCodeValue, 1401)
OCROLUS_BOOK_PERMISSION_ACCESS_ERROR = typing___cast(ErrorCodeValue, 1402)
OCROLUS_DOC_PERMISSION_ACCESS_ERROR = typing___cast(ErrorCodeValue, 1403)
OCROLUS_BOOK_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1404)
OCROLUS_BOOK_ALREADY_EXISTS_ERROR = typing___cast(ErrorCodeValue, 1405)
OCROLUS_FORM_TYPE_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1406)
OCROLUS_IMAGE_GROUP_NOT_FOUND_ERROR = typing___cast(ErrorCodeValue, 1407)
OCROLUS_INTERNAL_SERVER_ERROR = typing___cast(ErrorCodeValue, 1408)
OCROLUS_UNKNOWN_ERROR = typing___cast(ErrorCodeValue, 1409)
OCROLUS_INVALID_PDF_ERROR = typing___cast(ErrorCodeValue, 1410)
OCROLUS_UPLOAD_EXCEEDED_PAGE_LIMIT_ERROR = typing___cast(ErrorCodeValue, 1411)
OCROLUS_UPLOADED_FILE_ALREADY_EXISTS_ERROR = typing___cast(ErrorCodeValue, 1412)
OCROLUS_INVALID_IMAGE_ERROR = typing___cast(ErrorCodeValue, 1413)
OCROLUS_ALL_FORMS_REJECTED_ERROR = typing___cast(ErrorCodeValue, 1414)
type___ErrorCode = ErrorCode

ErrorTypeValue = typing___NewType('ErrorTypeValue', builtin___int)
type___ErrorTypeValue = ErrorTypeValue
ErrorType: _ErrorType
class _ErrorType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ErrorTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ET_DO_NOT_USE = typing___cast(ErrorTypeValue, 0)
    TRANSIENT = typing___cast(ErrorTypeValue, 1)
    ACTION_REQUIRED = typing___cast(ErrorTypeValue, 2)
    PERMANENT = typing___cast(ErrorTypeValue, 3)
ET_DO_NOT_USE = typing___cast(ErrorTypeValue, 0)
TRANSIENT = typing___cast(ErrorTypeValue, 1)
ACTION_REQUIRED = typing___cast(ErrorTypeValue, 2)
PERMANENT = typing___cast(ErrorTypeValue, 3)
type___ErrorType = ErrorType

RequestStatusValue = typing___NewType('RequestStatusValue', builtin___int)
type___RequestStatusValue = RequestStatusValue
RequestStatus: _RequestStatus
class _RequestStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RequestStatusValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    RS_DO_NOT_USE = typing___cast(RequestStatusValue, 0)
    SUCCESS = typing___cast(RequestStatusValue, 1)
    ERROR = typing___cast(RequestStatusValue, 2)
    NOT_READY = typing___cast(RequestStatusValue, 3)
RS_DO_NOT_USE = typing___cast(RequestStatusValue, 0)
SUCCESS = typing___cast(RequestStatusValue, 1)
ERROR = typing___cast(RequestStatusValue, 2)
NOT_READY = typing___cast(RequestStatusValue, 3)
type___RequestStatus = RequestStatus

VendorValue = typing___NewType('VendorValue', builtin___int)
type___VendorValue = VendorValue
Vendor: _Vendor
class _Vendor(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[VendorValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    V_DO_NOT_USE = typing___cast(VendorValue, 0)
    PASSBOOK = typing___cast(VendorValue, 1)
    EXPERIAN_FINICITY = typing___cast(VendorValue, 2)
    LEXIS_NEXIS_FRAUD_POINT = typing___cast(VendorValue, 3)
    EXPERIAN_CREDIT_PROFILE = typing___cast(VendorValue, 4)
    TRANS_UNION_CA_CREDIT_PROFILE = typing___cast(VendorValue, 5)
    PLAID = typing___cast(VendorValue, 6)
    EQUIFAX_AU_CREDIT_PROFILE = typing___cast(VendorValue, 7)
    EKATA = typing___cast(VendorValue, 9)
    NEUSTAR = typing___cast(VendorValue, 10)
    CREDITSAFE_UK = typing___cast(VendorValue, 11)
    EXPERIAN = typing___cast(VendorValue, 12)
    LEXIS_NEXIS = typing___cast(VendorValue, 13)
    TRANS_UNION_CA = typing___cast(VendorValue, 14)
    EQUIFAX_AU = typing___cast(VendorValue, 15)
    CREDITSAFE_UK_CREDIT_PROFILE = typing___cast(VendorValue, 16)
    EKATA_IDENTITY_CHECK = typing___cast(VendorValue, 17)
    NEUSTAR_PHONE_AND_IDENTITY = typing___cast(VendorValue, 18)
    PLAID_ASSETS = typing___cast(VendorValue, 19)
    PLAID_AUTH = typing___cast(VendorValue, 20)
    EMAILAGE_EMAIL_IP_ASSESSMENT = typing___cast(VendorValue, 21)
    EXPERIAN_NET_CONNECT = typing___cast(VendorValue, 22)
    FINICITY_ASSETS_VERIFICATION_REPORT = typing___cast(VendorValue, 23)
    FINICITY_INCOME_VERIFICATION_REPORT = typing___cast(VendorValue, 24)
    FINICITY_ULTRA_FICO_REPORT = typing___cast(VendorValue, 25)
    FINICITY_CUSTOMER_ACCOUNTS = typing___cast(VendorValue, 26)
    SENTILINK_SYNTHETIC_ID_REPORT = typing___cast(VendorValue, 27)
    MITEK_IDENTITY_CHECK = typing___cast(VendorValue, 28)
    PLAID_PUBLIC_TOKEN_EXCHANGE = typing___cast(VendorValue, 29)
    PLAID_SBA_VERIFICATION_REPORT = typing___cast(VendorValue, 30)
    OCROLUS_BOOK_WITH_FORMS = typing___cast(VendorValue, 31)
    PERSONA_GOVERNMENT_ID_VERIFICATION = typing___cast(VendorValue, 32)
V_DO_NOT_USE = typing___cast(VendorValue, 0)
PASSBOOK = typing___cast(VendorValue, 1)
EXPERIAN_FINICITY = typing___cast(VendorValue, 2)
LEXIS_NEXIS_FRAUD_POINT = typing___cast(VendorValue, 3)
EXPERIAN_CREDIT_PROFILE = typing___cast(VendorValue, 4)
TRANS_UNION_CA_CREDIT_PROFILE = typing___cast(VendorValue, 5)
PLAID = typing___cast(VendorValue, 6)
EQUIFAX_AU_CREDIT_PROFILE = typing___cast(VendorValue, 7)
EKATA = typing___cast(VendorValue, 9)
NEUSTAR = typing___cast(VendorValue, 10)
CREDITSAFE_UK = typing___cast(VendorValue, 11)
EXPERIAN = typing___cast(VendorValue, 12)
LEXIS_NEXIS = typing___cast(VendorValue, 13)
TRANS_UNION_CA = typing___cast(VendorValue, 14)
EQUIFAX_AU = typing___cast(VendorValue, 15)
CREDITSAFE_UK_CREDIT_PROFILE = typing___cast(VendorValue, 16)
EKATA_IDENTITY_CHECK = typing___cast(VendorValue, 17)
NEUSTAR_PHONE_AND_IDENTITY = typing___cast(VendorValue, 18)
PLAID_ASSETS = typing___cast(VendorValue, 19)
PLAID_AUTH = typing___cast(VendorValue, 20)
EMAILAGE_EMAIL_IP_ASSESSMENT = typing___cast(VendorValue, 21)
EXPERIAN_NET_CONNECT = typing___cast(VendorValue, 22)
FINICITY_ASSETS_VERIFICATION_REPORT = typing___cast(VendorValue, 23)
FINICITY_INCOME_VERIFICATION_REPORT = typing___cast(VendorValue, 24)
FINICITY_ULTRA_FICO_REPORT = typing___cast(VendorValue, 25)
FINICITY_CUSTOMER_ACCOUNTS = typing___cast(VendorValue, 26)
SENTILINK_SYNTHETIC_ID_REPORT = typing___cast(VendorValue, 27)
MITEK_IDENTITY_CHECK = typing___cast(VendorValue, 28)
PLAID_PUBLIC_TOKEN_EXCHANGE = typing___cast(VendorValue, 29)
PLAID_SBA_VERIFICATION_REPORT = typing___cast(VendorValue, 30)
OCROLUS_BOOK_WITH_FORMS = typing___cast(VendorValue, 31)
PERSONA_GOVERNMENT_ID_VERIFICATION = typing___cast(VendorValue, 32)
type___Vendor = Vendor

OwnerValue = typing___NewType('OwnerValue', builtin___int)
type___OwnerValue = OwnerValue
Owner: _Owner
class _Owner(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[OwnerValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    O_DO_NOT_USE = typing___cast(OwnerValue, 0)
    CAPITAL = typing___cast(OwnerValue, 1)
    SQUARE = typing___cast(OwnerValue, 2)
O_DO_NOT_USE = typing___cast(OwnerValue, 0)
CAPITAL = typing___cast(OwnerValue, 1)
SQUARE = typing___cast(OwnerValue, 2)
type___Owner = Owner

class Error(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    type: type___ErrorTypeValue = ...
    code: type___ErrorCodeValue = ...
    vendor_error: typing___Text = ...

    def __init__(self,
        *,
        type : typing___Optional[type___ErrorTypeValue] = None,
        code : typing___Optional[type___ErrorCodeValue] = None,
        vendor_error : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"code",b"code",u"type",b"type",u"vendor_error",b"vendor_error"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"code",b"code",u"type",b"type",u"vendor_error",b"vendor_error"]) -> None: ...
type___Error = Error

class VendorLinkageEventFeedEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StatusValue = typing___NewType('StatusValue', builtin___int)
    type___StatusValue = StatusValue
    Status: _Status
    class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[VendorLinkageEventFeedEntry.StatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE_S = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 0)
        READY = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 1)
        SERVER_ERROR = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 2)
        TIMEOUT = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 3)
        SUCCESS = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 4)
        ERROR = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 5)
    DO_NOT_USE_S = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 0)
    READY = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 1)
    SERVER_ERROR = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 2)
    TIMEOUT = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 3)
    SUCCESS = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 4)
    ERROR = typing___cast(VendorLinkageEventFeedEntry.StatusValue, 5)
    type___Status = Status

    EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
    type___EventTypeValue = EventTypeValue
    EventType: _EventType
    class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[VendorLinkageEventFeedEntry.EventTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_NOT_USE_ET = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 0)
        DATA_FETCH = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 1)
        SIGNAL_GENERATION = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 2)
        UNLINK = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 3)
    DO_NOT_USE_ET = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 0)
    DATA_FETCH = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 1)
    SIGNAL_GENERATION = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 2)
    UNLINK = typing___cast(VendorLinkageEventFeedEntry.EventTypeValue, 3)
    type___EventType = EventType

    class PlaidAssetReportCustomData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        plaid_account_ids: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

        def __init__(self,
            *,
            plaid_account_ids : typing___Optional[typing___Iterable[typing___Text]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"plaid_account_ids",b"plaid_account_ids"]) -> None: ...
    type___PlaidAssetReportCustomData = PlaidAssetReportCustomData

    class PlaidAuthCustomData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class PlaidAccountIdToClerkBankAccountTokensEntry(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            key: typing___Text = ...
            value: typing___Text = ...

            def __init__(self,
                *,
                key : typing___Optional[typing___Text] = None,
                value : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"key",b"key",u"value",b"value"]) -> None: ...
        type___PlaidAccountIdToClerkBankAccountTokensEntry = PlaidAccountIdToClerkBankAccountTokensEntry


        @property
        def plaid_account_id_to_clerk_bank_account_tokens(self) -> typing___MutableMapping[typing___Text, typing___Text]: ...

        def __init__(self,
            *,
            plaid_account_id_to_clerk_bank_account_tokens : typing___Optional[typing___Mapping[typing___Text, typing___Text]] = None,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"plaid_account_id_to_clerk_bank_account_tokens",b"plaid_account_id_to_clerk_bank_account_tokens"]) -> None: ...
    type___PlaidAuthCustomData = PlaidAuthCustomData

    feed_sync_id: builtin___int = ...
    identifier_token: typing___Text = ...
    vendor: type___VendorValue = ...
    source_token: typing___Text = ...
    event_type: type___VendorLinkageEventFeedEntry.EventTypeValue = ...
    status: type___VendorLinkageEventFeedEntry.StatusValue = ...
    owner_name: typing___Text = ...
    capital_customer_token: typing___Text = ...
    capital_application_token: typing___Text = ...
    owner: type___OwnerValue = ...

    @property
    def completed_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def error(self) -> type___Error: ...

    @property
    def universal_token(self) -> squareup___common___universal_token_pb2___UniversalToken: ...

    @property
    def plaid_asset_report_custom_data(self) -> type___VendorLinkageEventFeedEntry.PlaidAssetReportCustomData: ...

    @property
    def plaid_auth_custom_data(self) -> type___VendorLinkageEventFeedEntry.PlaidAuthCustomData: ...

    def __init__(self,
        *,
        feed_sync_id : typing___Optional[builtin___int] = None,
        identifier_token : typing___Optional[typing___Text] = None,
        vendor : typing___Optional[type___VendorValue] = None,
        source_token : typing___Optional[typing___Text] = None,
        event_type : typing___Optional[type___VendorLinkageEventFeedEntry.EventTypeValue] = None,
        status : typing___Optional[type___VendorLinkageEventFeedEntry.StatusValue] = None,
        owner_name : typing___Optional[typing___Text] = None,
        completed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        capital_customer_token : typing___Optional[typing___Text] = None,
        error : typing___Optional[type___Error] = None,
        capital_application_token : typing___Optional[typing___Text] = None,
        universal_token : typing___Optional[squareup___common___universal_token_pb2___UniversalToken] = None,
        plaid_asset_report_custom_data : typing___Optional[type___VendorLinkageEventFeedEntry.PlaidAssetReportCustomData] = None,
        plaid_auth_custom_data : typing___Optional[type___VendorLinkageEventFeedEntry.PlaidAuthCustomData] = None,
        owner : typing___Optional[type___OwnerValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"capital_application_token",b"capital_application_token",u"capital_customer_token",b"capital_customer_token",u"completed_at",b"completed_at",u"custom_data",b"custom_data",u"error",b"error",u"event_type",b"event_type",u"feed_sync_id",b"feed_sync_id",u"identifier_token",b"identifier_token",u"owner",b"owner",u"owner_name",b"owner_name",u"plaid_asset_report_custom_data",b"plaid_asset_report_custom_data",u"plaid_auth_custom_data",b"plaid_auth_custom_data",u"source_token",b"source_token",u"status",b"status",u"universal_token",b"universal_token",u"vendor",b"vendor"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"capital_application_token",b"capital_application_token",u"capital_customer_token",b"capital_customer_token",u"completed_at",b"completed_at",u"custom_data",b"custom_data",u"error",b"error",u"event_type",b"event_type",u"feed_sync_id",b"feed_sync_id",u"identifier_token",b"identifier_token",u"owner",b"owner",u"owner_name",b"owner_name",u"plaid_asset_report_custom_data",b"plaid_asset_report_custom_data",u"plaid_auth_custom_data",b"plaid_auth_custom_data",u"source_token",b"source_token",u"status",b"status",u"universal_token",b"universal_token",u"vendor",b"vendor"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"custom_data",b"custom_data"]) -> typing_extensions___Literal["plaid_asset_report_custom_data","plaid_auth_custom_data"]: ...
type___VendorLinkageEventFeedEntry = VendorLinkageEventFeedEntry

class EmptyResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___EmptyResponse = EmptyResponse
