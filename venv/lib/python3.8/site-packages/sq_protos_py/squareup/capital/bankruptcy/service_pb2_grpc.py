# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.capital.bankruptcy import service_pb2 as squareup_dot_capital_dot_bankruptcy_dot_service__pb2


class BankruptcyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBankruptciesByPlanTokens = channel.unary_unary(
                '/squareup.capital.bankruptcy.service.BankruptcyService/GetBankruptciesByPlanTokens',
                request_serializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesByPlanTokensRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesByPlanTokensResponse.FromString,
                )
        self.ListBankruptcyTokens = channel.unary_unary(
                '/squareup.capital.bankruptcy.service.BankruptcyService/ListBankruptcyTokens',
                request_serializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.ListBankruptcyTokensRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.ListBankruptcyTokensResponse.FromString,
                )
        self.GetBankruptcies = channel.unary_unary(
                '/squareup.capital.bankruptcy.service.BankruptcyService/GetBankruptcies',
                request_serializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesResponse.FromString,
                )


class BankruptcyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetBankruptciesByPlanTokens(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBankruptcyTokens(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBankruptcies(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BankruptcyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBankruptciesByPlanTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBankruptciesByPlanTokens,
                    request_deserializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesByPlanTokensRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesByPlanTokensResponse.SerializeToString,
            ),
            'ListBankruptcyTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBankruptcyTokens,
                    request_deserializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.ListBankruptcyTokensRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.ListBankruptcyTokensResponse.SerializeToString,
            ),
            'GetBankruptcies': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBankruptcies,
                    request_deserializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.capital.bankruptcy.service.BankruptcyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BankruptcyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetBankruptciesByPlanTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.bankruptcy.service.BankruptcyService/GetBankruptciesByPlanTokens',
            squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesByPlanTokensRequest.SerializeToString,
            squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesByPlanTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBankruptcyTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.bankruptcy.service.BankruptcyService/ListBankruptcyTokens',
            squareup_dot_capital_dot_bankruptcy_dot_service__pb2.ListBankruptcyTokensRequest.SerializeToString,
            squareup_dot_capital_dot_bankruptcy_dot_service__pb2.ListBankruptcyTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBankruptcies(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.bankruptcy.service.BankruptcyService/GetBankruptcies',
            squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesRequest.SerializeToString,
            squareup_dot_capital_dot_bankruptcy_dot_service__pb2.GetBankruptciesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
