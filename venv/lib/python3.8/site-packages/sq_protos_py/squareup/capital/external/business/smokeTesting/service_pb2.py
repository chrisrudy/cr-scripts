# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/capital/external/business/smokeTesting/service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.capital.external.business.smokeTesting import models_pb2 as squareup_dot_capital_dot_external_dot_business_dot_smokeTesting_dot_models__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/capital/external/business/smokeTesting/service.proto',
  package='squareup.capital.external.business.smokeTesting.service',
  syntax='proto2',
  serialized_options=_b('\nBcom.squareup.protos.capital.external.business.smokeTesting.service'),
  serialized_pb=_b('\n=squareup/capital/external/business/smokeTesting/service.proto\x12\x37squareup.capital.external.business.smokeTesting.service\x1a<squareup/capital/external/business/smokeTesting/models.proto\"<\n!QueryTestingConfigurationsRequest\x12\x17\n\x0f\x63ustomer_tokens\x18\x01 \x03(\t\"\x83\x01\n\"QueryTestingConfigurationsResponse\x12]\n\x0e\x63onfigurations\x18\x01 \x03(\x0b\x32\x45.squareup.capital.external.business.smokeTesting.models.Configuration2\xe8\x01\n\x0eTestingService\x12\xd5\x01\n\x1aQueryTestingConfigurations\x12Z.squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsRequest\x1a[.squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsResponseBD\nBcom.squareup.protos.capital.external.business.smokeTesting.service')
  ,
  dependencies=[squareup_dot_capital_dot_external_dot_business_dot_smokeTesting_dot_models__pb2.DESCRIPTOR,])




_QUERYTESTINGCONFIGURATIONSREQUEST = _descriptor.Descriptor(
  name='QueryTestingConfigurationsRequest',
  full_name='squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='customer_tokens', full_name='squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsRequest.customer_tokens', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=184,
  serialized_end=244,
)


_QUERYTESTINGCONFIGURATIONSRESPONSE = _descriptor.Descriptor(
  name='QueryTestingConfigurationsResponse',
  full_name='squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='configurations', full_name='squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsResponse.configurations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=247,
  serialized_end=378,
)

_QUERYTESTINGCONFIGURATIONSRESPONSE.fields_by_name['configurations'].message_type = squareup_dot_capital_dot_external_dot_business_dot_smokeTesting_dot_models__pb2._CONFIGURATION
DESCRIPTOR.message_types_by_name['QueryTestingConfigurationsRequest'] = _QUERYTESTINGCONFIGURATIONSREQUEST
DESCRIPTOR.message_types_by_name['QueryTestingConfigurationsResponse'] = _QUERYTESTINGCONFIGURATIONSRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

QueryTestingConfigurationsRequest = _reflection.GeneratedProtocolMessageType('QueryTestingConfigurationsRequest', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTINGCONFIGURATIONSREQUEST,
  '__module__' : 'squareup.capital.external.business.smokeTesting.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsRequest)
  })
_sym_db.RegisterMessage(QueryTestingConfigurationsRequest)

QueryTestingConfigurationsResponse = _reflection.GeneratedProtocolMessageType('QueryTestingConfigurationsResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTINGCONFIGURATIONSRESPONSE,
  '__module__' : 'squareup.capital.external.business.smokeTesting.service_pb2'
  # @@protoc_insertion_point(class_scope:squareup.capital.external.business.smokeTesting.service.QueryTestingConfigurationsResponse)
  })
_sym_db.RegisterMessage(QueryTestingConfigurationsResponse)


DESCRIPTOR._options = None

_TESTINGSERVICE = _descriptor.ServiceDescriptor(
  name='TestingService',
  full_name='squareup.capital.external.business.smokeTesting.service.TestingService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=381,
  serialized_end=613,
  methods=[
  _descriptor.MethodDescriptor(
    name='QueryTestingConfigurations',
    full_name='squareup.capital.external.business.smokeTesting.service.TestingService.QueryTestingConfigurations',
    index=0,
    containing_service=None,
    input_type=_QUERYTESTINGCONFIGURATIONSREQUEST,
    output_type=_QUERYTESTINGCONFIGURATIONSRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TESTINGSERVICE)

DESCRIPTOR.services_by_name['TestingService'] = _TESTINGSERVICE

# @@protoc_insertion_point(module_scope)
