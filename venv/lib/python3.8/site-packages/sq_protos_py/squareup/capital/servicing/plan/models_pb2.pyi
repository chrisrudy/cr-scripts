# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.capital.common_pb2 import (
    PaymentPeriodValue as squareup___capital___common_pb2___PaymentPeriodValue,
)

from sq_protos_py.squareup.capital.servicing.instruments.models_pb2 import (
    InstrumentSummary as squareup___capital___servicing___instruments___models_pb2___InstrumentSummary,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Plan(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StatusValue = typing___NewType('StatusValue', builtin___int)
    type___StatusValue = StatusValue
    Status: _Status
    class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Plan.StatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        S_DO_NOT_USE = typing___cast(Plan.StatusValue, 0)
        ACTIVE = typing___cast(Plan.StatusValue, 1)
        ACTIVE_PAST_DUE = typing___cast(Plan.StatusValue, 2)
        CANCELED = typing___cast(Plan.StatusValue, 3)
        CLOSED = typing___cast(Plan.StatusValue, 4)
        CANCEL_PENDING = typing___cast(Plan.StatusValue, 5)
    S_DO_NOT_USE = typing___cast(Plan.StatusValue, 0)
    ACTIVE = typing___cast(Plan.StatusValue, 1)
    ACTIVE_PAST_DUE = typing___cast(Plan.StatusValue, 2)
    CANCELED = typing___cast(Plan.StatusValue, 3)
    CLOSED = typing___cast(Plan.StatusValue, 4)
    CANCEL_PENDING = typing___cast(Plan.StatusValue, 5)
    type___Status = Status

    class DefaultStatus(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        StatusValue = typing___NewType('StatusValue', builtin___int)
        type___StatusValue = StatusValue
        Status: _Status
        class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Plan.DefaultStatus.StatusValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DS_DO_NOT_USE = typing___cast(Plan.DefaultStatus.StatusValue, 0)
            CURRENT = typing___cast(Plan.DefaultStatus.StatusValue, 1)
            DEFAULT_PAST_DUE = typing___cast(Plan.DefaultStatus.StatusValue, 2)
            DEFAULT_NON_MONETARY = typing___cast(Plan.DefaultStatus.StatusValue, 3)
            DEFAULT_ACCELERATED = typing___cast(Plan.DefaultStatus.StatusValue, 4)
            DEFAULT_UNCOLLECTIBLE = typing___cast(Plan.DefaultStatus.StatusValue, 5)
            DEFAULT_DISCHARGED = typing___cast(Plan.DefaultStatus.StatusValue, 6)
            DEFAULT_PAST_DUE_ABBREVIATED_CADENCE = typing___cast(Plan.DefaultStatus.StatusValue, 7)
            DEFAULT_MATURITY = typing___cast(Plan.DefaultStatus.StatusValue, 8)
            DEFAULT_DEACTIVATED = typing___cast(Plan.DefaultStatus.StatusValue, 9)
            DEFAULT_PAST_DUE_V2 = typing___cast(Plan.DefaultStatus.StatusValue, 10)
        DS_DO_NOT_USE = typing___cast(Plan.DefaultStatus.StatusValue, 0)
        CURRENT = typing___cast(Plan.DefaultStatus.StatusValue, 1)
        DEFAULT_PAST_DUE = typing___cast(Plan.DefaultStatus.StatusValue, 2)
        DEFAULT_NON_MONETARY = typing___cast(Plan.DefaultStatus.StatusValue, 3)
        DEFAULT_ACCELERATED = typing___cast(Plan.DefaultStatus.StatusValue, 4)
        DEFAULT_UNCOLLECTIBLE = typing___cast(Plan.DefaultStatus.StatusValue, 5)
        DEFAULT_DISCHARGED = typing___cast(Plan.DefaultStatus.StatusValue, 6)
        DEFAULT_PAST_DUE_ABBREVIATED_CADENCE = typing___cast(Plan.DefaultStatus.StatusValue, 7)
        DEFAULT_MATURITY = typing___cast(Plan.DefaultStatus.StatusValue, 8)
        DEFAULT_DEACTIVATED = typing___cast(Plan.DefaultStatus.StatusValue, 9)
        DEFAULT_PAST_DUE_V2 = typing___cast(Plan.DefaultStatus.StatusValue, 10)
        type___Status = Status

        ReasonValue = typing___NewType('ReasonValue', builtin___int)
        type___ReasonValue = ReasonValue
        Reason: _Reason
        class _Reason(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Plan.DefaultStatus.ReasonValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            DR_DO_NOT_USE = typing___cast(Plan.DefaultStatus.ReasonValue, 0)
            NO_TRANSFER = typing___cast(Plan.DefaultStatus.ReasonValue, 1)
            CARD_PROCESSING = typing___cast(Plan.DefaultStatus.ReasonValue, 2)
            BUSINESS_OPERATIONS = typing___cast(Plan.DefaultStatus.ReasonValue, 3)
            BUSINESS_NAME = typing___cast(Plan.DefaultStatus.ReasonValue, 4)
            BUSINESS_CONTROL = typing___cast(Plan.DefaultStatus.ReasonValue, 5)
            BUSINESS_SOLD = typing___cast(Plan.DefaultStatus.ReasonValue, 6)
            BANK_REQUEST = typing___cast(Plan.DefaultStatus.ReasonValue, 7)
            COOPERATION = typing___cast(Plan.DefaultStatus.ReasonValue, 8)
            INSPECTION = typing___cast(Plan.DefaultStatus.ReasonValue, 9)
            BANKRUPTCY_DEBT_DISCHARGED = typing___cast(Plan.DefaultStatus.ReasonValue, 10)
        DR_DO_NOT_USE = typing___cast(Plan.DefaultStatus.ReasonValue, 0)
        NO_TRANSFER = typing___cast(Plan.DefaultStatus.ReasonValue, 1)
        CARD_PROCESSING = typing___cast(Plan.DefaultStatus.ReasonValue, 2)
        BUSINESS_OPERATIONS = typing___cast(Plan.DefaultStatus.ReasonValue, 3)
        BUSINESS_NAME = typing___cast(Plan.DefaultStatus.ReasonValue, 4)
        BUSINESS_CONTROL = typing___cast(Plan.DefaultStatus.ReasonValue, 5)
        BUSINESS_SOLD = typing___cast(Plan.DefaultStatus.ReasonValue, 6)
        BANK_REQUEST = typing___cast(Plan.DefaultStatus.ReasonValue, 7)
        COOPERATION = typing___cast(Plan.DefaultStatus.ReasonValue, 8)
        INSPECTION = typing___cast(Plan.DefaultStatus.ReasonValue, 9)
        BANKRUPTCY_DEBT_DISCHARGED = typing___cast(Plan.DefaultStatus.ReasonValue, 10)
        type___Reason = Reason

        status: type___Plan.DefaultStatus.StatusValue = ...
        reasons: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___Plan.DefaultStatus.ReasonValue] = ...

        def __init__(self,
            *,
            status : typing___Optional[type___Plan.DefaultStatus.StatusValue] = None,
            reasons : typing___Optional[typing___Iterable[type___Plan.DefaultStatus.ReasonValue]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"reasons",b"reasons",u"status",b"status"]) -> None: ...
    type___DefaultStatus = DefaultStatus

    id: typing___Text = ...
    version: builtin___int = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...
    cancelable_expired_at: typing___Text = ...
    closed_at: typing___Text = ...
    status: type___Plan.StatusValue = ...
    contract_id: typing___Text = ...
    is_cancelable: builtin___bool = ...
    activated_at: typing___Text = ...
    legacy_id: typing___Text = ...
    is_prepayable: builtin___bool = ...
    is_originated: builtin___bool = ...
    allocated_at: typing___Text = ...
    product_name: typing___Text = ...
    percentage_complete: typing___Text = ...
    covid_relief_ended_at: typing___Text = ...
    covid_relief_started_at: typing___Text = ...
    ppp_is_non_employer: builtin___bool = ...
    ppp_is_higher_offer: builtin___bool = ...
    matured_at: typing___Text = ...
    country_code: typing___Text = ...

    @property
    def payers(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Payer]: ...

    @property
    def investor(self) -> type___Investor: ...

    @property
    def fund(self) -> type___Fund: ...

    @property
    def tags(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Tag]: ...

    @property
    def default_status(self) -> type___Plan.DefaultStatus: ...

    @property
    def documents(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Document]: ...

    @property
    def support_resources(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SupportResource]: ...

    @property
    def amounts(self) -> type___Amounts: ...

    @property
    def covid_cadence(self) -> type___CovidCadence: ...

    @property
    def loan_fixed_payments(self) -> type___LoanFixedPaymentsDetail: ...

    @property
    def loan_portion_of_sales(self) -> type___LoanPortionOfSalesDetail: ...

    @property
    def mca(self) -> type___McaDetail: ...

    @property
    def retail_installments(self) -> type___RisaDetail: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        payers : typing___Optional[typing___Iterable[type___Payer]] = None,
        cancelable_expired_at : typing___Optional[typing___Text] = None,
        closed_at : typing___Optional[typing___Text] = None,
        status : typing___Optional[type___Plan.StatusValue] = None,
        contract_id : typing___Optional[typing___Text] = None,
        investor : typing___Optional[type___Investor] = None,
        fund : typing___Optional[type___Fund] = None,
        tags : typing___Optional[typing___Iterable[type___Tag]] = None,
        default_status : typing___Optional[type___Plan.DefaultStatus] = None,
        is_cancelable : typing___Optional[builtin___bool] = None,
        documents : typing___Optional[typing___Iterable[type___Document]] = None,
        support_resources : typing___Optional[typing___Iterable[type___SupportResource]] = None,
        activated_at : typing___Optional[typing___Text] = None,
        legacy_id : typing___Optional[typing___Text] = None,
        is_prepayable : typing___Optional[builtin___bool] = None,
        is_originated : typing___Optional[builtin___bool] = None,
        allocated_at : typing___Optional[typing___Text] = None,
        product_name : typing___Optional[typing___Text] = None,
        amounts : typing___Optional[type___Amounts] = None,
        percentage_complete : typing___Optional[typing___Text] = None,
        covid_relief_ended_at : typing___Optional[typing___Text] = None,
        covid_relief_started_at : typing___Optional[typing___Text] = None,
        ppp_is_non_employer : typing___Optional[builtin___bool] = None,
        ppp_is_higher_offer : typing___Optional[builtin___bool] = None,
        covid_cadence : typing___Optional[type___CovidCadence] = None,
        matured_at : typing___Optional[typing___Text] = None,
        loan_fixed_payments : typing___Optional[type___LoanFixedPaymentsDetail] = None,
        loan_portion_of_sales : typing___Optional[type___LoanPortionOfSalesDetail] = None,
        mca : typing___Optional[type___McaDetail] = None,
        retail_installments : typing___Optional[type___RisaDetail] = None,
        country_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"activated_at",b"activated_at",u"allocated_at",b"allocated_at",u"amounts",b"amounts",u"cancelable_expired_at",b"cancelable_expired_at",u"closed_at",b"closed_at",u"contract_id",b"contract_id",u"country_code",b"country_code",u"covid_cadence",b"covid_cadence",u"covid_relief_ended_at",b"covid_relief_ended_at",u"covid_relief_started_at",b"covid_relief_started_at",u"created_at",b"created_at",u"default_status",b"default_status",u"detail",b"detail",u"fund",b"fund",u"id",b"id",u"investor",b"investor",u"is_cancelable",b"is_cancelable",u"is_originated",b"is_originated",u"is_prepayable",b"is_prepayable",u"legacy_id",b"legacy_id",u"loan_fixed_payments",b"loan_fixed_payments",u"loan_portion_of_sales",b"loan_portion_of_sales",u"matured_at",b"matured_at",u"mca",b"mca",u"percentage_complete",b"percentage_complete",u"ppp_is_higher_offer",b"ppp_is_higher_offer",u"ppp_is_non_employer",b"ppp_is_non_employer",u"product_name",b"product_name",u"retail_installments",b"retail_installments",u"status",b"status",u"updated_at",b"updated_at",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"activated_at",b"activated_at",u"allocated_at",b"allocated_at",u"amounts",b"amounts",u"cancelable_expired_at",b"cancelable_expired_at",u"closed_at",b"closed_at",u"contract_id",b"contract_id",u"country_code",b"country_code",u"covid_cadence",b"covid_cadence",u"covid_relief_ended_at",b"covid_relief_ended_at",u"covid_relief_started_at",b"covid_relief_started_at",u"created_at",b"created_at",u"default_status",b"default_status",u"detail",b"detail",u"documents",b"documents",u"fund",b"fund",u"id",b"id",u"investor",b"investor",u"is_cancelable",b"is_cancelable",u"is_originated",b"is_originated",u"is_prepayable",b"is_prepayable",u"legacy_id",b"legacy_id",u"loan_fixed_payments",b"loan_fixed_payments",u"loan_portion_of_sales",b"loan_portion_of_sales",u"matured_at",b"matured_at",u"mca",b"mca",u"payers",b"payers",u"percentage_complete",b"percentage_complete",u"ppp_is_higher_offer",b"ppp_is_higher_offer",u"ppp_is_non_employer",b"ppp_is_non_employer",u"product_name",b"product_name",u"retail_installments",b"retail_installments",u"status",b"status",u"support_resources",b"support_resources",u"tags",b"tags",u"updated_at",b"updated_at",u"version",b"version"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"detail",b"detail"]) -> typing_extensions___Literal["loan_fixed_payments","loan_portion_of_sales","mca","retail_installments"]: ...
type___Plan = Plan

class Payer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_id: typing___Text = ...
    is_primary: builtin___bool = ...
    can_debit_sq_balance_linked_account: builtin___bool = ...
    business_name: typing___Text = ...

    @property
    def instruments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___capital___servicing___instruments___models_pb2___InstrumentSummary]: ...

    def __init__(self,
        *,
        customer_id : typing___Optional[typing___Text] = None,
        is_primary : typing___Optional[builtin___bool] = None,
        can_debit_sq_balance_linked_account : typing___Optional[builtin___bool] = None,
        business_name : typing___Optional[typing___Text] = None,
        instruments : typing___Optional[typing___Iterable[squareup___capital___servicing___instruments___models_pb2___InstrumentSummary]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"business_name",b"business_name",u"can_debit_sq_balance_linked_account",b"can_debit_sq_balance_linked_account",u"customer_id",b"customer_id",u"is_primary",b"is_primary"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"business_name",b"business_name",u"can_debit_sq_balance_linked_account",b"can_debit_sq_balance_linked_account",u"customer_id",b"customer_id",u"instruments",b"instruments",u"is_primary",b"is_primary"]) -> None: ...
type___Payer = Payer

class Investor(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    version: builtin___int = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...
    name: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"id",b"id",u"name",b"name",u"updated_at",b"updated_at",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"id",b"id",u"name",b"name",u"updated_at",b"updated_at",u"version",b"version"]) -> None: ...
type___Investor = Investor

class Fund(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    version: builtin___int = ...
    created_at: typing___Text = ...
    updated_at: typing___Text = ...
    name: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        created_at : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"id",b"id",u"name",b"name",u"updated_at",b"updated_at",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"id",b"id",u"name",b"name",u"updated_at",b"updated_at",u"version",b"version"]) -> None: ...
type___Fund = Fund

class Tag(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    name: typing___Text = ...

    def __init__(self,
        *,
        name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"name",b"name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"name",b"name"]) -> None: ...
type___Tag = Tag

class Amounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class BaseAmounts(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def paid_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def remaining_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            remaining_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"paid_money",b"paid_money",u"remaining_money",b"remaining_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"paid_money",b"paid_money",u"remaining_money",b"remaining_money"]) -> None: ...
    type___BaseAmounts = BaseAmounts

    class DetailAmounts(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def paid_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def penalty_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def past_due_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def due_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def remaining_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            penalty_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            remaining_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"due_money",b"due_money",u"paid_money",b"paid_money",u"past_due_money",b"past_due_money",u"penalty_money",b"penalty_money",u"remaining_money",b"remaining_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"due_money",b"due_money",u"paid_money",b"paid_money",u"past_due_money",b"past_due_money",u"penalty_money",b"penalty_money",u"remaining_money",b"remaining_money"]) -> None: ...
    type___DetailAmounts = DetailAmounts


    @property
    def pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def base_amounts(self) -> type___Amounts.BaseAmounts: ...

    @property
    def detail_amounts(self) -> type___Amounts.DetailAmounts: ...

    @property
    def detail_amounts_pending_applied(self) -> type___Amounts.DetailAmounts: ...

    def __init__(self,
        *,
        pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        base_amounts : typing___Optional[type___Amounts.BaseAmounts] = None,
        detail_amounts : typing___Optional[type___Amounts.DetailAmounts] = None,
        detail_amounts_pending_applied : typing___Optional[type___Amounts.DetailAmounts] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"base_amounts",b"base_amounts",u"detail_amounts",b"detail_amounts",u"detail_amounts_pending_applied",b"detail_amounts_pending_applied",u"pending_money",b"pending_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"base_amounts",b"base_amounts",u"detail_amounts",b"detail_amounts",u"detail_amounts_pending_applied",b"detail_amounts_pending_applied",u"pending_money",b"pending_money"]) -> None: ...
type___Amounts = Amounts

class CovidCadence(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CovidCadenceTypeValue = typing___NewType('CovidCadenceTypeValue', builtin___int)
    type___CovidCadenceTypeValue = CovidCadenceTypeValue
    CovidCadenceType: _CovidCadenceType
    class _CovidCadenceType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CovidCadence.CovidCadenceTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CCT_DO_NOT_USE = typing___cast(CovidCadence.CovidCadenceTypeValue, 0)
        PAST_DUE = typing___cast(CovidCadence.CovidCadenceTypeValue, 1)
        MATURITY_PARTIAL = typing___cast(CovidCadence.CovidCadenceTypeValue, 2)
        MATURITY_FULL = typing___cast(CovidCadence.CovidCadenceTypeValue, 3)
    CCT_DO_NOT_USE = typing___cast(CovidCadence.CovidCadenceTypeValue, 0)
    PAST_DUE = typing___cast(CovidCadence.CovidCadenceTypeValue, 1)
    MATURITY_PARTIAL = typing___cast(CovidCadence.CovidCadenceTypeValue, 2)
    MATURITY_FULL = typing___cast(CovidCadence.CovidCadenceTypeValue, 3)
    type___CovidCadenceType = CovidCadenceType

    class MaturityDetail(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        first_maturity_debit_expected_at: typing___Text = ...

        def __init__(self,
            *,
            first_maturity_debit_expected_at : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"first_maturity_debit_expected_at",b"first_maturity_debit_expected_at"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"first_maturity_debit_expected_at",b"first_maturity_debit_expected_at"]) -> None: ...
    type___MaturityDetail = MaturityDetail

    type: type___CovidCadence.CovidCadenceTypeValue = ...
    is_paused: builtin___bool = ...

    @property
    def maturity(self) -> type___CovidCadence.MaturityDetail: ...

    def __init__(self,
        *,
        type : typing___Optional[type___CovidCadence.CovidCadenceTypeValue] = None,
        is_paused : typing___Optional[builtin___bool] = None,
        maturity : typing___Optional[type___CovidCadence.MaturityDetail] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"detail",b"detail",u"is_paused",b"is_paused",u"maturity",b"maturity",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"detail",b"detail",u"is_paused",b"is_paused",u"maturity",b"maturity",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"detail",b"detail"]) -> typing_extensions___Literal["maturity"]: ...
type___CovidCadence = CovidCadence

class LoanFixedPaymentsDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    past_due_started_at: typing___Text = ...
    percentage_complete: typing___Text = ...
    first_obligation_due_date: typing___Text = ...
    next_obligation_due_date: typing___Text = ...
    forgiveness_decision_date: typing___Text = ...
    can_use_3508s: builtin___bool = ...

    @property
    def financing_terms(self) -> type___FinancingTerms.Loan: ...

    @property
    def repayment_terms(self) -> type___RepaymentTerms.FixedPayments: ...

    @property
    def due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def late_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def paid_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def scheduled_payments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ScheduledPayment]: ...

    @property
    def total_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def due_and_past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def due_and_past_due_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_past_due_and_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def late_fee_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def past_due_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def principal_balance_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def interest_balance_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def forgiveness_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def net_forgiveness_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def interest_paid_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def principal_balance_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def interest_balance_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def interest_paid_including_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def interest_accrued_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        financing_terms : typing___Optional[type___FinancingTerms.Loan] = None,
        repayment_terms : typing___Optional[type___RepaymentTerms.FixedPayments] = None,
        due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        past_due_started_at : typing___Optional[typing___Text] = None,
        past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        late_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        percentage_complete : typing___Optional[typing___Text] = None,
        scheduled_payments : typing___Optional[typing___Iterable[type___ScheduledPayment]] = None,
        total_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        due_and_past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        due_and_past_due_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_past_due_and_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        late_fee_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        past_due_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        first_obligation_due_date : typing___Optional[typing___Text] = None,
        next_obligation_due_date : typing___Optional[typing___Text] = None,
        principal_balance_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        interest_balance_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        forgiveness_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        net_forgiveness_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        forgiveness_decision_date : typing___Optional[typing___Text] = None,
        interest_paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        principal_balance_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        interest_balance_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        interest_paid_including_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        can_use_3508s : typing___Optional[builtin___bool] = None,
        interest_accrued_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"can_use_3508s",b"can_use_3508s",u"due_and_past_due_excluding_pending_money",b"due_and_past_due_excluding_pending_money",u"due_and_past_due_money",b"due_and_past_due_money",u"due_money",b"due_money",u"financing_terms",b"financing_terms",u"first_obligation_due_date",b"first_obligation_due_date",u"forgiveness_decision_date",b"forgiveness_decision_date",u"forgiveness_money",b"forgiveness_money",u"interest_accrued_money",b"interest_accrued_money",u"interest_balance_excluding_pending_money",b"interest_balance_excluding_pending_money",u"interest_balance_money",b"interest_balance_money",u"interest_paid_including_pending_money",b"interest_paid_including_pending_money",u"interest_paid_money",b"interest_paid_money",u"late_fee_excluding_pending_money",b"late_fee_excluding_pending_money",u"late_fee_money",b"late_fee_money",u"net_forgiveness_money",b"net_forgiveness_money",u"next_obligation_due_date",b"next_obligation_due_date",u"paid_money",b"paid_money",u"past_due_excluding_pending_money",b"past_due_excluding_pending_money",u"past_due_money",b"past_due_money",u"past_due_started_at",b"past_due_started_at",u"pending_money",b"pending_money",u"percentage_complete",b"percentage_complete",u"principal_balance_excluding_pending_money",b"principal_balance_excluding_pending_money",u"principal_balance_money",b"principal_balance_money",u"remaining_excluding_past_due_and_pending_money",b"remaining_excluding_past_due_and_pending_money",u"remaining_excluding_past_due_money",b"remaining_excluding_past_due_money",u"remaining_excluding_pending_money",b"remaining_excluding_pending_money",u"remaining_money",b"remaining_money",u"repayment_terms",b"repayment_terms",u"total_due_money",b"total_due_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"can_use_3508s",b"can_use_3508s",u"due_and_past_due_excluding_pending_money",b"due_and_past_due_excluding_pending_money",u"due_and_past_due_money",b"due_and_past_due_money",u"due_money",b"due_money",u"financing_terms",b"financing_terms",u"first_obligation_due_date",b"first_obligation_due_date",u"forgiveness_decision_date",b"forgiveness_decision_date",u"forgiveness_money",b"forgiveness_money",u"interest_accrued_money",b"interest_accrued_money",u"interest_balance_excluding_pending_money",b"interest_balance_excluding_pending_money",u"interest_balance_money",b"interest_balance_money",u"interest_paid_including_pending_money",b"interest_paid_including_pending_money",u"interest_paid_money",b"interest_paid_money",u"late_fee_excluding_pending_money",b"late_fee_excluding_pending_money",u"late_fee_money",b"late_fee_money",u"net_forgiveness_money",b"net_forgiveness_money",u"next_obligation_due_date",b"next_obligation_due_date",u"paid_money",b"paid_money",u"past_due_excluding_pending_money",b"past_due_excluding_pending_money",u"past_due_money",b"past_due_money",u"past_due_started_at",b"past_due_started_at",u"pending_money",b"pending_money",u"percentage_complete",b"percentage_complete",u"principal_balance_excluding_pending_money",b"principal_balance_excluding_pending_money",u"principal_balance_money",b"principal_balance_money",u"remaining_excluding_past_due_and_pending_money",b"remaining_excluding_past_due_and_pending_money",u"remaining_excluding_past_due_money",b"remaining_excluding_past_due_money",u"remaining_excluding_pending_money",b"remaining_excluding_pending_money",u"remaining_money",b"remaining_money",u"repayment_terms",b"repayment_terms",u"scheduled_payments",b"scheduled_payments",u"total_due_money",b"total_due_money"]) -> None: ...
type___LoanFixedPaymentsDetail = LoanFixedPaymentsDetail

class LoanPortionOfSalesDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    past_due_started_at: typing___Text = ...
    payment_period_ended_at: typing___Text = ...
    percentage_complete: typing___Text = ...
    percentage_complete_including_pending: typing___Text = ...

    @property
    def financing_terms(self) -> type___FinancingTerms.Loan: ...

    @property
    def repayment_terms(self) -> type___RepaymentTerms.PortionOfSales: ...

    @property
    def due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def paid_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def period_required_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def period_paid_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def period_remaining_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def total_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def due_and_past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def period_remaining_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def past_due_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_past_due_and_period_remaining_and_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_excluding_past_due_and_pending_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        financing_terms : typing___Optional[type___FinancingTerms.Loan] = None,
        repayment_terms : typing___Optional[type___RepaymentTerms.PortionOfSales] = None,
        due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        past_due_started_at : typing___Optional[typing___Text] = None,
        past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        payment_period_ended_at : typing___Optional[typing___Text] = None,
        percentage_complete : typing___Optional[typing___Text] = None,
        period_required_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        period_paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        period_remaining_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        total_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        due_and_past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        period_remaining_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        past_due_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_past_due_and_period_remaining_and_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_excluding_past_due_and_pending_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        percentage_complete_including_pending : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"due_and_past_due_money",b"due_and_past_due_money",u"due_money",b"due_money",u"financing_terms",b"financing_terms",u"paid_money",b"paid_money",u"past_due_excluding_pending_money",b"past_due_excluding_pending_money",u"past_due_money",b"past_due_money",u"past_due_started_at",b"past_due_started_at",u"payment_period_ended_at",b"payment_period_ended_at",u"pending_money",b"pending_money",u"percentage_complete",b"percentage_complete",u"percentage_complete_including_pending",b"percentage_complete_including_pending",u"period_paid_money",b"period_paid_money",u"period_remaining_excluding_pending_money",b"period_remaining_excluding_pending_money",u"period_remaining_money",b"period_remaining_money",u"period_required_money",b"period_required_money",u"remaining_excluding_past_due_and_pending_money",b"remaining_excluding_past_due_and_pending_money",u"remaining_excluding_past_due_and_period_remaining_and_pending_money",b"remaining_excluding_past_due_and_period_remaining_and_pending_money",u"remaining_excluding_past_due_money",b"remaining_excluding_past_due_money",u"remaining_excluding_pending_money",b"remaining_excluding_pending_money",u"remaining_money",b"remaining_money",u"repayment_terms",b"repayment_terms",u"total_due_money",b"total_due_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"due_and_past_due_money",b"due_and_past_due_money",u"due_money",b"due_money",u"financing_terms",b"financing_terms",u"paid_money",b"paid_money",u"past_due_excluding_pending_money",b"past_due_excluding_pending_money",u"past_due_money",b"past_due_money",u"past_due_started_at",b"past_due_started_at",u"payment_period_ended_at",b"payment_period_ended_at",u"pending_money",b"pending_money",u"percentage_complete",b"percentage_complete",u"percentage_complete_including_pending",b"percentage_complete_including_pending",u"period_paid_money",b"period_paid_money",u"period_remaining_excluding_pending_money",b"period_remaining_excluding_pending_money",u"period_remaining_money",b"period_remaining_money",u"period_required_money",b"period_required_money",u"remaining_excluding_past_due_and_pending_money",b"remaining_excluding_past_due_and_pending_money",u"remaining_excluding_past_due_and_period_remaining_and_pending_money",b"remaining_excluding_past_due_and_period_remaining_and_pending_money",u"remaining_excluding_past_due_money",b"remaining_excluding_past_due_money",u"remaining_excluding_pending_money",b"remaining_excluding_pending_money",u"remaining_money",b"remaining_money",u"repayment_terms",b"repayment_terms",u"total_due_money",b"total_due_money"]) -> None: ...
type___LoanPortionOfSalesDetail = LoanPortionOfSalesDetail

class McaDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    percentage_complete: typing___Text = ...

    @property
    def financing_terms(self) -> type___FinancingTerms.Mca: ...

    @property
    def repayment_terms(self) -> type___RepaymentTerms.PortionOfSales: ...

    @property
    def paid_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        financing_terms : typing___Optional[type___FinancingTerms.Mca] = None,
        repayment_terms : typing___Optional[type___RepaymentTerms.PortionOfSales] = None,
        paid_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        percentage_complete : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"financing_terms",b"financing_terms",u"paid_money",b"paid_money",u"percentage_complete",b"percentage_complete",u"remaining_money",b"remaining_money",u"repayment_terms",b"repayment_terms"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"financing_terms",b"financing_terms",u"paid_money",b"paid_money",u"percentage_complete",b"percentage_complete",u"remaining_money",b"remaining_money",u"repayment_terms",b"repayment_terms"]) -> None: ...
type___McaDetail = McaDetail

class RisaDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    def __init__(self,
        ) -> None: ...
type___RisaDetail = RisaDetail

class ScheduledPayment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StatusValue = typing___NewType('StatusValue', builtin___int)
    type___StatusValue = StatusValue
    Status: _Status
    class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ScheduledPayment.StatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        S_DO_NOT_USE = typing___cast(ScheduledPayment.StatusValue, 0)
        SCHEDULED = typing___cast(ScheduledPayment.StatusValue, 1)
        COMPLETED = typing___cast(ScheduledPayment.StatusValue, 2)
        DUE = typing___cast(ScheduledPayment.StatusValue, 3)
        PAST_DUE = typing___cast(ScheduledPayment.StatusValue, 4)
        CANCELED = typing___cast(ScheduledPayment.StatusValue, 5)
        PENDING = typing___cast(ScheduledPayment.StatusValue, 6)
    S_DO_NOT_USE = typing___cast(ScheduledPayment.StatusValue, 0)
    SCHEDULED = typing___cast(ScheduledPayment.StatusValue, 1)
    COMPLETED = typing___cast(ScheduledPayment.StatusValue, 2)
    DUE = typing___cast(ScheduledPayment.StatusValue, 3)
    PAST_DUE = typing___cast(ScheduledPayment.StatusValue, 4)
    CANCELED = typing___cast(ScheduledPayment.StatusValue, 5)
    PENDING = typing___cast(ScheduledPayment.StatusValue, 6)
    type___Status = Status

    status: type___ScheduledPayment.StatusValue = ...
    debited_at: typing___Text = ...
    late_fee_applied_at: typing___Text = ...

    @property
    def debit_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def late_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_non_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_past_due_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def remaining_late_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        status : typing___Optional[type___ScheduledPayment.StatusValue] = None,
        debited_at : typing___Optional[typing___Text] = None,
        debit_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        late_fee_applied_at : typing___Optional[typing___Text] = None,
        late_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_non_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_past_due_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        remaining_late_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"debit_money",b"debit_money",u"debited_at",b"debited_at",u"late_fee_applied_at",b"late_fee_applied_at",u"late_fee_money",b"late_fee_money",u"remaining_due_money",b"remaining_due_money",u"remaining_late_fee_money",b"remaining_late_fee_money",u"remaining_non_due_money",b"remaining_non_due_money",u"remaining_past_due_money",b"remaining_past_due_money",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"debit_money",b"debit_money",u"debited_at",b"debited_at",u"late_fee_applied_at",b"late_fee_applied_at",u"late_fee_money",b"late_fee_money",u"remaining_due_money",b"remaining_due_money",u"remaining_late_fee_money",b"remaining_late_fee_money",u"remaining_non_due_money",b"remaining_non_due_money",u"remaining_past_due_money",b"remaining_past_due_money",u"status",b"status"]) -> None: ...
type___ScheduledPayment = ScheduledPayment

class FinancingTerms(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Loan(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        apr_bps: typing___Text = ...
        late_fee_bps: typing___Text = ...
        post_maturity_sweeper_bps: typing___Text = ...
        fee_amount_bps: typing___Text = ...

        @property
        def financed_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def fee_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def deposit_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def outstanding_balance_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def total_owed_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            financed_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            deposit_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            outstanding_balance_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            total_owed_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            apr_bps : typing___Optional[typing___Text] = None,
            late_fee_bps : typing___Optional[typing___Text] = None,
            post_maturity_sweeper_bps : typing___Optional[typing___Text] = None,
            fee_amount_bps : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"apr_bps",b"apr_bps",u"deposit_money",b"deposit_money",u"fee_amount_bps",b"fee_amount_bps",u"fee_money",b"fee_money",u"financed_money",b"financed_money",u"late_fee_bps",b"late_fee_bps",u"outstanding_balance_money",b"outstanding_balance_money",u"post_maturity_sweeper_bps",b"post_maturity_sweeper_bps",u"total_owed_money",b"total_owed_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"apr_bps",b"apr_bps",u"deposit_money",b"deposit_money",u"fee_amount_bps",b"fee_amount_bps",u"fee_money",b"fee_money",u"financed_money",b"financed_money",u"late_fee_bps",b"late_fee_bps",u"outstanding_balance_money",b"outstanding_balance_money",u"post_maturity_sweeper_bps",b"post_maturity_sweeper_bps",u"total_owed_money",b"total_owed_money"]) -> None: ...
    type___Loan = Loan

    class Mca(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        fee_amount_bps: typing___Text = ...

        @property
        def financed_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def fee_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def deposit_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def outstanding_balance_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def total_owed_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            financed_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            deposit_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            outstanding_balance_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            total_owed_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            fee_amount_bps : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"deposit_money",b"deposit_money",u"fee_amount_bps",b"fee_amount_bps",u"fee_money",b"fee_money",u"financed_money",b"financed_money",u"outstanding_balance_money",b"outstanding_balance_money",u"total_owed_money",b"total_owed_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"deposit_money",b"deposit_money",u"fee_amount_bps",b"fee_amount_bps",u"fee_money",b"fee_money",u"financed_money",b"financed_money",u"outstanding_balance_money",b"outstanding_balance_money",u"total_owed_money",b"total_owed_money"]) -> None: ...
    type___Mca = Mca


    def __init__(self,
        ) -> None: ...
type___FinancingTerms = FinancingTerms

class RepaymentTerms(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class PortionOfSales(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        hold_rate_bps: typing___Text = ...
        payment_period: squareup___capital___common_pb2___PaymentPeriodValue = ...
        payment_period_length: builtin___int = ...

        @property
        def minimum_payment_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            hold_rate_bps : typing___Optional[typing___Text] = None,
            minimum_payment_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            payment_period : typing___Optional[squareup___capital___common_pb2___PaymentPeriodValue] = None,
            payment_period_length : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"hold_rate_bps",b"hold_rate_bps",u"minimum_payment_money",b"minimum_payment_money",u"payment_period",b"payment_period",u"payment_period_length",b"payment_period_length"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"hold_rate_bps",b"hold_rate_bps",u"minimum_payment_money",b"minimum_payment_money",u"payment_period",b"payment_period",u"payment_period_length",b"payment_period_length"]) -> None: ...
    type___PortionOfSales = PortionOfSales

    class FixedPayments(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        PaymentFrequencyValue = typing___NewType('PaymentFrequencyValue', builtin___int)
        type___PaymentFrequencyValue = PaymentFrequencyValue
        PaymentFrequency: _PaymentFrequency
        class _PaymentFrequency(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[RepaymentTerms.FixedPayments.PaymentFrequencyValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            PF_DO_NOT_USE = typing___cast(RepaymentTerms.FixedPayments.PaymentFrequencyValue, 0)
            MONTHLY = typing___cast(RepaymentTerms.FixedPayments.PaymentFrequencyValue, 1)
        PF_DO_NOT_USE = typing___cast(RepaymentTerms.FixedPayments.PaymentFrequencyValue, 0)
        MONTHLY = typing___cast(RepaymentTerms.FixedPayments.PaymentFrequencyValue, 1)
        type___PaymentFrequency = PaymentFrequency

        payment_count: builtin___int = ...
        payment_frequency: type___RepaymentTerms.FixedPayments.PaymentFrequencyValue = ...

        @property
        def payment_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def final_payment_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            payment_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            final_payment_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            payment_count : typing___Optional[builtin___int] = None,
            payment_frequency : typing___Optional[type___RepaymentTerms.FixedPayments.PaymentFrequencyValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"final_payment_money",b"final_payment_money",u"payment_count",b"payment_count",u"payment_frequency",b"payment_frequency",u"payment_money",b"payment_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"final_payment_money",b"final_payment_money",u"payment_count",b"payment_count",u"payment_frequency",b"payment_frequency",u"payment_money",b"payment_money"]) -> None: ...
    type___FixedPayments = FixedPayments


    def __init__(self,
        ) -> None: ...
type___RepaymentTerms = RepaymentTerms

class Document(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    DocumentTypeValue = typing___NewType('DocumentTypeValue', builtin___int)
    type___DocumentTypeValue = DocumentTypeValue
    DocumentType: _DocumentType
    class _DocumentType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Document.DocumentTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DT_DO_NOT_USE = typing___cast(Document.DocumentTypeValue, 0)
        FUTURE_RECEIVABLES_AGREEMENT = typing___cast(Document.DocumentTypeValue, 1)
        LOAN_AGREEMENT = typing___cast(Document.DocumentTypeValue, 2)
    DT_DO_NOT_USE = typing___cast(Document.DocumentTypeValue, 0)
    FUTURE_RECEIVABLES_AGREEMENT = typing___cast(Document.DocumentTypeValue, 1)
    LOAN_AGREEMENT = typing___cast(Document.DocumentTypeValue, 2)
    type___DocumentType = DocumentType

    created_at: typing___Text = ...
    type: type___Document.DocumentTypeValue = ...
    url: typing___Text = ...

    def __init__(self,
        *,
        created_at : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___Document.DocumentTypeValue] = None,
        url : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"type",b"type",u"url",b"url"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"type",b"type",u"url",b"url"]) -> None: ...
type___Document = Document

class SupportResource(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ResourceTypeValue = typing___NewType('ResourceTypeValue', builtin___int)
    type___ResourceTypeValue = ResourceTypeValue
    ResourceType: _ResourceType
    class _ResourceType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SupportResource.ResourceTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SR_RT_DO_NOT_USE = typing___cast(SupportResource.ResourceTypeValue, 0)
        FAQ = typing___cast(SupportResource.ResourceTypeValue, 1)
        CONTACT_SUPPORT_FORM = typing___cast(SupportResource.ResourceTypeValue, 2)
        CONTACT_SUPPORT_PHONE = typing___cast(SupportResource.ResourceTypeValue, 3)
    SR_RT_DO_NOT_USE = typing___cast(SupportResource.ResourceTypeValue, 0)
    FAQ = typing___cast(SupportResource.ResourceTypeValue, 1)
    CONTACT_SUPPORT_FORM = typing___cast(SupportResource.ResourceTypeValue, 2)
    CONTACT_SUPPORT_PHONE = typing___cast(SupportResource.ResourceTypeValue, 3)
    type___ResourceType = ResourceType

    type: type___SupportResource.ResourceTypeValue = ...
    url: typing___Text = ...
    phone: typing___Text = ...

    def __init__(self,
        *,
        type : typing___Optional[type___SupportResource.ResourceTypeValue] = None,
        url : typing___Optional[typing___Text] = None,
        phone : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"phone",b"phone",u"resource",b"resource",u"type",b"type",u"url",b"url"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"phone",b"phone",u"resource",b"resource",u"type",b"type",u"url",b"url"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"resource",b"resource"]) -> typing_extensions___Literal["url","phone"]: ...
type___SupportResource = SupportResource
