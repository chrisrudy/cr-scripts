# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.capital.capital_card import service_pb2 as squareup_dot_capital_dot_capital__card_dot_service__pb2


class CapitalCardServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCapitalCard = channel.unary_unary(
                '/squareup.capital.capital_card.service.CapitalCardService/CreateCapitalCard',
                request_serializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalCardRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalCardResponse.FromString,
                )
        self.CreateCapitalNonce = channel.unary_unary(
                '/squareup.capital.capital_card.service.CapitalCardService/CreateCapitalNonce',
                request_serializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalNonceRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalNonceResponse.FromString,
                )
        self.ExchangeCapitalNonceForEncryptedTender = channel.unary_unary(
                '/squareup.capital.capital_card.service.CapitalCardService/ExchangeCapitalNonceForEncryptedTender',
                request_serializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.ExchangeCapitalNonceForEncryptedTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.ExchangeCapitalNonceForEncryptedTenderResponse.FromString,
                )


class CapitalCardServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCapitalCard(self, request, context):
        """Creates a Capital Card that can be used to access a Capital Tender. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCapitalNonce(self, request, context):
        """Creates a nonce that can be used to charge a Capital Card with a certain merchant. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExchangeCapitalNonceForEncryptedTender(self, request, context):
        """Returns a ServerEncryptedTender for the Capital Card associated with the given nonce  
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CapitalCardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCapitalCard': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCapitalCard,
                    request_deserializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalCardRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalCardResponse.SerializeToString,
            ),
            'CreateCapitalNonce': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCapitalNonce,
                    request_deserializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalNonceRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalNonceResponse.SerializeToString,
            ),
            'ExchangeCapitalNonceForEncryptedTender': grpc.unary_unary_rpc_method_handler(
                    servicer.ExchangeCapitalNonceForEncryptedTender,
                    request_deserializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.ExchangeCapitalNonceForEncryptedTenderRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_capital__card_dot_service__pb2.ExchangeCapitalNonceForEncryptedTenderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.capital.capital_card.service.CapitalCardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CapitalCardService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCapitalCard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.capital_card.service.CapitalCardService/CreateCapitalCard',
            squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalCardRequest.SerializeToString,
            squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalCardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCapitalNonce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.capital_card.service.CapitalCardService/CreateCapitalNonce',
            squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalNonceRequest.SerializeToString,
            squareup_dot_capital_dot_capital__card_dot_service__pb2.CreateCapitalNonceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExchangeCapitalNonceForEncryptedTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.capital_card.service.CapitalCardService/ExchangeCapitalNonceForEncryptedTender',
            squareup_dot_capital_dot_capital__card_dot_service__pb2.ExchangeCapitalNonceForEncryptedTenderRequest.SerializeToString,
            squareup_dot_capital_dot_capital__card_dot_service__pb2.ExchangeCapitalNonceForEncryptedTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
