# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.capital.consumer.models_pb2 import (
    ConsumerApplication as squareup___capital___consumer___models_pb2___ConsumerApplication,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.panhandler.service_pb2 import (
    ServerEncryptedTender as squareup___panhandler___service_pb2___ServerEncryptedTender,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CapitalCard(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    pan_fidelius_token: typing___Text = ...
    security_code: typing___Text = ...
    postal_code: typing___Text = ...
    merchant_token: typing___Text = ...

    @property
    def upper_credit_limit(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def lower_credit_limit(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def expires_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        pan_fidelius_token : typing___Optional[typing___Text] = None,
        security_code : typing___Optional[typing___Text] = None,
        upper_credit_limit : typing___Optional[squareup___common___currency_pb2___Money] = None,
        lower_credit_limit : typing___Optional[squareup___common___currency_pb2___Money] = None,
        expires_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        postal_code : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"expires_at",b"expires_at",u"lower_credit_limit",b"lower_credit_limit",u"merchant_token",b"merchant_token",u"pan_fidelius_token",b"pan_fidelius_token",u"postal_code",b"postal_code",u"security_code",b"security_code",u"upper_credit_limit",b"upper_credit_limit"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"expires_at",b"expires_at",u"lower_credit_limit",b"lower_credit_limit",u"merchant_token",b"merchant_token",u"pan_fidelius_token",b"pan_fidelius_token",u"postal_code",b"postal_code",u"security_code",b"security_code",u"upper_credit_limit",b"upper_credit_limit"]) -> None: ...
type___CapitalCard = CapitalCard

class CreateCapitalCardRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    idempotence_key: typing___Text = ...
    application_token: typing___Text = ...
    consumer_application_type: squareup___capital___consumer___models_pb2___ConsumerApplication.ApplicationTypeValue = ...
    postal_code: typing___Text = ...
    merchant_token: typing___Text = ...

    @property
    def expires_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def upper_credit_limit(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def lower_credit_limit(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        idempotence_key : typing___Optional[typing___Text] = None,
        application_token : typing___Optional[typing___Text] = None,
        consumer_application_type : typing___Optional[squareup___capital___consumer___models_pb2___ConsumerApplication.ApplicationTypeValue] = None,
        expires_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        upper_credit_limit : typing___Optional[squareup___common___currency_pb2___Money] = None,
        lower_credit_limit : typing___Optional[squareup___common___currency_pb2___Money] = None,
        postal_code : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"application_token",b"application_token",u"consumer_application_type",b"consumer_application_type",u"expires_at",b"expires_at",u"idempotence_key",b"idempotence_key",u"lower_credit_limit",b"lower_credit_limit",u"merchant_token",b"merchant_token",u"postal_code",b"postal_code",u"upper_credit_limit",b"upper_credit_limit"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"application_token",b"application_token",u"consumer_application_type",b"consumer_application_type",u"expires_at",b"expires_at",u"idempotence_key",b"idempotence_key",u"lower_credit_limit",b"lower_credit_limit",u"merchant_token",b"merchant_token",u"postal_code",b"postal_code",u"upper_credit_limit",b"upper_credit_limit"]) -> None: ...
type___CreateCapitalCardRequest = CreateCapitalCardRequest

class CreateCapitalCardResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    succeeded: builtin___bool = ...
    error_msg: typing___Text = ...

    @property
    def capital_card(self) -> type___CapitalCard: ...

    def __init__(self,
        *,
        succeeded : typing___Optional[builtin___bool] = None,
        capital_card : typing___Optional[type___CapitalCard] = None,
        error_msg : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"capital_card",b"capital_card",u"error_msg",b"error_msg",u"succeeded",b"succeeded"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"capital_card",b"capital_card",u"error_msg",b"error_msg",u"succeeded",b"succeeded"]) -> None: ...
type___CreateCapitalCardResponse = CreateCapitalCardResponse

class CreateCapitalNonceRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    pan_fidelius_token: typing___Text = ...
    unit_token: typing___Text = ...

    def __init__(self,
        *,
        pan_fidelius_token : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"pan_fidelius_token",b"pan_fidelius_token",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"pan_fidelius_token",b"pan_fidelius_token",u"unit_token",b"unit_token"]) -> None: ...
type___CreateCapitalNonceRequest = CreateCapitalNonceRequest

class CreateCapitalNonceResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CreateNonceStatusValue = typing___NewType('CreateNonceStatusValue', builtin___int)
    type___CreateNonceStatusValue = CreateNonceStatusValue
    CreateNonceStatus: _CreateNonceStatus
    class _CreateNonceStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CreateCapitalNonceResponse.CreateNonceStatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CNS_DO_NOT_USE = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 0)
        OK = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 1)
        CARD_USED = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 2)
        CARD_EXPIRED = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 3)
        MERCHANT_MISMATCH = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 4)
    CNS_DO_NOT_USE = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 0)
    OK = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 1)
    CARD_USED = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 2)
    CARD_EXPIRED = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 3)
    MERCHANT_MISMATCH = typing___cast(CreateCapitalNonceResponse.CreateNonceStatusValue, 4)
    type___CreateNonceStatus = CreateNonceStatus

    status: type___CreateCapitalNonceResponse.CreateNonceStatusValue = ...
    nonce: typing___Text = ...

    def __init__(self,
        *,
        status : typing___Optional[type___CreateCapitalNonceResponse.CreateNonceStatusValue] = None,
        nonce : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"nonce",b"nonce",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"nonce",b"nonce",u"status",b"status"]) -> None: ...
type___CreateCapitalNonceResponse = CreateCapitalNonceResponse

class ExchangeCapitalNonceForEncryptedTenderRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    nonce: typing___Text = ...
    unit_token: typing___Text = ...

    def __init__(self,
        *,
        nonce : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"nonce",b"nonce",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"nonce",b"nonce",u"unit_token",b"unit_token"]) -> None: ...
type___ExchangeCapitalNonceForEncryptedTenderRequest = ExchangeCapitalNonceForEncryptedTenderRequest

class ExchangeCapitalNonceForEncryptedTenderResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ExchangeNonceStatusValue = typing___NewType('ExchangeNonceStatusValue', builtin___int)
    type___ExchangeNonceStatusValue = ExchangeNonceStatusValue
    ExchangeNonceStatus: _ExchangeNonceStatus
    class _ExchangeNonceStatus(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ENS_DO_NOT_USE = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 0)
        OK = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 1)
        NONCE_USED = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 2)
        NONCE_EXPIRED = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 3)
        UNIT_TOKEN_MISMATCH = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 4)
    ENS_DO_NOT_USE = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 0)
    OK = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 1)
    NONCE_USED = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 2)
    NONCE_EXPIRED = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 3)
    UNIT_TOKEN_MISMATCH = typing___cast(ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue, 4)
    type___ExchangeNonceStatus = ExchangeNonceStatus

    status: type___ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue = ...

    @property
    def encrypted_tender(self) -> squareup___panhandler___service_pb2___ServerEncryptedTender: ...

    def __init__(self,
        *,
        status : typing___Optional[type___ExchangeCapitalNonceForEncryptedTenderResponse.ExchangeNonceStatusValue] = None,
        encrypted_tender : typing___Optional[squareup___panhandler___service_pb2___ServerEncryptedTender] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"encrypted_tender",b"encrypted_tender",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"encrypted_tender",b"encrypted_tender",u"status",b"status"]) -> None: ...
type___ExchangeCapitalNonceForEncryptedTenderResponse = ExchangeCapitalNonceForEncryptedTenderResponse
