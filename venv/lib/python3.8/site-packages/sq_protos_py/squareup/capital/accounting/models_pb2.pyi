# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Account(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    name: typing___Text = ...
    owner_token: typing___Text = ...
    commit_id: builtin___int = ...
    is_readonly: builtin___bool = ...
    account_type: typing___Text = ...

    @property
    def balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def lower_bound_balance(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def upper_bound_balance(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        owner_token : typing___Optional[typing___Text] = None,
        balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        lower_bound_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        upper_bound_balance : typing___Optional[squareup___common___currency_pb2___Money] = None,
        commit_id : typing___Optional[builtin___int] = None,
        is_readonly : typing___Optional[builtin___bool] = None,
        account_type : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"balance",b"balance",u"commit_id",b"commit_id",u"is_readonly",b"is_readonly",u"lower_bound_balance",b"lower_bound_balance",u"name",b"name",u"owner_token",b"owner_token",u"token",b"token",u"upper_bound_balance",b"upper_bound_balance"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_type",b"account_type",u"balance",b"balance",u"commit_id",b"commit_id",u"is_readonly",b"is_readonly",u"lower_bound_balance",b"lower_bound_balance",u"name",b"name",u"owner_token",b"owner_token",u"token",b"token",u"upper_bound_balance",b"upper_bound_balance"]) -> None: ...
type___Account = Account

class Entry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    type: typing___Text = ...
    account_token: typing___Text = ...

    @property
    def to_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def from_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        account_token : typing___Optional[typing___Text] = None,
        to_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        from_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_token",b"account_token",u"amount",b"amount",u"from_amount",b"from_amount",u"to_amount",b"to_amount",u"token",b"token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_token",b"account_token",u"amount",b"amount",u"from_amount",b"from_amount",u"to_amount",b"to_amount",u"token",b"token",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"amount",b"amount"]) -> typing_extensions___Literal["to_amount","from_amount"]: ...
type___Entry = Entry

class Txn(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    type: typing___Text = ...
    owner_token: typing___Text = ...
    sequence: typing___Text = ...
    context: typing___Text = ...
    feed_sync_id: builtin___int = ...
    commit_id: builtin___int = ...

    @property
    def entries(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Entry]: ...

    @property
    def effective_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        entries : typing___Optional[typing___Iterable[type___Entry]] = None,
        effective_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        owner_token : typing___Optional[typing___Text] = None,
        sequence : typing___Optional[typing___Text] = None,
        context : typing___Optional[typing___Text] = None,
        feed_sync_id : typing___Optional[builtin___int] = None,
        commit_id : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"commit_id",b"commit_id",u"context",b"context",u"effective_at",b"effective_at",u"feed_sync_id",b"feed_sync_id",u"owner_token",b"owner_token",u"sequence",b"sequence",u"token",b"token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"commit_id",b"commit_id",u"context",b"context",u"effective_at",b"effective_at",u"entries",b"entries",u"feed_sync_id",b"feed_sync_id",u"owner_token",b"owner_token",u"sequence",b"sequence",u"token",b"token",u"type",b"type"]) -> None: ...
type___Txn = Txn
