# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.capital.accounting import query_pb2 as squareup_dot_capital_dot_accounting_dot_query__pb2
from sq_protos_py.squareup.capital.accounting import service_pb2 as squareup_dot_capital_dot_accounting_dot_service__pb2


class CapitalAccountingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateAccount = channel.unary_unary(
                '/squareup.capital.accounting.service.CapitalAccountingService/CreateAccount',
                request_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateAccountRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateAccountResponse.FromString,
                )
        self.CreateTxn = channel.unary_unary(
                '/squareup.capital.accounting.service.CapitalAccountingService/CreateTxn',
                request_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateTxnRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateTxnResponse.FromString,
                )
        self.BatchCreateTxn = channel.unary_unary(
                '/squareup.capital.accounting.service.CapitalAccountingService/BatchCreateTxn',
                request_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.BatchCreateTxnRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.BatchCreateTxnResponse.FromString,
                )
        self.FetchBatchVerificationValues = channel.unary_unary(
                '/squareup.capital.accounting.service.CapitalAccountingService/FetchBatchVerificationValues',
                request_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.FetchBatchVerificationValuesRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.FetchBatchVerificationValuesResponse.FromString,
                )
        self.Query = channel.unary_unary(
                '/squareup.capital.accounting.service.CapitalAccountingService/Query',
                request_serializer=squareup_dot_capital_dot_accounting_dot_query__pb2.QueryRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_accounting_dot_query__pb2.QueryResponse.FromString,
                )
        self.AggregateQuery = channel.unary_unary(
                '/squareup.capital.accounting.service.CapitalAccountingService/AggregateQuery',
                request_serializer=squareup_dot_capital_dot_accounting_dot_query__pb2.AggregateQueryRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_accounting_dot_query__pb2.AggregateQueryResponse.FromString,
                )


class CapitalAccountingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateTxn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchBatchVerificationValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AggregateQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CapitalAccountingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAccount,
                    request_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateAccountRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateAccountResponse.SerializeToString,
            ),
            'CreateTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTxn,
                    request_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateTxnRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.CreateTxnResponse.SerializeToString,
            ),
            'BatchCreateTxn': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateTxn,
                    request_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.BatchCreateTxnRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.BatchCreateTxnResponse.SerializeToString,
            ),
            'FetchBatchVerificationValues': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchBatchVerificationValues,
                    request_deserializer=squareup_dot_capital_dot_accounting_dot_service__pb2.FetchBatchVerificationValuesRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_accounting_dot_service__pb2.FetchBatchVerificationValuesResponse.SerializeToString,
            ),
            'Query': grpc.unary_unary_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=squareup_dot_capital_dot_accounting_dot_query__pb2.QueryRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_accounting_dot_query__pb2.QueryResponse.SerializeToString,
            ),
            'AggregateQuery': grpc.unary_unary_rpc_method_handler(
                    servicer.AggregateQuery,
                    request_deserializer=squareup_dot_capital_dot_accounting_dot_query__pb2.AggregateQueryRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_accounting_dot_query__pb2.AggregateQueryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.capital.accounting.service.CapitalAccountingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CapitalAccountingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.accounting.service.CapitalAccountingService/CreateAccount',
            squareup_dot_capital_dot_accounting_dot_service__pb2.CreateAccountRequest.SerializeToString,
            squareup_dot_capital_dot_accounting_dot_service__pb2.CreateAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.accounting.service.CapitalAccountingService/CreateTxn',
            squareup_dot_capital_dot_accounting_dot_service__pb2.CreateTxnRequest.SerializeToString,
            squareup_dot_capital_dot_accounting_dot_service__pb2.CreateTxnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateTxn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.accounting.service.CapitalAccountingService/BatchCreateTxn',
            squareup_dot_capital_dot_accounting_dot_service__pb2.BatchCreateTxnRequest.SerializeToString,
            squareup_dot_capital_dot_accounting_dot_service__pb2.BatchCreateTxnResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchBatchVerificationValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.accounting.service.CapitalAccountingService/FetchBatchVerificationValues',
            squareup_dot_capital_dot_accounting_dot_service__pb2.FetchBatchVerificationValuesRequest.SerializeToString,
            squareup_dot_capital_dot_accounting_dot_service__pb2.FetchBatchVerificationValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.accounting.service.CapitalAccountingService/Query',
            squareup_dot_capital_dot_accounting_dot_query__pb2.QueryRequest.SerializeToString,
            squareup_dot_capital_dot_accounting_dot_query__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AggregateQuery(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.accounting.service.CapitalAccountingService/AggregateQuery',
            squareup_dot_capital_dot_accounting_dot_query__pb2.AggregateQueryRequest.SerializeToString,
            squareup_dot_capital_dot_accounting_dot_query__pb2.AggregateQueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
