# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.capital.seller_dashboard import service_pb2 as squareup_dot_capital_dot_seller__dashboard_dot_service__pb2


class SellerDashboardServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetApplyingCustomerStatus = channel.unary_unary(
                '/squareup.capital.seller_dashboard.service.SellerDashboardService/GetApplyingCustomerStatus',
                request_serializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetApplyingCustomerStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetApplyingCustomerStatusResponse.FromString,
                )
        self.GetMaxFinancedAmount = channel.unary_unary(
                '/squareup.capital.seller_dashboard.service.SellerDashboardService/GetMaxFinancedAmount',
                request_serializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetMaxFinancedAmountRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetMaxFinancedAmountResponse.FromString,
                )


class SellerDashboardServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetApplyingCustomerStatus(self, request, context):
        """
        Get the status of a customer applying for a loan.

        This is a specialized endpoint for providing the seller dashboard information to route applying customers. It
        requires several different entities and needs them frequently enough (each page load) to make the overhead for
        retrieving each entity separately - even if done in parallel - too slow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMaxFinancedAmount(self, request, context):
        """
        This is a specialized endpoint for providing the seller dashboard with
        information to display the previous max offer or loan size.
        Then, after a customer applies through AFC (or LiHO), seller dashboard can show them
        how much their offer size has improved.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SellerDashboardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetApplyingCustomerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplyingCustomerStatus,
                    request_deserializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetApplyingCustomerStatusRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetApplyingCustomerStatusResponse.SerializeToString,
            ),
            'GetMaxFinancedAmount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaxFinancedAmount,
                    request_deserializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetMaxFinancedAmountRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetMaxFinancedAmountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.capital.seller_dashboard.service.SellerDashboardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SellerDashboardService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetApplyingCustomerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.seller_dashboard.service.SellerDashboardService/GetApplyingCustomerStatus',
            squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetApplyingCustomerStatusRequest.SerializeToString,
            squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetApplyingCustomerStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMaxFinancedAmount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.seller_dashboard.service.SellerDashboardService/GetMaxFinancedAmount',
            squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetMaxFinancedAmountRequest.SerializeToString,
            squareup_dot_capital_dot_seller__dashboard_dot_service__pb2.GetMaxFinancedAmountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
