# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.client.status_pb2 import (
    Status as squareup___client___status_pb2___Status,
)

from sq_protos_py.squareup.simple_instrument_store.api_pb2 import (
    VerifyAndLinkInstrumentResponse as squareup___simple_instrument_store___api_pb2___VerifyAndLinkInstrumentResponse,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class AttachLinkedInstrumentRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unique_key: typing___Text = ...
    purchase_flow_token: typing___Text = ...
    capital_customer_token: typing___Text = ...

    @property
    def instrument_service_response(self) -> squareup___simple_instrument_store___api_pb2___VerifyAndLinkInstrumentResponse: ...

    def __init__(self,
        *,
        unique_key : typing___Optional[typing___Text] = None,
        purchase_flow_token : typing___Optional[typing___Text] = None,
        capital_customer_token : typing___Optional[typing___Text] = None,
        instrument_service_response : typing___Optional[squareup___simple_instrument_store___api_pb2___VerifyAndLinkInstrumentResponse] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"capital_customer_token",b"capital_customer_token",u"instrument_service_response",b"instrument_service_response",u"purchase_flow_token",b"purchase_flow_token",u"unique_key",b"unique_key"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"capital_customer_token",b"capital_customer_token",u"instrument_service_response",b"instrument_service_response",u"purchase_flow_token",b"purchase_flow_token",u"unique_key",b"unique_key"]) -> None: ...
type___AttachLinkedInstrumentRequest = AttachLinkedInstrumentRequest

class AttachLinkedInstrumentResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StatusValue = typing___NewType('StatusValue', builtin___int)
    type___StatusValue = StatusValue
    Status: _Status
    class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AttachLinkedInstrumentResponse.StatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ALIR_INVALID_STATUS_DO_NOT_USE = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 0)
        SUCCESS = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 1)
        LINK_INSTRUMENT_FAILED = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 2)
        CARD_NOT_SUPPORTED = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 3)
        APPLICATION_EXPIRED = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 4)
        RISK_DECLINE = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 5)
        UNKNOWN = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 6)
    ALIR_INVALID_STATUS_DO_NOT_USE = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 0)
    SUCCESS = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 1)
    LINK_INSTRUMENT_FAILED = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 2)
    CARD_NOT_SUPPORTED = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 3)
    APPLICATION_EXPIRED = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 4)
    RISK_DECLINE = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 5)
    UNKNOWN = typing___cast(AttachLinkedInstrumentResponse.StatusValue, 6)
    type___Status = Status

    status: type___AttachLinkedInstrumentResponse.StatusValue = ...
    client_retryable: builtin___bool = ...

    @property
    def instrument_service_response(self) -> squareup___simple_instrument_store___api_pb2___VerifyAndLinkInstrumentResponse: ...

    @property
    def client_status(self) -> squareup___client___status_pb2___Status: ...

    def __init__(self,
        *,
        status : typing___Optional[type___AttachLinkedInstrumentResponse.StatusValue] = None,
        client_retryable : typing___Optional[builtin___bool] = None,
        instrument_service_response : typing___Optional[squareup___simple_instrument_store___api_pb2___VerifyAndLinkInstrumentResponse] = None,
        client_status : typing___Optional[squareup___client___status_pb2___Status] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"client_retryable",b"client_retryable",u"client_status",b"client_status",u"instrument_service_response",b"instrument_service_response",u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"client_retryable",b"client_retryable",u"client_status",b"client_status",u"instrument_service_response",b"instrument_service_response",u"status",b"status"]) -> None: ...
type___AttachLinkedInstrumentResponse = AttachLinkedInstrumentResponse
