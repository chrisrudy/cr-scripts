# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.capital.tender import service_pb2 as squareup_dot_capital_dot_tender_dot_service__pb2


class TenderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCapitalTender = channel.unary_unary(
                '/squareup.capital.tender.service.TenderService/CreateCapitalTender',
                request_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateCapitalTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateCapitalTenderResponse.FromString,
                )
        self.CancelCapitalTender = channel.unary_unary(
                '/squareup.capital.tender.service.TenderService/CancelCapitalTender',
                request_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.CancelCapitalTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.CancelCapitalTenderResponse.FromString,
                )
        self.CreateTestCapitalTender = channel.unary_unary(
                '/squareup.capital.tender.service.TenderService/CreateTestCapitalTender',
                request_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateTestCapitalTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateTestCapitalTenderResponse.FromString,
                )
        self.HasHeldTenderAuthorization = channel.unary_unary(
                '/squareup.capital.tender.service.TenderService/HasHeldTenderAuthorization',
                request_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.HasHeldTenderAuthorizationRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.HasHeldTenderAuthorizationResponse.FromString,
                )
        self.UpdateCapitalTender = channel.unary_unary(
                '/squareup.capital.tender.service.TenderService/UpdateCapitalTender',
                request_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.UpdateCapitalTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.UpdateCapitalTenderResponse.FromString,
                )


class TenderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCapitalTender(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelCapitalTender(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTestCapitalTender(self, request, context):
        """This API is only used in staging for acceptance tests. PRODUCTION will always fail.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasHeldTenderAuthorization(self, request, context):
        """Returns whether a Tender has a held Tender Authorization, ie if card has been swiped successfully 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCapitalTender(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TenderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCapitalTender': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCapitalTender,
                    request_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateCapitalTenderRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateCapitalTenderResponse.SerializeToString,
            ),
            'CancelCapitalTender': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelCapitalTender,
                    request_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.CancelCapitalTenderRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.CancelCapitalTenderResponse.SerializeToString,
            ),
            'CreateTestCapitalTender': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTestCapitalTender,
                    request_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateTestCapitalTenderRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.CreateTestCapitalTenderResponse.SerializeToString,
            ),
            'HasHeldTenderAuthorization': grpc.unary_unary_rpc_method_handler(
                    servicer.HasHeldTenderAuthorization,
                    request_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.HasHeldTenderAuthorizationRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.HasHeldTenderAuthorizationResponse.SerializeToString,
            ),
            'UpdateCapitalTender': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCapitalTender,
                    request_deserializer=squareup_dot_capital_dot_tender_dot_service__pb2.UpdateCapitalTenderRequest.FromString,
                    response_serializer=squareup_dot_capital_dot_tender_dot_service__pb2.UpdateCapitalTenderResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.capital.tender.service.TenderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TenderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCapitalTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.tender.service.TenderService/CreateCapitalTender',
            squareup_dot_capital_dot_tender_dot_service__pb2.CreateCapitalTenderRequest.SerializeToString,
            squareup_dot_capital_dot_tender_dot_service__pb2.CreateCapitalTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelCapitalTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.tender.service.TenderService/CancelCapitalTender',
            squareup_dot_capital_dot_tender_dot_service__pb2.CancelCapitalTenderRequest.SerializeToString,
            squareup_dot_capital_dot_tender_dot_service__pb2.CancelCapitalTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTestCapitalTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.tender.service.TenderService/CreateTestCapitalTender',
            squareup_dot_capital_dot_tender_dot_service__pb2.CreateTestCapitalTenderRequest.SerializeToString,
            squareup_dot_capital_dot_tender_dot_service__pb2.CreateTestCapitalTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasHeldTenderAuthorization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.tender.service.TenderService/HasHeldTenderAuthorization',
            squareup_dot_capital_dot_tender_dot_service__pb2.HasHeldTenderAuthorizationRequest.SerializeToString,
            squareup_dot_capital_dot_tender_dot_service__pb2.HasHeldTenderAuthorizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCapitalTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.capital.tender.service.TenderService/UpdateCapitalTender',
            squareup_dot_capital_dot_tender_dot_service__pb2.UpdateCapitalTenderRequest.SerializeToString,
            squareup_dot_capital_dot_tender_dot_service__pb2.UpdateCapitalTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
