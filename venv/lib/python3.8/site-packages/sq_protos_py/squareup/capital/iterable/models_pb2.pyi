# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

EventNameValue = typing___NewType('EventNameValue', builtin___int)
type___EventNameValue = EventNameValue
EventName: _EventName
class _EventName(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[EventNameValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    EN_DO_NOT_USE = typing___cast(EventNameValue, 0)
    BECOME_MARKETABLE = typing___cast(EventNameValue, 1)
EN_DO_NOT_USE = typing___cast(EventNameValue, 0)
BECOME_MARKETABLE = typing___cast(EventNameValue, 1)
type___EventName = EventName

ProductStateValue = typing___NewType('ProductStateValue', builtin___int)
type___ProductStateValue = ProductStateValue
ProductState: _ProductState
class _ProductState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ProductStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    PS_DO_NOT_USE = typing___cast(ProductStateValue, 0)
    NO_PRIOR_PLAN = typing___cast(ProductStateValue, 1)
    OPEN_PLAN = typing___cast(ProductStateValue, 2)
    OPEN_PLAN_WITH_OFFER = typing___cast(ProductStateValue, 3)
    CLOSED_PLAN = typing___cast(ProductStateValue, 4)
    CLOSED_PLAN_WITH_OFFER = typing___cast(ProductStateValue, 5)
PS_DO_NOT_USE = typing___cast(ProductStateValue, 0)
NO_PRIOR_PLAN = typing___cast(ProductStateValue, 1)
OPEN_PLAN = typing___cast(ProductStateValue, 2)
OPEN_PLAN_WITH_OFFER = typing___cast(ProductStateValue, 3)
CLOSED_PLAN = typing___cast(ProductStateValue, 4)
CLOSED_PLAN_WITH_OFFER = typing___cast(ProductStateValue, 5)
type___ProductState = ProductState

class Merchant(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    marketable_offers_count: builtin___int = ...
    optimal_next_email_send_time: typing___Text = ...

    @property
    def highest_marketable_offer(self) -> type___Offer: ...

    @property
    def units(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Unit]: ...

    @property
    def updated_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def aggregated_financed_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def experiment_assignments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ExperimentAssignment]: ...

    def __init__(self,
        *,
        highest_marketable_offer : typing___Optional[type___Offer] = None,
        marketable_offers_count : typing___Optional[builtin___int] = None,
        units : typing___Optional[typing___Iterable[type___Unit]] = None,
        updated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        aggregated_financed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        experiment_assignments : typing___Optional[typing___Iterable[type___ExperimentAssignment]] = None,
        optimal_next_email_send_time : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aggregated_financed_amount",b"aggregated_financed_amount",u"highest_marketable_offer",b"highest_marketable_offer",u"marketable_offers_count",b"marketable_offers_count",u"optimal_next_email_send_time",b"optimal_next_email_send_time",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aggregated_financed_amount",b"aggregated_financed_amount",u"experiment_assignments",b"experiment_assignments",u"highest_marketable_offer",b"highest_marketable_offer",u"marketable_offers_count",b"marketable_offers_count",u"optimal_next_email_send_time",b"optimal_next_email_send_time",u"units",b"units",u"updated_at",b"updated_at"]) -> None: ...
type___Merchant = Merchant

class Unit(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    has_marketable_offer: builtin___bool = ...
    nickname: typing___Text = ...

    @property
    def marketable_offer(self) -> type___Offer: ...

    @property
    def product_state(self) -> type___ProductStates: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        has_marketable_offer : typing___Optional[builtin___bool] = None,
        marketable_offer : typing___Optional[type___Offer] = None,
        product_state : typing___Optional[type___ProductStates] = None,
        nickname : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"has_marketable_offer",b"has_marketable_offer",u"marketable_offer",b"marketable_offer",u"nickname",b"nickname",u"product_state",b"product_state",u"token",b"token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"has_marketable_offer",b"has_marketable_offer",u"marketable_offer",b"marketable_offer",u"nickname",b"nickname",u"product_state",b"product_state",u"token",b"token"]) -> None: ...
type___Unit = Unit

class Offer(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    offer_set_token: typing___Text = ...
    product: typing___Text = ...
    hold_rate: builtin___float = ...
    application_status: typing___Text = ...

    @property
    def financed_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def fee_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def total_owed_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        offer_set_token : typing___Optional[typing___Text] = None,
        product : typing___Optional[typing___Text] = None,
        financed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        fee_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        total_owed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        hold_rate : typing___Optional[builtin___float] = None,
        application_status : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"application_status",b"application_status",u"fee_amount",b"fee_amount",u"financed_amount",b"financed_amount",u"hold_rate",b"hold_rate",u"offer_set_token",b"offer_set_token",u"product",b"product",u"total_owed_amount",b"total_owed_amount"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"application_status",b"application_status",u"fee_amount",b"fee_amount",u"financed_amount",b"financed_amount",u"hold_rate",b"hold_rate",u"offer_set_token",b"offer_set_token",u"product",b"product",u"total_owed_amount",b"total_owed_amount"]) -> None: ...
type___Offer = Offer

class ProductStates(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    flex_loan_product_state: type___ProductStateValue = ...

    def __init__(self,
        *,
        flex_loan_product_state : typing___Optional[type___ProductStateValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"flex_loan_product_state",b"flex_loan_product_state"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"flex_loan_product_state",b"flex_loan_product_state"]) -> None: ...
type___ProductStates = ProductStates

class ExperimentAssignment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    experiment_id: typing___Text = ...
    experiment_variation: typing___Text = ...

    def __init__(self,
        *,
        experiment_id : typing___Optional[typing___Text] = None,
        experiment_variation : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"experiment_id",b"experiment_id",u"experiment_variation",b"experiment_variation"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"experiment_id",b"experiment_id",u"experiment_variation",b"experiment_variation"]) -> None: ...
type___ExperimentAssignment = ExperimentAssignment
