# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.beemo.internal import janitor_pb2 as squareup_dot_beemo_dot_internal_dot_janitor__pb2


class BeemoJanitorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DeleteCollectorPayments = channel.unary_unary(
                '/squareup.beemo.internal.janitor.BeemoJanitorService/DeleteCollectorPayments',
                request_serializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.DeleteCollectorPaymentsRequest.SerializeToString,
                response_deserializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.DeleteCollectorPaymentsResponse.FromString,
                )
        self.GetCollectorPayments = channel.unary_unary(
                '/squareup.beemo.internal.janitor.BeemoJanitorService/GetCollectorPayments',
                request_serializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.GetCollectorPaymentsRequest.SerializeToString,
                response_deserializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.GetCollectorPaymentsResponse.FromString,
                )


class BeemoJanitorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DeleteCollectorPayments(self, request, context):
        """Delete rows from collector raw_requests table.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollectorPayments(self, request, context):
        """this service will be used by prismo-cli to pull data from beemo for reconciliation
        instead of beemo -> samsa -> prismo -> beemo (for deletion)
        we will go prismo -> beemo -> reconcliation (no more deletion)
        clients will specify a range of ids and the service will return the proto form of those ids
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BeemoJanitorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DeleteCollectorPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollectorPayments,
                    request_deserializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.DeleteCollectorPaymentsRequest.FromString,
                    response_serializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.DeleteCollectorPaymentsResponse.SerializeToString,
            ),
            'GetCollectorPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollectorPayments,
                    request_deserializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.GetCollectorPaymentsRequest.FromString,
                    response_serializer=squareup_dot_beemo_dot_internal_dot_janitor__pb2.GetCollectorPaymentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beemo.internal.janitor.BeemoJanitorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BeemoJanitorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DeleteCollectorPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beemo.internal.janitor.BeemoJanitorService/DeleteCollectorPayments',
            squareup_dot_beemo_dot_internal_dot_janitor__pb2.DeleteCollectorPaymentsRequest.SerializeToString,
            squareup_dot_beemo_dot_internal_dot_janitor__pb2.DeleteCollectorPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCollectorPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beemo.internal.janitor.BeemoJanitorService/GetCollectorPayments',
            squareup_dot_beemo_dot_internal_dot_janitor__pb2.GetCollectorPaymentsRequest.SerializeToString,
            squareup_dot_beemo_dot_internal_dot_janitor__pb2.GetCollectorPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
