# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.beemo.v2.itemizedpayment_v2_pb2 import (
    CreateItemizedPaymentRequest as squareup___beemo___v2___itemizedpayment_v2_pb2___CreateItemizedPaymentRequest,
    ServiceAgentValue as squareup___beemo___v2___itemizedpayment_v2_pb2___ServiceAgentValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.items.items_pb2 import (
    Fee as squareup___items___items_pb2___Fee,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

LineTypeValue = typing___NewType('LineTypeValue', builtin___int)
type___LineTypeValue = LineTypeValue
LineType: _LineType
class _LineType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LineTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ITEM = typing___cast(LineTypeValue, 0)
    DISCOUNT = typing___cast(LineTypeValue, 1)
    FEE = typing___cast(LineTypeValue, 2)
    TAX = typing___cast(LineTypeValue, 3)
    REFUND = typing___cast(LineTypeValue, 4)
    TIP = typing___cast(LineTypeValue, 5)
    CREDIT = typing___cast(LineTypeValue, 6)
    CASH = typing___cast(LineTypeValue, 7)
    GIFT_CARD = typing___cast(LineTypeValue, 8)
ITEM = typing___cast(LineTypeValue, 0)
DISCOUNT = typing___cast(LineTypeValue, 1)
FEE = typing___cast(LineTypeValue, 2)
TAX = typing___cast(LineTypeValue, 3)
REFUND = typing___cast(LineTypeValue, 4)
TIP = typing___cast(LineTypeValue, 5)
CREDIT = typing___cast(LineTypeValue, 6)
CASH = typing___cast(LineTypeValue, 7)
GIFT_CARD = typing___cast(LineTypeValue, 8)
type___LineType = LineType

class ItemCategory(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    name: typing___Text = ...
    version: builtin___int = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        version : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"version",b"version"]) -> None: ...
type___ItemCategory = ItemCategory

class CogsObject(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    base64_object_wrapper: typing___Text = ...

    def __init__(self,
        *,
        base64_object_wrapper : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"base64_object_wrapper",b"base64_object_wrapper"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"base64_object_wrapper",b"base64_object_wrapper"]) -> None: ...
type___CogsObject = CogsObject

class Adjustment(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    CalculationGroupValue = typing___NewType('CalculationGroupValue', builtin___int)
    type___CalculationGroupValue = CalculationGroupValue
    CalculationGroup: _CalculationGroup
    class _CalculationGroup(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Adjustment.CalculationGroupValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DISCOUNT_PERCENTAGE_PHASE = typing___cast(Adjustment.CalculationGroupValue, 0)
        DISCOUNT_AMOUNT_PHASE = typing___cast(Adjustment.CalculationGroupValue, 1)
        FEE_SUBTOTAL_PHASE = typing___cast(Adjustment.CalculationGroupValue, 2)
        FEE_TOTAL_PHASE = typing___cast(Adjustment.CalculationGroupValue, 3)
        TIP_PHASE = typing___cast(Adjustment.CalculationGroupValue, 4)
        SWEDISH_ROUNDING_PHASE = typing___cast(Adjustment.CalculationGroupValue, 5)
        SURCHARGE_PHASE = typing___cast(Adjustment.CalculationGroupValue, 6)
    DISCOUNT_PERCENTAGE_PHASE = typing___cast(Adjustment.CalculationGroupValue, 0)
    DISCOUNT_AMOUNT_PHASE = typing___cast(Adjustment.CalculationGroupValue, 1)
    FEE_SUBTOTAL_PHASE = typing___cast(Adjustment.CalculationGroupValue, 2)
    FEE_TOTAL_PHASE = typing___cast(Adjustment.CalculationGroupValue, 3)
    TIP_PHASE = typing___cast(Adjustment.CalculationGroupValue, 4)
    SWEDISH_ROUNDING_PHASE = typing___cast(Adjustment.CalculationGroupValue, 5)
    SURCHARGE_PHASE = typing___cast(Adjustment.CalculationGroupValue, 6)
    type___CalculationGroup = CalculationGroup

    id: typing___Text = ...
    calculation_phase: type___Adjustment.CalculationGroupValue = ...
    type_id: typing___Text = ...
    type: typing___Text = ...
    currency_code: typing___Text = ...
    name: typing___Text = ...
    percentage: builtin___float = ...
    included_in_price: builtin___bool = ...
    applied_amount_cents: builtin___int = ...
    inclusion_type: squareup___items___items_pb2___Fee.InclusionTypeValue = ...
    amount_cents: builtin___int = ...
    coupon_token: typing___Text = ...

    @property
    def applied_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def amount_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def child_adjustments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Itemization.ItemizationAdjustment]: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        calculation_phase : typing___Optional[type___Adjustment.CalculationGroupValue] = None,
        type_id : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        currency_code : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        percentage : typing___Optional[builtin___float] = None,
        included_in_price : typing___Optional[builtin___bool] = None,
        applied_amount_cents : typing___Optional[builtin___int] = None,
        applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        inclusion_type : typing___Optional[squareup___items___items_pb2___Fee.InclusionTypeValue] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        amount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        coupon_token : typing___Optional[typing___Text] = None,
        child_adjustments : typing___Optional[typing___Iterable[type___Itemization.ItemizationAdjustment]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"amount_money",b"amount_money",u"applied_amount_cents",b"applied_amount_cents",u"applied_money",b"applied_money",u"calculation_phase",b"calculation_phase",u"coupon_token",b"coupon_token",u"currency_code",b"currency_code",u"id",b"id",u"included_in_price",b"included_in_price",u"inclusion_type",b"inclusion_type",u"name",b"name",u"percentage",b"percentage",u"type",b"type",u"type_id",b"type_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"amount_money",b"amount_money",u"applied_amount_cents",b"applied_amount_cents",u"applied_money",b"applied_money",u"calculation_phase",b"calculation_phase",u"child_adjustments",b"child_adjustments",u"coupon_token",b"coupon_token",u"currency_code",b"currency_code",u"id",b"id",u"included_in_price",b"included_in_price",u"inclusion_type",b"inclusion_type",u"name",b"name",u"percentage",b"percentage",u"type",b"type",u"type_id",b"type_id"]) -> None: ...
type___Adjustment = Adjustment

class Reward(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id"]) -> None: ...
type___Reward = Reward

class Discount(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    name: typing___Text = ...
    amount_cents: builtin___int = ...
    applied_amount_cents: builtin___int = ...
    currency_code: typing___Text = ...
    percentage: builtin___float = ...
    version: builtin___int = ...
    deleted: builtin___bool = ...
    pin_required: builtin___bool = ...

    @property
    def reward(self) -> type___Reward: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        name : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        applied_amount_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[typing___Text] = None,
        percentage : typing___Optional[builtin___float] = None,
        version : typing___Optional[builtin___int] = None,
        deleted : typing___Optional[builtin___bool] = None,
        pin_required : typing___Optional[builtin___bool] = None,
        reward : typing___Optional[type___Reward] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"applied_amount_cents",b"applied_amount_cents",u"currency_code",b"currency_code",u"deleted",b"deleted",u"id",b"id",u"name",b"name",u"percentage",b"percentage",u"pin_required",b"pin_required",u"reward",b"reward",u"version",b"version"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"applied_amount_cents",b"applied_amount_cents",u"currency_code",b"currency_code",u"deleted",b"deleted",u"id",b"id",u"name",b"name",u"percentage",b"percentage",u"pin_required",b"pin_required",u"reward",b"reward",u"version",b"version"]) -> None: ...
type___Discount = Discount

class Itemization(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ItemizationAdjustment(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        id: typing___Text = ...
        currency_code: typing___Text = ...
        applied_amount_cents: builtin___int = ...

        @property
        def applied_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def taxable_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            id : typing___Optional[typing___Text] = None,
            currency_code : typing___Optional[typing___Text] = None,
            applied_amount_cents : typing___Optional[builtin___int] = None,
            applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            taxable_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"applied_amount_cents",b"applied_amount_cents",u"applied_money",b"applied_money",u"currency_code",b"currency_code",u"id",b"id",u"taxable_money",b"taxable_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"applied_amount_cents",b"applied_amount_cents",u"applied_money",b"applied_money",u"currency_code",b"currency_code",u"id",b"id",u"taxable_money",b"taxable_money"]) -> None: ...
    type___ItemizationAdjustment = ItemizationAdjustment

    class ItemModifier(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        id: typing___Text = ...
        name: typing___Text = ...

        @property
        def price_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            id : typing___Optional[typing___Text] = None,
            name : typing___Optional[typing___Text] = None,
            price_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"price_money",b"price_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"id",b"id",u"name",b"name",u"price_money",b"price_money"]) -> None: ...
    type___ItemModifier = ItemModifier

    quantity: builtin___float = ...
    item_id: typing___Text = ...
    total_amount_cents: builtin___int = ...
    price_cents: builtin___int = ...
    discount_amount_cents: builtin___int = ...
    tax_rate: typing___Text = ...
    tax_cents: builtin___int = ...
    currency_code: typing___Text = ...
    item_version: builtin___int = ...
    item_variation_id: typing___Text = ...
    item_variation_name: typing___Text = ...
    created_at: typing___Text = ...
    notes: typing___Text = ...
    item_name: typing___Text = ...
    item_description: typing___Text = ...
    name: typing___Text = ...
    description: typing___Text = ...
    display_hex_color: typing___Text = ...
    image_token: typing___Text = ...
    color: typing___Text = ...

    @property
    def discounts(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Discount]: ...

    @property
    def item_categories(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ItemCategory]: ...

    @property
    def total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def price_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def adjustments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Itemization.ItemizationAdjustment]: ...

    @property
    def applied_modifier_options(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Itemization.ItemModifier]: ...

    def __init__(self,
        *,
        quantity : typing___Optional[builtin___float] = None,
        item_id : typing___Optional[typing___Text] = None,
        total_amount_cents : typing___Optional[builtin___int] = None,
        price_cents : typing___Optional[builtin___int] = None,
        discount_amount_cents : typing___Optional[builtin___int] = None,
        tax_rate : typing___Optional[typing___Text] = None,
        tax_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[typing___Text] = None,
        item_version : typing___Optional[builtin___int] = None,
        item_variation_id : typing___Optional[typing___Text] = None,
        item_variation_name : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[typing___Text] = None,
        discounts : typing___Optional[typing___Iterable[type___Discount]] = None,
        item_categories : typing___Optional[typing___Iterable[type___ItemCategory]] = None,
        notes : typing___Optional[typing___Text] = None,
        item_name : typing___Optional[typing___Text] = None,
        item_description : typing___Optional[typing___Text] = None,
        total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        price_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        adjustments : typing___Optional[typing___Iterable[type___Itemization.ItemizationAdjustment]] = None,
        name : typing___Optional[typing___Text] = None,
        description : typing___Optional[typing___Text] = None,
        display_hex_color : typing___Optional[typing___Text] = None,
        image_token : typing___Optional[typing___Text] = None,
        applied_modifier_options : typing___Optional[typing___Iterable[type___Itemization.ItemModifier]] = None,
        color : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"color",b"color",u"created_at",b"created_at",u"currency_code",b"currency_code",u"description",b"description",u"discount_amount_cents",b"discount_amount_cents",u"display_hex_color",b"display_hex_color",u"image_token",b"image_token",u"item_description",b"item_description",u"item_id",b"item_id",u"item_name",b"item_name",u"item_variation_id",b"item_variation_id",u"item_variation_name",b"item_variation_name",u"item_version",b"item_version",u"name",b"name",u"notes",b"notes",u"price_cents",b"price_cents",u"price_money",b"price_money",u"quantity",b"quantity",u"tax_cents",b"tax_cents",u"tax_rate",b"tax_rate",u"total_amount_cents",b"total_amount_cents",u"total_money",b"total_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"adjustments",b"adjustments",u"applied_modifier_options",b"applied_modifier_options",u"color",b"color",u"created_at",b"created_at",u"currency_code",b"currency_code",u"description",b"description",u"discount_amount_cents",b"discount_amount_cents",u"discounts",b"discounts",u"display_hex_color",b"display_hex_color",u"image_token",b"image_token",u"item_categories",b"item_categories",u"item_description",b"item_description",u"item_id",b"item_id",u"item_name",b"item_name",u"item_variation_id",b"item_variation_id",u"item_variation_name",b"item_variation_name",u"item_version",b"item_version",u"name",b"name",u"notes",b"notes",u"price_cents",b"price_cents",u"price_money",b"price_money",u"quantity",b"quantity",u"tax_cents",b"tax_cents",u"tax_rate",b"tax_rate",u"total_amount_cents",b"total_amount_cents",u"total_money",b"total_money"]) -> None: ...
type___Itemization = Itemization

class PaymentMetadata(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    payment_id: typing___Text = ...
    intent_currency: typing___Text = ...
    intent_tip_amount_cents: builtin___int = ...
    intent_tax_amount_cents: builtin___int = ...
    intent_total_amount_cents: builtin___int = ...
    card_present: builtin___bool = ...
    card_brand: typing___Text = ...
    pan_suffix: typing___Text = ...
    fidelius_token: typing___Text = ...
    capture_timestamp: typing___Text = ...
    authorize_timestamp: typing___Text = ...
    client_store_and_forward_created_at: typing___Text = ...

    def __init__(self,
        *,
        payment_id : typing___Optional[typing___Text] = None,
        intent_currency : typing___Optional[typing___Text] = None,
        intent_tip_amount_cents : typing___Optional[builtin___int] = None,
        intent_tax_amount_cents : typing___Optional[builtin___int] = None,
        intent_total_amount_cents : typing___Optional[builtin___int] = None,
        card_present : typing___Optional[builtin___bool] = None,
        card_brand : typing___Optional[typing___Text] = None,
        pan_suffix : typing___Optional[typing___Text] = None,
        fidelius_token : typing___Optional[typing___Text] = None,
        capture_timestamp : typing___Optional[typing___Text] = None,
        authorize_timestamp : typing___Optional[typing___Text] = None,
        client_store_and_forward_created_at : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"authorize_timestamp",b"authorize_timestamp",u"capture_timestamp",b"capture_timestamp",u"card_brand",b"card_brand",u"card_present",b"card_present",u"client_store_and_forward_created_at",b"client_store_and_forward_created_at",u"fidelius_token",b"fidelius_token",u"intent_currency",b"intent_currency",u"intent_tax_amount_cents",b"intent_tax_amount_cents",u"intent_tip_amount_cents",b"intent_tip_amount_cents",u"intent_total_amount_cents",b"intent_total_amount_cents",u"pan_suffix",b"pan_suffix",u"payment_id",b"payment_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"authorize_timestamp",b"authorize_timestamp",u"capture_timestamp",b"capture_timestamp",u"card_brand",b"card_brand",u"card_present",b"card_present",u"client_store_and_forward_created_at",b"client_store_and_forward_created_at",u"fidelius_token",b"fidelius_token",u"intent_currency",b"intent_currency",u"intent_tax_amount_cents",b"intent_tax_amount_cents",u"intent_tip_amount_cents",b"intent_tip_amount_cents",u"intent_total_amount_cents",b"intent_total_amount_cents",u"pan_suffix",b"pan_suffix",u"payment_id",b"payment_id"]) -> None: ...
type___PaymentMetadata = PaymentMetadata

class PaymentTag(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    employee_token: typing___Text = ...

    def __init__(self,
        *,
        employee_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"employee_token",b"employee_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"employee_token",b"employee_token"]) -> None: ...
type___PaymentTag = PaymentTag

class CreateItemizationRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    RequestOriginValue = typing___NewType('RequestOriginValue', builtin___int)
    type___RequestOriginValue = RequestOriginValue
    RequestOrigin: _RequestOrigin
    class _RequestOrigin(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CreateItemizationRequest.RequestOriginValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PAYMENTS = typing___cast(CreateItemizationRequest.RequestOriginValue, 1)
        WEB = typing___cast(CreateItemizationRequest.RequestOriginValue, 2)
        BEEMO = typing___cast(CreateItemizationRequest.RequestOriginValue, 3)
    PAYMENTS = typing___cast(CreateItemizationRequest.RequestOriginValue, 1)
    WEB = typing___cast(CreateItemizationRequest.RequestOriginValue, 2)
    BEEMO = typing___cast(CreateItemizationRequest.RequestOriginValue, 3)
    type___RequestOrigin = RequestOrigin

    class HttpHeaders(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        authorization: typing___Text = ...
        user_agent: typing___Text = ...
        geo_position: typing___Text = ...
        x_device_name: typing___Text = ...
        time_zone: typing___Text = ...
        x_device_installation_id: typing___Text = ...
        x_request_uuid: typing___Text = ...
        x_device_hash_mac: typing___Text = ...
        x_device_id: typing___Text = ...
        x_device_hash_sha1_mac: typing___Text = ...
        device_udid: typing___Text = ...

        def __init__(self,
            *,
            authorization : typing___Optional[typing___Text] = None,
            user_agent : typing___Optional[typing___Text] = None,
            geo_position : typing___Optional[typing___Text] = None,
            x_device_name : typing___Optional[typing___Text] = None,
            time_zone : typing___Optional[typing___Text] = None,
            x_device_installation_id : typing___Optional[typing___Text] = None,
            x_request_uuid : typing___Optional[typing___Text] = None,
            x_device_hash_mac : typing___Optional[typing___Text] = None,
            x_device_id : typing___Optional[typing___Text] = None,
            x_device_hash_sha1_mac : typing___Optional[typing___Text] = None,
            device_udid : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"authorization",b"authorization",u"device_udid",b"device_udid",u"geo_position",b"geo_position",u"time_zone",b"time_zone",u"user_agent",b"user_agent",u"x_device_hash_mac",b"x_device_hash_mac",u"x_device_hash_sha1_mac",b"x_device_hash_sha1_mac",u"x_device_id",b"x_device_id",u"x_device_installation_id",b"x_device_installation_id",u"x_device_name",b"x_device_name",u"x_request_uuid",b"x_request_uuid"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"authorization",b"authorization",u"device_udid",b"device_udid",u"geo_position",b"geo_position",u"time_zone",b"time_zone",u"user_agent",b"user_agent",u"x_device_hash_mac",b"x_device_hash_mac",u"x_device_hash_sha1_mac",b"x_device_hash_sha1_mac",u"x_device_id",b"x_device_id",u"x_device_installation_id",b"x_device_installation_id",u"x_device_name",b"x_device_name",u"x_request_uuid",b"x_request_uuid"]) -> None: ...
    type___HttpHeaders = HttpHeaders

    class OtherTender(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        TenderTypeValue = typing___NewType('TenderTypeValue', builtin___int)
        type___TenderTypeValue = TenderTypeValue
        TenderType: _TenderType
        class _TenderType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CreateItemizationRequest.OtherTender.TenderTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            CHECK = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 1)
            MERCHANT_GIFT_CARD = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 2)
            DEBIT = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 3)
            CREDIT_OR_DEBIT = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 4)
            E_MONEY = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 5)
            DEBIT_OR_CREDIT = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 6)
            THIRD_PARTY_CARD = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 7)
            CUSTOM = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 100)
        CHECK = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 1)
        MERCHANT_GIFT_CARD = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 2)
        DEBIT = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 3)
        CREDIT_OR_DEBIT = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 4)
        E_MONEY = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 5)
        DEBIT_OR_CREDIT = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 6)
        THIRD_PARTY_CARD = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 7)
        CUSTOM = typing___cast(CreateItemizationRequest.OtherTender.TenderTypeValue, 100)
        type___TenderType = TenderType

        tender_type: type___CreateItemizationRequest.OtherTender.TenderTypeValue = ...
        tender_name: typing___Text = ...
        tender_note: typing___Text = ...

        def __init__(self,
            *,
            tender_type : typing___Optional[type___CreateItemizationRequest.OtherTender.TenderTypeValue] = None,
            tender_name : typing___Optional[typing___Text] = None,
            tender_note : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"tender_name",b"tender_name",u"tender_note",b"tender_note",u"tender_type",b"tender_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"tender_name",b"tender_name",u"tender_note",b"tender_note",u"tender_type",b"tender_type"]) -> None: ...
    type___OtherTender = OtherTender

    class BeemoMetaData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class UnitemizedPaymentInfo(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            EventTypeValue = typing___NewType('EventTypeValue', builtin___int)
            type___EventTypeValue = EventTypeValue
            EventType: _EventType
            class _EventType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                CASH_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 1)
                CARD_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 2)
                FREE_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 3)
                INCENTED_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 4)
                BALANCE_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 5)
                WALLET_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 6)
                OTHER_TENDER_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 7)
            CASH_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 1)
            CARD_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 2)
            FREE_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 3)
            INCENTED_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 4)
            BALANCE_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 5)
            WALLET_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 6)
            OTHER_TENDER_PAYMENT = typing___cast(CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue, 7)
            type___EventType = EventType

            event_type: type___CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue = ...
            payment_token: typing___Text = ...

            @property
            def payment_full_total(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def tax(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def tip(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def tendered(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def change(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def other_tender(self) -> type___CreateItemizationRequest.OtherTender: ...

            def __init__(self,
                *,
                event_type : typing___Optional[type___CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo.EventTypeValue] = None,
                payment_full_total : typing___Optional[squareup___common___currency_pb2___Money] = None,
                tax : typing___Optional[squareup___common___currency_pb2___Money] = None,
                tip : typing___Optional[squareup___common___currency_pb2___Money] = None,
                tendered : typing___Optional[squareup___common___currency_pb2___Money] = None,
                change : typing___Optional[squareup___common___currency_pb2___Money] = None,
                payment_token : typing___Optional[typing___Text] = None,
                other_tender : typing___Optional[type___CreateItemizationRequest.OtherTender] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"change",b"change",u"event_type",b"event_type",u"other_tender",b"other_tender",u"payment_full_total",b"payment_full_total",u"payment_token",b"payment_token",u"tax",b"tax",u"tendered",b"tendered",u"tip",b"tip"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"change",b"change",u"event_type",b"event_type",u"other_tender",b"other_tender",u"payment_full_total",b"payment_full_total",u"payment_token",b"payment_token",u"tax",b"tax",u"tendered",b"tendered",u"tip",b"tip"]) -> None: ...
        type___UnitemizedPaymentInfo = UnitemizedPaymentInfo

        use_fallback_mapper: builtin___bool = ...

        @property
        def unitemized_payment_info(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo]: ...

        def __init__(self,
            *,
            use_fallback_mapper : typing___Optional[builtin___bool] = None,
            unitemized_payment_info : typing___Optional[typing___Iterable[type___CreateItemizationRequest.BeemoMetaData.UnitemizedPaymentInfo]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"use_fallback_mapper",b"use_fallback_mapper"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"unitemized_payment_info",b"unitemized_payment_info",u"use_fallback_mapper",b"use_fallback_mapper"]) -> None: ...
    type___BeemoMetaData = BeemoMetaData

    payment_id: typing___Text = ...
    merchant_token: typing___Text = ...
    creator_token: typing___Text = ...
    description: typing___Text = ...
    to: typing___Text = ...
    tendered_cents: builtin___int = ...
    currency_code: typing___Text = ...
    amount_cents: builtin___int = ...
    tax_cents: builtin___int = ...
    change_cents: builtin___int = ...
    tip_amount_cents: builtin___int = ...
    no_sale: builtin___bool = ...
    user_id: typing___Text = ...
    timestamp: typing___Text = ...
    unique_key: typing___Text = ...
    metadata: typing___Text = ...
    recipient_token: typing___Text = ...
    request_origin: type___CreateItemizationRequest.RequestOriginValue = ...
    service_agent: squareup___beemo___v2___itemizedpayment_v2_pb2___ServiceAgentValue = ...

    @property
    def itemizations(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Itemization]: ...

    @property
    def line_items(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Itemization]: ...

    @property
    def discounts(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Discount]: ...

    @property
    def adjustments(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Adjustment]: ...

    @property
    def headers(self) -> type___CreateItemizationRequest.HttpHeaders: ...

    @property
    def payment_metadata(self) -> type___PaymentMetadata: ...

    @property
    def payment_tag(self) -> type___PaymentTag: ...

    @property
    def total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def change_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tendered_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def other_tender(self) -> type___CreateItemizationRequest.OtherTender: ...

    @property
    def itemized_payment_request(self) -> squareup___beemo___v2___itemizedpayment_v2_pb2___CreateItemizedPaymentRequest: ...

    @property
    def items_model(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CogsObject]: ...

    @property
    def beemo_metadata(self) -> type___CreateItemizationRequest.BeemoMetaData: ...

    def __init__(self,
        *,
        payment_id : typing___Optional[typing___Text] = None,
        merchant_token : typing___Optional[typing___Text] = None,
        creator_token : typing___Optional[typing___Text] = None,
        itemizations : typing___Optional[typing___Iterable[type___Itemization]] = None,
        line_items : typing___Optional[typing___Iterable[type___Itemization]] = None,
        discounts : typing___Optional[typing___Iterable[type___Discount]] = None,
        adjustments : typing___Optional[typing___Iterable[type___Adjustment]] = None,
        headers : typing___Optional[type___CreateItemizationRequest.HttpHeaders] = None,
        description : typing___Optional[typing___Text] = None,
        to : typing___Optional[typing___Text] = None,
        payment_metadata : typing___Optional[type___PaymentMetadata] = None,
        payment_tag : typing___Optional[type___PaymentTag] = None,
        tendered_cents : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[typing___Text] = None,
        amount_cents : typing___Optional[builtin___int] = None,
        tax_cents : typing___Optional[builtin___int] = None,
        change_cents : typing___Optional[builtin___int] = None,
        total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        change_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tendered_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        other_tender : typing___Optional[type___CreateItemizationRequest.OtherTender] = None,
        tip_amount_cents : typing___Optional[builtin___int] = None,
        no_sale : typing___Optional[builtin___bool] = None,
        user_id : typing___Optional[typing___Text] = None,
        timestamp : typing___Optional[typing___Text] = None,
        unique_key : typing___Optional[typing___Text] = None,
        metadata : typing___Optional[typing___Text] = None,
        recipient_token : typing___Optional[typing___Text] = None,
        request_origin : typing___Optional[type___CreateItemizationRequest.RequestOriginValue] = None,
        service_agent : typing___Optional[squareup___beemo___v2___itemizedpayment_v2_pb2___ServiceAgentValue] = None,
        itemized_payment_request : typing___Optional[squareup___beemo___v2___itemizedpayment_v2_pb2___CreateItemizedPaymentRequest] = None,
        items_model : typing___Optional[typing___Iterable[type___CogsObject]] = None,
        beemo_metadata : typing___Optional[type___CreateItemizationRequest.BeemoMetaData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_cents",b"amount_cents",u"beemo_metadata",b"beemo_metadata",u"change_cents",b"change_cents",u"change_money",b"change_money",u"creator_token",b"creator_token",u"currency_code",b"currency_code",u"description",b"description",u"headers",b"headers",u"itemized_payment_request",b"itemized_payment_request",u"merchant_token",b"merchant_token",u"metadata",b"metadata",u"no_sale",b"no_sale",u"other_tender",b"other_tender",u"payment_id",b"payment_id",u"payment_metadata",b"payment_metadata",u"payment_tag",b"payment_tag",u"recipient_token",b"recipient_token",u"request_origin",b"request_origin",u"service_agent",b"service_agent",u"tax_cents",b"tax_cents",u"tendered_cents",b"tendered_cents",u"tendered_money",b"tendered_money",u"timestamp",b"timestamp",u"tip_amount_cents",b"tip_amount_cents",u"to",b"to",u"total_money",b"total_money",u"unique_key",b"unique_key",u"user_id",b"user_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"adjustments",b"adjustments",u"amount_cents",b"amount_cents",u"beemo_metadata",b"beemo_metadata",u"change_cents",b"change_cents",u"change_money",b"change_money",u"creator_token",b"creator_token",u"currency_code",b"currency_code",u"description",b"description",u"discounts",b"discounts",u"headers",b"headers",u"itemizations",b"itemizations",u"itemized_payment_request",b"itemized_payment_request",u"items_model",b"items_model",u"line_items",b"line_items",u"merchant_token",b"merchant_token",u"metadata",b"metadata",u"no_sale",b"no_sale",u"other_tender",b"other_tender",u"payment_id",b"payment_id",u"payment_metadata",b"payment_metadata",u"payment_tag",b"payment_tag",u"recipient_token",b"recipient_token",u"request_origin",b"request_origin",u"service_agent",b"service_agent",u"tax_cents",b"tax_cents",u"tendered_cents",b"tendered_cents",u"tendered_money",b"tendered_money",u"timestamp",b"timestamp",u"tip_amount_cents",b"tip_amount_cents",u"to",b"to",u"total_money",b"total_money",u"unique_key",b"unique_key",u"user_id",b"user_id"]) -> None: ...
type___CreateItemizationRequest = CreateItemizationRequest
