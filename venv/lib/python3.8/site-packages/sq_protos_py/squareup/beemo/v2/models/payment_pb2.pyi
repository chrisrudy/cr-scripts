# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.beemo.translation_types_pb2 import (
    NameOrTranslationType as squareup___beemo___translation_types_pb2___NameOrTranslationType,
)

from sq_protos_py.squareup.beemo.v2.models.users_pb2 import (
    CreatorDetails as squareup___beemo___v2___models___users_pb2___CreatorDetails,
    Customer as squareup___beemo___v2___models___users_pb2___Customer,
    Device as squareup___beemo___v2___models___users_pb2___Device,
)

from sq_protos_py.squareup.bills.contact_details_pb2 import (
    ContactDetails as squareup___bills___contact_details_pb2___ContactDetails,
)

from sq_protos_py.squareup.bills.tender_pb2 import (
    CardTender as squareup___bills___tender_pb2___CardTender,
    Tender as squareup___bills___tender_pb2___Tender,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.entry_method_pb2 import (
    PayWithSquareEntryMethodValue as squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue,
)

from sq_protos_py.squareup.common.payment_pb2 import (
    EntryMethodValue as squareup___common___payment_pb2___EntryMethodValue,
)

from sq_protos_py.squareup.common.tender_pb2 import (
    CardTenderTypeValue as squareup___common___tender_pb2___CardTenderTypeValue,
    FelicaCard as squareup___common___tender_pb2___FelicaCard,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.riskevaluation.external.external_pb2 import (
    EvaluationResult as squareup___riskevaluation___external___external_pb2___EvaluationResult,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Tender(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Tender.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CREDIT_CARD = typing___cast(Tender.TypeValue, 1)
        CASH = typing___cast(Tender.TypeValue, 2)
        TAB = typing___cast(Tender.TypeValue, 3)
        SQUARE_GIFT_CARD = typing___cast(Tender.TypeValue, 4)
        NO_SALE = typing___cast(Tender.TypeValue, 5)
        ZERO_AMOUNT = typing___cast(Tender.TypeValue, 6)
        GENERIC = typing___cast(Tender.TypeValue, 7)
        BANK_TRANSFER = typing___cast(Tender.TypeValue, 8)
        SQUARE_BALANCE = typing___cast(Tender.TypeValue, 9)
        LEDGER = typing___cast(Tender.TypeValue, 10)
        SQUARE_CAPITAL = typing___cast(Tender.TypeValue, 11)
        EXTERNAL = typing___cast(Tender.TypeValue, 12)
        EMONEY = typing___cast(Tender.TypeValue, 13)
        PUSH_TENDER = typing___cast(Tender.TypeValue, 14)
        OTHER = typing___cast(Tender.TypeValue, 100)
    CREDIT_CARD = typing___cast(Tender.TypeValue, 1)
    CASH = typing___cast(Tender.TypeValue, 2)
    TAB = typing___cast(Tender.TypeValue, 3)
    SQUARE_GIFT_CARD = typing___cast(Tender.TypeValue, 4)
    NO_SALE = typing___cast(Tender.TypeValue, 5)
    ZERO_AMOUNT = typing___cast(Tender.TypeValue, 6)
    GENERIC = typing___cast(Tender.TypeValue, 7)
    BANK_TRANSFER = typing___cast(Tender.TypeValue, 8)
    SQUARE_BALANCE = typing___cast(Tender.TypeValue, 9)
    LEDGER = typing___cast(Tender.TypeValue, 10)
    SQUARE_CAPITAL = typing___cast(Tender.TypeValue, 11)
    EXTERNAL = typing___cast(Tender.TypeValue, 12)
    EMONEY = typing___cast(Tender.TypeValue, 13)
    PUSH_TENDER = typing___cast(Tender.TypeValue, 14)
    OTHER = typing___cast(Tender.TypeValue, 100)
    type___Type = Type

    OtherTenderTypeValue = typing___NewType('OtherTenderTypeValue', builtin___int)
    type___OtherTenderTypeValue = OtherTenderTypeValue
    OtherTenderType: _OtherTenderType
    class _OtherTenderType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Tender.OtherTenderTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CHECK = typing___cast(Tender.OtherTenderTypeValue, 1)
        MERCHANT_GIFT_CARD = typing___cast(Tender.OtherTenderTypeValue, 2)
        DEBIT = typing___cast(Tender.OtherTenderTypeValue, 3)
        CREDIT_OR_DEBIT = typing___cast(Tender.OtherTenderTypeValue, 4)
        E_MONEY = typing___cast(Tender.OtherTenderTypeValue, 5)
        DEBIT_OR_CREDIT = typing___cast(Tender.OtherTenderTypeValue, 6)
        THIRD_PARTY_CARD = typing___cast(Tender.OtherTenderTypeValue, 7)
        MEAL_VOUCHER = typing___cast(Tender.OtherTenderTypeValue, 8)
        HACKWEEK_CRYPTO = typing___cast(Tender.OtherTenderTypeValue, 9)
        CUSTOM = typing___cast(Tender.OtherTenderTypeValue, 100)
        UNKNOWN = typing___cast(Tender.OtherTenderTypeValue, 101)
    CHECK = typing___cast(Tender.OtherTenderTypeValue, 1)
    MERCHANT_GIFT_CARD = typing___cast(Tender.OtherTenderTypeValue, 2)
    DEBIT = typing___cast(Tender.OtherTenderTypeValue, 3)
    CREDIT_OR_DEBIT = typing___cast(Tender.OtherTenderTypeValue, 4)
    E_MONEY = typing___cast(Tender.OtherTenderTypeValue, 5)
    DEBIT_OR_CREDIT = typing___cast(Tender.OtherTenderTypeValue, 6)
    THIRD_PARTY_CARD = typing___cast(Tender.OtherTenderTypeValue, 7)
    MEAL_VOUCHER = typing___cast(Tender.OtherTenderTypeValue, 8)
    HACKWEEK_CRYPTO = typing___cast(Tender.OtherTenderTypeValue, 9)
    CUSTOM = typing___cast(Tender.OtherTenderTypeValue, 100)
    UNKNOWN = typing___cast(Tender.OtherTenderTypeValue, 101)
    type___OtherTenderType = OtherTenderType

    class ExternalTender(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class PaymentSource(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            application_id: typing___Text = ...
            application_name: typing___Text = ...

            def __init__(self,
                *,
                application_id : typing___Optional[typing___Text] = None,
                application_name : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"application_id",b"application_id",u"application_name",b"application_name"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"application_id",b"application_id",u"application_name",b"application_name"]) -> None: ...
        type___PaymentSource = PaymentSource


        @property
        def payment_source(self) -> type___Tender.ExternalTender.PaymentSource: ...

        def __init__(self,
            *,
            payment_source : typing___Optional[type___Tender.ExternalTender.PaymentSource] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"payment_source",b"payment_source"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"payment_source",b"payment_source"]) -> None: ...
    type___ExternalTender = ExternalTender

    class RiskEvaluationDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def evaluation_result(self) -> squareup___riskevaluation___external___external_pb2___EvaluationResult: ...

        def __init__(self,
            *,
            evaluation_result : typing___Optional[squareup___riskevaluation___external___external_pb2___EvaluationResult] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"evaluation_result",b"evaluation_result"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"evaluation_result",b"evaluation_result"]) -> None: ...
    type___RiskEvaluationDetails = RiskEvaluationDetails

    class PushTender(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class CashAppTender(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            authorization_code: typing___Text = ...
            pwc_transaction_id: typing___Text = ...
            read_only_cashtag: typing___Text = ...
            read_only_buyer_full_name: typing___Text = ...

            def __init__(self,
                *,
                authorization_code : typing___Optional[typing___Text] = None,
                pwc_transaction_id : typing___Optional[typing___Text] = None,
                read_only_cashtag : typing___Optional[typing___Text] = None,
                read_only_buyer_full_name : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"authorization_code",b"authorization_code",u"pwc_transaction_id",b"pwc_transaction_id",u"read_only_buyer_full_name",b"read_only_buyer_full_name",u"read_only_cashtag",b"read_only_cashtag"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"authorization_code",b"authorization_code",u"pwc_transaction_id",b"pwc_transaction_id",u"read_only_buyer_full_name",b"read_only_buyer_full_name",u"read_only_cashtag",b"read_only_cashtag"]) -> None: ...
        type___CashAppTender = CashAppTender


        @property
        def cash_app_tender(self) -> type___Tender.PushTender.CashAppTender: ...

        def __init__(self,
            *,
            cash_app_tender : typing___Optional[type___Tender.PushTender.CashAppTender] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"cash_app_tender",b"cash_app_tender",u"push_type",b"push_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"cash_app_tender",b"cash_app_tender",u"push_type",b"push_type"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"push_type",b"push_type"]) -> typing_extensions___Literal["cash_app_tender"]: ...
    type___PushTender = PushTender

    type: type___Tender.TypeValue = ...
    payment_token: typing___Text = ...
    payment_note: typing___Text = ...
    state: squareup___bills___tender_pb2___Tender.StateValue = ...
    entry_method: squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue = ...
    card_brand: squareup___common___tender_pb2___CardTenderTypeValue = ...
    felica_brand: squareup___common___tender_pb2___FelicaCard.FelicaBrandValue = ...
    pan_suffix: typing___Text = ...
    deposit_token: typing___Text = ...
    other_tender_type: type___Tender.OtherTenderTypeValue = ...
    hashed_gift_card_token: typing___Text = ...
    sequential_tender_number: typing___Text = ...
    gift_card_token: typing___Text = ...
    payment_entry_method: squareup___common___payment_pb2___EntryMethodValue = ...
    refund_card_presence_requirement: squareup___bills___tender_pb2___Tender.RefundCardPresenceRequirementValue = ...

    @property
    def total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def creator_details(self) -> squareup___beemo___v2___models___users_pb2___CreatorDetails: ...

    @property
    def device(self) -> squareup___beemo___v2___models___users_pb2___Device: ...

    @property
    def processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tendered_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def change_back_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tip_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def customer(self) -> squareup___beemo___v2___models___users_pb2___Customer: ...

    @property
    def surcharge_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def auto_gratuity_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def other_tender_name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

    @property
    def processing_fee_amounts(self) -> type___ProcessingFeeAmounts: ...

    @property
    def settlement_details(self) -> squareup___bills___tender_pb2___CardTender.SettlementDetails: ...

    @property
    def external_tender(self) -> type___Tender.ExternalTender: ...

    @property
    def contact_details(self) -> squareup___bills___contact_details_pb2___ContactDetails: ...

    @property
    def tendered_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def settled_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def risk_evaluation_details(self) -> type___Tender.RiskEvaluationDetails: ...

    @property
    def push_tender(self) -> type___Tender.PushTender: ...

    def __init__(self,
        *,
        type : typing___Optional[type___Tender.TypeValue] = None,
        payment_token : typing___Optional[typing___Text] = None,
        total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        payment_note : typing___Optional[typing___Text] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        creator_details : typing___Optional[squareup___beemo___v2___models___users_pb2___CreatorDetails] = None,
        device : typing___Optional[squareup___beemo___v2___models___users_pb2___Device] = None,
        state : typing___Optional[squareup___bills___tender_pb2___Tender.StateValue] = None,
        entry_method : typing___Optional[squareup___common___entry_method_pb2___PayWithSquareEntryMethodValue] = None,
        card_brand : typing___Optional[squareup___common___tender_pb2___CardTenderTypeValue] = None,
        felica_brand : typing___Optional[squareup___common___tender_pb2___FelicaCard.FelicaBrandValue] = None,
        pan_suffix : typing___Optional[typing___Text] = None,
        processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        deposit_token : typing___Optional[typing___Text] = None,
        tendered_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        change_back_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tip_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        customer : typing___Optional[squareup___beemo___v2___models___users_pb2___Customer] = None,
        surcharge_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        auto_gratuity_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        other_tender_type : typing___Optional[type___Tender.OtherTenderTypeValue] = None,
        other_tender_name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
        hashed_gift_card_token : typing___Optional[typing___Text] = None,
        sequential_tender_number : typing___Optional[typing___Text] = None,
        processing_fee_amounts : typing___Optional[type___ProcessingFeeAmounts] = None,
        gift_card_token : typing___Optional[typing___Text] = None,
        payment_entry_method : typing___Optional[squareup___common___payment_pb2___EntryMethodValue] = None,
        settlement_details : typing___Optional[squareup___bills___tender_pb2___CardTender.SettlementDetails] = None,
        refund_card_presence_requirement : typing___Optional[squareup___bills___tender_pb2___Tender.RefundCardPresenceRequirementValue] = None,
        external_tender : typing___Optional[type___Tender.ExternalTender] = None,
        contact_details : typing___Optional[squareup___bills___contact_details_pb2___ContactDetails] = None,
        tendered_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        settled_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        risk_evaluation_details : typing___Optional[type___Tender.RiskEvaluationDetails] = None,
        push_tender : typing___Optional[type___Tender.PushTender] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"auto_gratuity_money",b"auto_gratuity_money",u"card_brand",b"card_brand",u"change_back_money",b"change_back_money",u"contact_details",b"contact_details",u"creator_details",b"creator_details",u"customer",b"customer",u"deposit_token",b"deposit_token",u"device",b"device",u"entry_method",b"entry_method",u"external_tender",b"external_tender",u"felica_brand",b"felica_brand",u"gift_card_token",b"gift_card_token",u"hashed_gift_card_token",b"hashed_gift_card_token",u"other_tender_name_or_translation_type",b"other_tender_name_or_translation_type",u"other_tender_type",b"other_tender_type",u"pan_suffix",b"pan_suffix",u"payment_entry_method",b"payment_entry_method",u"payment_note",b"payment_note",u"payment_token",b"payment_token",u"processing_fee_amounts",b"processing_fee_amounts",u"processing_fee_money",b"processing_fee_money",u"push_tender",b"push_tender",u"refund_card_presence_requirement",b"refund_card_presence_requirement",u"refunded_money",b"refunded_money",u"risk_evaluation_details",b"risk_evaluation_details",u"sequential_tender_number",b"sequential_tender_number",u"settled_at",b"settled_at",u"settlement_details",b"settlement_details",u"state",b"state",u"surcharge_money",b"surcharge_money",u"tax_money",b"tax_money",u"tendered_at",b"tendered_at",u"tendered_money",b"tendered_money",u"tip_money",b"tip_money",u"total_money",b"total_money",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"auto_gratuity_money",b"auto_gratuity_money",u"card_brand",b"card_brand",u"change_back_money",b"change_back_money",u"contact_details",b"contact_details",u"creator_details",b"creator_details",u"customer",b"customer",u"deposit_token",b"deposit_token",u"device",b"device",u"entry_method",b"entry_method",u"external_tender",b"external_tender",u"felica_brand",b"felica_brand",u"gift_card_token",b"gift_card_token",u"hashed_gift_card_token",b"hashed_gift_card_token",u"other_tender_name_or_translation_type",b"other_tender_name_or_translation_type",u"other_tender_type",b"other_tender_type",u"pan_suffix",b"pan_suffix",u"payment_entry_method",b"payment_entry_method",u"payment_note",b"payment_note",u"payment_token",b"payment_token",u"processing_fee_amounts",b"processing_fee_amounts",u"processing_fee_money",b"processing_fee_money",u"push_tender",b"push_tender",u"refund_card_presence_requirement",b"refund_card_presence_requirement",u"refunded_money",b"refunded_money",u"risk_evaluation_details",b"risk_evaluation_details",u"sequential_tender_number",b"sequential_tender_number",u"settled_at",b"settled_at",u"settlement_details",b"settlement_details",u"state",b"state",u"surcharge_money",b"surcharge_money",u"tax_money",b"tax_money",u"tendered_at",b"tendered_at",u"tendered_money",b"tendered_money",u"tip_money",b"tip_money",u"total_money",b"total_money",u"type",b"type"]) -> None: ...
type___Tender = Tender

class FullRefund(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    RefundTypeValue = typing___NewType('RefundTypeValue', builtin___int)
    type___RefundTypeValue = RefundTypeValue
    RefundType: _RefundType
    class _RefundType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[FullRefund.RefundTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        FULL_REFUND = typing___cast(FullRefund.RefundTypeValue, 1)
    FULL_REFUND = typing___cast(FullRefund.RefundTypeValue, 1)
    type___RefundType = RefundType

    type: type___FullRefund.RefundTypeValue = ...
    reason: typing___Text = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def processed_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        type : typing___Optional[type___FullRefund.RefundTypeValue] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        processed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        reason : typing___Optional[typing___Text] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"processed_at",b"processed_at",u"reason",b"reason",u"refunded_money",b"refunded_money",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"processed_at",b"processed_at",u"reason",b"reason",u"refunded_money",b"refunded_money",u"type",b"type"]) -> None: ...
type___FullRefund = FullRefund

class Refund(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    RefundTypeValue = typing___NewType('RefundTypeValue', builtin___int)
    type___RefundTypeValue = RefundTypeValue
    RefundType: _RefundType
    class _RefundType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Refund.RefundTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        FULL_REFUND = typing___cast(Refund.RefundTypeValue, 1)
        PARTIAL_REFUND = typing___cast(Refund.RefundTypeValue, 2)
        ITEMIZED_REFUND = typing___cast(Refund.RefundTypeValue, 3)
    FULL_REFUND = typing___cast(Refund.RefundTypeValue, 1)
    PARTIAL_REFUND = typing___cast(Refund.RefundTypeValue, 2)
    ITEMIZED_REFUND = typing___cast(Refund.RefundTypeValue, 3)
    type___RefundType = RefundType

    type: type___Refund.RefundTypeValue = ...
    reason: typing___Text = ...
    payment_token: typing___Text = ...
    refund_uuid: typing___Text = ...
    refund_id: typing___Text = ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def processed_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def refunded_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def creator_details(self) -> squareup___beemo___v2___models___users_pb2___CreatorDetails: ...

    @property
    def refunded_product_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_discount_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_tip_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_inclusive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_additive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_credit_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_total_collected_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_net_total_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_surcharge_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_surcharge_inclusive_tax_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refunded_processing_fee_amounts(self) -> type___ProcessingFeeAmounts: ...

    def __init__(self,
        *,
        type : typing___Optional[type___Refund.RefundTypeValue] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        processed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        reason : typing___Optional[typing___Text] = None,
        refunded_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        creator_details : typing___Optional[squareup___beemo___v2___models___users_pb2___CreatorDetails] = None,
        refunded_product_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_discount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_tip_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_inclusive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_additive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_credit_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_total_collected_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_net_total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        payment_token : typing___Optional[typing___Text] = None,
        refund_uuid : typing___Optional[typing___Text] = None,
        refund_id : typing___Optional[typing___Text] = None,
        refunded_surcharge_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_surcharge_inclusive_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refunded_processing_fee_amounts : typing___Optional[type___ProcessingFeeAmounts] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"creator_details",b"creator_details",u"payment_token",b"payment_token",u"processed_at",b"processed_at",u"reason",b"reason",u"refund_id",b"refund_id",u"refund_uuid",b"refund_uuid",u"refunded_additive_tax_money",b"refunded_additive_tax_money",u"refunded_credit_money",b"refunded_credit_money",u"refunded_discount_money",b"refunded_discount_money",u"refunded_gross_sales_money",b"refunded_gross_sales_money",u"refunded_inclusive_tax_money",b"refunded_inclusive_tax_money",u"refunded_money",b"refunded_money",u"refunded_net_sales_money",b"refunded_net_sales_money",u"refunded_net_total_money",b"refunded_net_total_money",u"refunded_processing_fee_amounts",b"refunded_processing_fee_amounts",u"refunded_processing_fee_money",b"refunded_processing_fee_money",u"refunded_product_sales_money",b"refunded_product_sales_money",u"refunded_surcharge_inclusive_tax_money",b"refunded_surcharge_inclusive_tax_money",u"refunded_surcharge_money",b"refunded_surcharge_money",u"refunded_tax_money",b"refunded_tax_money",u"refunded_tip_money",b"refunded_tip_money",u"refunded_total_collected_money",b"refunded_total_collected_money",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at",b"created_at",u"creator_details",b"creator_details",u"payment_token",b"payment_token",u"processed_at",b"processed_at",u"reason",b"reason",u"refund_id",b"refund_id",u"refund_uuid",b"refund_uuid",u"refunded_additive_tax_money",b"refunded_additive_tax_money",u"refunded_credit_money",b"refunded_credit_money",u"refunded_discount_money",b"refunded_discount_money",u"refunded_gross_sales_money",b"refunded_gross_sales_money",u"refunded_inclusive_tax_money",b"refunded_inclusive_tax_money",u"refunded_money",b"refunded_money",u"refunded_net_sales_money",b"refunded_net_sales_money",u"refunded_net_total_money",b"refunded_net_total_money",u"refunded_processing_fee_amounts",b"refunded_processing_fee_amounts",u"refunded_processing_fee_money",b"refunded_processing_fee_money",u"refunded_product_sales_money",b"refunded_product_sales_money",u"refunded_surcharge_inclusive_tax_money",b"refunded_surcharge_inclusive_tax_money",u"refunded_surcharge_money",b"refunded_surcharge_money",u"refunded_tax_money",b"refunded_tax_money",u"refunded_tip_money",b"refunded_tip_money",u"refunded_total_collected_money",b"refunded_total_collected_money",u"type",b"type"]) -> None: ...
type___Refund = Refund

class ProcessingFeeAmounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def square_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tax_on_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def square_processing_fee_amount_details(self) -> type___SquareProcessingFeeAmountDetails: ...

    @property
    def third_party_fee_amount_details(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ThirdPartyFeeAmountDetail]: ...

    @property
    def square_processing_fee_amount_detail_list(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SquareProcessingFeeAmountDetails]: ...

    def __init__(self,
        *,
        square_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tax_on_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        square_processing_fee_amount_details : typing___Optional[type___SquareProcessingFeeAmountDetails] = None,
        third_party_fee_amount_details : typing___Optional[typing___Iterable[type___ThirdPartyFeeAmountDetail]] = None,
        square_processing_fee_amount_detail_list : typing___Optional[typing___Iterable[type___SquareProcessingFeeAmountDetails]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"square_processing_fee_amount_details",b"square_processing_fee_amount_details",u"square_processing_fee_money",b"square_processing_fee_money",u"tax_on_processing_fee_money",b"tax_on_processing_fee_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"square_processing_fee_amount_detail_list",b"square_processing_fee_amount_detail_list",u"square_processing_fee_amount_details",b"square_processing_fee_amount_details",u"square_processing_fee_money",b"square_processing_fee_money",u"tax_on_processing_fee_money",b"tax_on_processing_fee_money",u"third_party_fee_amount_details",b"third_party_fee_amount_details"]) -> None: ...
type___ProcessingFeeAmounts = ProcessingFeeAmounts

class SquareProcessingFeeAmountDetails(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    FeeTypeValue = typing___NewType('FeeTypeValue', builtin___int)
    type___FeeTypeValue = FeeTypeValue
    FeeType: _FeeType
    class _FeeType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SquareProcessingFeeAmountDetails.FeeTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        FIXED_RATE = typing___cast(SquareProcessingFeeAmountDetails.FeeTypeValue, 0)
        COST_PLUS = typing___cast(SquareProcessingFeeAmountDetails.FeeTypeValue, 1)
        NOT_APPLICABLE = typing___cast(SquareProcessingFeeAmountDetails.FeeTypeValue, 1000)
    FIXED_RATE = typing___cast(SquareProcessingFeeAmountDetails.FeeTypeValue, 0)
    COST_PLUS = typing___cast(SquareProcessingFeeAmountDetails.FeeTypeValue, 1)
    NOT_APPLICABLE = typing___cast(SquareProcessingFeeAmountDetails.FeeTypeValue, 1000)
    type___FeeType = FeeType

    class AdjustmentFee(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def tax_on_fee_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def adjusted_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            tax_on_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            adjusted_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"adjusted_at",b"adjusted_at",u"money",b"money",u"tax_on_fee_money",b"tax_on_fee_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"adjusted_at",b"adjusted_at",u"money",b"money",u"tax_on_fee_money",b"tax_on_fee_money"]) -> None: ...
    type___AdjustmentFee = AdjustmentFee

    class FeePlan(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        discount_basis_points: builtin___int = ...
        interchange_cents: builtin___int = ...
        fee_plan_product: typing___Text = ...
        fee_plan_id: typing___Text = ...

        def __init__(self,
            *,
            discount_basis_points : typing___Optional[builtin___int] = None,
            interchange_cents : typing___Optional[builtin___int] = None,
            fee_plan_product : typing___Optional[typing___Text] = None,
            fee_plan_id : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"discount_basis_points",b"discount_basis_points",u"fee_plan_id",b"fee_plan_id",u"fee_plan_product",b"fee_plan_product",u"interchange_cents",b"interchange_cents"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"discount_basis_points",b"discount_basis_points",u"fee_plan_id",b"fee_plan_id",u"fee_plan_product",b"fee_plan_product",u"interchange_cents",b"interchange_cents"]) -> None: ...
    type___FeePlan = FeePlan

    fee_type: type___SquareProcessingFeeAmountDetails.FeeTypeValue = ...

    @property
    def initial_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def initial_tax_on_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def adjustment_fee_money(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___common___currency_pb2___Money]: ...

    @property
    def adjustment_fee(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___SquareProcessingFeeAmountDetails.AdjustmentFee]: ...

    @property
    def fee_plan(self) -> type___SquareProcessingFeeAmountDetails.FeePlan: ...

    @property
    def tax_on_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def free_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        initial_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        initial_tax_on_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        adjustment_fee_money : typing___Optional[typing___Iterable[squareup___common___currency_pb2___Money]] = None,
        adjustment_fee : typing___Optional[typing___Iterable[type___SquareProcessingFeeAmountDetails.AdjustmentFee]] = None,
        fee_type : typing___Optional[type___SquareProcessingFeeAmountDetails.FeeTypeValue] = None,
        fee_plan : typing___Optional[type___SquareProcessingFeeAmountDetails.FeePlan] = None,
        tax_on_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        free_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"fee_plan",b"fee_plan",u"fee_type",b"fee_type",u"free_processing_fee_money",b"free_processing_fee_money",u"initial_fee_money",b"initial_fee_money",u"initial_tax_on_fee_money",b"initial_tax_on_fee_money",u"tax_on_processing_fee_money",b"tax_on_processing_fee_money"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"adjustment_fee",b"adjustment_fee",u"adjustment_fee_money",b"adjustment_fee_money",u"fee_plan",b"fee_plan",u"fee_type",b"fee_type",u"free_processing_fee_money",b"free_processing_fee_money",u"initial_fee_money",b"initial_fee_money",u"initial_tax_on_fee_money",b"initial_tax_on_fee_money",u"tax_on_processing_fee_money",b"tax_on_processing_fee_money"]) -> None: ...
type___SquareProcessingFeeAmountDetails = SquareProcessingFeeAmountDetails

class ThirdPartyFeeAmountDetail(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def third_party_fee_entity(self) -> type___ThirdPartyFeeEntity: ...

    def __init__(self,
        *,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        third_party_fee_entity : typing___Optional[type___ThirdPartyFeeEntity] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"third_party_fee_entity",b"third_party_fee_entity"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"third_party_fee_entity",b"third_party_fee_entity"]) -> None: ...
type___ThirdPartyFeeAmountDetail = ThirdPartyFeeAmountDetail

class ThirdPartyFeeEntity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...
    display_name: typing___Text = ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        display_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"display_name",b"display_name",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"display_name",b"display_name",u"unit_token",b"unit_token"]) -> None: ...
type___ThirdPartyFeeEntity = ThirdPartyFeeEntity
