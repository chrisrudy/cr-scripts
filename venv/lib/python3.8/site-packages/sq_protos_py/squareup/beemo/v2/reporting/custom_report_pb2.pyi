# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.beemo.translation_types_pb2 import (
    NameOrTranslationType as squareup___beemo___translation_types_pb2___NameOrTranslationType,
    TranslationTypeValue as squareup___beemo___translation_types_pb2___TranslationTypeValue,
)

from sq_protos_py.squareup.beemo.v2.models.payment_pb2 import (
    SquareProcessingFeeAmountDetails as squareup___beemo___v2___models___payment_pb2___SquareProcessingFeeAmountDetails,
)

from sq_protos_py.squareup.beemo.v2.reporting.request_pb2 import (
    RequestParams as squareup___beemo___v2___reporting___request_pb2___RequestParams,
)

from sq_protos_py.squareup.beemo.v3.bill_pb2 import (
    EventTypeValue as squareup___beemo___v3___bill_pb2___EventTypeValue,
)

from sq_protos_py.squareup.beemo.v3.reporting_params_pb2 import (
    ActivityTypeValue as squareup___beemo___v3___reporting_params_pb2___ActivityTypeValue,
)

from sq_protos_py.squareup.beemo.v4.fulfillment_pb2 import (
    FulfillmentRecipient as squareup___beemo___v4___fulfillment_pb2___FulfillmentRecipient,
)

from sq_protos_py.squareup.common.colors_pb2 import (
    RGBAColor as squareup___common___colors_pb2___RGBAColor,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.connect.v2.common.measurement_units_pb2 import (
    MeasurementUnit as squareup___connect___v2___common___measurement_units_pb2___MeasurementUnit,
)

from sq_protos_py.squareup.omg.model.orders_pb2 import (
    Order as squareup___omg___model___orders_pb2___Order,
)

from sq_protos_py.squareup.riskevaluation.external.external_pb2 import (
    ActionValue as squareup___riskevaluation___external___external_pb2___ActionValue,
    LevelValue as squareup___riskevaluation___external___external_pb2___LevelValue,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

GroupByTypeValue = typing___NewType('GroupByTypeValue', builtin___int)
type___GroupByTypeValue = GroupByTypeValue
GroupByType: _GroupByType
class _GroupByType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    NONE = typing___cast(GroupByTypeValue, 1)
    DISCOUNT = typing___cast(GroupByTypeValue, 2)
    ITEM_CATEGORY = typing___cast(GroupByTypeValue, 3)
    EMPLOYEE = typing___cast(GroupByTypeValue, 4)
    ACTING_EMPLOYEE = typing___cast(GroupByTypeValue, 56)
    EMPLOYEE_ROLE = typing___cast(GroupByTypeValue, 40)
    DEVICE = typing___cast(GroupByTypeValue, 5)
    ITEM = typing___cast(GroupByTypeValue, 6)
    ITEM_VARIATION = typing___cast(GroupByTypeValue, 7)
    MOBILE_STAFF = typing___cast(GroupByTypeValue, 8)
    SUBUNIT = typing___cast(GroupByTypeValue, 9)
    MODIFIER = typing___cast(GroupByTypeValue, 10)
    PAYMENT_METHOD = typing___cast(GroupByTypeValue, 11)
    MODIFIER_SET = typing___cast(GroupByTypeValue, 12)
    DEVICE_NAME = typing___cast(GroupByTypeValue, 13)
    DEVICE_TOKEN = typing___cast(GroupByTypeValue, 14)
    HOUR = typing___cast(GroupByTypeValue, 15)
    TIME_WINDOW = typing___cast(GroupByTypeValue, 16)
    UNIT_PRICE = typing___cast(GroupByTypeValue, 17)
    PAYMENT_METHOD_SEPARATED = typing___cast(GroupByTypeValue, 18)
    TAX_NAME = typing___cast(GroupByTypeValue, 19)
    DAY = typing___cast(GroupByTypeValue, 20)
    MONTH = typing___cast(GroupByTypeValue, 21)
    FEE_TYPE = typing___cast(GroupByTypeValue, 22)
    PRODUCT = typing___cast(GroupByTypeValue, 23)
    TAXABLE = typing___cast(GroupByTypeValue, 24)
    DAY_OF_WEEK = typing___cast(GroupByTypeValue, 25)
    HOUR_OF_DAY = typing___cast(GroupByTypeValue, 26)
    WEEK = typing___cast(GroupByTypeValue, 27)
    DINING_OPTION = typing___cast(GroupByTypeValue, 28)
    GIFT_CARD_ITEM = typing___cast(GroupByTypeValue, 29)
    GIFT_CARD_ACTIVITY_TYPE = typing___cast(GroupByTypeValue, 30)
    GIFT_CARD_TENDER = typing___cast(GroupByTypeValue, 31)
    PAN_SUFFIX = typing___cast(GroupByTypeValue, 32)
    VIRTUAL_REGISTER_TOKEN = typing___cast(GroupByTypeValue, 33)
    BUSINESS_DAY_TOKEN = typing___cast(GroupByTypeValue, 34)
    ACTIVITY_TYPE = typing___cast(GroupByTypeValue, 35)
    VOID_REASON = typing___cast(GroupByTypeValue, 36)
    EVENT_TYPE = typing___cast(GroupByTypeValue, 37)
    DISCOUNT_ADJUSTMENT_TYPE = typing___cast(GroupByTypeValue, 38)
    COMP_REASON = typing___cast(GroupByTypeValue, 39)
    UNIQUE_ITEMIZATION = typing___cast(GroupByTypeValue, 41)
    TICKET_GROUP = typing___cast(GroupByTypeValue, 42)
    DEVICE_CREDENTIAL = typing___cast(GroupByTypeValue, 43)
    LAST_ITEMIZATION_UPDATE_EMPLOYEE_TOKEN = typing___cast(GroupByTypeValue, 44)
    ITEMIZATION_NOTE = typing___cast(GroupByTypeValue, 45)
    RECEIPT_NUMBER = typing___cast(GroupByTypeValue, 46)
    TICKET_NAME = typing___cast(GroupByTypeValue, 47)
    DEVICE_CREDENTIAL_NAME = typing___cast(GroupByTypeValue, 48)
    TOTAL_COLLECTED_AMOUNT = typing___cast(GroupByTypeValue, 49)
    CONVERSATIONAL_MODE = typing___cast(GroupByTypeValue, 50)
    BILL_NOTE = typing___cast(GroupByTypeValue, 51)
    TENDER_NOTE = typing___cast(GroupByTypeValue, 52)
    MENU_NAME = typing___cast(GroupByTypeValue, 53)
    FEE_PLAN = typing___cast(GroupByTypeValue, 54)
    FEE_PLAN_TYPE = typing___cast(GroupByTypeValue, 55)
    TICKET_TEMPLATE = typing___cast(GroupByTypeValue, 57)
    RESTAURANT_COVER = typing___cast(GroupByTypeValue, 58)
    PAYMENT_SOURCE_NAME = typing___cast(GroupByTypeValue, 59)
    ITEMIZATION_TYPE = typing___cast(GroupByTypeValue, 60)
    SURCHARGE_TYPE = typing___cast(GroupByTypeValue, 61)
    CONTACT_TOKEN = typing___cast(GroupByTypeValue, 62)
    SURCHARGE_NAME = typing___cast(GroupByTypeValue, 63)
    ORDER_SOURCE_NAME = typing___cast(GroupByTypeValue, 64)
    RISK_EVALUATION_LEVEL = typing___cast(GroupByTypeValue, 65)
    RISK_EVALUATION_ACTION = typing___cast(GroupByTypeValue, 74)
    RISK_EVALUATION_RULE = typing___cast(GroupByTypeValue, 75)
    ITEM_VARIATION_MEASUREMENT_UNIT = typing___cast(GroupByTypeValue, 66)
    ORDER_DISPLAY_NAME = typing___cast(GroupByTypeValue, 67)
    FULFILLMENT_TYPE = typing___cast(GroupByTypeValue, 68)
    FULFILLMENT_STATE = typing___cast(GroupByTypeValue, 69)
    FULFILLMENT_RECIPIENT_NAME = typing___cast(GroupByTypeValue, 70)
    FULFILLMENT_RECIPIENT_PHONE = typing___cast(GroupByTypeValue, 71)
    FULFILLMENT_RECIPIENT_EMAIL = typing___cast(GroupByTypeValue, 72)
    VENDOR = typing___cast(GroupByTypeValue, 73)
    ATTRIBUTED_EMPLOYEE = typing___cast(GroupByTypeValue, 77)
NONE = typing___cast(GroupByTypeValue, 1)
DISCOUNT = typing___cast(GroupByTypeValue, 2)
ITEM_CATEGORY = typing___cast(GroupByTypeValue, 3)
EMPLOYEE = typing___cast(GroupByTypeValue, 4)
ACTING_EMPLOYEE = typing___cast(GroupByTypeValue, 56)
EMPLOYEE_ROLE = typing___cast(GroupByTypeValue, 40)
DEVICE = typing___cast(GroupByTypeValue, 5)
ITEM = typing___cast(GroupByTypeValue, 6)
ITEM_VARIATION = typing___cast(GroupByTypeValue, 7)
MOBILE_STAFF = typing___cast(GroupByTypeValue, 8)
SUBUNIT = typing___cast(GroupByTypeValue, 9)
MODIFIER = typing___cast(GroupByTypeValue, 10)
PAYMENT_METHOD = typing___cast(GroupByTypeValue, 11)
MODIFIER_SET = typing___cast(GroupByTypeValue, 12)
DEVICE_NAME = typing___cast(GroupByTypeValue, 13)
DEVICE_TOKEN = typing___cast(GroupByTypeValue, 14)
HOUR = typing___cast(GroupByTypeValue, 15)
TIME_WINDOW = typing___cast(GroupByTypeValue, 16)
UNIT_PRICE = typing___cast(GroupByTypeValue, 17)
PAYMENT_METHOD_SEPARATED = typing___cast(GroupByTypeValue, 18)
TAX_NAME = typing___cast(GroupByTypeValue, 19)
DAY = typing___cast(GroupByTypeValue, 20)
MONTH = typing___cast(GroupByTypeValue, 21)
FEE_TYPE = typing___cast(GroupByTypeValue, 22)
PRODUCT = typing___cast(GroupByTypeValue, 23)
TAXABLE = typing___cast(GroupByTypeValue, 24)
DAY_OF_WEEK = typing___cast(GroupByTypeValue, 25)
HOUR_OF_DAY = typing___cast(GroupByTypeValue, 26)
WEEK = typing___cast(GroupByTypeValue, 27)
DINING_OPTION = typing___cast(GroupByTypeValue, 28)
GIFT_CARD_ITEM = typing___cast(GroupByTypeValue, 29)
GIFT_CARD_ACTIVITY_TYPE = typing___cast(GroupByTypeValue, 30)
GIFT_CARD_TENDER = typing___cast(GroupByTypeValue, 31)
PAN_SUFFIX = typing___cast(GroupByTypeValue, 32)
VIRTUAL_REGISTER_TOKEN = typing___cast(GroupByTypeValue, 33)
BUSINESS_DAY_TOKEN = typing___cast(GroupByTypeValue, 34)
ACTIVITY_TYPE = typing___cast(GroupByTypeValue, 35)
VOID_REASON = typing___cast(GroupByTypeValue, 36)
EVENT_TYPE = typing___cast(GroupByTypeValue, 37)
DISCOUNT_ADJUSTMENT_TYPE = typing___cast(GroupByTypeValue, 38)
COMP_REASON = typing___cast(GroupByTypeValue, 39)
UNIQUE_ITEMIZATION = typing___cast(GroupByTypeValue, 41)
TICKET_GROUP = typing___cast(GroupByTypeValue, 42)
DEVICE_CREDENTIAL = typing___cast(GroupByTypeValue, 43)
LAST_ITEMIZATION_UPDATE_EMPLOYEE_TOKEN = typing___cast(GroupByTypeValue, 44)
ITEMIZATION_NOTE = typing___cast(GroupByTypeValue, 45)
RECEIPT_NUMBER = typing___cast(GroupByTypeValue, 46)
TICKET_NAME = typing___cast(GroupByTypeValue, 47)
DEVICE_CREDENTIAL_NAME = typing___cast(GroupByTypeValue, 48)
TOTAL_COLLECTED_AMOUNT = typing___cast(GroupByTypeValue, 49)
CONVERSATIONAL_MODE = typing___cast(GroupByTypeValue, 50)
BILL_NOTE = typing___cast(GroupByTypeValue, 51)
TENDER_NOTE = typing___cast(GroupByTypeValue, 52)
MENU_NAME = typing___cast(GroupByTypeValue, 53)
FEE_PLAN = typing___cast(GroupByTypeValue, 54)
FEE_PLAN_TYPE = typing___cast(GroupByTypeValue, 55)
TICKET_TEMPLATE = typing___cast(GroupByTypeValue, 57)
RESTAURANT_COVER = typing___cast(GroupByTypeValue, 58)
PAYMENT_SOURCE_NAME = typing___cast(GroupByTypeValue, 59)
ITEMIZATION_TYPE = typing___cast(GroupByTypeValue, 60)
SURCHARGE_TYPE = typing___cast(GroupByTypeValue, 61)
CONTACT_TOKEN = typing___cast(GroupByTypeValue, 62)
SURCHARGE_NAME = typing___cast(GroupByTypeValue, 63)
ORDER_SOURCE_NAME = typing___cast(GroupByTypeValue, 64)
RISK_EVALUATION_LEVEL = typing___cast(GroupByTypeValue, 65)
RISK_EVALUATION_ACTION = typing___cast(GroupByTypeValue, 74)
RISK_EVALUATION_RULE = typing___cast(GroupByTypeValue, 75)
ITEM_VARIATION_MEASUREMENT_UNIT = typing___cast(GroupByTypeValue, 66)
ORDER_DISPLAY_NAME = typing___cast(GroupByTypeValue, 67)
FULFILLMENT_TYPE = typing___cast(GroupByTypeValue, 68)
FULFILLMENT_STATE = typing___cast(GroupByTypeValue, 69)
FULFILLMENT_RECIPIENT_NAME = typing___cast(GroupByTypeValue, 70)
FULFILLMENT_RECIPIENT_PHONE = typing___cast(GroupByTypeValue, 71)
FULFILLMENT_RECIPIENT_EMAIL = typing___cast(GroupByTypeValue, 72)
VENDOR = typing___cast(GroupByTypeValue, 73)
ATTRIBUTED_EMPLOYEE = typing___cast(GroupByTypeValue, 77)
type___GroupByType = GroupByType

class Aggregate(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class Details(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class ProcessingFeeAmounts(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            class SquareProcessingFeeAmountDetails(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

                @property
                def initial_fee_money(self) -> squareup___common___currency_pb2___Money: ...

                @property
                def initial_tax_on_fee_money(self) -> squareup___common___currency_pb2___Money: ...

                @property
                def adjustment_fee_money(self) -> squareup___common___currency_pb2___Money: ...

                @property
                def adjustment_tax_on_fee_money(self) -> squareup___common___currency_pb2___Money: ...

                def __init__(self,
                    *,
                    initial_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                    initial_tax_on_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                    adjustment_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                    adjustment_tax_on_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions___Literal[u"adjustment_fee_money",b"adjustment_fee_money",u"adjustment_tax_on_fee_money",b"adjustment_tax_on_fee_money",u"initial_fee_money",b"initial_fee_money",u"initial_tax_on_fee_money",b"initial_tax_on_fee_money"]) -> builtin___bool: ...
                def ClearField(self, field_name: typing_extensions___Literal[u"adjustment_fee_money",b"adjustment_fee_money",u"adjustment_tax_on_fee_money",b"adjustment_tax_on_fee_money",u"initial_fee_money",b"initial_fee_money",u"initial_tax_on_fee_money",b"initial_tax_on_fee_money"]) -> None: ...
            type___SquareProcessingFeeAmountDetails = SquareProcessingFeeAmountDetails

            class ThirdPartyFeeAmountDetail(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

                @property
                def amount(self) -> squareup___common___currency_pb2___Money: ...

                @property
                def third_party_fee_entity(self) -> type___Aggregate.Details.ProcessingFeeAmounts.ThirdPartyFeeEntity: ...

                def __init__(self,
                    *,
                    amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
                    third_party_fee_entity : typing___Optional[type___Aggregate.Details.ProcessingFeeAmounts.ThirdPartyFeeEntity] = None,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"third_party_fee_entity",b"third_party_fee_entity"]) -> builtin___bool: ...
                def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"third_party_fee_entity",b"third_party_fee_entity"]) -> None: ...
            type___ThirdPartyFeeAmountDetail = ThirdPartyFeeAmountDetail

            class ThirdPartyFeeEntity(google___protobuf___message___Message):
                DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
                unit_token: typing___Text = ...
                display_name: typing___Text = ...
                unit_name: typing___Text = ...

                def __init__(self,
                    *,
                    unit_token : typing___Optional[typing___Text] = None,
                    display_name : typing___Optional[typing___Text] = None,
                    unit_name : typing___Optional[typing___Text] = None,
                    ) -> None: ...
                def HasField(self, field_name: typing_extensions___Literal[u"display_name",b"display_name",u"unit_name",b"unit_name",u"unit_token",b"unit_token"]) -> builtin___bool: ...
                def ClearField(self, field_name: typing_extensions___Literal[u"display_name",b"display_name",u"unit_name",b"unit_name",u"unit_token",b"unit_token"]) -> None: ...
            type___ThirdPartyFeeEntity = ThirdPartyFeeEntity


            @property
            def square_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def tax_on_processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def third_party_fee_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def square_processing_fee_amount_details(self) -> type___Aggregate.Details.ProcessingFeeAmounts.SquareProcessingFeeAmountDetails: ...

            @property
            def third_party_fee_amount_details(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Aggregate.Details.ProcessingFeeAmounts.ThirdPartyFeeAmountDetail]: ...

            def __init__(self,
                *,
                square_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                tax_on_processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                third_party_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                square_processing_fee_amount_details : typing___Optional[type___Aggregate.Details.ProcessingFeeAmounts.SquareProcessingFeeAmountDetails] = None,
                third_party_fee_amount_details : typing___Optional[typing___Iterable[type___Aggregate.Details.ProcessingFeeAmounts.ThirdPartyFeeAmountDetail]] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"square_processing_fee_amount_details",b"square_processing_fee_amount_details",u"square_processing_fee_money",b"square_processing_fee_money",u"tax_on_processing_fee_money",b"tax_on_processing_fee_money",u"third_party_fee_money",b"third_party_fee_money"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"square_processing_fee_amount_details",b"square_processing_fee_amount_details",u"square_processing_fee_money",b"square_processing_fee_money",u"tax_on_processing_fee_money",b"tax_on_processing_fee_money",u"third_party_fee_amount_details",b"third_party_fee_amount_details",u"third_party_fee_money",b"third_party_fee_money"]) -> None: ...
        type___ProcessingFeeAmounts = ProcessingFeeAmounts

        class CostOfGoodsAmounts(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            profit_margin: typing___Text = ...
            cogs_items_count: typing___Text = ...

            @property
            def total_cost_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def average_cost_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def total_profit_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def total_revenue_money(self) -> squareup___common___currency_pb2___Money: ...

            @property
            def average_revenue_money(self) -> squareup___common___currency_pb2___Money: ...

            def __init__(self,
                *,
                total_cost_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                average_cost_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                total_profit_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                total_revenue_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                average_revenue_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
                profit_margin : typing___Optional[typing___Text] = None,
                cogs_items_count : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"average_cost_money",b"average_cost_money",u"average_revenue_money",b"average_revenue_money",u"cogs_items_count",b"cogs_items_count",u"profit_margin",b"profit_margin",u"total_cost_money",b"total_cost_money",u"total_profit_money",b"total_profit_money",u"total_revenue_money",b"total_revenue_money"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"average_cost_money",b"average_cost_money",u"average_revenue_money",b"average_revenue_money",u"cogs_items_count",b"cogs_items_count",u"profit_margin",b"profit_margin",u"total_cost_money",b"total_cost_money",u"total_profit_money",b"total_profit_money",u"total_revenue_money",b"total_revenue_money"]) -> None: ...
        type___CostOfGoodsAmounts = CostOfGoodsAmounts

        transaction_count: builtin___int = ...
        discount_count: builtin___int = ...
        modifier_count: builtin___int = ...
        modifier_quantity: typing___Text = ...
        item_quantity: typing___Text = ...
        item_count: typing___Text = ...
        gift_card_load_count: builtin___int = ...
        gift_cards_discounted_count: builtin___int = ...
        items_taxed_count: typing___Text = ...
        items_discounted_count: typing___Text = ...
        items_modified_count: typing___Text = ...
        cover_count: builtin___int = ...
        surcharge_count: builtin___int = ...
        tender_count: builtin___int = ...
        refund_count: builtin___int = ...

        @property
        def discount_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def modifier_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def item_gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def product_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def processing_fee_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def tip_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def tax_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def tender_tax_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def item_net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def taxable_net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def taxable_item_net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def total_collected_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def net_total_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def credit_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def swedish_rounding_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def gift_card_net_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def gift_card_load_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def average_gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def gift_cards_discounted_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def australian_gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def average_australian_gross_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def processing_fee_amounts(self) -> type___Aggregate.Details.ProcessingFeeAmounts: ...

        @property
        def fifo_cost_of_goods_amounts(self) -> type___Aggregate.Details.CostOfGoodsAmounts: ...

        @property
        def lifo_cost_of_goods_amounts(self) -> type___Aggregate.Details.CostOfGoodsAmounts: ...

        @property
        def average_cost_of_goods_amounts(self) -> type___Aggregate.Details.CostOfGoodsAmounts: ...

        @property
        def surcharge_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def auto_gratuity_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def total_sales_money(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def measured_quantity(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___MeasuredQuantity]: ...

        @property
        def commission_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            transaction_count : typing___Optional[builtin___int] = None,
            discount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            discount_count : typing___Optional[builtin___int] = None,
            modifier_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            modifier_count : typing___Optional[builtin___int] = None,
            modifier_quantity : typing___Optional[typing___Text] = None,
            gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            item_gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            product_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            processing_fee_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            tip_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            tender_tax_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            item_quantity : typing___Optional[typing___Text] = None,
            item_count : typing___Optional[typing___Text] = None,
            net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            item_net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            taxable_net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            taxable_item_net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            total_collected_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            net_total_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            credit_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            swedish_rounding_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            gift_card_net_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            gift_card_load_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            average_gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            gift_card_load_count : typing___Optional[builtin___int] = None,
            gift_cards_discounted_count : typing___Optional[builtin___int] = None,
            gift_cards_discounted_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            australian_gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            average_australian_gross_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            items_taxed_count : typing___Optional[typing___Text] = None,
            items_discounted_count : typing___Optional[typing___Text] = None,
            items_modified_count : typing___Optional[typing___Text] = None,
            processing_fee_amounts : typing___Optional[type___Aggregate.Details.ProcessingFeeAmounts] = None,
            fifo_cost_of_goods_amounts : typing___Optional[type___Aggregate.Details.CostOfGoodsAmounts] = None,
            lifo_cost_of_goods_amounts : typing___Optional[type___Aggregate.Details.CostOfGoodsAmounts] = None,
            average_cost_of_goods_amounts : typing___Optional[type___Aggregate.Details.CostOfGoodsAmounts] = None,
            surcharge_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            auto_gratuity_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            cover_count : typing___Optional[builtin___int] = None,
            surcharge_count : typing___Optional[builtin___int] = None,
            tender_count : typing___Optional[builtin___int] = None,
            refund_count : typing___Optional[builtin___int] = None,
            total_sales_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            measured_quantity : typing___Optional[typing___Iterable[type___MeasuredQuantity]] = None,
            commission_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"australian_gross_sales_money",b"australian_gross_sales_money",u"auto_gratuity_money",b"auto_gratuity_money",u"average_australian_gross_sales_money",b"average_australian_gross_sales_money",u"average_cost_of_goods_amounts",b"average_cost_of_goods_amounts",u"average_gross_sales_money",b"average_gross_sales_money",u"commission_money",b"commission_money",u"cover_count",b"cover_count",u"credit_money",b"credit_money",u"discount_count",b"discount_count",u"discount_money",b"discount_money",u"fifo_cost_of_goods_amounts",b"fifo_cost_of_goods_amounts",u"gift_card_load_count",b"gift_card_load_count",u"gift_card_load_money",b"gift_card_load_money",u"gift_card_net_sales_money",b"gift_card_net_sales_money",u"gift_cards_discounted_amount",b"gift_cards_discounted_amount",u"gift_cards_discounted_count",b"gift_cards_discounted_count",u"gross_sales_money",b"gross_sales_money",u"item_count",b"item_count",u"item_gross_sales_money",b"item_gross_sales_money",u"item_net_sales_money",b"item_net_sales_money",u"item_quantity",b"item_quantity",u"items_discounted_count",b"items_discounted_count",u"items_modified_count",b"items_modified_count",u"items_taxed_count",b"items_taxed_count",u"lifo_cost_of_goods_amounts",b"lifo_cost_of_goods_amounts",u"modifier_count",b"modifier_count",u"modifier_money",b"modifier_money",u"modifier_quantity",b"modifier_quantity",u"net_sales_money",b"net_sales_money",u"net_total_money",b"net_total_money",u"processing_fee_amounts",b"processing_fee_amounts",u"processing_fee_money",b"processing_fee_money",u"product_sales_money",b"product_sales_money",u"refund_count",b"refund_count",u"surcharge_count",b"surcharge_count",u"surcharge_money",b"surcharge_money",u"swedish_rounding_money",b"swedish_rounding_money",u"tax_money",b"tax_money",u"taxable_item_net_sales_money",b"taxable_item_net_sales_money",u"taxable_net_sales_money",b"taxable_net_sales_money",u"tender_count",b"tender_count",u"tender_tax_money",b"tender_tax_money",u"tip_money",b"tip_money",u"total_collected_money",b"total_collected_money",u"total_sales_money",b"total_sales_money",u"transaction_count",b"transaction_count"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"australian_gross_sales_money",b"australian_gross_sales_money",u"auto_gratuity_money",b"auto_gratuity_money",u"average_australian_gross_sales_money",b"average_australian_gross_sales_money",u"average_cost_of_goods_amounts",b"average_cost_of_goods_amounts",u"average_gross_sales_money",b"average_gross_sales_money",u"commission_money",b"commission_money",u"cover_count",b"cover_count",u"credit_money",b"credit_money",u"discount_count",b"discount_count",u"discount_money",b"discount_money",u"fifo_cost_of_goods_amounts",b"fifo_cost_of_goods_amounts",u"gift_card_load_count",b"gift_card_load_count",u"gift_card_load_money",b"gift_card_load_money",u"gift_card_net_sales_money",b"gift_card_net_sales_money",u"gift_cards_discounted_amount",b"gift_cards_discounted_amount",u"gift_cards_discounted_count",b"gift_cards_discounted_count",u"gross_sales_money",b"gross_sales_money",u"item_count",b"item_count",u"item_gross_sales_money",b"item_gross_sales_money",u"item_net_sales_money",b"item_net_sales_money",u"item_quantity",b"item_quantity",u"items_discounted_count",b"items_discounted_count",u"items_modified_count",b"items_modified_count",u"items_taxed_count",b"items_taxed_count",u"lifo_cost_of_goods_amounts",b"lifo_cost_of_goods_amounts",u"measured_quantity",b"measured_quantity",u"modifier_count",b"modifier_count",u"modifier_money",b"modifier_money",u"modifier_quantity",b"modifier_quantity",u"net_sales_money",b"net_sales_money",u"net_total_money",b"net_total_money",u"processing_fee_amounts",b"processing_fee_amounts",u"processing_fee_money",b"processing_fee_money",u"product_sales_money",b"product_sales_money",u"refund_count",b"refund_count",u"surcharge_count",b"surcharge_count",u"surcharge_money",b"surcharge_money",u"swedish_rounding_money",b"swedish_rounding_money",u"tax_money",b"tax_money",u"taxable_item_net_sales_money",b"taxable_item_net_sales_money",u"taxable_net_sales_money",b"taxable_net_sales_money",u"tender_count",b"tender_count",u"tender_tax_money",b"tender_tax_money",u"tip_money",b"tip_money",u"total_collected_money",b"total_collected_money",u"total_sales_money",b"total_sales_money",u"transaction_count",b"transaction_count"]) -> None: ...
    type___Details = Details


    @property
    def sales(self) -> type___Aggregate.Details: ...

    @property
    def refunds(self) -> type___Aggregate.Details: ...

    @property
    def net(self) -> type___Aggregate.Details: ...

    def __init__(self,
        *,
        sales : typing___Optional[type___Aggregate.Details] = None,
        refunds : typing___Optional[type___Aggregate.Details] = None,
        net : typing___Optional[type___Aggregate.Details] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"net",b"net",u"refunds",b"refunds",u"sales",b"sales"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"net",b"net",u"refunds",b"refunds",u"sales",b"sales"]) -> None: ...
type___Aggregate = Aggregate

class GroupByValue(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    PaymentMethodValue = typing___NewType('PaymentMethodValue', builtin___int)
    type___PaymentMethodValue = PaymentMethodValue
    PaymentMethod: _PaymentMethod
    class _PaymentMethod(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.PaymentMethodValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        CASH = typing___cast(GroupByValue.PaymentMethodValue, 0)
        CREDIT = typing___cast(GroupByValue.PaymentMethodValue, 1)
        OTHER = typing___cast(GroupByValue.PaymentMethodValue, 2)
        SPLIT_TENDER = typing___cast(GroupByValue.PaymentMethodValue, 3)
        THIRD_PARTY_CARD = typing___cast(GroupByValue.PaymentMethodValue, 4)
        SQUARE_GIFT_CARD_V2 = typing___cast(GroupByValue.PaymentMethodValue, 5)
        ZERO_AMOUNT = typing___cast(GroupByValue.PaymentMethodValue, 6)
        EXTERNAL = typing___cast(GroupByValue.PaymentMethodValue, 7)
        INSTALLMENT = typing___cast(GroupByValue.PaymentMethodValue, 8)
        EMONEY = typing___cast(GroupByValue.PaymentMethodValue, 9)
        CASH_APP = typing___cast(GroupByValue.PaymentMethodValue, 10)
        BANK_TRANSFER = typing___cast(GroupByValue.PaymentMethodValue, 11)
    CASH = typing___cast(GroupByValue.PaymentMethodValue, 0)
    CREDIT = typing___cast(GroupByValue.PaymentMethodValue, 1)
    OTHER = typing___cast(GroupByValue.PaymentMethodValue, 2)
    SPLIT_TENDER = typing___cast(GroupByValue.PaymentMethodValue, 3)
    THIRD_PARTY_CARD = typing___cast(GroupByValue.PaymentMethodValue, 4)
    SQUARE_GIFT_CARD_V2 = typing___cast(GroupByValue.PaymentMethodValue, 5)
    ZERO_AMOUNT = typing___cast(GroupByValue.PaymentMethodValue, 6)
    EXTERNAL = typing___cast(GroupByValue.PaymentMethodValue, 7)
    INSTALLMENT = typing___cast(GroupByValue.PaymentMethodValue, 8)
    EMONEY = typing___cast(GroupByValue.PaymentMethodValue, 9)
    CASH_APP = typing___cast(GroupByValue.PaymentMethodValue, 10)
    BANK_TRANSFER = typing___cast(GroupByValue.PaymentMethodValue, 11)
    type___PaymentMethod = PaymentMethod

    FeeTypeValue = typing___NewType('FeeTypeValue', builtin___int)
    type___FeeTypeValue = FeeTypeValue
    FeeType: _FeeType
    class _FeeType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.FeeTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SWIPED = typing___cast(GroupByValue.FeeTypeValue, 1)
        KEYED = typing___cast(GroupByValue.FeeTypeValue, 2)
        DEFAULT = typing___cast(GroupByValue.FeeTypeValue, 3)
        NO_FEE = typing___cast(GroupByValue.FeeTypeValue, 4)
        TAPPED = typing___cast(GroupByValue.FeeTypeValue, 5)
        DIPPED = typing___cast(GroupByValue.FeeTypeValue, 6)
        ON_FILE = typing___cast(GroupByValue.FeeTypeValue, 7)
        QR_CODE = typing___cast(GroupByValue.FeeTypeValue, 8)
        REDIRECT = typing___cast(GroupByValue.FeeTypeValue, 9)
        SMS = typing___cast(GroupByValue.FeeTypeValue, 10)
    SWIPED = typing___cast(GroupByValue.FeeTypeValue, 1)
    KEYED = typing___cast(GroupByValue.FeeTypeValue, 2)
    DEFAULT = typing___cast(GroupByValue.FeeTypeValue, 3)
    NO_FEE = typing___cast(GroupByValue.FeeTypeValue, 4)
    TAPPED = typing___cast(GroupByValue.FeeTypeValue, 5)
    DIPPED = typing___cast(GroupByValue.FeeTypeValue, 6)
    ON_FILE = typing___cast(GroupByValue.FeeTypeValue, 7)
    QR_CODE = typing___cast(GroupByValue.FeeTypeValue, 8)
    REDIRECT = typing___cast(GroupByValue.FeeTypeValue, 9)
    SMS = typing___cast(GroupByValue.FeeTypeValue, 10)
    type___FeeType = FeeType

    ProductValue = typing___NewType('ProductValue', builtin___int)
    type___ProductValue = ProductValue
    Product: _Product
    class _Product(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.ProductValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DEFAULT_PRODUCT = typing___cast(GroupByValue.ProductValue, 0)
        REGISTER = typing___cast(GroupByValue.ProductValue, 1)
        MARKET = typing___cast(GroupByValue.ProductValue, 2)
        ORDER = typing___cast(GroupByValue.ProductValue, 3)
        EXTERNAL_API = typing___cast(GroupByValue.ProductValue, 4)
        APPOINTMENTS = typing___cast(GroupByValue.ProductValue, 5)
        INVOICES = typing___cast(GroupByValue.ProductValue, 6)
        EGIFTING = typing___cast(GroupByValue.ProductValue, 7)
    DEFAULT_PRODUCT = typing___cast(GroupByValue.ProductValue, 0)
    REGISTER = typing___cast(GroupByValue.ProductValue, 1)
    MARKET = typing___cast(GroupByValue.ProductValue, 2)
    ORDER = typing___cast(GroupByValue.ProductValue, 3)
    EXTERNAL_API = typing___cast(GroupByValue.ProductValue, 4)
    APPOINTMENTS = typing___cast(GroupByValue.ProductValue, 5)
    INVOICES = typing___cast(GroupByValue.ProductValue, 6)
    EGIFTING = typing___cast(GroupByValue.ProductValue, 7)
    type___Product = Product

    TaxableValue = typing___NewType('TaxableValue', builtin___int)
    type___TaxableValue = TaxableValue
    Taxable: _Taxable
    class _Taxable(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.TaxableValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        TAXABLE = typing___cast(GroupByValue.TaxableValue, 1)
        NON_TAXABLE = typing___cast(GroupByValue.TaxableValue, 2)
    TAXABLE = typing___cast(GroupByValue.TaxableValue, 1)
    NON_TAXABLE = typing___cast(GroupByValue.TaxableValue, 2)
    type___Taxable = Taxable

    DayOfWeekValue = typing___NewType('DayOfWeekValue', builtin___int)
    type___DayOfWeekValue = DayOfWeekValue
    DayOfWeek: _DayOfWeek
    class _DayOfWeek(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.DayOfWeekValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        SUNDAY = typing___cast(GroupByValue.DayOfWeekValue, 0)
        MONDAY = typing___cast(GroupByValue.DayOfWeekValue, 1)
        TUESDAY = typing___cast(GroupByValue.DayOfWeekValue, 2)
        WEDNESDAY = typing___cast(GroupByValue.DayOfWeekValue, 3)
        THURSDAY = typing___cast(GroupByValue.DayOfWeekValue, 4)
        FRIDAY = typing___cast(GroupByValue.DayOfWeekValue, 5)
        SATURDAY = typing___cast(GroupByValue.DayOfWeekValue, 6)
    SUNDAY = typing___cast(GroupByValue.DayOfWeekValue, 0)
    MONDAY = typing___cast(GroupByValue.DayOfWeekValue, 1)
    TUESDAY = typing___cast(GroupByValue.DayOfWeekValue, 2)
    WEDNESDAY = typing___cast(GroupByValue.DayOfWeekValue, 3)
    THURSDAY = typing___cast(GroupByValue.DayOfWeekValue, 4)
    FRIDAY = typing___cast(GroupByValue.DayOfWeekValue, 5)
    SATURDAY = typing___cast(GroupByValue.DayOfWeekValue, 6)
    type___DayOfWeek = DayOfWeek

    GiftCardActivityTypeValue = typing___NewType('GiftCardActivityTypeValue', builtin___int)
    type___GiftCardActivityTypeValue = GiftCardActivityTypeValue
    GiftCardActivityType: _GiftCardActivityType
    class _GiftCardActivityType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.GiftCardActivityTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_ACTIVITY = typing___cast(GroupByValue.GiftCardActivityTypeValue, 0)
        ACTIVATION = typing___cast(GroupByValue.GiftCardActivityTypeValue, 1)
        RELOAD = typing___cast(GroupByValue.GiftCardActivityTypeValue, 2)
        UNACTIVATED_SALE = typing___cast(GroupByValue.GiftCardActivityTypeValue, 3)
    NO_ACTIVITY = typing___cast(GroupByValue.GiftCardActivityTypeValue, 0)
    ACTIVATION = typing___cast(GroupByValue.GiftCardActivityTypeValue, 1)
    RELOAD = typing___cast(GroupByValue.GiftCardActivityTypeValue, 2)
    UNACTIVATED_SALE = typing___cast(GroupByValue.GiftCardActivityTypeValue, 3)
    type___GiftCardActivityType = GiftCardActivityType

    DiscountAdjustmentTypeValue = typing___NewType('DiscountAdjustmentTypeValue', builtin___int)
    type___DiscountAdjustmentTypeValue = DiscountAdjustmentTypeValue
    DiscountAdjustmentType: _DiscountAdjustmentType
    class _DiscountAdjustmentType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.DiscountAdjustmentTypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DISCOUNT = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 0)
        REWARD = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 1)
        COUPON = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 2)
        COMP = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 3)
        NO_DISCOUNT_ADJUSTMENT_TYPE = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 4)
    DISCOUNT = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 0)
    REWARD = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 1)
    COUPON = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 2)
    COMP = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 3)
    NO_DISCOUNT_ADJUSTMENT_TYPE = typing___cast(GroupByValue.DiscountAdjustmentTypeValue, 4)
    type___DiscountAdjustmentType = DiscountAdjustmentType

    class Discount(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        discount_adjustment_type: type___GroupByValue.DiscountAdjustmentTypeValue = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            discount_adjustment_type : typing___Optional[type___GroupByValue.DiscountAdjustmentTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"discount_adjustment_type",b"discount_adjustment_type",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"discount_adjustment_type",b"discount_adjustment_type",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Discount = Discount

    class ItemCategory(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___ItemCategory = ItemCategory

    class Employee(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        employee_token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            employee_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"employee_token",b"employee_token",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"employee_token",b"employee_token",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Employee = Employee

    class EmployeeRole(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        employee_role_token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            employee_role_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"employee_role_token",b"employee_role_token",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"employee_role_token",b"employee_role_token",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___EmployeeRole = EmployeeRole

    class Device(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        device_token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            device_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"device_token",b"device_token",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"device_token",b"device_token",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Device = Device

    class Item(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        image_url: typing___Text = ...
        abbreviation: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        @property
        def icon_color(self) -> squareup___common___colors_pb2___RGBAColor: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            image_url : typing___Optional[typing___Text] = None,
            icon_color : typing___Optional[squareup___common___colors_pb2___RGBAColor] = None,
            abbreviation : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"abbreviation",b"abbreviation",u"icon_color",b"icon_color",u"image_url",b"image_url",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"abbreviation",b"abbreviation",u"icon_color",b"icon_color",u"image_url",b"image_url",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Item = Item

    class ItemVariation(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        sku: typing___Text = ...
        gtin: typing___Text = ...
        default_measurement_unit: squareup___beemo___translation_types_pb2___TranslationTypeValue = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        @property
        def defined_measurement_unit(self) -> squareup___connect___v2___common___measurement_units_pb2___MeasurementUnit: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            sku : typing___Optional[typing___Text] = None,
            gtin : typing___Optional[typing___Text] = None,
            defined_measurement_unit : typing___Optional[squareup___connect___v2___common___measurement_units_pb2___MeasurementUnit] = None,
            default_measurement_unit : typing___Optional[squareup___beemo___translation_types_pb2___TranslationTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"default_measurement_unit",b"default_measurement_unit",u"defined_measurement_unit",b"defined_measurement_unit",u"gtin",b"gtin",u"measurement_unit",b"measurement_unit",u"name_or_translation_type",b"name_or_translation_type",u"sku",b"sku"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"default_measurement_unit",b"default_measurement_unit",u"defined_measurement_unit",b"defined_measurement_unit",u"gtin",b"gtin",u"measurement_unit",b"measurement_unit",u"name_or_translation_type",b"name_or_translation_type",u"sku",b"sku"]) -> None: ...
        def WhichOneof(self, oneof_group: typing_extensions___Literal[u"measurement_unit",b"measurement_unit"]) -> typing_extensions___Literal["defined_measurement_unit","default_measurement_unit"]: ...
    type___ItemVariation = ItemVariation

    class MobileStaff(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        mobile_staff_id: typing___Text = ...
        user_token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            mobile_staff_id : typing___Optional[typing___Text] = None,
            user_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"mobile_staff_id",b"mobile_staff_id",u"name_or_translation_type",b"name_or_translation_type",u"user_token",b"user_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"mobile_staff_id",b"mobile_staff_id",u"name_or_translation_type",b"name_or_translation_type",u"user_token",b"user_token"]) -> None: ...
    type___MobileStaff = MobileStaff

    class Subunit(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        subunit_token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            subunit_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type",u"subunit_token",b"subunit_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type",u"subunit_token",b"subunit_token"]) -> None: ...
    type___Subunit = Subunit

    class Modifier(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        @property
        def modifier_set_name(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        @property
        def conversational_mode(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            modifier_set_name : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            conversational_mode : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"conversational_mode",b"conversational_mode",u"modifier_set_name",b"modifier_set_name",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"conversational_mode",b"conversational_mode",u"modifier_set_name",b"modifier_set_name",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Modifier = Modifier

    class ModifierSet(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___ModifierSet = ModifierSet

    class TimeRange(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        tz_name: typing___Text = ...

        @property
        def begin_time(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def end_time(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            begin_time : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            end_time : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            tz_name : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"begin_time",b"begin_time",u"end_time",b"end_time",u"tz_name",b"tz_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"begin_time",b"begin_time",u"end_time",b"end_time",u"tz_name",b"tz_name"]) -> None: ...
    type___TimeRange = TimeRange

    class UnitPrice(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def unit_price(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            unit_price : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"unit_price",b"unit_price"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"unit_price",b"unit_price"]) -> None: ...
    type___UnitPrice = UnitPrice

    class Tax(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Tax = Tax

    class DiningOption(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        dining_option_id: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            dining_option_id : typing___Optional[typing___Text] = None,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"dining_option_id",b"dining_option_id",u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"dining_option_id",b"dining_option_id",u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___DiningOption = DiningOption

    class GiftCard(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def token_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            token_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"token_or_translation_type",b"token_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"token_or_translation_type",b"token_or_translation_type"]) -> None: ...
    type___GiftCard = GiftCard

    class CardDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        pan_suffix: typing___Text = ...

        def __init__(self,
            *,
            pan_suffix : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"pan_suffix",b"pan_suffix"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pan_suffix",b"pan_suffix"]) -> None: ...
    type___CardDetails = CardDetails

    class VirtualRegisterDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        virtual_register_token: typing___Text = ...

        def __init__(self,
            *,
            virtual_register_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"virtual_register_token",b"virtual_register_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"virtual_register_token",b"virtual_register_token"]) -> None: ...
    type___VirtualRegisterDetails = VirtualRegisterDetails

    class BusinessDayDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        business_day_token: typing___Text = ...

        def __init__(self,
            *,
            business_day_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"business_day_token",b"business_day_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"business_day_token",b"business_day_token"]) -> None: ...
    type___BusinessDayDetails = BusinessDayDetails

    class ActivityTypeDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        activity_type: squareup___beemo___v3___reporting_params_pb2___ActivityTypeValue = ...

        def __init__(self,
            *,
            activity_type : typing___Optional[squareup___beemo___v3___reporting_params_pb2___ActivityTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"activity_type",b"activity_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"activity_type",b"activity_type"]) -> None: ...
    type___ActivityTypeDetails = ActivityTypeDetails

    class VoidReason(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___VoidReason = VoidReason

    class EventTypeDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        event_type: squareup___beemo___v3___bill_pb2___EventTypeValue = ...

        def __init__(self,
            *,
            event_type : typing___Optional[squareup___beemo___v3___bill_pb2___EventTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"event_type",b"event_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"event_type",b"event_type"]) -> None: ...
    type___EventTypeDetails = EventTypeDetails

    class DiscountAdjustmentTypeDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        discount_adjustment_type: type___GroupByValue.DiscountAdjustmentTypeValue = ...

        def __init__(self,
            *,
            discount_adjustment_type : typing___Optional[type___GroupByValue.DiscountAdjustmentTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"discount_adjustment_type",b"discount_adjustment_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"discount_adjustment_type",b"discount_adjustment_type"]) -> None: ...
    type___DiscountAdjustmentTypeDetails = DiscountAdjustmentTypeDetails

    class CompReason(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___CompReason = CompReason

    class ModifierDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def modifier(self) -> type___GroupByValue.Modifier: ...

        @property
        def single_quantity_applied_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            modifier : typing___Optional[type___GroupByValue.Modifier] = None,
            single_quantity_applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"modifier",b"modifier",u"single_quantity_applied_money",b"single_quantity_applied_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"modifier",b"modifier",u"single_quantity_applied_money",b"single_quantity_applied_money"]) -> None: ...
    type___ModifierDetails = ModifierDetails

    class TaxDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        InclusionTypeValue = typing___NewType('InclusionTypeValue', builtin___int)
        type___InclusionTypeValue = InclusionTypeValue
        InclusionType: _InclusionType
        class _InclusionType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.TaxDetails.InclusionTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            ADDITIVE = typing___cast(GroupByValue.TaxDetails.InclusionTypeValue, 0)
            INCLUSIVE = typing___cast(GroupByValue.TaxDetails.InclusionTypeValue, 1)
        ADDITIVE = typing___cast(GroupByValue.TaxDetails.InclusionTypeValue, 0)
        INCLUSIVE = typing___cast(GroupByValue.TaxDetails.InclusionTypeValue, 1)
        type___InclusionType = InclusionType

        inclusion_type: type___GroupByValue.TaxDetails.InclusionTypeValue = ...
        rate: typing___Text = ...

        @property
        def tax(self) -> type___GroupByValue.Tax: ...

        def __init__(self,
            *,
            tax : typing___Optional[type___GroupByValue.Tax] = None,
            inclusion_type : typing___Optional[type___GroupByValue.TaxDetails.InclusionTypeValue] = None,
            rate : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"inclusion_type",b"inclusion_type",u"rate",b"rate",u"tax",b"tax"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"inclusion_type",b"inclusion_type",u"rate",b"rate",u"tax",b"tax"]) -> None: ...
    type___TaxDetails = TaxDetails

    class DiscountDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        DiscountBasisTypeValue = typing___NewType('DiscountBasisTypeValue', builtin___int)
        type___DiscountBasisTypeValue = DiscountBasisTypeValue
        DiscountBasisType: _DiscountBasisType
        class _DiscountBasisType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.DiscountDetails.DiscountBasisTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            AMOUNT = typing___cast(GroupByValue.DiscountDetails.DiscountBasisTypeValue, 0)
            PERCENTAGE = typing___cast(GroupByValue.DiscountDetails.DiscountBasisTypeValue, 1)
        AMOUNT = typing___cast(GroupByValue.DiscountDetails.DiscountBasisTypeValue, 0)
        PERCENTAGE = typing___cast(GroupByValue.DiscountDetails.DiscountBasisTypeValue, 1)
        type___DiscountBasisType = DiscountBasisType

        type: type___GroupByValue.DiscountDetails.DiscountBasisTypeValue = ...
        rate: typing___Text = ...

        @property
        def discount(self) -> type___GroupByValue.Discount: ...

        @property
        def single_quantity_applied_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            discount : typing___Optional[type___GroupByValue.Discount] = None,
            type : typing___Optional[type___GroupByValue.DiscountDetails.DiscountBasisTypeValue] = None,
            rate : typing___Optional[typing___Text] = None,
            single_quantity_applied_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"discount",b"discount",u"rate",b"rate",u"single_quantity_applied_money",b"single_quantity_applied_money",u"type",b"type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"discount",b"discount",u"rate",b"rate",u"single_quantity_applied_money",b"single_quantity_applied_money",u"type",b"type"]) -> None: ...
    type___DiscountDetails = DiscountDetails

    class UniqueItemization(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def item_category(self) -> type___GroupByValue.ItemCategory: ...

        @property
        def item(self) -> type___GroupByValue.Item: ...

        @property
        def item_variation(self) -> type___GroupByValue.ItemVariation: ...

        @property
        def unit_price(self) -> type___GroupByValue.UnitPrice: ...

        @property
        def modifier_details(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GroupByValue.ModifierDetails]: ...

        @property
        def tax_details(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GroupByValue.TaxDetails]: ...

        @property
        def discount_details(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GroupByValue.DiscountDetails]: ...

        def __init__(self,
            *,
            item_category : typing___Optional[type___GroupByValue.ItemCategory] = None,
            item : typing___Optional[type___GroupByValue.Item] = None,
            item_variation : typing___Optional[type___GroupByValue.ItemVariation] = None,
            unit_price : typing___Optional[type___GroupByValue.UnitPrice] = None,
            modifier_details : typing___Optional[typing___Iterable[type___GroupByValue.ModifierDetails]] = None,
            tax_details : typing___Optional[typing___Iterable[type___GroupByValue.TaxDetails]] = None,
            discount_details : typing___Optional[typing___Iterable[type___GroupByValue.DiscountDetails]] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"item",b"item",u"item_category",b"item_category",u"item_variation",b"item_variation",u"unit_price",b"unit_price"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"discount_details",b"discount_details",u"item",b"item",u"item_category",b"item_category",u"item_variation",b"item_variation",u"modifier_details",b"modifier_details",u"tax_details",b"tax_details",u"unit_price",b"unit_price"]) -> None: ...
    type___UniqueItemization = UniqueItemization

    class TicketGroup(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___TicketGroup = TicketGroup

    class DeviceCredential(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            token : typing___Optional[typing___Text] = None,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type",u"token",b"token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type",u"token",b"token"]) -> None: ...
    type___DeviceCredential = DeviceCredential

    class ItemizationNote(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        note: typing___Text = ...

        def __init__(self,
            *,
            note : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"note",b"note"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"note",b"note"]) -> None: ...
    type___ItemizationNote = ItemizationNote

    class ReceiptDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        receipt_number: typing___Text = ...

        def __init__(self,
            *,
            receipt_number : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"receipt_number",b"receipt_number"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"receipt_number",b"receipt_number"]) -> None: ...
    type___ReceiptDetails = ReceiptDetails

    class TicketName(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ticket_name: typing___Text = ...

        def __init__(self,
            *,
            ticket_name : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"ticket_name",b"ticket_name"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"ticket_name",b"ticket_name"]) -> None: ...
    type___TicketName = TicketName

    class TransactionTotal(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def total_collected_money(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            total_collected_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"total_collected_money",b"total_collected_money"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"total_collected_money",b"total_collected_money"]) -> None: ...
    type___TransactionTotal = TransactionTotal

    class ConversationalMode(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___ConversationalMode = ConversationalMode

    class BillNote(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        note: typing___Text = ...

        def __init__(self,
            *,
            note : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"note",b"note"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"note",b"note"]) -> None: ...
    type___BillNote = BillNote

    class TenderNote(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        note: typing___Text = ...

        def __init__(self,
            *,
            note : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"note",b"note"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"note",b"note"]) -> None: ...
    type___TenderNote = TenderNote

    class Menu(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___Menu = Menu

    class FeePlan(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        discount_basis_points: builtin___int = ...
        interchange_cents: builtin___int = ...

        def __init__(self,
            *,
            discount_basis_points : typing___Optional[builtin___int] = None,
            interchange_cents : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"discount_basis_points",b"discount_basis_points",u"interchange_cents",b"interchange_cents"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"discount_basis_points",b"discount_basis_points",u"interchange_cents",b"interchange_cents"]) -> None: ...
    type___FeePlan = FeePlan

    class FeePlanTypeDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        fee_plan_type: squareup___beemo___v2___models___payment_pb2___SquareProcessingFeeAmountDetails.FeeTypeValue = ...

        def __init__(self,
            *,
            fee_plan_type : typing___Optional[squareup___beemo___v2___models___payment_pb2___SquareProcessingFeeAmountDetails.FeeTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"fee_plan_type",b"fee_plan_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"fee_plan_type",b"fee_plan_type"]) -> None: ...
    type___FeePlanTypeDetails = FeePlanTypeDetails

    class TicketTemplate(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___TicketTemplate = TicketTemplate

    class RestaurantCoverDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        CoverTypeValue = typing___NewType('CoverTypeValue', builtin___int)
        type___CoverTypeValue = CoverTypeValue
        CoverType: _CoverType
        class _CoverType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.RestaurantCoverDetails.CoverTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            UNKNOWN = typing___cast(GroupByValue.RestaurantCoverDetails.CoverTypeValue, 0)
            COVERED = typing___cast(GroupByValue.RestaurantCoverDetails.CoverTypeValue, 1)
            NOT_COVERED = typing___cast(GroupByValue.RestaurantCoverDetails.CoverTypeValue, 2)
        UNKNOWN = typing___cast(GroupByValue.RestaurantCoverDetails.CoverTypeValue, 0)
        COVERED = typing___cast(GroupByValue.RestaurantCoverDetails.CoverTypeValue, 1)
        NOT_COVERED = typing___cast(GroupByValue.RestaurantCoverDetails.CoverTypeValue, 2)
        type___CoverType = CoverType

        cover_type: type___GroupByValue.RestaurantCoverDetails.CoverTypeValue = ...

        def __init__(self,
            *,
            cover_type : typing___Optional[type___GroupByValue.RestaurantCoverDetails.CoverTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"cover_type",b"cover_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"cover_type",b"cover_type"]) -> None: ...
    type___RestaurantCoverDetails = RestaurantCoverDetails

    class PaymentSourceName(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___PaymentSourceName = PaymentSourceName

    class ItemizationTypeDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        ItemizationTypeValue = typing___NewType('ItemizationTypeValue', builtin___int)
        type___ItemizationTypeValue = ItemizationTypeValue
        ItemizationType: _ItemizationType
        class _ItemizationType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.ItemizationTypeDetails.ItemizationTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            UNKNOWN = typing___cast(GroupByValue.ItemizationTypeDetails.ItemizationTypeValue, 0)
            ITEM = typing___cast(GroupByValue.ItemizationTypeDetails.ItemizationTypeValue, 1)
            SURCHARGE = typing___cast(GroupByValue.ItemizationTypeDetails.ItemizationTypeValue, 2)
        UNKNOWN = typing___cast(GroupByValue.ItemizationTypeDetails.ItemizationTypeValue, 0)
        ITEM = typing___cast(GroupByValue.ItemizationTypeDetails.ItemizationTypeValue, 1)
        SURCHARGE = typing___cast(GroupByValue.ItemizationTypeDetails.ItemizationTypeValue, 2)
        type___ItemizationType = ItemizationType

        itemization_type: type___GroupByValue.ItemizationTypeDetails.ItemizationTypeValue = ...

        def __init__(self,
            *,
            itemization_type : typing___Optional[type___GroupByValue.ItemizationTypeDetails.ItemizationTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"itemization_type",b"itemization_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"itemization_type",b"itemization_type"]) -> None: ...
    type___ItemizationTypeDetails = ItemizationTypeDetails

    class SurchargeTypeDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        SurchargeTypeValue = typing___NewType('SurchargeTypeValue', builtin___int)
        type___SurchargeTypeValue = SurchargeTypeValue
        SurchargeType: _SurchargeType
        class _SurchargeType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[GroupByValue.SurchargeTypeDetails.SurchargeTypeValue]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            UNKNOWN = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 0)
            AUTO_GRATUITY = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 1)
            CUSTOM = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 2)
            NO_SURCHARGE_TYPE = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 3)
        UNKNOWN = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 0)
        AUTO_GRATUITY = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 1)
        CUSTOM = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 2)
        NO_SURCHARGE_TYPE = typing___cast(GroupByValue.SurchargeTypeDetails.SurchargeTypeValue, 3)
        type___SurchargeType = SurchargeType

        surcharge_type: type___GroupByValue.SurchargeTypeDetails.SurchargeTypeValue = ...

        def __init__(self,
            *,
            surcharge_type : typing___Optional[type___GroupByValue.SurchargeTypeDetails.SurchargeTypeValue] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"surcharge_type",b"surcharge_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"surcharge_type",b"surcharge_type"]) -> None: ...
    type___SurchargeTypeDetails = SurchargeTypeDetails

    class ContactDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def contact_token(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            contact_token : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"contact_token",b"contact_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"contact_token",b"contact_token"]) -> None: ...
    type___ContactDetails = ContactDetails

    class SurchargeNameDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___SurchargeNameDetails = SurchargeNameDetails

    class OrderSourceName(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type"]) -> None: ...
    type___OrderSourceName = OrderSourceName

    class Vendor(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        token: typing___Text = ...

        @property
        def name_or_translation_type(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

        def __init__(self,
            *,
            name_or_translation_type : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
            token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type",u"token",b"token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"name_or_translation_type",b"name_or_translation_type",u"token",b"token"]) -> None: ...
    type___Vendor = Vendor

    transaction_completed_at_ms: builtin___int = ...
    payment_method: type___GroupByValue.PaymentMethodValue = ...
    fee_type: type___GroupByValue.FeeTypeValue = ...
    product: type___GroupByValue.ProductValue = ...
    taxable: type___GroupByValue.TaxableValue = ...
    day_of_week: type___GroupByValue.DayOfWeekValue = ...
    hour_of_day: builtin___int = ...
    gift_card_activity_type: type___GroupByValue.GiftCardActivityTypeValue = ...
    risk_evaluation_level: squareup___riskevaluation___external___external_pb2___LevelValue = ...
    risk_evaluation_action: squareup___riskevaluation___external___external_pb2___ActionValue = ...
    risk_evaluation_rule: typing___Text = ...
    order_display_name: typing___Text = ...
    fulfillment_type: squareup___omg___model___orders_pb2___Order.FulfillmentTypeValue = ...
    fulfillment_state: squareup___omg___model___orders_pb2___Order.Fulfillment.StateValue = ...

    @property
    def discount(self) -> type___GroupByValue.Discount: ...

    @property
    def item_category(self) -> type___GroupByValue.ItemCategory: ...

    @property
    def employee(self) -> type___GroupByValue.Employee: ...

    @property
    def acting_employee(self) -> type___GroupByValue.Employee: ...

    @property
    def employee_role(self) -> type___GroupByValue.EmployeeRole: ...

    @property
    def device(self) -> type___GroupByValue.Device: ...

    @property
    def item(self) -> type___GroupByValue.Item: ...

    @property
    def item_variation(self) -> type___GroupByValue.ItemVariation: ...

    @property
    def mobile_staff(self) -> type___GroupByValue.MobileStaff: ...

    @property
    def subunit(self) -> type___GroupByValue.Subunit: ...

    @property
    def modifier(self) -> type___GroupByValue.Modifier: ...

    @property
    def modifier_set(self) -> type___GroupByValue.ModifierSet: ...

    @property
    def hour(self) -> type___GroupByValue.TimeRange: ...

    @property
    def time_window(self) -> type___GroupByValue.TimeRange: ...

    @property
    def unit_price(self) -> type___GroupByValue.UnitPrice: ...

    @property
    def tax(self) -> type___GroupByValue.Tax: ...

    @property
    def day(self) -> type___GroupByValue.TimeRange: ...

    @property
    def month(self) -> type___GroupByValue.TimeRange: ...

    @property
    def week(self) -> type___GroupByValue.TimeRange: ...

    @property
    def dining_option(self) -> type___GroupByValue.DiningOption: ...

    @property
    def gift_card(self) -> type___GroupByValue.GiftCard: ...

    @property
    def card_details(self) -> type___GroupByValue.CardDetails: ...

    @property
    def virtual_register_details(self) -> type___GroupByValue.VirtualRegisterDetails: ...

    @property
    def business_day_details(self) -> type___GroupByValue.BusinessDayDetails: ...

    @property
    def activity_type_details(self) -> type___GroupByValue.ActivityTypeDetails: ...

    @property
    def void_reason(self) -> type___GroupByValue.VoidReason: ...

    @property
    def event_type_details(self) -> type___GroupByValue.EventTypeDetails: ...

    @property
    def discount_adjustment_type_details(self) -> type___GroupByValue.DiscountAdjustmentTypeDetails: ...

    @property
    def comp_reason(self) -> type___GroupByValue.CompReason: ...

    @property
    def unique_itemization(self) -> type___GroupByValue.UniqueItemization: ...

    @property
    def ticket_group(self) -> type___GroupByValue.TicketGroup: ...

    @property
    def device_credential(self) -> type___GroupByValue.DeviceCredential: ...

    @property
    def itemization_note(self) -> type___GroupByValue.ItemizationNote: ...

    @property
    def receipt_details(self) -> type___GroupByValue.ReceiptDetails: ...

    @property
    def ticket_name(self) -> type___GroupByValue.TicketName: ...

    @property
    def transaction_total(self) -> type___GroupByValue.TransactionTotal: ...

    @property
    def conversational_mode(self) -> type___GroupByValue.ConversationalMode: ...

    @property
    def bill_note(self) -> type___GroupByValue.BillNote: ...

    @property
    def tender_note(self) -> type___GroupByValue.TenderNote: ...

    @property
    def menu(self) -> type___GroupByValue.Menu: ...

    @property
    def fee_plan(self) -> type___GroupByValue.FeePlan: ...

    @property
    def fee_plan_type_details(self) -> type___GroupByValue.FeePlanTypeDetails: ...

    @property
    def ticket_template(self) -> type___GroupByValue.TicketTemplate: ...

    @property
    def restaurant_cover_details(self) -> type___GroupByValue.RestaurantCoverDetails: ...

    @property
    def payment_source_name(self) -> type___GroupByValue.PaymentSourceName: ...

    @property
    def itemization_type_details(self) -> type___GroupByValue.ItemizationTypeDetails: ...

    @property
    def surcharge_type_details(self) -> type___GroupByValue.SurchargeTypeDetails: ...

    @property
    def contact_details(self) -> type___GroupByValue.ContactDetails: ...

    @property
    def surcharge_name_details(self) -> type___GroupByValue.SurchargeNameDetails: ...

    @property
    def order_source_name(self) -> type___GroupByValue.OrderSourceName: ...

    @property
    def fulfillment_recipient(self) -> squareup___beemo___v4___fulfillment_pb2___FulfillmentRecipient: ...

    @property
    def vendor(self) -> type___GroupByValue.Vendor: ...

    def __init__(self,
        *,
        transaction_completed_at_ms : typing___Optional[builtin___int] = None,
        discount : typing___Optional[type___GroupByValue.Discount] = None,
        item_category : typing___Optional[type___GroupByValue.ItemCategory] = None,
        employee : typing___Optional[type___GroupByValue.Employee] = None,
        acting_employee : typing___Optional[type___GroupByValue.Employee] = None,
        employee_role : typing___Optional[type___GroupByValue.EmployeeRole] = None,
        device : typing___Optional[type___GroupByValue.Device] = None,
        item : typing___Optional[type___GroupByValue.Item] = None,
        item_variation : typing___Optional[type___GroupByValue.ItemVariation] = None,
        mobile_staff : typing___Optional[type___GroupByValue.MobileStaff] = None,
        subunit : typing___Optional[type___GroupByValue.Subunit] = None,
        modifier : typing___Optional[type___GroupByValue.Modifier] = None,
        payment_method : typing___Optional[type___GroupByValue.PaymentMethodValue] = None,
        modifier_set : typing___Optional[type___GroupByValue.ModifierSet] = None,
        hour : typing___Optional[type___GroupByValue.TimeRange] = None,
        time_window : typing___Optional[type___GroupByValue.TimeRange] = None,
        unit_price : typing___Optional[type___GroupByValue.UnitPrice] = None,
        tax : typing___Optional[type___GroupByValue.Tax] = None,
        day : typing___Optional[type___GroupByValue.TimeRange] = None,
        month : typing___Optional[type___GroupByValue.TimeRange] = None,
        fee_type : typing___Optional[type___GroupByValue.FeeTypeValue] = None,
        product : typing___Optional[type___GroupByValue.ProductValue] = None,
        taxable : typing___Optional[type___GroupByValue.TaxableValue] = None,
        day_of_week : typing___Optional[type___GroupByValue.DayOfWeekValue] = None,
        hour_of_day : typing___Optional[builtin___int] = None,
        week : typing___Optional[type___GroupByValue.TimeRange] = None,
        dining_option : typing___Optional[type___GroupByValue.DiningOption] = None,
        gift_card : typing___Optional[type___GroupByValue.GiftCard] = None,
        gift_card_activity_type : typing___Optional[type___GroupByValue.GiftCardActivityTypeValue] = None,
        card_details : typing___Optional[type___GroupByValue.CardDetails] = None,
        virtual_register_details : typing___Optional[type___GroupByValue.VirtualRegisterDetails] = None,
        business_day_details : typing___Optional[type___GroupByValue.BusinessDayDetails] = None,
        activity_type_details : typing___Optional[type___GroupByValue.ActivityTypeDetails] = None,
        void_reason : typing___Optional[type___GroupByValue.VoidReason] = None,
        event_type_details : typing___Optional[type___GroupByValue.EventTypeDetails] = None,
        discount_adjustment_type_details : typing___Optional[type___GroupByValue.DiscountAdjustmentTypeDetails] = None,
        comp_reason : typing___Optional[type___GroupByValue.CompReason] = None,
        unique_itemization : typing___Optional[type___GroupByValue.UniqueItemization] = None,
        ticket_group : typing___Optional[type___GroupByValue.TicketGroup] = None,
        device_credential : typing___Optional[type___GroupByValue.DeviceCredential] = None,
        itemization_note : typing___Optional[type___GroupByValue.ItemizationNote] = None,
        receipt_details : typing___Optional[type___GroupByValue.ReceiptDetails] = None,
        ticket_name : typing___Optional[type___GroupByValue.TicketName] = None,
        transaction_total : typing___Optional[type___GroupByValue.TransactionTotal] = None,
        conversational_mode : typing___Optional[type___GroupByValue.ConversationalMode] = None,
        bill_note : typing___Optional[type___GroupByValue.BillNote] = None,
        tender_note : typing___Optional[type___GroupByValue.TenderNote] = None,
        menu : typing___Optional[type___GroupByValue.Menu] = None,
        fee_plan : typing___Optional[type___GroupByValue.FeePlan] = None,
        fee_plan_type_details : typing___Optional[type___GroupByValue.FeePlanTypeDetails] = None,
        ticket_template : typing___Optional[type___GroupByValue.TicketTemplate] = None,
        restaurant_cover_details : typing___Optional[type___GroupByValue.RestaurantCoverDetails] = None,
        payment_source_name : typing___Optional[type___GroupByValue.PaymentSourceName] = None,
        itemization_type_details : typing___Optional[type___GroupByValue.ItemizationTypeDetails] = None,
        surcharge_type_details : typing___Optional[type___GroupByValue.SurchargeTypeDetails] = None,
        contact_details : typing___Optional[type___GroupByValue.ContactDetails] = None,
        surcharge_name_details : typing___Optional[type___GroupByValue.SurchargeNameDetails] = None,
        order_source_name : typing___Optional[type___GroupByValue.OrderSourceName] = None,
        risk_evaluation_level : typing___Optional[squareup___riskevaluation___external___external_pb2___LevelValue] = None,
        risk_evaluation_action : typing___Optional[squareup___riskevaluation___external___external_pb2___ActionValue] = None,
        risk_evaluation_rule : typing___Optional[typing___Text] = None,
        order_display_name : typing___Optional[typing___Text] = None,
        fulfillment_type : typing___Optional[squareup___omg___model___orders_pb2___Order.FulfillmentTypeValue] = None,
        fulfillment_state : typing___Optional[squareup___omg___model___orders_pb2___Order.Fulfillment.StateValue] = None,
        fulfillment_recipient : typing___Optional[squareup___beemo___v4___fulfillment_pb2___FulfillmentRecipient] = None,
        vendor : typing___Optional[type___GroupByValue.Vendor] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"acting_employee",b"acting_employee",u"activity_type_details",b"activity_type_details",u"bill_note",b"bill_note",u"business_day_details",b"business_day_details",u"card_details",b"card_details",u"comp_reason",b"comp_reason",u"contact_details",b"contact_details",u"conversational_mode",b"conversational_mode",u"day",b"day",u"day_of_week",b"day_of_week",u"device",b"device",u"device_credential",b"device_credential",u"dining_option",b"dining_option",u"discount",b"discount",u"discount_adjustment_type_details",b"discount_adjustment_type_details",u"employee",b"employee",u"employee_role",b"employee_role",u"event_type_details",b"event_type_details",u"fee_plan",b"fee_plan",u"fee_plan_type_details",b"fee_plan_type_details",u"fee_type",b"fee_type",u"fulfillment_recipient",b"fulfillment_recipient",u"fulfillment_state",b"fulfillment_state",u"fulfillment_type",b"fulfillment_type",u"gift_card",b"gift_card",u"gift_card_activity_type",b"gift_card_activity_type",u"hour",b"hour",u"hour_of_day",b"hour_of_day",u"item",b"item",u"item_category",b"item_category",u"item_variation",b"item_variation",u"itemization_note",b"itemization_note",u"itemization_type_details",b"itemization_type_details",u"menu",b"menu",u"mobile_staff",b"mobile_staff",u"modifier",b"modifier",u"modifier_set",b"modifier_set",u"month",b"month",u"order_display_name",b"order_display_name",u"order_source_name",b"order_source_name",u"payment_method",b"payment_method",u"payment_source_name",b"payment_source_name",u"product",b"product",u"receipt_details",b"receipt_details",u"restaurant_cover_details",b"restaurant_cover_details",u"risk_evaluation_action",b"risk_evaluation_action",u"risk_evaluation_level",b"risk_evaluation_level",u"risk_evaluation_rule",b"risk_evaluation_rule",u"subunit",b"subunit",u"surcharge_name_details",b"surcharge_name_details",u"surcharge_type_details",b"surcharge_type_details",u"tax",b"tax",u"taxable",b"taxable",u"tender_note",b"tender_note",u"ticket_group",b"ticket_group",u"ticket_name",b"ticket_name",u"ticket_template",b"ticket_template",u"time_window",b"time_window",u"transaction_completed_at_ms",b"transaction_completed_at_ms",u"transaction_total",b"transaction_total",u"unique_itemization",b"unique_itemization",u"unit_price",b"unit_price",u"vendor",b"vendor",u"virtual_register_details",b"virtual_register_details",u"void_reason",b"void_reason",u"week",b"week"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"acting_employee",b"acting_employee",u"activity_type_details",b"activity_type_details",u"bill_note",b"bill_note",u"business_day_details",b"business_day_details",u"card_details",b"card_details",u"comp_reason",b"comp_reason",u"contact_details",b"contact_details",u"conversational_mode",b"conversational_mode",u"day",b"day",u"day_of_week",b"day_of_week",u"device",b"device",u"device_credential",b"device_credential",u"dining_option",b"dining_option",u"discount",b"discount",u"discount_adjustment_type_details",b"discount_adjustment_type_details",u"employee",b"employee",u"employee_role",b"employee_role",u"event_type_details",b"event_type_details",u"fee_plan",b"fee_plan",u"fee_plan_type_details",b"fee_plan_type_details",u"fee_type",b"fee_type",u"fulfillment_recipient",b"fulfillment_recipient",u"fulfillment_state",b"fulfillment_state",u"fulfillment_type",b"fulfillment_type",u"gift_card",b"gift_card",u"gift_card_activity_type",b"gift_card_activity_type",u"hour",b"hour",u"hour_of_day",b"hour_of_day",u"item",b"item",u"item_category",b"item_category",u"item_variation",b"item_variation",u"itemization_note",b"itemization_note",u"itemization_type_details",b"itemization_type_details",u"menu",b"menu",u"mobile_staff",b"mobile_staff",u"modifier",b"modifier",u"modifier_set",b"modifier_set",u"month",b"month",u"order_display_name",b"order_display_name",u"order_source_name",b"order_source_name",u"payment_method",b"payment_method",u"payment_source_name",b"payment_source_name",u"product",b"product",u"receipt_details",b"receipt_details",u"restaurant_cover_details",b"restaurant_cover_details",u"risk_evaluation_action",b"risk_evaluation_action",u"risk_evaluation_level",b"risk_evaluation_level",u"risk_evaluation_rule",b"risk_evaluation_rule",u"subunit",b"subunit",u"surcharge_name_details",b"surcharge_name_details",u"surcharge_type_details",b"surcharge_type_details",u"tax",b"tax",u"taxable",b"taxable",u"tender_note",b"tender_note",u"ticket_group",b"ticket_group",u"ticket_name",b"ticket_name",u"ticket_template",b"ticket_template",u"time_window",b"time_window",u"transaction_completed_at_ms",b"transaction_completed_at_ms",u"transaction_total",b"transaction_total",u"unique_itemization",b"unique_itemization",u"unit_price",b"unit_price",u"vendor",b"vendor",u"virtual_register_details",b"virtual_register_details",u"void_reason",b"void_reason",u"week",b"week"]) -> None: ...
type___GroupByValue = GroupByValue

class CustomReportRequestFlags(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    request_timeout_override_seconds: builtin___int = ...
    local_aggregation_report_size_limit_override: builtin___int = ...
    proto_aggregator_report_size_limit_override: builtin___int = ...
    proto_aggregator_bill_event_count_limit_override: builtin___int = ...
    spanner_scan_infos_per_thread: builtin___int = ...
    spanner_scan_info_threshold_size: builtin___int = ...
    spanner_max_fanouts_per_request: builtin___int = ...
    spanner_max_threads_per_request: builtin___int = ...
    cache_custom_report: builtin___bool = ...

    def __init__(self,
        *,
        request_timeout_override_seconds : typing___Optional[builtin___int] = None,
        local_aggregation_report_size_limit_override : typing___Optional[builtin___int] = None,
        proto_aggregator_report_size_limit_override : typing___Optional[builtin___int] = None,
        proto_aggregator_bill_event_count_limit_override : typing___Optional[builtin___int] = None,
        spanner_scan_infos_per_thread : typing___Optional[builtin___int] = None,
        spanner_scan_info_threshold_size : typing___Optional[builtin___int] = None,
        spanner_max_fanouts_per_request : typing___Optional[builtin___int] = None,
        spanner_max_threads_per_request : typing___Optional[builtin___int] = None,
        cache_custom_report : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"cache_custom_report",b"cache_custom_report",u"local_aggregation_report_size_limit_override",b"local_aggregation_report_size_limit_override",u"proto_aggregator_bill_event_count_limit_override",b"proto_aggregator_bill_event_count_limit_override",u"proto_aggregator_report_size_limit_override",b"proto_aggregator_report_size_limit_override",u"request_timeout_override_seconds",b"request_timeout_override_seconds",u"spanner_max_fanouts_per_request",b"spanner_max_fanouts_per_request",u"spanner_max_threads_per_request",b"spanner_max_threads_per_request",u"spanner_scan_info_threshold_size",b"spanner_scan_info_threshold_size",u"spanner_scan_infos_per_thread",b"spanner_scan_infos_per_thread"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"cache_custom_report",b"cache_custom_report",u"local_aggregation_report_size_limit_override",b"local_aggregation_report_size_limit_override",u"proto_aggregator_bill_event_count_limit_override",b"proto_aggregator_bill_event_count_limit_override",u"proto_aggregator_report_size_limit_override",b"proto_aggregator_report_size_limit_override",u"request_timeout_override_seconds",b"request_timeout_override_seconds",u"spanner_max_fanouts_per_request",b"spanner_max_fanouts_per_request",u"spanner_max_threads_per_request",b"spanner_max_threads_per_request",u"spanner_scan_info_threshold_size",b"spanner_scan_info_threshold_size",u"spanner_scan_infos_per_thread",b"spanner_scan_infos_per_thread"]) -> None: ...
type___CustomReportRequestFlags = CustomReportRequestFlags

class GroupingType(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_by_type: type___GroupByTypeValue = ...
    reporting_group_config_id: typing___Text = ...

    @property
    def reporting_group_config_details(self) -> type___ReportingGroupConfigDetails: ...

    def __init__(self,
        *,
        group_by_type : typing___Optional[type___GroupByTypeValue] = None,
        reporting_group_config_id : typing___Optional[typing___Text] = None,
        reporting_group_config_details : typing___Optional[type___ReportingGroupConfigDetails] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"group_by_type",b"group_by_type",u"reporting_group_config",b"reporting_group_config",u"reporting_group_config_details",b"reporting_group_config_details",u"reporting_group_config_id",b"reporting_group_config_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"group_by_type",b"group_by_type",u"reporting_group_config",b"reporting_group_config",u"reporting_group_config_details",b"reporting_group_config_details",u"reporting_group_config_id",b"reporting_group_config_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"reporting_group_config",b"reporting_group_config"]) -> typing_extensions___Literal["reporting_group_config_id","reporting_group_config_details"]: ...
type___GroupingType = GroupingType

class CustomReportAggregateOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    include_gift_card_itemizations: builtin___bool = ...
    include_bill_event_tokens: builtin___bool = ...
    include_partial_payment_details: builtin___bool = ...

    def __init__(self,
        *,
        include_gift_card_itemizations : typing___Optional[builtin___bool] = None,
        include_bill_event_tokens : typing___Optional[builtin___bool] = None,
        include_partial_payment_details : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"include_bill_event_tokens",b"include_bill_event_tokens",u"include_gift_card_itemizations",b"include_gift_card_itemizations",u"include_partial_payment_details",b"include_partial_payment_details"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"include_bill_event_tokens",b"include_bill_event_tokens",u"include_gift_card_itemizations",b"include_gift_card_itemizations",u"include_partial_payment_details",b"include_partial_payment_details"]) -> None: ...
type___CustomReportAggregateOptions = CustomReportAggregateOptions

class CustomReportRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_by_type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___GroupByTypeValue] = ...

    @property
    def request_params(self) -> squareup___beemo___v2___reporting___request_pb2___RequestParams: ...

    @property
    def filter(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Filter]: ...

    @property
    def request_flags(self) -> type___CustomReportRequestFlags: ...

    @property
    def aggregate_options(self) -> type___CustomReportAggregateOptions: ...

    @property
    def grouping_type(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GroupingType]: ...

    def __init__(self,
        *,
        request_params : typing___Optional[squareup___beemo___v2___reporting___request_pb2___RequestParams] = None,
        group_by_type : typing___Optional[typing___Iterable[type___GroupByTypeValue]] = None,
        filter : typing___Optional[typing___Iterable[type___Filter]] = None,
        request_flags : typing___Optional[type___CustomReportRequestFlags] = None,
        aggregate_options : typing___Optional[type___CustomReportAggregateOptions] = None,
        grouping_type : typing___Optional[typing___Iterable[type___GroupingType]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aggregate_options",b"aggregate_options",u"request_flags",b"request_flags",u"request_params",b"request_params"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aggregate_options",b"aggregate_options",u"filter",b"filter",u"group_by_type",b"group_by_type",u"grouping_type",b"grouping_type",u"request_flags",b"request_flags",u"request_params",b"request_params"]) -> None: ...
type___CustomReportRequest = CustomReportRequest

class CustomReport(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_by_type: type___GroupByTypeValue = ...

    @property
    def group_by_value(self) -> type___GroupByValue: ...

    @property
    def reporting_group_value(self) -> type___ReportingGroupValue: ...

    @property
    def aggregate(self) -> type___Aggregate: ...

    @property
    def sub_report(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CustomReport]: ...

    def __init__(self,
        *,
        group_by_type : typing___Optional[type___GroupByTypeValue] = None,
        group_by_value : typing___Optional[type___GroupByValue] = None,
        reporting_group_value : typing___Optional[type___ReportingGroupValue] = None,
        aggregate : typing___Optional[type___Aggregate] = None,
        sub_report : typing___Optional[typing___Iterable[type___CustomReport]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"aggregate",b"aggregate",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value",u"reporting_group_value",b"reporting_group_value",u"value",b"value"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"aggregate",b"aggregate",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value",u"reporting_group_value",b"reporting_group_value",u"sub_report",b"sub_report",u"value",b"value"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"value",b"value"]) -> typing_extensions___Literal["group_by_value","reporting_group_value"]: ...
type___CustomReport = CustomReport

class CustomReportResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class PartialPaymentDetail(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        bill_token: typing___Text = ...
        total_collected: builtin___int = ...
        inside_range_total_collected: builtin___int = ...

        def __init__(self,
            *,
            bill_token : typing___Optional[typing___Text] = None,
            total_collected : typing___Optional[builtin___int] = None,
            inside_range_total_collected : typing___Optional[builtin___int] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"bill_token",b"bill_token",u"inside_range_total_collected",b"inside_range_total_collected",u"total_collected",b"total_collected"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"bill_token",b"bill_token",u"inside_range_total_collected",b"inside_range_total_collected",u"total_collected",b"total_collected"]) -> None: ...
    type___PartialPaymentDetail = PartialPaymentDetail

    bill_event_token: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...

    @property
    def custom_report(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CustomReport]: ...

    @property
    def sales_inside_range_detail(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CustomReportResponse.PartialPaymentDetail]: ...

    @property
    def sales_outside_range_detail(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___CustomReportResponse.PartialPaymentDetail]: ...

    def __init__(self,
        *,
        custom_report : typing___Optional[typing___Iterable[type___CustomReport]] = None,
        bill_event_token : typing___Optional[typing___Iterable[typing___Text]] = None,
        sales_inside_range_detail : typing___Optional[typing___Iterable[type___CustomReportResponse.PartialPaymentDetail]] = None,
        sales_outside_range_detail : typing___Optional[typing___Iterable[type___CustomReportResponse.PartialPaymentDetail]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bill_event_token",b"bill_event_token",u"custom_report",b"custom_report",u"sales_inside_range_detail",b"sales_inside_range_detail",u"sales_outside_range_detail",b"sales_outside_range_detail"]) -> None: ...
type___CustomReportResponse = CustomReportResponse

class ReportingGroupMember(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    translation_type: squareup___beemo___translation_types_pb2___TranslationTypeValue = ...
    string_value: typing___Text = ...

    def __init__(self,
        *,
        translation_type : typing___Optional[squareup___beemo___translation_types_pb2___TranslationTypeValue] = None,
        string_value : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"string_value",b"string_value",u"translation_type",b"translation_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"string_value",b"string_value",u"translation_type",b"translation_type"]) -> None: ...
type___ReportingGroupMember = ReportingGroupMember

class ReportingGroup(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_name: typing___Text = ...

    @property
    def reporting_group_member(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ReportingGroupMember]: ...

    def __init__(self,
        *,
        group_name : typing___Optional[typing___Text] = None,
        reporting_group_member : typing___Optional[typing___Iterable[type___ReportingGroupMember]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"group_name",b"group_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"group_name",b"group_name",u"reporting_group_member",b"reporting_group_member"]) -> None: ...
type___ReportingGroup = ReportingGroup

class ReportingGroupConfigDetails(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    group_by_type: type___GroupByTypeValue = ...

    @property
    def reporting_group(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ReportingGroup]: ...

    def __init__(self,
        *,
        group_by_type : typing___Optional[type___GroupByTypeValue] = None,
        reporting_group : typing___Optional[typing___Iterable[type___ReportingGroup]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"group_by_type",b"group_by_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"group_by_type",b"group_by_type",u"reporting_group",b"reporting_group"]) -> None: ...
type___ReportingGroupConfigDetails = ReportingGroupConfigDetails

class ReportingGroupValue(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def reporting_group_name(self) -> squareup___beemo___translation_types_pb2___NameOrTranslationType: ...

    def __init__(self,
        *,
        reporting_group_name : typing___Optional[squareup___beemo___translation_types_pb2___NameOrTranslationType] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"reporting_group_name",b"reporting_group_name"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"reporting_group_name",b"reporting_group_name"]) -> None: ...
type___ReportingGroupValue = ReportingGroupValue

class AvailableFiltersRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    filter_type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[type___GroupByTypeValue] = ...

    @property
    def request_params(self) -> squareup___beemo___v2___reporting___request_pb2___RequestParams: ...

    @property
    def filter(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Filter]: ...

    @property
    def filter_type_v2(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GroupingType]: ...

    @property
    def request_flags(self) -> type___CustomReportRequestFlags: ...

    def __init__(self,
        *,
        request_params : typing___Optional[squareup___beemo___v2___reporting___request_pb2___RequestParams] = None,
        filter_type : typing___Optional[typing___Iterable[type___GroupByTypeValue]] = None,
        filter : typing___Optional[typing___Iterable[type___Filter]] = None,
        filter_type_v2 : typing___Optional[typing___Iterable[type___GroupingType]] = None,
        request_flags : typing___Optional[type___CustomReportRequestFlags] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"request_flags",b"request_flags",u"request_params",b"request_params"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter",b"filter",u"filter_type",b"filter_type",u"filter_type_v2",b"filter_type_v2",u"request_flags",b"request_flags",u"request_params",b"request_params"]) -> None: ...
type___AvailableFiltersRequest = AvailableFiltersRequest

class AvailableFiltersResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def filter(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___Filter]: ...

    def __init__(self,
        *,
        filter : typing___Optional[typing___Iterable[type___Filter]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter",b"filter"]) -> None: ...
type___AvailableFiltersResponse = AvailableFiltersResponse

class Filter(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    FilterModeValue = typing___NewType('FilterModeValue', builtin___int)
    type___FilterModeValue = FilterModeValue
    FilterMode: _FilterMode
    class _FilterMode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Filter.FilterModeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        INCLUDE = typing___cast(Filter.FilterModeValue, 0)
        EXCLUDE = typing___cast(Filter.FilterModeValue, 1)
    INCLUDE = typing___cast(Filter.FilterModeValue, 0)
    EXCLUDE = typing___cast(Filter.FilterModeValue, 1)
    type___FilterMode = FilterMode

    group_by_type: type___GroupByTypeValue = ...
    filter_mode: type___Filter.FilterModeValue = ...

    @property
    def group_by_value(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___GroupByValue]: ...

    @property
    def grouping_type(self) -> type___GroupingType: ...

    @property
    def reporting_group_value(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___ReportingGroupValue]: ...

    def __init__(self,
        *,
        group_by_type : typing___Optional[type___GroupByTypeValue] = None,
        group_by_value : typing___Optional[typing___Iterable[type___GroupByValue]] = None,
        filter_mode : typing___Optional[type___Filter.FilterModeValue] = None,
        grouping_type : typing___Optional[type___GroupingType] = None,
        reporting_group_value : typing___Optional[typing___Iterable[type___ReportingGroupValue]] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"filter_mode",b"filter_mode",u"group_by_type",b"group_by_type",u"grouping_type",b"grouping_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter_mode",b"filter_mode",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value",u"grouping_type",b"grouping_type",u"reporting_group_value",b"reporting_group_value"]) -> None: ...
type___Filter = Filter

class FilterV2(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def any_term(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___AnyTerm]: ...

    def __init__(self,
        *,
        any_term : typing___Optional[typing___Iterable[type___AnyTerm]] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"any_term",b"any_term"]) -> None: ...
type___FilterV2 = FilterV2

class AnyTerm(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    MatchStrategyValue = typing___NewType('MatchStrategyValue', builtin___int)
    type___MatchStrategyValue = MatchStrategyValue
    MatchStrategy: _MatchStrategy
    class _MatchStrategy(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AnyTerm.MatchStrategyValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        EXACT = typing___cast(AnyTerm.MatchStrategyValue, 0)
        PARTIAL = typing___cast(AnyTerm.MatchStrategyValue, 1)
    EXACT = typing___cast(AnyTerm.MatchStrategyValue, 0)
    PARTIAL = typing___cast(AnyTerm.MatchStrategyValue, 1)
    type___MatchStrategy = MatchStrategy

    FilterModeValue = typing___NewType('FilterModeValue', builtin___int)
    type___FilterModeValue = FilterModeValue
    FilterMode: _FilterMode
    class _FilterMode(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AnyTerm.FilterModeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        UNKNOWN = typing___cast(AnyTerm.FilterModeValue, 0)
        INCLUDE = typing___cast(AnyTerm.FilterModeValue, 1)
        EXCLUDE = typing___cast(AnyTerm.FilterModeValue, 2)
    UNKNOWN = typing___cast(AnyTerm.FilterModeValue, 0)
    INCLUDE = typing___cast(AnyTerm.FilterModeValue, 1)
    EXCLUDE = typing___cast(AnyTerm.FilterModeValue, 2)
    type___FilterMode = FilterMode

    group_by_type: type___GroupByTypeValue = ...
    match_strategy: type___AnyTerm.MatchStrategyValue = ...
    filter_mode: type___AnyTerm.FilterModeValue = ...

    @property
    def group_by_value(self) -> type___GroupByValue: ...

    def __init__(self,
        *,
        group_by_type : typing___Optional[type___GroupByTypeValue] = None,
        group_by_value : typing___Optional[type___GroupByValue] = None,
        match_strategy : typing___Optional[type___AnyTerm.MatchStrategyValue] = None,
        filter_mode : typing___Optional[type___AnyTerm.FilterModeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"filter_mode",b"filter_mode",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value",u"match_strategy",b"match_strategy"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"filter_mode",b"filter_mode",u"group_by_type",b"group_by_type",u"group_by_value",b"group_by_value",u"match_strategy",b"match_strategy"]) -> None: ...
type___AnyTerm = AnyTerm

class MeasuredQuantity(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    quantity: typing___Text = ...
    default_measurement_unit: squareup___beemo___translation_types_pb2___TranslationTypeValue = ...

    @property
    def defined_measurement_unit(self) -> squareup___connect___v2___common___measurement_units_pb2___MeasurementUnit: ...

    def __init__(self,
        *,
        quantity : typing___Optional[typing___Text] = None,
        defined_measurement_unit : typing___Optional[squareup___connect___v2___common___measurement_units_pb2___MeasurementUnit] = None,
        default_measurement_unit : typing___Optional[squareup___beemo___translation_types_pb2___TranslationTypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"default_measurement_unit",b"default_measurement_unit",u"defined_measurement_unit",b"defined_measurement_unit",u"measurement_unit",b"measurement_unit",u"quantity",b"quantity"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"default_measurement_unit",b"default_measurement_unit",u"defined_measurement_unit",b"defined_measurement_unit",u"measurement_unit",b"measurement_unit",u"quantity",b"quantity"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"measurement_unit",b"measurement_unit"]) -> typing_extensions___Literal["defined_measurement_unit","default_measurement_unit"]: ...
type___MeasuredQuantity = MeasuredQuantity
