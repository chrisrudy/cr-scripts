# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.beemo.v2 import itemizedpayment_v2_pb2 as squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2


class ItemizedPaymentServiceStub(object):
    """*
    Create an itemized payment record for bookkeeping.
    For use by internal services only, not by mobile apps.
    This does not auth/capture a card payment, nor create a cash payment.
    This should be called after successfully authorizing
    or otherwise creating the payment.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateItemizedPayment = channel.unary_unary(
                '/squareup.beemo.itemizations.api.v2.ItemizedPaymentService/CreateItemizedPayment',
                request_serializer=squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2.CreateItemizedPaymentRequest.SerializeToString,
                response_deserializer=squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2.CreateItemizedPaymentResponse.FromString,
                )


class ItemizedPaymentServiceServicer(object):
    """*
    Create an itemized payment record for bookkeeping.
    For use by internal services only, not by mobile apps.
    This does not auth/capture a card payment, nor create a cash payment.
    This should be called after successfully authorizing
    or otherwise creating the payment.
    """

    def CreateItemizedPayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ItemizedPaymentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateItemizedPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateItemizedPayment,
                    request_deserializer=squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2.CreateItemizedPaymentRequest.FromString,
                    response_serializer=squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2.CreateItemizedPaymentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.beemo.itemizations.api.v2.ItemizedPaymentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ItemizedPaymentService(object):
    """*
    Create an itemized payment record for bookkeeping.
    For use by internal services only, not by mobile apps.
    This does not auth/capture a card payment, nor create a cash payment.
    This should be called after successfully authorizing
    or otherwise creating the payment.
    """

    @staticmethod
    def CreateItemizedPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.beemo.itemizations.api.v2.ItemizedPaymentService/CreateItemizedPayment',
            squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2.CreateItemizedPaymentRequest.SerializeToString,
            squareup_dot_beemo_dot_v2_dot_itemizedpayment__v2__pb2.CreateItemizedPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
