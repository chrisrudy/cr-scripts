# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.common import messages_pb2 as squareup_dot_common_dot_messages__pb2
from sq_protos_py.squareup.testing import example_pb2 as squareup_dot_testing_dot_example__pb2


class ExampleServiceStub(object):
    """* An example service. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendData = channel.unary_unary(
                '/squareup.testing.ExampleService/SendData',
                request_serializer=squareup_dot_testing_dot_example__pb2.SendDataRequest.SerializeToString,
                response_deserializer=squareup_dot_testing_dot_example__pb2.SendDataResponse.FromString,
                )
        self.PrintMessage = channel.unary_unary(
                '/squareup.testing.ExampleService/PrintMessage',
                request_serializer=squareup_dot_testing_dot_example__pb2.PrintMessageRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )
        self.MultipassPrint = channel.unary_unary(
                '/squareup.testing.ExampleService/MultipassPrint',
                request_serializer=squareup_dot_testing_dot_example__pb2.MultipassPrintRequest.SerializeToString,
                response_deserializer=squareup_dot_testing_dot_example__pb2.MultipassPrintResponse.FromString,
                )
        self.ThrowError = channel.unary_unary(
                '/squareup.testing.ExampleService/ThrowError',
                request_serializer=squareup_dot_testing_dot_example__pb2.ThrowErrorRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )
        self.Wait = channel.unary_unary(
                '/squareup.testing.ExampleService/Wait',
                request_serializer=squareup_dot_testing_dot_example__pb2.WaitRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )
        self.Retry = channel.unary_unary(
                '/squareup.testing.ExampleService/Retry',
                request_serializer=squareup_dot_testing_dot_example__pb2.RetryRequest.SerializeToString,
                response_deserializer=squareup_dot_common_dot_messages__pb2.Empty.FromString,
                )
        self.CheckFeature = channel.unary_unary(
                '/squareup.testing.ExampleService/CheckFeature',
                request_serializer=squareup_dot_testing_dot_example__pb2.CheckFeatureRequest.SerializeToString,
                response_deserializer=squareup_dot_testing_dot_example__pb2.CheckFeatureResponse.FromString,
                )


class ExampleServiceServicer(object):
    """* An example service. 
    """

    def SendData(self, request, context):
        """* Sends some data. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrintMessage(self, request, context):
        """* Prints a message on the server. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MultipassPrint(self, request, context):
        """* Prints multipass information from the user 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ThrowError(self, request, context):
        """* Throws an error. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Wait(self, request, context):
        """* Waits for a specified amount of time before responding. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Retry(self, request, context):
        """*
        Returns an error response until a request is retried for specified time.s
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckFeature(self, request, context):
        """* Check a feature flag 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExampleServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendData': grpc.unary_unary_rpc_method_handler(
                    servicer.SendData,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.SendDataRequest.FromString,
                    response_serializer=squareup_dot_testing_dot_example__pb2.SendDataResponse.SerializeToString,
            ),
            'PrintMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PrintMessage,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.PrintMessageRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
            'MultipassPrint': grpc.unary_unary_rpc_method_handler(
                    servicer.MultipassPrint,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.MultipassPrintRequest.FromString,
                    response_serializer=squareup_dot_testing_dot_example__pb2.MultipassPrintResponse.SerializeToString,
            ),
            'ThrowError': grpc.unary_unary_rpc_method_handler(
                    servicer.ThrowError,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.ThrowErrorRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
            'Wait': grpc.unary_unary_rpc_method_handler(
                    servicer.Wait,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.WaitRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
            'Retry': grpc.unary_unary_rpc_method_handler(
                    servicer.Retry,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.RetryRequest.FromString,
                    response_serializer=squareup_dot_common_dot_messages__pb2.Empty.SerializeToString,
            ),
            'CheckFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFeature,
                    request_deserializer=squareup_dot_testing_dot_example__pb2.CheckFeatureRequest.FromString,
                    response_serializer=squareup_dot_testing_dot_example__pb2.CheckFeatureResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.testing.ExampleService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExampleService(object):
    """* An example service. 
    """

    @staticmethod
    def SendData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/SendData',
            squareup_dot_testing_dot_example__pb2.SendDataRequest.SerializeToString,
            squareup_dot_testing_dot_example__pb2.SendDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrintMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/PrintMessage',
            squareup_dot_testing_dot_example__pb2.PrintMessageRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MultipassPrint(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/MultipassPrint',
            squareup_dot_testing_dot_example__pb2.MultipassPrintRequest.SerializeToString,
            squareup_dot_testing_dot_example__pb2.MultipassPrintResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ThrowError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/ThrowError',
            squareup_dot_testing_dot_example__pb2.ThrowErrorRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Wait(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/Wait',
            squareup_dot_testing_dot_example__pb2.WaitRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Retry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/Retry',
            squareup_dot_testing_dot_example__pb2.RetryRequest.SerializeToString,
            squareup_dot_common_dot_messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.testing.ExampleService/CheckFeature',
            squareup_dot_testing_dot_example__pb2.CheckFeatureRequest.SerializeToString,
            squareup_dot_testing_dot_example__pb2.CheckFeatureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
