# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.connect.v2.common.money_pb2 import (
    Money as squareup___connect___v2___common___money_pb2___Money,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Transaction(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    StatusValue = typing___NewType('StatusValue', builtin___int)
    type___StatusValue = StatusValue
    Status: _Status
    class _Status(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Transaction.StatusValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        TRANSACTION_STATUS_DO_NOT_USE = typing___cast(Transaction.StatusValue, 0)
        INITIATED = typing___cast(Transaction.StatusValue, 1)
        PENDING = typing___cast(Transaction.StatusValue, 2)
        SETTLED = typing___cast(Transaction.StatusValue, 3)
        VOIDED = typing___cast(Transaction.StatusValue, 4)
    TRANSACTION_STATUS_DO_NOT_USE = typing___cast(Transaction.StatusValue, 0)
    INITIATED = typing___cast(Transaction.StatusValue, 1)
    PENDING = typing___cast(Transaction.StatusValue, 2)
    SETTLED = typing___cast(Transaction.StatusValue, 3)
    VOIDED = typing___cast(Transaction.StatusValue, 4)
    type___Status = Status

    id: typing___Text = ...
    master_id: typing___Text = ...
    customer_id: typing___Text = ...
    account_id: typing___Text = ...
    created_at: typing___Text = ...
    settled_at: typing___Text = ...
    voided_at: typing___Text = ...
    available_at: typing___Text = ...
    status: type___Transaction.StatusValue = ...
    description: typing___Text = ...
    friendly_type: typing___Text = ...
    originating_bank_name: typing___Text = ...

    @property
    def amount(self) -> squareup___connect___v2___common___money_pb2___Money: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        master_id : typing___Optional[typing___Text] = None,
        customer_id : typing___Optional[typing___Text] = None,
        account_id : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___connect___v2___common___money_pb2___Money] = None,
        created_at : typing___Optional[typing___Text] = None,
        settled_at : typing___Optional[typing___Text] = None,
        voided_at : typing___Optional[typing___Text] = None,
        available_at : typing___Optional[typing___Text] = None,
        status : typing___Optional[type___Transaction.StatusValue] = None,
        description : typing___Optional[typing___Text] = None,
        friendly_type : typing___Optional[typing___Text] = None,
        originating_bank_name : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"account_id",b"account_id",u"amount",b"amount",u"available_at",b"available_at",u"created_at",b"created_at",u"customer_id",b"customer_id",u"description",b"description",u"friendly_type",b"friendly_type",u"id",b"id",u"master_id",b"master_id",u"originating_bank_name",b"originating_bank_name",u"settled_at",b"settled_at",u"status",b"status",u"voided_at",b"voided_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"account_id",b"account_id",u"amount",b"amount",u"available_at",b"available_at",u"created_at",b"created_at",u"customer_id",b"customer_id",u"description",b"description",u"friendly_type",b"friendly_type",u"id",b"id",u"master_id",b"master_id",u"originating_bank_name",b"originating_bank_name",u"settled_at",b"settled_at",u"status",b"status",u"voided_at",b"voided_at"]) -> None: ...
type___Transaction = Transaction
