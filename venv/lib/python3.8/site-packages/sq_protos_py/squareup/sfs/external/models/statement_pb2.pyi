# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Statement(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[Statement.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        STATEMENT_TYPE_DO_NOT_USE = typing___cast(Statement.TypeValue, 0)
        MONTHLY = typing___cast(Statement.TypeValue, 1)
        TAX_1099_INT = typing___cast(Statement.TypeValue, 2)
    STATEMENT_TYPE_DO_NOT_USE = typing___cast(Statement.TypeValue, 0)
    MONTHLY = typing___cast(Statement.TypeValue, 1)
    TAX_1099_INT = typing___cast(Statement.TypeValue, 2)
    type___Type = Type

    id: typing___Text = ...
    type: type___Statement.TypeValue = ...
    month: builtin___int = ...
    year: builtin___int = ...
    download_url: typing___Text = ...
    customer_id: typing___Text = ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        type : typing___Optional[type___Statement.TypeValue] = None,
        month : typing___Optional[builtin___int] = None,
        year : typing___Optional[builtin___int] = None,
        download_url : typing___Optional[typing___Text] = None,
        customer_id : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"customer_id",b"customer_id",u"download_url",b"download_url",u"id",b"id",u"month",b"month",u"type",b"type",u"year",b"year"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"customer_id",b"customer_id",u"download_url",b"download_url",u"id",b"id",u"month",b"month",u"type",b"type",u"year",b"year"]) -> None: ...
type___Statement = Statement
