# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.connect.v2.resources.address_pb2 import (
    Address as squareup___connect___v2___resources___address_pb2___Address,
)

from sq_protos_py.squareup.legalentities.model.model_pb2 import (
    Business as squareup___legalentities___model___model_pb2___Business,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Business(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    business_name: typing___Text = ...
    business_type: squareup___legalentities___model___model_pb2___Business.Structure.TypeValue = ...

    @property
    def address(self) -> squareup___connect___v2___resources___address_pb2___Address: ...

    def __init__(self,
        *,
        business_name : typing___Optional[typing___Text] = None,
        address : typing___Optional[squareup___connect___v2___resources___address_pb2___Address] = None,
        business_type : typing___Optional[squareup___legalentities___model___model_pb2___Business.Structure.TypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"business_name",b"business_name",u"business_type",b"business_type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"business_name",b"business_name",u"business_type",b"business_type"]) -> None: ...
type___Business = Business
