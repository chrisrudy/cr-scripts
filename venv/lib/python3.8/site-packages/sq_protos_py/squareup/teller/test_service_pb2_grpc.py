# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.teller import test_service_pb2 as squareup_dot_teller_dot_test__service__pb2


class TellerTestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMoneyTransfer = channel.unary_unary(
                '/squareup.teller.test_service.TellerTestService/GetMoneyTransfer',
                request_serializer=squareup_dot_teller_dot_test__service__pb2.GetMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_test__service__pb2.GetMoneyTransferResponse.FromString,
                )
        self.GenerateReturnFile = channel.unary_unary(
                '/squareup.teller.test_service.TellerTestService/GenerateReturnFile',
                request_serializer=squareup_dot_teller_dot_test__service__pb2.GenerateReturnFileRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_test__service__pb2.GenerateReturnFileResponse.FromString,
                )
        self.GenerateAndProcessTestReturnFile = channel.unary_unary(
                '/squareup.teller.test_service.TellerTestService/GenerateAndProcessTestReturnFile',
                request_serializer=squareup_dot_teller_dot_test__service__pb2.GenerateAndProcessTestReturnFileRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_test__service__pb2.GenerateAndProcessTestReturnFileResponse.FromString,
                )
        self.MarkMoneyTransferState = channel.unary_unary(
                '/squareup.teller.test_service.TellerTestService/MarkMoneyTransferState',
                request_serializer=squareup_dot_teller_dot_test__service__pb2.MarkMoneyTransferStateRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_test__service__pb2.MarkMoneyTransferStateResponse.FromString,
                )


class TellerTestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMoneyTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateReturnFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAndProcessTestReturnFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkMoneyTransferState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TellerTestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMoneyTransfer,
                    request_deserializer=squareup_dot_teller_dot_test__service__pb2.GetMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_test__service__pb2.GetMoneyTransferResponse.SerializeToString,
            ),
            'GenerateReturnFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateReturnFile,
                    request_deserializer=squareup_dot_teller_dot_test__service__pb2.GenerateReturnFileRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_test__service__pb2.GenerateReturnFileResponse.SerializeToString,
            ),
            'GenerateAndProcessTestReturnFile': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAndProcessTestReturnFile,
                    request_deserializer=squareup_dot_teller_dot_test__service__pb2.GenerateAndProcessTestReturnFileRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_test__service__pb2.GenerateAndProcessTestReturnFileResponse.SerializeToString,
            ),
            'MarkMoneyTransferState': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkMoneyTransferState,
                    request_deserializer=squareup_dot_teller_dot_test__service__pb2.MarkMoneyTransferStateRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_test__service__pb2.MarkMoneyTransferStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.teller.test_service.TellerTestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TellerTestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.test_service.TellerTestService/GetMoneyTransfer',
            squareup_dot_teller_dot_test__service__pb2.GetMoneyTransferRequest.SerializeToString,
            squareup_dot_teller_dot_test__service__pb2.GetMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateReturnFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.test_service.TellerTestService/GenerateReturnFile',
            squareup_dot_teller_dot_test__service__pb2.GenerateReturnFileRequest.SerializeToString,
            squareup_dot_teller_dot_test__service__pb2.GenerateReturnFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateAndProcessTestReturnFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.test_service.TellerTestService/GenerateAndProcessTestReturnFile',
            squareup_dot_teller_dot_test__service__pb2.GenerateAndProcessTestReturnFileRequest.SerializeToString,
            squareup_dot_teller_dot_test__service__pb2.GenerateAndProcessTestReturnFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkMoneyTransferState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.test_service.TellerTestService/MarkMoneyTransferState',
            squareup_dot_teller_dot_test__service__pb2.MarkMoneyTransferStateRequest.SerializeToString,
            squareup_dot_teller_dot_test__service__pb2.MarkMoneyTransferStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
