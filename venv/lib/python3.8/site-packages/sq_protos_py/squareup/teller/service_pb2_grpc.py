# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.teller import service_pb2 as squareup_dot_teller_dot_service__pb2


class TellerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateMoneyTransfer = channel.unary_unary(
                '/squareup.teller.service.TellerService/CreateMoneyTransfer',
                request_serializer=squareup_dot_teller_dot_service__pb2.CreateMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_service__pb2.CreateMoneyTransferResponse.FromString,
                )
        self.GetMoneyTransfer = channel.unary_unary(
                '/squareup.teller.service.TellerService/GetMoneyTransfer',
                request_serializer=squareup_dot_teller_dot_service__pb2.GetMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_service__pb2.GetMoneyTransferResponse.FromString,
                )
        self.CancelMoneyTransfer = channel.unary_unary(
                '/squareup.teller.service.TellerService/CancelMoneyTransfer',
                request_serializer=squareup_dot_teller_dot_service__pb2.CancelMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_service__pb2.CancelMoneyTransferResponse.FromString,
                )
        self.FailMoneyTransfer = channel.unary_unary(
                '/squareup.teller.service.TellerService/FailMoneyTransfer',
                request_serializer=squareup_dot_teller_dot_service__pb2.FailMoneyTransferRequest.SerializeToString,
                response_deserializer=squareup_dot_teller_dot_service__pb2.FailMoneyTransferResponse.FromString,
                )


class TellerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateMoneyTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMoneyTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelMoneyTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FailMoneyTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TellerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMoneyTransfer,
                    request_deserializer=squareup_dot_teller_dot_service__pb2.CreateMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_service__pb2.CreateMoneyTransferResponse.SerializeToString,
            ),
            'GetMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMoneyTransfer,
                    request_deserializer=squareup_dot_teller_dot_service__pb2.GetMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_service__pb2.GetMoneyTransferResponse.SerializeToString,
            ),
            'CancelMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelMoneyTransfer,
                    request_deserializer=squareup_dot_teller_dot_service__pb2.CancelMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_service__pb2.CancelMoneyTransferResponse.SerializeToString,
            ),
            'FailMoneyTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.FailMoneyTransfer,
                    request_deserializer=squareup_dot_teller_dot_service__pb2.FailMoneyTransferRequest.FromString,
                    response_serializer=squareup_dot_teller_dot_service__pb2.FailMoneyTransferResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.teller.service.TellerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TellerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.service.TellerService/CreateMoneyTransfer',
            squareup_dot_teller_dot_service__pb2.CreateMoneyTransferRequest.SerializeToString,
            squareup_dot_teller_dot_service__pb2.CreateMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.service.TellerService/GetMoneyTransfer',
            squareup_dot_teller_dot_service__pb2.GetMoneyTransferRequest.SerializeToString,
            squareup_dot_teller_dot_service__pb2.GetMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.service.TellerService/CancelMoneyTransfer',
            squareup_dot_teller_dot_service__pb2.CancelMoneyTransferRequest.SerializeToString,
            squareup_dot_teller_dot_service__pb2.CancelMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FailMoneyTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.teller.service.TellerService/FailMoneyTransfer',
            squareup_dot_teller_dot_service__pb2.FailMoneyTransferRequest.SerializeToString,
            squareup_dot_teller_dot_service__pb2.FailMoneyTransferResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
