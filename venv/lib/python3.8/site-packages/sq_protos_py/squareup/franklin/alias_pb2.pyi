# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Alias(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    client_id: typing___Text = ...
    alias: typing___Text = ...

    def __init__(self,
        *,
        client_id : typing___Optional[typing___Text] = None,
        alias : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"client_id",b"client_id"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"client_id",b"client_id"]) -> None: ...
type___Alias = Alias

class LinkedAlias(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    linked_at: builtin___int = ...
    unlinked_at: builtin___int = ...
    first_linked_at: builtin___int = ...

    @property
    def alias(self) -> type___Alias: ...

    def __init__(self,
        *,
        alias : typing___Optional[type___Alias] = None,
        customer_token : typing___Optional[typing___Text] = None,
        linked_at : typing___Optional[builtin___int] = None,
        unlinked_at : typing___Optional[builtin___int] = None,
        first_linked_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"customer_token",b"customer_token",u"first_linked_at",b"first_linked_at",u"linked_at",b"linked_at",u"unlinked_at",b"unlinked_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"alias",b"alias",u"customer_token",b"customer_token",u"first_linked_at",b"first_linked_at",u"linked_at",b"linked_at",u"unlinked_at",b"unlinked_at"]) -> None: ...
type___LinkedAlias = LinkedAlias
