# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.location_pb2 import (
    GlobalAddress as squareup___common___location_pb2___GlobalAddress,
)

from sq_protos_py.squareup.franklin.api_pb2 import (
    Customization as squareup___franklin___api_pb2___Customization,
    Instrument as squareup___franklin___api_pb2___Instrument,
    Payment as squareup___franklin___api_pb2___Payment,
)

from sq_protos_py.squareup.franklin.cash_instrument_type_pb2 import (
    CashInstrumentTypeValue as squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue,
)

from sq_protos_py.squareup.franklin.common_pb2 import (
    BitcoinDisplayUnitsValue as squareup___franklin___common_pb2___BitcoinDisplayUnitsValue,
)

from sq_protos_py.squareup.franklin.data_pb2 import (
    ExplicitConfirmationReasonValue as squareup___franklin___data_pb2___ExplicitConfirmationReasonValue,
)

from sq_protos_py.squareup.franklin.deposit_preference_pb2 import (
    DepositPreferenceValue as squareup___franklin___deposit_preference_pb2___DepositPreferenceValue,
)

from sq_protos_py.squareup.franklin.investing.resources_pb2 import (
    EventTypeValue as squareup___franklin___investing___resources_pb2___EventTypeValue,
    OrderCancelationReason as squareup___franklin___investing___resources_pb2___OrderCancelationReason,
    OrderRejectionReason as squareup___franklin___investing___resources_pb2___OrderRejectionReason,
    OrderSideValue as squareup___franklin___investing___resources_pb2___OrderSideValue,
    OrderStatusValue as squareup___franklin___investing___resources_pb2___OrderStatusValue,
    OrderTypeValue as squareup___franklin___investing___resources_pb2___OrderTypeValue,
)

from sq_protos_py.squareup.franklin.orientation_pb2 import (
    OrientationValue as squareup___franklin___orientation_pb2___OrientationValue,
)

from sq_protos_py.squareup.franklin.rate_plan_pb2 import (
    RatePlanValue as squareup___franklin___rate_plan_pb2___RatePlanValue,
)

from sq_protos_py.squareup.franklin.reaction_pb2 import (
    Reaction as squareup___franklin___reaction_pb2___Reaction,
)

from sq_protos_py.squareup.franklin.region_pb2 import (
    RegionValue as squareup___franklin___region_pb2___RegionValue,
)

from sq_protos_py.squareup.franklin.role_pb2 import (
    RoleValue as squareup___franklin___role_pb2___RoleValue,
)

from sq_protos_py.squareup.franklin.scenarios_pb2 import (
    ScenarioPlan as squareup___franklin___scenarios_pb2___ScenarioPlan,
)

from sq_protos_py.squareup.franklin.ui.customer_pb2 import (
    BlockStateValue as squareup___franklin___ui___customer_pb2___BlockStateValue,
)

from sq_protos_py.squareup.franklin.ui.payment_pb2 import (
    PaymentHistoryButton as squareup___franklin___ui___payment_pb2___PaymentHistoryButton,
    RequestRefundReasonValue as squareup___franklin___ui___payment_pb2___RequestRefundReasonValue,
    ScenarioPlanMap as squareup___franklin___ui___payment_pb2___ScenarioPlanMap,
)

from sq_protos_py.squareup.franklin.ui_pb2 import (
    Avatar as squareup___franklin___ui_pb2___Avatar,
)

from sq_protos_py.squareup.repeatedly.common_pb2 import (
    RecurringSchedule as squareup___repeatedly___common_pb2___RecurringSchedule,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class PaymentRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class CrossCurrencyRewardInfo(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        reward_transaction_token: typing___Text = ...

        @property
        def reward_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def reward_exchange_rate(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            reward_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            reward_exchange_rate : typing___Optional[squareup___common___currency_pb2___Money] = None,
            reward_transaction_token : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"reward_amount",b"reward_amount",u"reward_exchange_rate",b"reward_exchange_rate",u"reward_transaction_token",b"reward_transaction_token"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"reward_amount",b"reward_amount",u"reward_exchange_rate",b"reward_exchange_rate",u"reward_transaction_token",b"reward_transaction_token"]) -> None: ...
    type___CrossCurrencyRewardInfo = CrossCurrencyRewardInfo

    token: typing___Text = ...
    auth_token: typing___Text = ...
    orientation: squareup___franklin___orientation_pb2___OrientationValue = ...
    role: squareup___franklin___role_pb2___RoleValue = ...
    rate_plan: squareup___franklin___rate_plan_pb2___RatePlanValue = ...
    reward_basis_points: builtin___int = ...
    boost_basis_points: builtin___int = ...
    state: squareup___franklin___api_pb2___Payment.StateValue = ...
    cancellation_reason: squareup___franklin___api_pb2___Payment.CancellationReasonValue = ...
    refund_cancellation_reason: squareup___franklin___api_pb2___Payment.CancellationReasonValue = ...
    client_display_name: typing___Text = ...
    note: typing___Text = ...
    sent_via_watch: builtin___bool = ...
    sent_via_imessage: builtin___bool = ...
    display_instrument: typing___Text = ...
    instrument_type: squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue = ...
    transaction_id: typing___Text = ...
    created_at: builtin___int = ...
    captured_at: builtin___int = ...
    reached_customer_at: builtin___int = ...
    passed_customer_at: builtin___int = ...
    paid_out_at: builtin___int = ...
    deposited_at: builtin___int = ...
    refunded_at: builtin___int = ...
    refund_deposited_at: builtin___int = ...
    refund_request_expires_at: builtin___int = ...
    failed_at: builtin___int = ...
    display_date: builtin___int = ...
    is_transfer: builtin___bool = ...
    is_banking_transaction: builtin___bool = ...
    is_scheduled_payment: builtin___bool = ...
    is_pwc_payment: builtin___bool = ...
    scheduled_for: builtin___int = ...
    deposit_preference: squareup___franklin___deposit_preference_pb2___DepositPreferenceValue = ...
    deposit_instantly_valid_until: builtin___int = ...
    transaction_reason_code: typing___Text = ...
    supports_reporting_missing_reward_until: builtin___int = ...
    target_wallet_address: typing___Text = ...
    hidden_receipt_buttons: google___protobuf___internal___containers___RepeatedScalarFieldContainer[squareup___franklin___ui___payment_pb2___PaymentHistoryButton.ButtonActionValue] = ...
    supports_reporting_boost_until: builtin___int = ...
    in_cash_boost_experiment: builtin___bool = ...
    is_scheduled_reload: builtin___bool = ...
    refunded_to_balance: builtin___bool = ...
    verification_required: builtin___bool = ...
    idv_in_progress: builtin___bool = ...
    will_refund_to_balance: builtin___bool = ...
    crypto_transfer_status: typing___Text = ...
    is_bitcoin_transaction: builtin___bool = ...
    can_unlock_free_atm_status: builtin___bool = ...
    movement_exchange_rate: typing___Text = ...
    sender_country: squareup___common___countries_pb2___CountryValue = ...
    is_app_purchase: builtin___bool = ...
    refund_requested_at: builtin___int = ...
    refund_request_declined_at: builtin___int = ...
    request_refund_available_until: builtin___int = ...
    request_refund_reason: squareup___franklin___ui___payment_pb2___RequestRefundReasonValue = ...
    blockchain_transaction_id: typing___Text = ...
    frequency: squareup___repeatedly___common_pb2___RecurringSchedule.FrequencyValue = ...
    days_of_period: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int] = ...
    check_reference_token: typing___Text = ...
    explicit_confirmation_reason: squareup___franklin___data_pb2___ExplicitConfirmationReasonValue = ...
    btc_limit: typing___Text = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def pull_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def push_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def sender_payment_amount_in_default_currency(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def recipient_payment_amount_in_default_currency(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def fee_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def refund_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def reward_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def boost_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def scenario_plan(self) -> squareup___franklin___scenarios_pb2___ScenarioPlan: ...

    @property
    def scenario_plan_map(self) -> squareup___franklin___ui___payment_pb2___ScenarioPlanMap: ...

    @property
    def instrument(self) -> squareup___franklin___api_pb2___Instrument: ...

    @property
    def customization(self) -> squareup___franklin___api_pb2___Customization: ...

    @property
    def reaction_data(self) -> type___ReactionRenderData: ...

    @property
    def investment_order_render_data(self) -> type___InvestmentOrderRenderData: ...

    @property
    def fee_amounts(self) -> type___FeeAmounts: ...

    @property
    def reimbursed_amounts(self) -> type___ReimbursedAmounts: ...

    @property
    def lending_render_data(self) -> type___LendingRenderData: ...

    @property
    def pending_referral_render_data(self) -> type___PendingReferralRenderData: ...

    @property
    def cross_currency_reward_info(self) -> type___PaymentRenderData.CrossCurrencyRewardInfo: ...

    @property
    def loyalty_activity_render_data(self) -> type___LoyaltyActivityRenderData: ...

    @property
    def invest_payment_render_data(self) -> type___InvestPaymentRenderData: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        auth_token : typing___Optional[typing___Text] = None,
        orientation : typing___Optional[squareup___franklin___orientation_pb2___OrientationValue] = None,
        role : typing___Optional[squareup___franklin___role_pb2___RoleValue] = None,
        rate_plan : typing___Optional[squareup___franklin___rate_plan_pb2___RatePlanValue] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        pull_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        push_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        sender_payment_amount_in_default_currency : typing___Optional[squareup___common___currency_pb2___Money] = None,
        recipient_payment_amount_in_default_currency : typing___Optional[squareup___common___currency_pb2___Money] = None,
        fee_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        refund_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        reward_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        reward_basis_points : typing___Optional[builtin___int] = None,
        boost_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        boost_basis_points : typing___Optional[builtin___int] = None,
        state : typing___Optional[squareup___franklin___api_pb2___Payment.StateValue] = None,
        cancellation_reason : typing___Optional[squareup___franklin___api_pb2___Payment.CancellationReasonValue] = None,
        refund_cancellation_reason : typing___Optional[squareup___franklin___api_pb2___Payment.CancellationReasonValue] = None,
        client_display_name : typing___Optional[typing___Text] = None,
        note : typing___Optional[typing___Text] = None,
        sent_via_watch : typing___Optional[builtin___bool] = None,
        sent_via_imessage : typing___Optional[builtin___bool] = None,
        display_instrument : typing___Optional[typing___Text] = None,
        instrument_type : typing___Optional[squareup___franklin___cash_instrument_type_pb2___CashInstrumentTypeValue] = None,
        transaction_id : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[builtin___int] = None,
        captured_at : typing___Optional[builtin___int] = None,
        reached_customer_at : typing___Optional[builtin___int] = None,
        passed_customer_at : typing___Optional[builtin___int] = None,
        paid_out_at : typing___Optional[builtin___int] = None,
        deposited_at : typing___Optional[builtin___int] = None,
        refunded_at : typing___Optional[builtin___int] = None,
        refund_deposited_at : typing___Optional[builtin___int] = None,
        refund_request_expires_at : typing___Optional[builtin___int] = None,
        failed_at : typing___Optional[builtin___int] = None,
        display_date : typing___Optional[builtin___int] = None,
        scenario_plan : typing___Optional[squareup___franklin___scenarios_pb2___ScenarioPlan] = None,
        scenario_plan_map : typing___Optional[squareup___franklin___ui___payment_pb2___ScenarioPlanMap] = None,
        is_transfer : typing___Optional[builtin___bool] = None,
        is_banking_transaction : typing___Optional[builtin___bool] = None,
        is_scheduled_payment : typing___Optional[builtin___bool] = None,
        is_pwc_payment : typing___Optional[builtin___bool] = None,
        scheduled_for : typing___Optional[builtin___int] = None,
        deposit_preference : typing___Optional[squareup___franklin___deposit_preference_pb2___DepositPreferenceValue] = None,
        deposit_instantly_valid_until : typing___Optional[builtin___int] = None,
        transaction_reason_code : typing___Optional[typing___Text] = None,
        supports_reporting_missing_reward_until : typing___Optional[builtin___int] = None,
        instrument : typing___Optional[squareup___franklin___api_pb2___Instrument] = None,
        target_wallet_address : typing___Optional[typing___Text] = None,
        customization : typing___Optional[squareup___franklin___api_pb2___Customization] = None,
        hidden_receipt_buttons : typing___Optional[typing___Iterable[squareup___franklin___ui___payment_pb2___PaymentHistoryButton.ButtonActionValue]] = None,
        supports_reporting_boost_until : typing___Optional[builtin___int] = None,
        in_cash_boost_experiment : typing___Optional[builtin___bool] = None,
        is_scheduled_reload : typing___Optional[builtin___bool] = None,
        refunded_to_balance : typing___Optional[builtin___bool] = None,
        reaction_data : typing___Optional[type___ReactionRenderData] = None,
        verification_required : typing___Optional[builtin___bool] = None,
        idv_in_progress : typing___Optional[builtin___bool] = None,
        investment_order_render_data : typing___Optional[type___InvestmentOrderRenderData] = None,
        fee_amounts : typing___Optional[type___FeeAmounts] = None,
        will_refund_to_balance : typing___Optional[builtin___bool] = None,
        crypto_transfer_status : typing___Optional[typing___Text] = None,
        is_bitcoin_transaction : typing___Optional[builtin___bool] = None,
        can_unlock_free_atm_status : typing___Optional[builtin___bool] = None,
        reimbursed_amounts : typing___Optional[type___ReimbursedAmounts] = None,
        movement_exchange_rate : typing___Optional[typing___Text] = None,
        sender_country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        lending_render_data : typing___Optional[type___LendingRenderData] = None,
        is_app_purchase : typing___Optional[builtin___bool] = None,
        refund_requested_at : typing___Optional[builtin___int] = None,
        refund_request_declined_at : typing___Optional[builtin___int] = None,
        request_refund_available_until : typing___Optional[builtin___int] = None,
        request_refund_reason : typing___Optional[squareup___franklin___ui___payment_pb2___RequestRefundReasonValue] = None,
        blockchain_transaction_id : typing___Optional[typing___Text] = None,
        frequency : typing___Optional[squareup___repeatedly___common_pb2___RecurringSchedule.FrequencyValue] = None,
        days_of_period : typing___Optional[typing___Iterable[builtin___int]] = None,
        check_reference_token : typing___Optional[typing___Text] = None,
        pending_referral_render_data : typing___Optional[type___PendingReferralRenderData] = None,
        explicit_confirmation_reason : typing___Optional[squareup___franklin___data_pb2___ExplicitConfirmationReasonValue] = None,
        btc_limit : typing___Optional[typing___Text] = None,
        cross_currency_reward_info : typing___Optional[type___PaymentRenderData.CrossCurrencyRewardInfo] = None,
        loyalty_activity_render_data : typing___Optional[type___LoyaltyActivityRenderData] = None,
        invest_payment_render_data : typing___Optional[type___InvestPaymentRenderData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"auth_token",b"auth_token",u"blockchain_transaction_id",b"blockchain_transaction_id",u"boost_amount",b"boost_amount",u"boost_basis_points",b"boost_basis_points",u"btc_limit",b"btc_limit",u"can_unlock_free_atm_status",b"can_unlock_free_atm_status",u"cancellation_reason",b"cancellation_reason",u"captured_at",b"captured_at",u"check_reference_token",b"check_reference_token",u"client_display_name",b"client_display_name",u"created_at",b"created_at",u"cross_currency_reward_info",b"cross_currency_reward_info",u"crypto_transfer_status",b"crypto_transfer_status",u"customization",b"customization",u"deposit_instantly_valid_until",b"deposit_instantly_valid_until",u"deposit_preference",b"deposit_preference",u"deposited_at",b"deposited_at",u"display_date",b"display_date",u"display_instrument",b"display_instrument",u"explicit_confirmation_reason",b"explicit_confirmation_reason",u"failed_at",b"failed_at",u"fee_amount",b"fee_amount",u"fee_amounts",b"fee_amounts",u"frequency",b"frequency",u"idv_in_progress",b"idv_in_progress",u"in_cash_boost_experiment",b"in_cash_boost_experiment",u"instrument",b"instrument",u"instrument_type",b"instrument_type",u"invest_payment_render_data",b"invest_payment_render_data",u"investment_order_render_data",b"investment_order_render_data",u"is_app_purchase",b"is_app_purchase",u"is_banking_transaction",b"is_banking_transaction",u"is_bitcoin_transaction",b"is_bitcoin_transaction",u"is_pwc_payment",b"is_pwc_payment",u"is_scheduled_payment",b"is_scheduled_payment",u"is_scheduled_reload",b"is_scheduled_reload",u"is_transfer",b"is_transfer",u"lending_render_data",b"lending_render_data",u"loyalty_activity_render_data",b"loyalty_activity_render_data",u"movement_exchange_rate",b"movement_exchange_rate",u"note",b"note",u"orientation",b"orientation",u"paid_out_at",b"paid_out_at",u"passed_customer_at",b"passed_customer_at",u"pending_referral_render_data",b"pending_referral_render_data",u"pull_amount",b"pull_amount",u"push_amount",b"push_amount",u"rate_plan",b"rate_plan",u"reached_customer_at",b"reached_customer_at",u"reaction_data",b"reaction_data",u"recipient_payment_amount_in_default_currency",b"recipient_payment_amount_in_default_currency",u"refund_amount",b"refund_amount",u"refund_cancellation_reason",b"refund_cancellation_reason",u"refund_deposited_at",b"refund_deposited_at",u"refund_request_declined_at",b"refund_request_declined_at",u"refund_request_expires_at",b"refund_request_expires_at",u"refund_requested_at",b"refund_requested_at",u"refunded_at",b"refunded_at",u"refunded_to_balance",b"refunded_to_balance",u"reimbursed_amounts",b"reimbursed_amounts",u"request_refund_available_until",b"request_refund_available_until",u"request_refund_reason",b"request_refund_reason",u"reward_amount",b"reward_amount",u"reward_basis_points",b"reward_basis_points",u"role",b"role",u"scenario_plan",b"scenario_plan",u"scenario_plan_map",b"scenario_plan_map",u"scheduled_for",b"scheduled_for",u"sender_country",b"sender_country",u"sender_payment_amount_in_default_currency",b"sender_payment_amount_in_default_currency",u"sent_via_imessage",b"sent_via_imessage",u"sent_via_watch",b"sent_via_watch",u"state",b"state",u"supports_reporting_boost_until",b"supports_reporting_boost_until",u"supports_reporting_missing_reward_until",b"supports_reporting_missing_reward_until",u"target_wallet_address",b"target_wallet_address",u"token",b"token",u"transaction_id",b"transaction_id",u"transaction_reason_code",b"transaction_reason_code",u"verification_required",b"verification_required",u"will_refund_to_balance",b"will_refund_to_balance"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount",b"amount",u"auth_token",b"auth_token",u"blockchain_transaction_id",b"blockchain_transaction_id",u"boost_amount",b"boost_amount",u"boost_basis_points",b"boost_basis_points",u"btc_limit",b"btc_limit",u"can_unlock_free_atm_status",b"can_unlock_free_atm_status",u"cancellation_reason",b"cancellation_reason",u"captured_at",b"captured_at",u"check_reference_token",b"check_reference_token",u"client_display_name",b"client_display_name",u"created_at",b"created_at",u"cross_currency_reward_info",b"cross_currency_reward_info",u"crypto_transfer_status",b"crypto_transfer_status",u"customization",b"customization",u"days_of_period",b"days_of_period",u"deposit_instantly_valid_until",b"deposit_instantly_valid_until",u"deposit_preference",b"deposit_preference",u"deposited_at",b"deposited_at",u"display_date",b"display_date",u"display_instrument",b"display_instrument",u"explicit_confirmation_reason",b"explicit_confirmation_reason",u"failed_at",b"failed_at",u"fee_amount",b"fee_amount",u"fee_amounts",b"fee_amounts",u"frequency",b"frequency",u"hidden_receipt_buttons",b"hidden_receipt_buttons",u"idv_in_progress",b"idv_in_progress",u"in_cash_boost_experiment",b"in_cash_boost_experiment",u"instrument",b"instrument",u"instrument_type",b"instrument_type",u"invest_payment_render_data",b"invest_payment_render_data",u"investment_order_render_data",b"investment_order_render_data",u"is_app_purchase",b"is_app_purchase",u"is_banking_transaction",b"is_banking_transaction",u"is_bitcoin_transaction",b"is_bitcoin_transaction",u"is_pwc_payment",b"is_pwc_payment",u"is_scheduled_payment",b"is_scheduled_payment",u"is_scheduled_reload",b"is_scheduled_reload",u"is_transfer",b"is_transfer",u"lending_render_data",b"lending_render_data",u"loyalty_activity_render_data",b"loyalty_activity_render_data",u"movement_exchange_rate",b"movement_exchange_rate",u"note",b"note",u"orientation",b"orientation",u"paid_out_at",b"paid_out_at",u"passed_customer_at",b"passed_customer_at",u"pending_referral_render_data",b"pending_referral_render_data",u"pull_amount",b"pull_amount",u"push_amount",b"push_amount",u"rate_plan",b"rate_plan",u"reached_customer_at",b"reached_customer_at",u"reaction_data",b"reaction_data",u"recipient_payment_amount_in_default_currency",b"recipient_payment_amount_in_default_currency",u"refund_amount",b"refund_amount",u"refund_cancellation_reason",b"refund_cancellation_reason",u"refund_deposited_at",b"refund_deposited_at",u"refund_request_declined_at",b"refund_request_declined_at",u"refund_request_expires_at",b"refund_request_expires_at",u"refund_requested_at",b"refund_requested_at",u"refunded_at",b"refunded_at",u"refunded_to_balance",b"refunded_to_balance",u"reimbursed_amounts",b"reimbursed_amounts",u"request_refund_available_until",b"request_refund_available_until",u"request_refund_reason",b"request_refund_reason",u"reward_amount",b"reward_amount",u"reward_basis_points",b"reward_basis_points",u"role",b"role",u"scenario_plan",b"scenario_plan",u"scenario_plan_map",b"scenario_plan_map",u"scheduled_for",b"scheduled_for",u"sender_country",b"sender_country",u"sender_payment_amount_in_default_currency",b"sender_payment_amount_in_default_currency",u"sent_via_imessage",b"sent_via_imessage",u"sent_via_watch",b"sent_via_watch",u"state",b"state",u"supports_reporting_boost_until",b"supports_reporting_boost_until",u"supports_reporting_missing_reward_until",b"supports_reporting_missing_reward_until",u"target_wallet_address",b"target_wallet_address",u"token",b"token",u"transaction_id",b"transaction_id",u"transaction_reason_code",b"transaction_reason_code",u"verification_required",b"verification_required",u"will_refund_to_balance",b"will_refund_to_balance"]) -> None: ...
type___PaymentRenderData = PaymentRenderData

class ReactionRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    can_add_reactions_until: builtin___int = ...
    show_extended_picker: builtin___bool = ...

    @property
    def existing_reactions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___franklin___reaction_pb2___Reaction]: ...

    @property
    def available_reactions(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[squareup___franklin___reaction_pb2___Reaction]: ...

    def __init__(self,
        *,
        existing_reactions : typing___Optional[typing___Iterable[squareup___franklin___reaction_pb2___Reaction]] = None,
        available_reactions : typing___Optional[typing___Iterable[squareup___franklin___reaction_pb2___Reaction]] = None,
        can_add_reactions_until : typing___Optional[builtin___int] = None,
        show_extended_picker : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"can_add_reactions_until",b"can_add_reactions_until",u"show_extended_picker",b"show_extended_picker"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"available_reactions",b"available_reactions",u"can_add_reactions_until",b"can_add_reactions_until",u"existing_reactions",b"existing_reactions",u"show_extended_picker",b"show_extended_picker"]) -> None: ...
type___ReactionRenderData = ReactionRenderData

class CustomerRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    id: typing___Text = ...
    full_name: typing___Text = ...
    is_cash_customer: builtin___bool = ...
    is_new_customer: builtin___bool = ...
    usps_state: typing___Text = ...
    is_square: builtin___bool = ...
    block_state: squareup___franklin___ui___customer_pb2___BlockStateValue = ...
    is_business: builtin___bool = ...
    is_verified_account: builtin___bool = ...
    email_address: typing___Text = ...
    cashtag: typing___Text = ...
    sms_number: typing___Text = ...
    photo_url: typing___Text = ...
    accent_color: typing___Text = ...
    is_verification_required: builtin___bool = ...
    region: squareup___franklin___region_pb2___RegionValue = ...
    display_units: squareup___franklin___common_pb2___BitcoinDisplayUnitsValue = ...

    @property
    def merchant_render_data(self) -> type___MerchantRenderData: ...

    @property
    def avatar(self) -> squareup___franklin___ui_pb2___Avatar: ...

    @property
    def investment_entity_render_data(self) -> type___InvestmentEntityRenderData: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        full_name : typing___Optional[typing___Text] = None,
        is_cash_customer : typing___Optional[builtin___bool] = None,
        is_new_customer : typing___Optional[builtin___bool] = None,
        usps_state : typing___Optional[typing___Text] = None,
        is_square : typing___Optional[builtin___bool] = None,
        block_state : typing___Optional[squareup___franklin___ui___customer_pb2___BlockStateValue] = None,
        is_business : typing___Optional[builtin___bool] = None,
        is_verified_account : typing___Optional[builtin___bool] = None,
        merchant_render_data : typing___Optional[type___MerchantRenderData] = None,
        email_address : typing___Optional[typing___Text] = None,
        cashtag : typing___Optional[typing___Text] = None,
        sms_number : typing___Optional[typing___Text] = None,
        photo_url : typing___Optional[typing___Text] = None,
        accent_color : typing___Optional[typing___Text] = None,
        avatar : typing___Optional[squareup___franklin___ui_pb2___Avatar] = None,
        is_verification_required : typing___Optional[builtin___bool] = None,
        investment_entity_render_data : typing___Optional[type___InvestmentEntityRenderData] = None,
        region : typing___Optional[squareup___franklin___region_pb2___RegionValue] = None,
        display_units : typing___Optional[squareup___franklin___common_pb2___BitcoinDisplayUnitsValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accent_color",b"accent_color",u"avatar",b"avatar",u"block_state",b"block_state",u"cashtag",b"cashtag",u"display_units",b"display_units",u"email_address",b"email_address",u"full_name",b"full_name",u"id",b"id",u"investment_entity_render_data",b"investment_entity_render_data",u"is_business",b"is_business",u"is_cash_customer",b"is_cash_customer",u"is_new_customer",b"is_new_customer",u"is_square",b"is_square",u"is_verification_required",b"is_verification_required",u"is_verified_account",b"is_verified_account",u"merchant_render_data",b"merchant_render_data",u"photo_url",b"photo_url",u"region",b"region",u"sms_number",b"sms_number",u"usps_state",b"usps_state"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accent_color",b"accent_color",u"avatar",b"avatar",u"block_state",b"block_state",u"cashtag",b"cashtag",u"display_units",b"display_units",u"email_address",b"email_address",u"full_name",b"full_name",u"id",b"id",u"investment_entity_render_data",b"investment_entity_render_data",u"is_business",b"is_business",u"is_cash_customer",b"is_cash_customer",u"is_new_customer",b"is_new_customer",u"is_square",b"is_square",u"is_verification_required",b"is_verification_required",u"is_verified_account",b"is_verified_account",u"merchant_render_data",b"merchant_render_data",u"photo_url",b"photo_url",u"region",b"region",u"sms_number",b"sms_number",u"usps_state",b"usps_state"]) -> None: ...
type___CustomerRenderData = CustomerRenderData

class InvestmentEntityRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    investment_entity_symbol: typing___Text = ...
    investment_entity_name: typing___Text = ...
    investment_entity_token: typing___Text = ...

    def __init__(self,
        *,
        investment_entity_symbol : typing___Optional[typing___Text] = None,
        investment_entity_name : typing___Optional[typing___Text] = None,
        investment_entity_token : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"investment_entity_name",b"investment_entity_name",u"investment_entity_symbol",b"investment_entity_symbol",u"investment_entity_token",b"investment_entity_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"investment_entity_name",b"investment_entity_name",u"investment_entity_symbol",b"investment_entity_symbol",u"investment_entity_token",b"investment_entity_token"]) -> None: ...
type___InvestmentEntityRenderData = InvestmentEntityRenderData

class MerchantRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    url: typing___Text = ...
    phone_number: typing___Text = ...
    phone_number_confirmed: builtin___bool = ...

    @property
    def address(self) -> squareup___common___location_pb2___GlobalAddress: ...

    def __init__(self,
        *,
        url : typing___Optional[typing___Text] = None,
        address : typing___Optional[squareup___common___location_pb2___GlobalAddress] = None,
        phone_number : typing___Optional[typing___Text] = None,
        phone_number_confirmed : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"address",b"address",u"phone_number",b"phone_number",u"phone_number_confirmed",b"phone_number_confirmed",u"url",b"url"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"address",b"address",u"phone_number",b"phone_number",u"phone_number_confirmed",b"phone_number_confirmed",u"url",b"url"]) -> None: ...
type___MerchantRenderData = MerchantRenderData

class InvestmentOrderRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    order_token: typing___Text = ...
    estimated_execution_at: builtin___int = ...
    shares: typing___Text = ...
    instrument_token: typing___Text = ...
    investment_entity_token: typing___Text = ...
    order_side: squareup___franklin___investing___resources_pb2___OrderSideValue = ...
    order_type: squareup___franklin___investing___resources_pb2___OrderTypeValue = ...
    quote_token: typing___Text = ...
    status: squareup___franklin___investing___resources_pb2___OrderStatusValue = ...
    symbol: typing___Text = ...
    symbol_display_name: typing___Text = ...
    event_type: squareup___franklin___investing___resources_pb2___EventTypeValue = ...
    file_key: typing___Text = ...
    settlement_date: builtin___int = ...
    abbreviated_shares: typing___Text = ...
    expires_at: builtin___int = ...

    @property
    def amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def fees(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def commission(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def gain(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def share_price(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def rejection_reason(self) -> squareup___franklin___investing___resources_pb2___OrderRejectionReason: ...

    @property
    def target_share_price(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def original_share_price(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def cancelation_reason(self) -> squareup___franklin___investing___resources_pb2___OrderCancelationReason: ...

    @property
    def incentive_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        order_token : typing___Optional[typing___Text] = None,
        amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        fees : typing___Optional[squareup___common___currency_pb2___Money] = None,
        commission : typing___Optional[squareup___common___currency_pb2___Money] = None,
        estimated_execution_at : typing___Optional[builtin___int] = None,
        gain : typing___Optional[squareup___common___currency_pb2___Money] = None,
        share_price : typing___Optional[squareup___common___currency_pb2___Money] = None,
        shares : typing___Optional[typing___Text] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        investment_entity_token : typing___Optional[typing___Text] = None,
        order_side : typing___Optional[squareup___franklin___investing___resources_pb2___OrderSideValue] = None,
        order_type : typing___Optional[squareup___franklin___investing___resources_pb2___OrderTypeValue] = None,
        quote_token : typing___Optional[typing___Text] = None,
        rejection_reason : typing___Optional[squareup___franklin___investing___resources_pb2___OrderRejectionReason] = None,
        status : typing___Optional[squareup___franklin___investing___resources_pb2___OrderStatusValue] = None,
        symbol : typing___Optional[typing___Text] = None,
        symbol_display_name : typing___Optional[typing___Text] = None,
        event_type : typing___Optional[squareup___franklin___investing___resources_pb2___EventTypeValue] = None,
        file_key : typing___Optional[typing___Text] = None,
        settlement_date : typing___Optional[builtin___int] = None,
        abbreviated_shares : typing___Optional[typing___Text] = None,
        target_share_price : typing___Optional[squareup___common___currency_pb2___Money] = None,
        original_share_price : typing___Optional[squareup___common___currency_pb2___Money] = None,
        expires_at : typing___Optional[builtin___int] = None,
        cancelation_reason : typing___Optional[squareup___franklin___investing___resources_pb2___OrderCancelationReason] = None,
        incentive_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"abbreviated_shares",b"abbreviated_shares",u"amount",b"amount",u"cancelation_reason",b"cancelation_reason",u"commission",b"commission",u"estimated_execution_at",b"estimated_execution_at",u"event_type",b"event_type",u"expires_at",b"expires_at",u"fees",b"fees",u"file_key",b"file_key",u"gain",b"gain",u"incentive_amount",b"incentive_amount",u"instrument_token",b"instrument_token",u"investment_entity_token",b"investment_entity_token",u"order_side",b"order_side",u"order_token",b"order_token",u"order_type",b"order_type",u"original_share_price",b"original_share_price",u"quote_token",b"quote_token",u"rejection_reason",b"rejection_reason",u"settlement_date",b"settlement_date",u"share_price",b"share_price",u"shares",b"shares",u"status",b"status",u"symbol",b"symbol",u"symbol_display_name",b"symbol_display_name",u"target_share_price",b"target_share_price"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"abbreviated_shares",b"abbreviated_shares",u"amount",b"amount",u"cancelation_reason",b"cancelation_reason",u"commission",b"commission",u"estimated_execution_at",b"estimated_execution_at",u"event_type",b"event_type",u"expires_at",b"expires_at",u"fees",b"fees",u"file_key",b"file_key",u"gain",b"gain",u"incentive_amount",b"incentive_amount",u"instrument_token",b"instrument_token",u"investment_entity_token",b"investment_entity_token",u"order_side",b"order_side",u"order_token",b"order_token",u"order_type",b"order_type",u"original_share_price",b"original_share_price",u"quote_token",b"quote_token",u"rejection_reason",b"rejection_reason",u"settlement_date",b"settlement_date",u"share_price",b"share_price",u"shares",b"shares",u"status",b"status",u"symbol",b"symbol",u"symbol_display_name",b"symbol_display_name",u"target_share_price",b"target_share_price"]) -> None: ...
type___InvestmentOrderRenderData = InvestmentOrderRenderData

class FeeAmounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def cash_app_fee_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def atm_operator_fee_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        cash_app_fee_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        atm_operator_fee_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"atm_operator_fee_amount",b"atm_operator_fee_amount",u"cash_app_fee_amount",b"cash_app_fee_amount"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"atm_operator_fee_amount",b"atm_operator_fee_amount",u"cash_app_fee_amount",b"cash_app_fee_amount"]) -> None: ...
type___FeeAmounts = FeeAmounts

class ReimbursedAmounts(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def cash_app_fee_reimbursed_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def atm_operator_fee_reimbursed_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        cash_app_fee_reimbursed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        atm_operator_fee_reimbursed_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"atm_operator_fee_reimbursed_amount",b"atm_operator_fee_reimbursed_amount",u"cash_app_fee_reimbursed_amount",b"cash_app_fee_reimbursed_amount"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"atm_operator_fee_reimbursed_amount",b"atm_operator_fee_reimbursed_amount",u"cash_app_fee_reimbursed_amount",b"cash_app_fee_reimbursed_amount"]) -> None: ...
type___ReimbursedAmounts = ReimbursedAmounts

class LendingRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LendingRenderData.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        LOAN_CREATION = typing___cast(LendingRenderData.TypeValue, 1)
        SCHEDULED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 2)
        SKIPPED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 3)
        COMPLETED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 4)
        MISSED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 5)
        OVERDUE_PAYMENT = typing___cast(LendingRenderData.TypeValue, 6)
        INTEREST_CHARGE = typing___cast(LendingRenderData.TypeValue, 7)
        REFUND = typing___cast(LendingRenderData.TypeValue, 8)
        ADJUSTMENT = typing___cast(LendingRenderData.TypeValue, 9)
        PARTIAL_PAYMENT = typing___cast(LendingRenderData.TypeValue, 10)
    LOAN_CREATION = typing___cast(LendingRenderData.TypeValue, 1)
    SCHEDULED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 2)
    SKIPPED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 3)
    COMPLETED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 4)
    MISSED_PAYMENT = typing___cast(LendingRenderData.TypeValue, 5)
    OVERDUE_PAYMENT = typing___cast(LendingRenderData.TypeValue, 6)
    INTEREST_CHARGE = typing___cast(LendingRenderData.TypeValue, 7)
    REFUND = typing___cast(LendingRenderData.TypeValue, 8)
    ADJUSTMENT = typing___cast(LendingRenderData.TypeValue, 9)
    PARTIAL_PAYMENT = typing___cast(LendingRenderData.TypeValue, 10)
    type___Type = Type

    class Breakdown(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def principal_owing_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def setup_fee_owing_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def late_fees_owing_amount(self) -> squareup___common___currency_pb2___Money: ...

        @property
        def interest_owing_amount(self) -> squareup___common___currency_pb2___Money: ...

        def __init__(self,
            *,
            principal_owing_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            setup_fee_owing_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            late_fees_owing_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            interest_owing_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"interest_owing_amount",b"interest_owing_amount",u"late_fees_owing_amount",b"late_fees_owing_amount",u"principal_owing_amount",b"principal_owing_amount",u"setup_fee_owing_amount",b"setup_fee_owing_amount"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"interest_owing_amount",b"interest_owing_amount",u"late_fees_owing_amount",b"late_fees_owing_amount",u"principal_owing_amount",b"principal_owing_amount",u"setup_fee_owing_amount",b"setup_fee_owing_amount"]) -> None: ...
    type___Breakdown = Breakdown

    type: type___LendingRenderData.TypeValue = ...
    borrow_date: builtin___int = ...
    final_due_date: builtin___int = ...
    is_skippable: builtin___bool = ...
    manual_pay: builtin___bool = ...
    loan_token: typing___Text = ...
    tila_document_token: typing___Text = ...
    payable_until: builtin___int = ...
    suppress_details: builtin___bool = ...

    @property
    def principal_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def breakdown(self) -> type___LendingRenderData.Breakdown: ...

    @property
    def original_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        type : typing___Optional[type___LendingRenderData.TypeValue] = None,
        borrow_date : typing___Optional[builtin___int] = None,
        final_due_date : typing___Optional[builtin___int] = None,
        principal_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        breakdown : typing___Optional[type___LendingRenderData.Breakdown] = None,
        is_skippable : typing___Optional[builtin___bool] = None,
        manual_pay : typing___Optional[builtin___bool] = None,
        loan_token : typing___Optional[typing___Text] = None,
        tila_document_token : typing___Optional[typing___Text] = None,
        original_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        payable_until : typing___Optional[builtin___int] = None,
        suppress_details : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"borrow_date",b"borrow_date",u"breakdown",b"breakdown",u"final_due_date",b"final_due_date",u"is_skippable",b"is_skippable",u"loan_token",b"loan_token",u"manual_pay",b"manual_pay",u"original_amount",b"original_amount",u"payable_until",b"payable_until",u"principal_amount",b"principal_amount",u"suppress_details",b"suppress_details",u"tila_document_token",b"tila_document_token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"borrow_date",b"borrow_date",u"breakdown",b"breakdown",u"final_due_date",b"final_due_date",u"is_skippable",b"is_skippable",u"loan_token",b"loan_token",u"manual_pay",b"manual_pay",u"original_amount",b"original_amount",u"payable_until",b"payable_until",u"principal_amount",b"principal_amount",u"suppress_details",b"suppress_details",u"tila_document_token",b"tila_document_token",u"type",b"type"]) -> None: ...
type___LendingRenderData = LendingRenderData

class PendingReferralRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    RoleValue = typing___NewType('RoleValue', builtin___int)
    type___RoleValue = RoleValue
    Role: _Role
    class _Role(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PendingReferralRenderData.RoleValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        REFERRER = typing___cast(PendingReferralRenderData.RoleValue, 1)
        REFEREE = typing___cast(PendingReferralRenderData.RoleValue, 2)
    REFERRER = typing___cast(PendingReferralRenderData.RoleValue, 1)
    REFEREE = typing___cast(PendingReferralRenderData.RoleValue, 2)
    type___Role = Role

    StateValue = typing___NewType('StateValue', builtin___int)
    type___StateValue = StateValue
    State: _State
    class _State(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[PendingReferralRenderData.StateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        PENDING = typing___cast(PendingReferralRenderData.StateValue, 1)
        FAILED = typing___cast(PendingReferralRenderData.StateValue, 2)
        EXPIRED = typing___cast(PendingReferralRenderData.StateValue, 3)
    PENDING = typing___cast(PendingReferralRenderData.StateValue, 1)
    FAILED = typing___cast(PendingReferralRenderData.StateValue, 2)
    EXPIRED = typing___cast(PendingReferralRenderData.StateValue, 3)
    type___State = State

    role: type___PendingReferralRenderData.RoleValue = ...
    state: type___PendingReferralRenderData.StateValue = ...
    instruction_text: typing___Text = ...
    expires_in_text: typing___Text = ...
    expires_at: builtin___int = ...

    def __init__(self,
        *,
        role : typing___Optional[type___PendingReferralRenderData.RoleValue] = None,
        state : typing___Optional[type___PendingReferralRenderData.StateValue] = None,
        instruction_text : typing___Optional[typing___Text] = None,
        expires_in_text : typing___Optional[typing___Text] = None,
        expires_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"expires_at",b"expires_at",u"expires_in_text",b"expires_in_text",u"instruction_text",b"instruction_text",u"role",b"role",u"state",b"state"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"expires_at",b"expires_at",u"expires_in_text",b"expires_in_text",u"instruction_text",b"instruction_text",u"role",b"role",u"state",b"state"]) -> None: ...
type___PendingReferralRenderData = PendingReferralRenderData

class LoyaltyActivityRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[LoyaltyActivityRenderData.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        JOINED_PROGRAM = typing___cast(LoyaltyActivityRenderData.TypeValue, 1)
        EARNED_POINTS = typing___cast(LoyaltyActivityRenderData.TypeValue, 2)
        REDEEMED_REWARD = typing___cast(LoyaltyActivityRenderData.TypeValue, 3)
    JOINED_PROGRAM = typing___cast(LoyaltyActivityRenderData.TypeValue, 1)
    EARNED_POINTS = typing___cast(LoyaltyActivityRenderData.TypeValue, 2)
    REDEEMED_REWARD = typing___cast(LoyaltyActivityRenderData.TypeValue, 3)
    type___Type = Type

    type: type___LoyaltyActivityRenderData.TypeValue = ...

    def __init__(self,
        *,
        type : typing___Optional[type___LoyaltyActivityRenderData.TypeValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"type",b"type"]) -> None: ...
type___LoyaltyActivityRenderData = LoyaltyActivityRenderData

class InvestPaymentRenderData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class RecipientData(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        shares: typing___Text = ...
        action_deep_link: typing___Text = ...

        def __init__(self,
            *,
            shares : typing___Optional[typing___Text] = None,
            action_deep_link : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"action_deep_link",b"action_deep_link",u"shares",b"shares"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"action_deep_link",b"action_deep_link",u"shares",b"shares"]) -> None: ...
    type___RecipientData = RecipientData

    invest_payent_identifier: typing___Text = ...

    @property
    def investment_entity_render_data(self) -> type___InvestmentEntityRenderData: ...

    @property
    def recipient_data(self) -> type___InvestPaymentRenderData.RecipientData: ...

    def __init__(self,
        *,
        investment_entity_render_data : typing___Optional[type___InvestmentEntityRenderData] = None,
        invest_payent_identifier : typing___Optional[typing___Text] = None,
        recipient_data : typing___Optional[type___InvestPaymentRenderData.RecipientData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"invest_payent_identifier",b"invest_payent_identifier",u"investment_entity_render_data",b"investment_entity_render_data",u"recipient_data",b"recipient_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"invest_payent_identifier",b"invest_payent_identifier",u"investment_entity_render_data",b"investment_entity_render_data",u"recipient_data",b"recipient_data"]) -> None: ...
type___InvestPaymentRenderData = InvestPaymentRenderData
