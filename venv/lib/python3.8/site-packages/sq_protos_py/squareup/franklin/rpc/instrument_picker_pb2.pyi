# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.cash.instruments.InstrumentLinkProto_pb2 import (
    InstrumentLink as squareup___cash___instruments___InstrumentLinkProto_pb2___InstrumentLink,
)

from sq_protos_py.squareup.franklin.alias_pb2 import (
    Alias as squareup___franklin___alias_pb2___Alias,
)

from sq_protos_py.squareup.franklin.role_pb2 import (
    RoleValue as squareup___franklin___role_pb2___RoleValue,
)

from sq_protos_py.squareup.franklin.rpc.instrument_picker_movement_pb2 import (
    InstrumentPickerMovement as squareup___franklin___rpc___instrument_picker_movement_pb2___InstrumentPickerMovement,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class InstrumentPickerRequest(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    customer_token: typing___Text = ...
    role: squareup___franklin___role_pb2___RoleValue = ...

    @property
    def instrument_picker_movement(self) -> squareup___franklin___rpc___instrument_picker_movement_pb2___InstrumentPickerMovement: ...

    @property
    def sender_alias(self) -> squareup___franklin___alias_pb2___Alias: ...

    @property
    def recipient_alias(self) -> squareup___franklin___alias_pb2___Alias: ...

    def __init__(self,
        *,
        customer_token : typing___Optional[typing___Text] = None,
        role : typing___Optional[squareup___franklin___role_pb2___RoleValue] = None,
        instrument_picker_movement : typing___Optional[squareup___franklin___rpc___instrument_picker_movement_pb2___InstrumentPickerMovement] = None,
        sender_alias : typing___Optional[squareup___franklin___alias_pb2___Alias] = None,
        recipient_alias : typing___Optional[squareup___franklin___alias_pb2___Alias] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"instrument_picker_movement",b"instrument_picker_movement",u"recipient_alias",b"recipient_alias",u"role",b"role",u"sender_alias",b"sender_alias"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"customer_token",b"customer_token",u"instrument_picker_movement",b"instrument_picker_movement",u"recipient_alias",b"recipient_alias",u"role",b"role",u"sender_alias",b"sender_alias"]) -> None: ...
type___InstrumentPickerRequest = InstrumentPickerRequest

class InstrumentPickerResponse(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def instrument_link(self) -> squareup___cash___instruments___InstrumentLinkProto_pb2___InstrumentLink: ...

    def __init__(self,
        *,
        instrument_link : typing___Optional[squareup___cash___instruments___InstrumentLinkProto_pb2___InstrumentLink] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"instrument_link",b"instrument_link"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"instrument_link",b"instrument_link"]) -> None: ...
type___InstrumentPickerResponse = InstrumentPickerResponse
