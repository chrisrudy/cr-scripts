# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.franklin.internal_instrument_link_summary_pb2 import (
    InstrumentLinkSummary as squareup___franklin___internal_instrument_link_summary_pb2___InstrumentLinkSummary,
)

from sq_protos_py.squareup.franklin.payment_pb2 import (
    Payment as squareup___franklin___payment_pb2___Payment,
)

from sq_protos_py.squareup.franklin.rate_plan_pb2 import (
    RatePlanValue as squareup___franklin___rate_plan_pb2___RatePlanValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class MoneyMovementEvent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[MoneyMovementEvent.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        AUTHORIZED = typing___cast(MoneyMovementEvent.TypeValue, 1)
        CAPTURED = typing___cast(MoneyMovementEvent.TypeValue, 2)
        REFUNDED = typing___cast(MoneyMovementEvent.TypeValue, 3)
        CHARGED_BACK = typing___cast(MoneyMovementEvent.TypeValue, 4)
        CHARGEBACK_WON = typing___cast(MoneyMovementEvent.TypeValue, 5)
        CHARGEBACK_LOST = typing___cast(MoneyMovementEvent.TypeValue, 6)
        PAID_OUT = typing___cast(MoneyMovementEvent.TypeValue, 7)
        FEE_PAID_OUT = typing___cast(MoneyMovementEvent.TypeValue, 10)
        IN_REVIEW = typing___cast(MoneyMovementEvent.TypeValue, 13)
        PAYOUT_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 8)
        FEE_PAYOUT_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 11)
        PULL_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 9)
        INSTANT_DEPOSIT_FEE_PAID_OUT = typing___cast(MoneyMovementEvent.TypeValue, 12)
        INSTANT_DEPOSIT_FEE_PAID_OUT_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 20)
        CAPTURE_FEE = typing___cast(MoneyMovementEvent.TypeValue, 14)
        CAPTURE_FEE_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 15)
        CASH_APP_FEE = typing___cast(MoneyMovementEvent.TypeValue, 16)
        CASH_ATM_FEE = typing___cast(MoneyMovementEvent.TypeValue, 17)
        ATM_OPERATOR_FEE_REIMBURSEMENT = typing___cast(MoneyMovementEvent.TypeValue, 18)
        CASH_ATM_FEE_REIMBURSEMENT = typing___cast(MoneyMovementEvent.TypeValue, 19)
        LOSS = typing___cast(MoneyMovementEvent.TypeValue, 21)
        ANTICIPATED_PAYOUT = typing___cast(MoneyMovementEvent.TypeValue, 22)
    AUTHORIZED = typing___cast(MoneyMovementEvent.TypeValue, 1)
    CAPTURED = typing___cast(MoneyMovementEvent.TypeValue, 2)
    REFUNDED = typing___cast(MoneyMovementEvent.TypeValue, 3)
    CHARGED_BACK = typing___cast(MoneyMovementEvent.TypeValue, 4)
    CHARGEBACK_WON = typing___cast(MoneyMovementEvent.TypeValue, 5)
    CHARGEBACK_LOST = typing___cast(MoneyMovementEvent.TypeValue, 6)
    PAID_OUT = typing___cast(MoneyMovementEvent.TypeValue, 7)
    FEE_PAID_OUT = typing___cast(MoneyMovementEvent.TypeValue, 10)
    IN_REVIEW = typing___cast(MoneyMovementEvent.TypeValue, 13)
    PAYOUT_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 8)
    FEE_PAYOUT_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 11)
    PULL_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 9)
    INSTANT_DEPOSIT_FEE_PAID_OUT = typing___cast(MoneyMovementEvent.TypeValue, 12)
    INSTANT_DEPOSIT_FEE_PAID_OUT_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 20)
    CAPTURE_FEE = typing___cast(MoneyMovementEvent.TypeValue, 14)
    CAPTURE_FEE_REVERSED = typing___cast(MoneyMovementEvent.TypeValue, 15)
    CASH_APP_FEE = typing___cast(MoneyMovementEvent.TypeValue, 16)
    CASH_ATM_FEE = typing___cast(MoneyMovementEvent.TypeValue, 17)
    ATM_OPERATOR_FEE_REIMBURSEMENT = typing___cast(MoneyMovementEvent.TypeValue, 18)
    CASH_ATM_FEE_REIMBURSEMENT = typing___cast(MoneyMovementEvent.TypeValue, 19)
    LOSS = typing___cast(MoneyMovementEvent.TypeValue, 21)
    ANTICIPATED_PAYOUT = typing___cast(MoneyMovementEvent.TypeValue, 22)
    type___Type = Type

    id: typing___Text = ...
    created_at: builtin___int = ...
    type: type___MoneyMovementEvent.TypeValue = ...
    topic: typing___Text = ...
    idempotence_id: typing___Text = ...
    transaction_id: typing___Text = ...
    mechanism: squareup___franklin___payment_pb2___Payment.MoneyMovingMechanismValue = ...
    failure_reason: typing___Text = ...
    creation_mechanism: squareup___franklin___payment_pb2___Payment.CreationMechanismValue = ...
    rate_plan: squareup___franklin___rate_plan_pb2___RatePlanValue = ...
    statement_description: typing___Text = ...
    payment_coding_category: squareup___franklin___payment_pb2___Payment.PaymentCodingCategoryValue = ...
    reference: typing___Text = ...
    sequence_number: builtin___int = ...
    anticipated_event_completes_at: builtin___int = ...

    @property
    def pull_instrument(self) -> squareup___franklin___internal_instrument_link_summary_pb2___InstrumentLinkSummary: ...

    @property
    def push_instrument(self) -> squareup___franklin___internal_instrument_link_summary_pb2___InstrumentLinkSummary: ...

    @property
    def amount_money(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        id : typing___Optional[typing___Text] = None,
        created_at : typing___Optional[builtin___int] = None,
        type : typing___Optional[type___MoneyMovementEvent.TypeValue] = None,
        topic : typing___Optional[typing___Text] = None,
        idempotence_id : typing___Optional[typing___Text] = None,
        transaction_id : typing___Optional[typing___Text] = None,
        pull_instrument : typing___Optional[squareup___franklin___internal_instrument_link_summary_pb2___InstrumentLinkSummary] = None,
        push_instrument : typing___Optional[squareup___franklin___internal_instrument_link_summary_pb2___InstrumentLinkSummary] = None,
        amount_money : typing___Optional[squareup___common___currency_pb2___Money] = None,
        mechanism : typing___Optional[squareup___franklin___payment_pb2___Payment.MoneyMovingMechanismValue] = None,
        failure_reason : typing___Optional[typing___Text] = None,
        creation_mechanism : typing___Optional[squareup___franklin___payment_pb2___Payment.CreationMechanismValue] = None,
        rate_plan : typing___Optional[squareup___franklin___rate_plan_pb2___RatePlanValue] = None,
        statement_description : typing___Optional[typing___Text] = None,
        payment_coding_category : typing___Optional[squareup___franklin___payment_pb2___Payment.PaymentCodingCategoryValue] = None,
        reference : typing___Optional[typing___Text] = None,
        sequence_number : typing___Optional[builtin___int] = None,
        anticipated_event_completes_at : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"amount_money",b"amount_money",u"anticipated_event_completes_at",b"anticipated_event_completes_at",u"created_at",b"created_at",u"creation_mechanism",b"creation_mechanism",u"failure_reason",b"failure_reason",u"id",b"id",u"idempotence_id",b"idempotence_id",u"mechanism",b"mechanism",u"payment_coding_category",b"payment_coding_category",u"pull_instrument",b"pull_instrument",u"push_instrument",b"push_instrument",u"rate_plan",b"rate_plan",u"reference",b"reference",u"sequence_number",b"sequence_number",u"statement_description",b"statement_description",u"topic",b"topic",u"transaction_id",b"transaction_id",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"amount_money",b"amount_money",u"anticipated_event_completes_at",b"anticipated_event_completes_at",u"created_at",b"created_at",u"creation_mechanism",b"creation_mechanism",u"failure_reason",b"failure_reason",u"id",b"id",u"idempotence_id",b"idempotence_id",u"mechanism",b"mechanism",u"payment_coding_category",b"payment_coding_category",u"pull_instrument",b"pull_instrument",u"push_instrument",b"push_instrument",u"rate_plan",b"rate_plan",u"reference",b"reference",u"sequence_number",b"sequence_number",u"statement_description",b"statement_description",u"topic",b"topic",u"transaction_id",b"transaction_id",u"type",b"type"]) -> None: ...
type___MoneyMovementEvent = MoneyMovementEvent
