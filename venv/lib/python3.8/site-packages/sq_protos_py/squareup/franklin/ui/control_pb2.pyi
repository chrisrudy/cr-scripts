# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.franklin.api_pb2 import (
    ClientScenarioValue as squareup___franklin___api_pb2___ClientScenarioValue,
)

from sq_protos_py.squareup.franklin.status_result_pb2 import (
    StatusResult as squareup___franklin___status_result_pb2___StatusResult,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class UiControl(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    TypeValue = typing___NewType('TypeValue', builtin___int)
    type___TypeValue = TypeValue
    Type: _Type
    class _Type(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UiControl.TypeValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        LABEL = typing___cast(UiControl.TypeValue, 1)
        BUTTON = typing___cast(UiControl.TypeValue, 2)
        TOGGLE = typing___cast(UiControl.TypeValue, 3)
    LABEL = typing___cast(UiControl.TypeValue, 1)
    BUTTON = typing___cast(UiControl.TypeValue, 2)
    TOGGLE = typing___cast(UiControl.TypeValue, 3)
    type___Type = Type

    StateValue = typing___NewType('StateValue', builtin___int)
    type___StateValue = StateValue
    State: _State
    class _State(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UiControl.StateValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        ON = typing___cast(UiControl.StateValue, 1)
        OFF = typing___cast(UiControl.StateValue, 2)
    ON = typing___cast(UiControl.StateValue, 1)
    OFF = typing___cast(UiControl.StateValue, 2)
    type___State = State

    IconValue = typing___NewType('IconValue', builtin___int)
    type___IconValue = IconValue
    Icon: _Icon
    class _Icon(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UiControl.IconValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        EXCLAMATION_MARK = typing___cast(UiControl.IconValue, 1)
        ELLIPSIS = typing___cast(UiControl.IconValue, 2)
        PACKAGE = typing___cast(UiControl.IconValue, 3)
    EXCLAMATION_MARK = typing___cast(UiControl.IconValue, 1)
    ELLIPSIS = typing___cast(UiControl.IconValue, 2)
    PACKAGE = typing___cast(UiControl.IconValue, 3)
    type___Icon = Icon

    ActionValue = typing___NewType('ActionValue', builtin___int)
    type___ActionValue = ActionValue
    Action: _Action
    class _Action(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UiControl.ActionValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        DO_CLIENT_SCENARIO = typing___cast(UiControl.ActionValue, 1)
        COPY_CARD_NUMBER = typing___cast(UiControl.ActionValue, 2)
        REPORT_PROBLEM = typing___cast(UiControl.ActionValue, 3)
        BOOST_SCREEN = typing___cast(UiControl.ActionValue, 4)
        SHOW_OVERFLOW_CONTROLS = typing___cast(UiControl.ActionValue, 5)
        STATUS_RESULT = typing___cast(UiControl.ActionValue, 6)
        OPEN_DIGITAL_WALLET = typing___cast(UiControl.ActionValue, 7)
        START_SUPPORT_FLOW = typing___cast(UiControl.ActionValue, 8)
        SHOW_DIALOG = typing___cast(UiControl.ActionValue, 9)
    DO_CLIENT_SCENARIO = typing___cast(UiControl.ActionValue, 1)
    COPY_CARD_NUMBER = typing___cast(UiControl.ActionValue, 2)
    REPORT_PROBLEM = typing___cast(UiControl.ActionValue, 3)
    BOOST_SCREEN = typing___cast(UiControl.ActionValue, 4)
    SHOW_OVERFLOW_CONTROLS = typing___cast(UiControl.ActionValue, 5)
    STATUS_RESULT = typing___cast(UiControl.ActionValue, 6)
    OPEN_DIGITAL_WALLET = typing___cast(UiControl.ActionValue, 7)
    START_SUPPORT_FLOW = typing___cast(UiControl.ActionValue, 8)
    SHOW_DIALOG = typing___cast(UiControl.ActionValue, 9)
    type___Action = Action

    class TextButton(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        text: typing___Text = ...
        text_color: typing___Text = ...
        background_color: typing___Text = ...

        def __init__(self,
            *,
            text : typing___Optional[typing___Text] = None,
            text_color : typing___Optional[typing___Text] = None,
            background_color : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"background_color",b"background_color",u"text",b"text",u"text_color",b"text_color"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"background_color",b"background_color",u"text",b"text",u"text_color",b"text_color"]) -> None: ...
    type___TextButton = TextButton

    class IconButton(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        icon: type___UiControl.IconValue = ...
        background_color: typing___Text = ...

        def __init__(self,
            *,
            icon : typing___Optional[type___UiControl.IconValue] = None,
            background_color : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"background_color",b"background_color",u"icon",b"icon"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"background_color",b"background_color",u"icon",b"icon"]) -> None: ...
    type___IconButton = IconButton

    class Dialog(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class Button(google___protobuf___message___Message):
            DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
            ActionValue = typing___NewType('ActionValue', builtin___int)
            type___ActionValue = ActionValue
            Action: _Action
            class _Action(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[UiControl.Dialog.Button.ActionValue]):
                DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
                ADD_CASH = typing___cast(UiControl.Dialog.Button.ActionValue, 1)
                DISMISS = typing___cast(UiControl.Dialog.Button.ActionValue, 2)
                OPEN_URL = typing___cast(UiControl.Dialog.Button.ActionValue, 3)
            ADD_CASH = typing___cast(UiControl.Dialog.Button.ActionValue, 1)
            DISMISS = typing___cast(UiControl.Dialog.Button.ActionValue, 2)
            OPEN_URL = typing___cast(UiControl.Dialog.Button.ActionValue, 3)
            type___Action = Action

            text: typing___Text = ...
            action: type___UiControl.Dialog.Button.ActionValue = ...
            url_to_open: typing___Text = ...

            @property
            def add_cash_suggested_amount(self) -> squareup___common___currency_pb2___Money: ...

            def __init__(self,
                *,
                text : typing___Optional[typing___Text] = None,
                action : typing___Optional[type___UiControl.Dialog.Button.ActionValue] = None,
                add_cash_suggested_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
                url_to_open : typing___Optional[typing___Text] = None,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions___Literal[u"action",b"action",u"add_cash_suggested_amount",b"add_cash_suggested_amount",u"text",b"text",u"url_to_open",b"url_to_open"]) -> builtin___bool: ...
            def ClearField(self, field_name: typing_extensions___Literal[u"action",b"action",u"add_cash_suggested_amount",b"add_cash_suggested_amount",u"text",b"text",u"url_to_open",b"url_to_open"]) -> None: ...
        type___Button = Button

        main_text: typing___Text = ...
        title_text: typing___Text = ...

        @property
        def primary_button(self) -> type___UiControl.Dialog.Button: ...

        @property
        def secondary_button(self) -> type___UiControl.Dialog.Button: ...

        def __init__(self,
            *,
            main_text : typing___Optional[typing___Text] = None,
            primary_button : typing___Optional[type___UiControl.Dialog.Button] = None,
            secondary_button : typing___Optional[type___UiControl.Dialog.Button] = None,
            title_text : typing___Optional[typing___Text] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"main_text",b"main_text",u"primary_button",b"primary_button",u"secondary_button",b"secondary_button",u"title_text",b"title_text"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"main_text",b"main_text",u"primary_button",b"primary_button",u"secondary_button",b"secondary_button",u"title_text",b"title_text"]) -> None: ...
    type___Dialog = Dialog

    type: type___UiControl.TypeValue = ...
    state: type___UiControl.StateValue = ...
    text: typing___Text = ...
    text_color: typing___Text = ...
    main_text: typing___Text = ...
    main_text_color: typing___Text = ...
    sub_text: typing___Text = ...
    sub_text_color: typing___Text = ...
    background_color: typing___Text = ...
    icon: type___UiControl.IconValue = ...
    accessibility_text: typing___Text = ...
    action: type___UiControl.ActionValue = ...
    client_scenario: squareup___franklin___api_pb2___ClientScenarioValue = ...
    support_node_token: typing___Text = ...

    @property
    def text_button(self) -> type___UiControl.TextButton: ...

    @property
    def icon_button(self) -> type___UiControl.IconButton: ...

    @property
    def status_result(self) -> squareup___franklin___status_result_pb2___StatusResult: ...

    @property
    def dialog(self) -> type___UiControl.Dialog: ...

    def __init__(self,
        *,
        type : typing___Optional[type___UiControl.TypeValue] = None,
        state : typing___Optional[type___UiControl.StateValue] = None,
        text : typing___Optional[typing___Text] = None,
        text_color : typing___Optional[typing___Text] = None,
        main_text : typing___Optional[typing___Text] = None,
        main_text_color : typing___Optional[typing___Text] = None,
        sub_text : typing___Optional[typing___Text] = None,
        sub_text_color : typing___Optional[typing___Text] = None,
        text_button : typing___Optional[type___UiControl.TextButton] = None,
        icon_button : typing___Optional[type___UiControl.IconButton] = None,
        background_color : typing___Optional[typing___Text] = None,
        icon : typing___Optional[type___UiControl.IconValue] = None,
        accessibility_text : typing___Optional[typing___Text] = None,
        action : typing___Optional[type___UiControl.ActionValue] = None,
        client_scenario : typing___Optional[squareup___franklin___api_pb2___ClientScenarioValue] = None,
        status_result : typing___Optional[squareup___franklin___status_result_pb2___StatusResult] = None,
        support_node_token : typing___Optional[typing___Text] = None,
        dialog : typing___Optional[type___UiControl.Dialog] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"accessibility_text",b"accessibility_text",u"action",b"action",u"background_color",b"background_color",u"button",b"button",u"client_scenario",b"client_scenario",u"dialog",b"dialog",u"icon",b"icon",u"icon_button",b"icon_button",u"main_text",b"main_text",u"main_text_color",b"main_text_color",u"state",b"state",u"status_result",b"status_result",u"sub_text",b"sub_text",u"sub_text_color",b"sub_text_color",u"support_node_token",b"support_node_token",u"text",b"text",u"text_button",b"text_button",u"text_color",b"text_color",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"accessibility_text",b"accessibility_text",u"action",b"action",u"background_color",b"background_color",u"button",b"button",u"client_scenario",b"client_scenario",u"dialog",b"dialog",u"icon",b"icon",u"icon_button",b"icon_button",u"main_text",b"main_text",u"main_text_color",b"main_text_color",u"state",b"state",u"status_result",b"status_result",u"sub_text",b"sub_text",u"sub_text_color",b"sub_text_color",u"support_node_token",b"support_node_token",u"text",b"text",u"text_button",b"text_button",u"text_color",b"text_color",u"type",b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"button",b"button"]) -> typing_extensions___Literal["text_button","icon_button"]: ...
type___UiControl = UiControl
