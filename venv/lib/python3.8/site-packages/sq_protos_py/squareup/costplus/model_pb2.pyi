# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from sq_protos_py.squareup.ledger.ledger_pb2 import (
    LedgerEntry as squareup___ledger___ledger_pb2___LedgerEntry,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Fee(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...
    dry_run: builtin___bool = ...
    canceled: builtin___bool = ...
    token: typing___Text = ...
    rounding_fixed: builtin___bool = ...
    requested: builtin___bool = ...

    @property
    def reported_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def charged_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def charged_tax_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def ledger_entry(self) -> type___LedgerEntry: ...

    @property
    def created_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def settle_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def updated_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def rounding_adjustment_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        reported_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        charged_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        charged_tax_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        dry_run : typing___Optional[builtin___bool] = None,
        canceled : typing___Optional[builtin___bool] = None,
        ledger_entry : typing___Optional[type___LedgerEntry] = None,
        created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        settle_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        token : typing___Optional[typing___Text] = None,
        updated_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        rounding_adjustment_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        rounding_fixed : typing___Optional[builtin___bool] = None,
        requested : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"canceled",b"canceled",u"charged_amount",b"charged_amount",u"charged_tax_amount",b"charged_tax_amount",u"created_at",b"created_at",u"dry_run",b"dry_run",u"ledger_entry",b"ledger_entry",u"reported_amount",b"reported_amount",u"requested",b"requested",u"rounding_adjustment_amount",b"rounding_adjustment_amount",u"rounding_fixed",b"rounding_fixed",u"settle_at",b"settle_at",u"token",b"token",u"unit_token",b"unit_token",u"updated_at",b"updated_at"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"canceled",b"canceled",u"charged_amount",b"charged_amount",u"charged_tax_amount",b"charged_tax_amount",u"created_at",b"created_at",u"dry_run",b"dry_run",u"ledger_entry",b"ledger_entry",u"reported_amount",b"reported_amount",u"requested",b"requested",u"rounding_adjustment_amount",b"rounding_adjustment_amount",u"rounding_fixed",b"rounding_fixed",u"settle_at",b"settle_at",u"token",b"token",u"unit_token",b"unit_token",u"updated_at",b"updated_at"]) -> None: ...
type___Fee = Fee

class LedgerEntry(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    token: typing___Text = ...
    type: squareup___ledger___ledger_pb2___LedgerEntry.TypeValue = ...
    payment_token: typing___Text = ...
    margin_basis_points: builtin___int = ...
    margin_cents: builtin___int = ...

    @property
    def to_user_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def to_fee_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        token : typing___Optional[typing___Text] = None,
        type : typing___Optional[squareup___ledger___ledger_pb2___LedgerEntry.TypeValue] = None,
        payment_token : typing___Optional[typing___Text] = None,
        to_user_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        to_fee_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        margin_basis_points : typing___Optional[builtin___int] = None,
        margin_cents : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"margin_basis_points",b"margin_basis_points",u"margin_cents",b"margin_cents",u"payment_token",b"payment_token",u"to_fee_amount",b"to_fee_amount",u"to_user_amount",b"to_user_amount",u"token",b"token",u"type",b"type"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"margin_basis_points",b"margin_basis_points",u"margin_cents",b"margin_cents",u"payment_token",b"payment_token",u"to_fee_amount",b"to_fee_amount",u"to_user_amount",b"to_user_amount",u"token",b"token",u"type",b"type"]) -> None: ...
type___LedgerEntry = LedgerEntry

class CostPlusPlan(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    unit_token: typing___Text = ...
    bps_margin: builtin___int = ...
    dry_run: builtin___bool = ...
    cents_margin: builtin___int = ...

    @property
    def start_at(self) -> squareup___common___time_pb2___DateTime: ...

    @property
    def end_at(self) -> squareup___common___time_pb2___DateTime: ...

    def __init__(self,
        *,
        unit_token : typing___Optional[typing___Text] = None,
        start_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        end_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
        bps_margin : typing___Optional[builtin___int] = None,
        dry_run : typing___Optional[builtin___bool] = None,
        cents_margin : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"bps_margin",b"bps_margin",u"cents_margin",b"cents_margin",u"dry_run",b"dry_run",u"end_at",b"end_at",u"start_at",b"start_at",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bps_margin",b"bps_margin",u"cents_margin",b"cents_margin",u"dry_run",b"dry_run",u"end_at",b"end_at",u"start_at",b"start_at",u"unit_token",b"unit_token"]) -> None: ...
type___CostPlusPlan = CostPlusPlan
