# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.cards.api import cards_internal_service_pb2 as squareup_dot_cards_dot_api_dot_cards__internal__service__pb2


class CardsInternalServiceStub(object):
    """*
    CardsInternalService implements the cards API internal endpoints to be consumed
    by first party products only
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCardEncryptedTender = channel.unary_unary(
                '/squareup.cards.api.CardsInternalService/GetCardEncryptedTender',
                request_serializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.GetCardEncryptedTenderRequest.SerializeToString,
                response_deserializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.GetCardEncryptedTenderResponse.FromString,
                )
        self.ListCardsForRolodex = channel.unary_unary(
                '/squareup.cards.api.CardsInternalService/ListCardsForRolodex',
                request_serializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.ListCardsForRolodexRequest.SerializeToString,
                response_deserializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.ListCardsForRolodexResponse.FromString,
                )


class CardsInternalServiceServicer(object):
    """*
    CardsInternalService implements the cards API internal endpoints to be consumed
    by first party products only
    """

    def GetCardEncryptedTender(self, request, context):
        """
        @desc Exchange a card ID for a ServerEncryptedTender. If the requester has
        access to the card a ServerEncryptedTender will be returned. If the customer
        associated with the card is owned by the target merchant, it will also be
        included in the response
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCardsForRolodex(self, request, context):
        """
        @desc List cards by multiple customer ids to support rolodex migration to Cards.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CardsInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCardEncryptedTender': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCardEncryptedTender,
                    request_deserializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.GetCardEncryptedTenderRequest.FromString,
                    response_serializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.GetCardEncryptedTenderResponse.SerializeToString,
            ),
            'ListCardsForRolodex': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCardsForRolodex,
                    request_deserializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.ListCardsForRolodexRequest.FromString,
                    response_serializer=squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.ListCardsForRolodexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.cards.api.CardsInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CardsInternalService(object):
    """*
    CardsInternalService implements the cards API internal endpoints to be consumed
    by first party products only
    """

    @staticmethod
    def GetCardEncryptedTender(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cards.api.CardsInternalService/GetCardEncryptedTender',
            squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.GetCardEncryptedTenderRequest.SerializeToString,
            squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.GetCardEncryptedTenderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCardsForRolodex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.cards.api.CardsInternalService/ListCardsForRolodex',
            squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.ListCardsForRolodexRequest.SerializeToString,
            squareup_dot_cards_dot_api_dot_cards__internal__service__pb2.ListCardsForRolodexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
