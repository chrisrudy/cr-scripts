# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/mango/external/terminal_ack_next.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.common import validation_pb2 as squareup_dot_common_dot_validation__pb2
from sq_protos_py.squareup.client.bills import cart_pb2 as squareup_dot_client_dot_bills_dot_cart__pb2
from sq_protos_py.squareup.connect.v2.common import options_pb2 as squareup_dot_connect_dot_v2_dot_common_dot_options__pb2
from sq_protos_py.squareup.connect.v2.resources import error_pb2 as squareup_dot_connect_dot_v2_dot_resources_dot_error__pb2
from sq_protos_py.squareup.mango.external import terminal_common_pb2 as squareup_dot_mango_dot_external_dot_terminal__common__pb2
from sq_protos_py.squareup.mango.external import terminal_checkouts_pb2 as squareup_dot_mango_dot_external_dot_terminal__checkouts__pb2
from sq_protos_py.squareup.mango.external import terminal_refunds_pb2 as squareup_dot_mango_dot_external_dot_terminal__refunds__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/mango/external/terminal_ack_next.proto',
  package='squareup.connect.v2',
  syntax='proto2',
  serialized_options=_b('\n\036com.squareup.protos.connect.v2P\001\210\001\001'),
  serialized_pb=_b('\n/squareup/mango/external/terminal_ack_next.proto\x12\x13squareup.connect.v2\x1a squareup/common/validation.proto\x1a squareup/client/bills/cart.proto\x1a(squareup/connect/v2/common/options.proto\x1a)squareup/connect/v2/resources/error.proto\x1a-squareup/mango/external/terminal_common.proto\x1a\x30squareup/mango/external/terminal_checkouts.proto\x1a.squareup/mango/external/terminal_refunds.proto\"\x81\x01\n\x0e\x41\x63kNextRequest\x12\x1d\n\x0fidempotency_key\x18\x01 \x01(\tB\x04\xf8\xf1\n\x01\x12\x11\n\tdevice_id\x18\x02 \x01(\t\x12=\n\nack_reason\x18\x03 \x01(\x0e\x32).squareup.connect.v2.AckReasons.AckReason\"\xf5\x02\n\x0f\x41\x63kNextResponse\x12\x34\n\x06\x65rrors\x18\x01 \x03(\x0b\x32$.squareup.connect.v2.resources.Error\x12\x37\n\x04type\x18\x02 \x01(\x0e\x32).squareup.connect.v2.AckNextResponse.Type\x12\x39\n\x08\x63heckout\x18\x03 \x01(\x0b\x32%.squareup.connect.v2.TerminalCheckoutH\x00\x12\x35\n\x06refund\x18\x04 \x01(\x0b\x32#.squareup.connect.v2.TerminalRefundH\x00\x12)\n\x04\x63\x61rt\x18\x05 \x01(\x0b\x32\x1b.squareup.client.bills.Cart\"M\n\x04Type\x12\x0e\n\nDO_NOT_USE\x10\x00\x12\t\n\x05\x45MPTY\x10\x01\x12\x15\n\x11TERMINAL_CHECKOUT\x10\x03\x12\x13\n\x0fTERMINAL_REFUND\x10\x04\x42\x07\n\x05valueB%\n\x1e\x63om.squareup.protos.connect.v2P\x01\x88\x01\x01')
  ,
  dependencies=[squareup_dot_common_dot_validation__pb2.DESCRIPTOR,squareup_dot_client_dot_bills_dot_cart__pb2.DESCRIPTOR,squareup_dot_connect_dot_v2_dot_common_dot_options__pb2.DESCRIPTOR,squareup_dot_connect_dot_v2_dot_resources_dot_error__pb2.DESCRIPTOR,squareup_dot_mango_dot_external_dot_terminal__common__pb2.DESCRIPTOR,squareup_dot_mango_dot_external_dot_terminal__checkouts__pb2.DESCRIPTOR,squareup_dot_mango_dot_external_dot_terminal__refunds__pb2.DESCRIPTOR,])



_ACKNEXTRESPONSE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='squareup.connect.v2.AckNextResponse.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DO_NOT_USE', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EMPTY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TERMINAL_CHECKOUT', index=2, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TERMINAL_REFUND', index=3, number=4,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=790,
  serialized_end=867,
)
_sym_db.RegisterEnumDescriptor(_ACKNEXTRESPONSE_TYPE)


_ACKNEXTREQUEST = _descriptor.Descriptor(
  name='AckNextRequest',
  full_name='squareup.connect.v2.AckNextRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='idempotency_key', full_name='squareup.connect.v2.AckNextRequest.idempotency_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=_b('\370\361\n\001'), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='device_id', full_name='squareup.connect.v2.AckNextRequest.device_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ack_reason', full_name='squareup.connect.v2.AckNextRequest.ack_reason', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=371,
  serialized_end=500,
)


_ACKNEXTRESPONSE = _descriptor.Descriptor(
  name='AckNextResponse',
  full_name='squareup.connect.v2.AckNextResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='errors', full_name='squareup.connect.v2.AckNextResponse.errors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='squareup.connect.v2.AckNextResponse.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='checkout', full_name='squareup.connect.v2.AckNextResponse.checkout', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='refund', full_name='squareup.connect.v2.AckNextResponse.refund', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cart', full_name='squareup.connect.v2.AckNextResponse.cart', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ACKNEXTRESPONSE_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='squareup.connect.v2.AckNextResponse.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=503,
  serialized_end=876,
)

_ACKNEXTREQUEST.fields_by_name['ack_reason'].enum_type = squareup_dot_mango_dot_external_dot_terminal__common__pb2._ACKREASONS_ACKREASON
_ACKNEXTRESPONSE.fields_by_name['errors'].message_type = squareup_dot_connect_dot_v2_dot_resources_dot_error__pb2._ERROR
_ACKNEXTRESPONSE.fields_by_name['type'].enum_type = _ACKNEXTRESPONSE_TYPE
_ACKNEXTRESPONSE.fields_by_name['checkout'].message_type = squareup_dot_mango_dot_external_dot_terminal__checkouts__pb2._TERMINALCHECKOUT
_ACKNEXTRESPONSE.fields_by_name['refund'].message_type = squareup_dot_mango_dot_external_dot_terminal__refunds__pb2._TERMINALREFUND
_ACKNEXTRESPONSE.fields_by_name['cart'].message_type = squareup_dot_client_dot_bills_dot_cart__pb2._CART
_ACKNEXTRESPONSE_TYPE.containing_type = _ACKNEXTRESPONSE
_ACKNEXTRESPONSE.oneofs_by_name['value'].fields.append(
  _ACKNEXTRESPONSE.fields_by_name['checkout'])
_ACKNEXTRESPONSE.fields_by_name['checkout'].containing_oneof = _ACKNEXTRESPONSE.oneofs_by_name['value']
_ACKNEXTRESPONSE.oneofs_by_name['value'].fields.append(
  _ACKNEXTRESPONSE.fields_by_name['refund'])
_ACKNEXTRESPONSE.fields_by_name['refund'].containing_oneof = _ACKNEXTRESPONSE.oneofs_by_name['value']
DESCRIPTOR.message_types_by_name['AckNextRequest'] = _ACKNEXTREQUEST
DESCRIPTOR.message_types_by_name['AckNextResponse'] = _ACKNEXTRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AckNextRequest = _reflection.GeneratedProtocolMessageType('AckNextRequest', (_message.Message,), {
  'DESCRIPTOR' : _ACKNEXTREQUEST,
  '__module__' : 'squareup.mango.external.terminal_ack_next_pb2'
  # @@protoc_insertion_point(class_scope:squareup.connect.v2.AckNextRequest)
  })
_sym_db.RegisterMessage(AckNextRequest)

AckNextResponse = _reflection.GeneratedProtocolMessageType('AckNextResponse', (_message.Message,), {
  'DESCRIPTOR' : _ACKNEXTRESPONSE,
  '__module__' : 'squareup.mango.external.terminal_ack_next_pb2'
  # @@protoc_insertion_point(class_scope:squareup.connect.v2.AckNextResponse)
  })
_sym_db.RegisterMessage(AckNextResponse)


DESCRIPTOR._options = None
_ACKNEXTREQUEST.fields_by_name['idempotency_key']._options = None
# @@protoc_insertion_point(module_scope)
