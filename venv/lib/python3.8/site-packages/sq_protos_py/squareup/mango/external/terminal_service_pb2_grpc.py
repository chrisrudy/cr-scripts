# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.mango.external import terminal_ack_next_pb2 as squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2


class TerminalServiceStub(object):
    """*
    External service for developers AckNextTerminalCheckout to create, view and cancel Checkouts
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AckNext = channel.unary_unary(
                '/squareup.connect.v2.TerminalService/AckNext',
                request_serializer=squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2.AckNextRequest.SerializeToString,
                response_deserializer=squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2.AckNextResponse.FromString,
                )


class TerminalServiceServicer(object):
    """*
    External service for developers AckNextTerminalCheckout to create, view and cancel Checkouts
    """

    def AckNext(self, request, context):
        """--
        @desc Method definition for the [AckNext](#endpoint-acknext) endpoint.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TerminalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AckNext': grpc.unary_unary_rpc_method_handler(
                    servicer.AckNext,
                    request_deserializer=squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2.AckNextRequest.FromString,
                    response_serializer=squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2.AckNextResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connect.v2.TerminalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TerminalService(object):
    """*
    External service for developers AckNextTerminalCheckout to create, view and cancel Checkouts
    """

    @staticmethod
    def AckNext(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connect.v2.TerminalService/AckNext',
            squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2.AckNextRequest.SerializeToString,
            squareup_dot_mango_dot_external_dot_terminal__ack__next__pb2.AckNextResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
