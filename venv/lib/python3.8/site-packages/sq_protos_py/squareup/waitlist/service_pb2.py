# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: squareup/waitlist/service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from sq_protos_py.squareup.api.rpc import rpc_pb2 as squareup_dot_api_dot_rpc_dot_rpc__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='squareup/waitlist/service.proto',
  package='squareup.waitlist',
  syntax='proto2',
  serialized_options=_b('\n\034com.squareup.protos.waitlistB\rServiceProtos\210\001\001'),
  serialized_pb=_b('\n\x1fsquareup/waitlist/service.proto\x12\x11squareup.waitlist\x1a\x1asquareup/api/rpc/rpc.proto2g\n\x14WaitlistBatchService\x12O\n\x0cProcessBatch\x12\x1e.squareup.api.rpc.RequestBatch\x1a\x1f.squareup.api.rpc.ResponseBatchB0\n\x1c\x63om.squareup.protos.waitlistB\rServiceProtos\x88\x01\x01')
  ,
  dependencies=[squareup_dot_api_dot_rpc_dot_rpc__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)


DESCRIPTOR._options = None

_WAITLISTBATCHSERVICE = _descriptor.ServiceDescriptor(
  name='WaitlistBatchService',
  full_name='squareup.waitlist.WaitlistBatchService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=82,
  serialized_end=185,
  methods=[
  _descriptor.MethodDescriptor(
    name='ProcessBatch',
    full_name='squareup.waitlist.WaitlistBatchService.ProcessBatch',
    index=0,
    containing_service=None,
    input_type=squareup_dot_api_dot_rpc_dot_rpc__pb2._REQUESTBATCH,
    output_type=squareup_dot_api_dot_rpc_dot_rpc__pb2._RESPONSEBATCH,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_WAITLISTBATCHSERVICE)

DESCRIPTOR.services_by_name['WaitlistBatchService'] = _WAITLISTBATCHSERVICE

# @@protoc_insertion_point(module_scope)
