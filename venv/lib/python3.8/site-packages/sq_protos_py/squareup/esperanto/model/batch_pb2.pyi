# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer as google___protobuf___internal___containers___RepeatedCompositeFieldContainer,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.time_pb2 import (
    DateTime as squareup___common___time_pb2___DateTime,
)

from typing import (
    Iterable as typing___Iterable,
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

BatchStateValue = typing___NewType('BatchStateValue', builtin___int)
type___BatchStateValue = BatchStateValue
BatchState: _BatchState
class _BatchState(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[BatchStateValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DEFAULT_BATCH_STATE_DO_NOT_USE = typing___cast(BatchStateValue, 0)
    OPEN_FOR_ADDITIONS = typing___cast(BatchStateValue, 1)
    CLOSED_FOR_ADDITIONS = typing___cast(BatchStateValue, 2)
    POSTPONING_REFUNDS = typing___cast(BatchStateValue, 3)
    FIDELIUS_LOOKUP = typing___cast(BatchStateValue, 4)
    CALC_GATEWAY_BATCH_ID = typing___cast(BatchStateValue, 5)
    SENDING_TO_GATEWAY = typing___cast(BatchStateValue, 6)
    PENDING_GATEWAY_RESPONSE = typing___cast(BatchStateValue, 7)
    SUCCESS_RESPONSE_RECEIVED = typing___cast(BatchStateValue, 8)
    SKIPPED_EMPTY_BATCH = typing___cast(BatchStateValue, 9)
    FAILURE_RETRYABLE_ERROR = typing___cast(BatchStateValue, 10)
    FAILURE_NONRETRYABLE_ERROR = typing___cast(BatchStateValue, 11)
    FAILURE_RESPONSE_RECEIVED = typing___cast(BatchStateValue, 12)
    MANUAL_SUCCESS = typing___cast(BatchStateValue, 13)
    MANUAL_FAILURE = typing___cast(BatchStateValue, 14)
    ITEMIZATION_DATA_FETCH = typing___cast(BatchStateValue, 15)
DEFAULT_BATCH_STATE_DO_NOT_USE = typing___cast(BatchStateValue, 0)
OPEN_FOR_ADDITIONS = typing___cast(BatchStateValue, 1)
CLOSED_FOR_ADDITIONS = typing___cast(BatchStateValue, 2)
POSTPONING_REFUNDS = typing___cast(BatchStateValue, 3)
FIDELIUS_LOOKUP = typing___cast(BatchStateValue, 4)
CALC_GATEWAY_BATCH_ID = typing___cast(BatchStateValue, 5)
SENDING_TO_GATEWAY = typing___cast(BatchStateValue, 6)
PENDING_GATEWAY_RESPONSE = typing___cast(BatchStateValue, 7)
SUCCESS_RESPONSE_RECEIVED = typing___cast(BatchStateValue, 8)
SKIPPED_EMPTY_BATCH = typing___cast(BatchStateValue, 9)
FAILURE_RETRYABLE_ERROR = typing___cast(BatchStateValue, 10)
FAILURE_NONRETRYABLE_ERROR = typing___cast(BatchStateValue, 11)
FAILURE_RESPONSE_RECEIVED = typing___cast(BatchStateValue, 12)
MANUAL_SUCCESS = typing___cast(BatchStateValue, 13)
MANUAL_FAILURE = typing___cast(BatchStateValue, 14)
ITEMIZATION_DATA_FETCH = typing___cast(BatchStateValue, 15)
type___BatchState = BatchState

class BatchDetails(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class BatchSubmissionDetails(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

        @property
        def created_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def submitted_at(self) -> squareup___common___time_pb2___DateTime: ...

        @property
        def closed_at(self) -> squareup___common___time_pb2___DateTime: ...

        def __init__(self,
            *,
            created_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            submitted_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            closed_at : typing___Optional[squareup___common___time_pb2___DateTime] = None,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions___Literal[u"closed_at",b"closed_at",u"created_at",b"created_at",u"submitted_at",b"submitted_at"]) -> builtin___bool: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"closed_at",b"closed_at",u"created_at",b"created_at",u"submitted_at",b"submitted_at"]) -> None: ...
    type___BatchSubmissionDetails = BatchSubmissionDetails

    shard: typing___Text = ...
    gateway_batch_id: typing___Text = ...
    external_batch_id: typing___Text = ...
    batch_success: builtin___bool = ...
    batch_error_code: typing___Text = ...
    batch_error_message: typing___Text = ...
    batch_state: type___BatchStateValue = ...
    payment_success: builtin___bool = ...
    payment_error_code: typing___Text = ...
    payment_error_message: typing___Text = ...

    @property
    def submission_detail(self) -> google___protobuf___internal___containers___RepeatedCompositeFieldContainer[type___BatchDetails.BatchSubmissionDetails]: ...

    def __init__(self,
        *,
        shard : typing___Optional[typing___Text] = None,
        gateway_batch_id : typing___Optional[typing___Text] = None,
        external_batch_id : typing___Optional[typing___Text] = None,
        submission_detail : typing___Optional[typing___Iterable[type___BatchDetails.BatchSubmissionDetails]] = None,
        batch_success : typing___Optional[builtin___bool] = None,
        batch_error_code : typing___Optional[typing___Text] = None,
        batch_error_message : typing___Optional[typing___Text] = None,
        batch_state : typing___Optional[type___BatchStateValue] = None,
        payment_success : typing___Optional[builtin___bool] = None,
        payment_error_code : typing___Optional[typing___Text] = None,
        payment_error_message : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"batch_error_code",b"batch_error_code",u"batch_error_message",b"batch_error_message",u"batch_state",b"batch_state",u"batch_success",b"batch_success",u"external_batch_id",b"external_batch_id",u"gateway_batch_id",b"gateway_batch_id",u"payment_error_code",b"payment_error_code",u"payment_error_message",b"payment_error_message",u"payment_success",b"payment_success",u"shard",b"shard"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"batch_error_code",b"batch_error_code",u"batch_error_message",b"batch_error_message",u"batch_state",b"batch_state",u"batch_success",b"batch_success",u"external_batch_id",b"external_batch_id",u"gateway_batch_id",b"gateway_batch_id",u"payment_error_code",b"payment_error_code",u"payment_error_message",b"payment_error_message",u"payment_success",b"payment_success",u"shard",b"shard",u"submission_detail",b"submission_detail"]) -> None: ...
type___BatchDetails = BatchDetails
