# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.common.emv_pb2 import (
    EmvTags as squareup___common___emv_pb2___EmvTags,
)

from sq_protos_py.squareup.common.location_pb2 import (
    GeoLocation as squareup___common___location_pb2___GeoLocation,
)

from sq_protos_py.squareup.esperanto.api.capture_pb2 import (
    CaptureTypeValue as squareup___esperanto___api___capture_pb2___CaptureTypeValue,
)

from sq_protos_py.squareup.esperanto.api.itemization_pb2 import (
    ItemizationData as squareup___esperanto___api___itemization_pb2___ItemizationData,
)

from sq_protos_py.squareup.esperanto.common.common_pb2 import (
    CustomerPresenceValue as squareup___esperanto___common___common_pb2___CustomerPresenceValue,
    OperationStatus as squareup___esperanto___common___common_pb2___OperationStatus,
)

from sq_protos_py.squareup.esperanto.model.batch_pb2 import (
    BatchDetails as squareup___esperanto___model___batch_pb2___BatchDetails,
)

from sq_protos_py.squareup.payments.set_metadata_pb2 import (
    DelayCaptureReasonValue as squareup___payments___set_metadata_pb2___DelayCaptureReasonValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class CaptureIntentIccData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    transaction_certificate: typing___Text = ...

    def __init__(self,
        *,
        transaction_certificate : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"transaction_certificate",b"transaction_certificate"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"transaction_certificate",b"transaction_certificate"]) -> None: ...
type___CaptureIntentIccData = CaptureIntentIccData

class DelayCaptureIntent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    delay_capture_reason: squareup___payments___set_metadata_pb2___DelayCaptureReasonValue = ...
    created_at_ms: builtin___int = ...

    def __init__(self,
        *,
        delay_capture_reason : typing___Optional[squareup___payments___set_metadata_pb2___DelayCaptureReasonValue] = None,
        created_at_ms : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"created_at_ms",b"created_at_ms",u"delay_capture_reason",b"delay_capture_reason"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"created_at_ms",b"created_at_ms",u"delay_capture_reason",b"delay_capture_reason"]) -> None: ...
type___DelayCaptureIntent = DelayCaptureIntent

class CaptureIntent(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    created_at_ms: builtin___int = ...
    processing_date_ms: builtin___int = ...
    business_date_ms: builtin___int = ...
    customer_presence: squareup___esperanto___common___common_pb2___CustomerPresenceValue = ...
    time_zone: typing___Text = ...
    capture_gateway_transaction_id: typing___Text = ...
    client_requested_at_ms: builtin___int = ...

    @property
    def total_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tip_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def tax_amount(self) -> squareup___common___currency_pb2___Money: ...

    @property
    def icc_data(self) -> type___CaptureIntentIccData: ...

    @property
    def geo_location(self) -> squareup___common___location_pb2___GeoLocation: ...

    @property
    def emv_tags(self) -> squareup___common___emv_pb2___EmvTags: ...

    def __init__(self,
        *,
        created_at_ms : typing___Optional[builtin___int] = None,
        total_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tip_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        tax_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        processing_date_ms : typing___Optional[builtin___int] = None,
        business_date_ms : typing___Optional[builtin___int] = None,
        icc_data : typing___Optional[type___CaptureIntentIccData] = None,
        customer_presence : typing___Optional[squareup___esperanto___common___common_pb2___CustomerPresenceValue] = None,
        geo_location : typing___Optional[squareup___common___location_pb2___GeoLocation] = None,
        time_zone : typing___Optional[typing___Text] = None,
        capture_gateway_transaction_id : typing___Optional[typing___Text] = None,
        emv_tags : typing___Optional[squareup___common___emv_pb2___EmvTags] = None,
        client_requested_at_ms : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"business_date_ms",b"business_date_ms",u"capture_gateway_transaction_id",b"capture_gateway_transaction_id",u"client_requested_at_ms",b"client_requested_at_ms",u"created_at_ms",b"created_at_ms",u"customer_presence",b"customer_presence",u"emv_tags",b"emv_tags",u"geo_location",b"geo_location",u"icc_data",b"icc_data",u"processing_date_ms",b"processing_date_ms",u"tax_amount",b"tax_amount",u"time_zone",b"time_zone",u"tip_amount",b"tip_amount",u"total_amount",b"total_amount"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"business_date_ms",b"business_date_ms",u"capture_gateway_transaction_id",b"capture_gateway_transaction_id",u"client_requested_at_ms",b"client_requested_at_ms",u"created_at_ms",b"created_at_ms",u"customer_presence",b"customer_presence",u"emv_tags",b"emv_tags",u"geo_location",b"geo_location",u"icc_data",b"icc_data",u"processing_date_ms",b"processing_date_ms",u"tax_amount",b"tax_amount",u"time_zone",b"time_zone",u"tip_amount",b"tip_amount",u"total_amount",b"total_amount"]) -> None: ...
type___CaptureIntent = CaptureIntent

class CaptureResult(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def status(self) -> squareup___esperanto___common___common_pb2___OperationStatus: ...

    def __init__(self,
        *,
        status : typing___Optional[squareup___esperanto___common___common_pb2___OperationStatus] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"status",b"status"]) -> None: ...
type___CaptureResult = CaptureResult

class Capture(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    capture_uuid: typing___Text = ...
    capture_request_id: typing___Text = ...
    capture_type: squareup___esperanto___api___capture_pb2___CaptureTypeValue = ...

    @property
    def delay_capture_intent(self) -> type___DelayCaptureIntent: ...

    @property
    def capture_intent(self) -> type___CaptureIntent: ...

    @property
    def capture_result(self) -> type___CaptureResult: ...

    @property
    def batch_details(self) -> squareup___esperanto___model___batch_pb2___BatchDetails: ...

    @property
    def itemization_data(self) -> squareup___esperanto___api___itemization_pb2___ItemizationData: ...

    def __init__(self,
        *,
        delay_capture_intent : typing___Optional[type___DelayCaptureIntent] = None,
        capture_intent : typing___Optional[type___CaptureIntent] = None,
        capture_result : typing___Optional[type___CaptureResult] = None,
        capture_uuid : typing___Optional[typing___Text] = None,
        capture_request_id : typing___Optional[typing___Text] = None,
        capture_type : typing___Optional[squareup___esperanto___api___capture_pb2___CaptureTypeValue] = None,
        batch_details : typing___Optional[squareup___esperanto___model___batch_pb2___BatchDetails] = None,
        itemization_data : typing___Optional[squareup___esperanto___api___itemization_pb2___ItemizationData] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"batch_details",b"batch_details",u"capture_intent",b"capture_intent",u"capture_request_id",b"capture_request_id",u"capture_result",b"capture_result",u"capture_type",b"capture_type",u"capture_uuid",b"capture_uuid",u"delay_capture_intent",b"delay_capture_intent",u"itemization_data",b"itemization_data"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"batch_details",b"batch_details",u"capture_intent",b"capture_intent",u"capture_request_id",b"capture_request_id",u"capture_result",b"capture_result",u"capture_type",b"capture_type",u"capture_uuid",b"capture_uuid",u"delay_capture_intent",b"delay_capture_intent",u"itemization_data",b"itemization_data"]) -> None: ...
type___Capture = Capture
