# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.esperanto.api import privacy_pb2 as squareup_dot_esperanto_dot_api_dot_privacy__pb2


class PrivacyExperimentalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckEligibility = channel.unary_unary(
                '/squareup.esperanto.api.PrivacyExperimentalService/CheckEligibility',
                request_serializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.CheckEligibilityRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.CheckEligibilityResponse.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/squareup.esperanto.api.PrivacyExperimentalService/GetStatus',
                request_serializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.GetStatusResponse.FromString,
                )


class PrivacyExperimentalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckEligibility(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyExperimentalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckEligibility': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckEligibility,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.CheckEligibilityRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.CheckEligibilityResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.GetStatusRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.GetStatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.esperanto.api.PrivacyExperimentalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyExperimentalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckEligibility(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PrivacyExperimentalService/CheckEligibility',
            squareup_dot_esperanto_dot_api_dot_privacy__pb2.CheckEligibilityRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_privacy__pb2.CheckEligibilityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PrivacyExperimentalService/GetStatus',
            squareup_dot_esperanto_dot_api_dot_privacy__pb2.GetStatusRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_privacy__pb2.GetStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrivacyInternalServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ForgetPayments = channel.unary_unary(
                '/squareup.esperanto.api.PrivacyInternalService/ForgetPayments',
                request_serializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.ForgetPaymentsRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.ForgetPaymentsResponse.FromString,
                )


class PrivacyInternalServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ForgetPayments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrivacyInternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ForgetPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgetPayments,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.ForgetPaymentsRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_privacy__pb2.ForgetPaymentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.esperanto.api.PrivacyInternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PrivacyInternalService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ForgetPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PrivacyInternalService/ForgetPayments',
            squareup_dot_esperanto_dot_api_dot_privacy__pb2.ForgetPaymentsRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_privacy__pb2.ForgetPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
