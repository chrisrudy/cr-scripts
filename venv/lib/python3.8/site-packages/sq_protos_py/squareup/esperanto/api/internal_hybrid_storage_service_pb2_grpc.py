# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.esperanto.api import getpayment_pb2 as squareup_dot_esperanto_dot_api_dot_getpayment__pb2
from sq_protos_py.squareup.esperanto.api import hybrid_batch_comparison_pb2 as squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2
from sq_protos_py.squareup.feedsync.service import service_pb2 as squareup_dot_feedsync_dot_service_dot_service__pb2


class PaymentInternalHybridComparisonServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HybridComparison = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridComparisonService/HybridComparison',
                request_serializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridComparisonRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridComparisonResponse.FromString,
                )
        self.HybridBatchComparison = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridComparisonService/HybridBatchComparison',
                request_serializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridBatchComparisonRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridBatchComparisonResponse.FromString,
                )


class PaymentInternalHybridComparisonServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def HybridComparison(self, request, context):
        """* Compares the contents of a single payment record in both Spanner and MySQL. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HybridBatchComparison(self, request, context):
        """* Compares the contents of a batch of payment records in both Spanner and MySQL. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentInternalHybridComparisonServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HybridComparison': grpc.unary_unary_rpc_method_handler(
                    servicer.HybridComparison,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridComparisonRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridComparisonResponse.SerializeToString,
            ),
            'HybridBatchComparison': grpc.unary_unary_rpc_method_handler(
                    servicer.HybridBatchComparison,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridBatchComparisonRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridBatchComparisonResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.esperanto.api.PaymentInternalHybridComparisonService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentInternalHybridComparisonService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def HybridComparison(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridComparisonService/HybridComparison',
            squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridComparisonRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridComparisonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HybridBatchComparison(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridComparisonService/HybridBatchComparison',
            squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridBatchComparisonRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HybridBatchComparisonResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PaymentInternalHybridUploadServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HotBatchUpload = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridUploadService/HotBatchUpload',
                request_serializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HotBatchUploadRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HotBatchUploadResponse.FromString,
                )


class PaymentInternalHybridUploadServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def HotBatchUpload(self, request, context):
        """* Uploads a batch of records to cold storage without updating the progress table. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentInternalHybridUploadServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HotBatchUpload': grpc.unary_unary_rpc_method_handler(
                    servicer.HotBatchUpload,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HotBatchUploadRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HotBatchUploadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.esperanto.api.PaymentInternalHybridUploadService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentInternalHybridUploadService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def HotBatchUpload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridUploadService/HotBatchUpload',
            squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HotBatchUploadRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_hybrid__batch__comparison__pb2.HotBatchUploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PaymentInternalHybridStorageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPaymentCold = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentCold',
                request_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentResponse.FromString,
                )
        self.GetPaymentHot = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentHot',
                request_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentResponse.FromString,
                )
        self.GetPaymentsCold = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentsCold',
                request_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsResponse.FromString,
                )
        self.GetPaymentsHot = channel.unary_unary(
                '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentsHot',
                request_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsRequest.SerializeToString,
                response_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsResponse.FromString,
                )


class PaymentInternalHybridStorageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPaymentCold(self, request, context):
        """* Retrieve a payment by payment id, by looking only in cold storage 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentHot(self, request, context):
        """* Retrieve a payment by payment id, by looking only in hot storage, within the local region 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentsCold(self, request, context):
        """* Retrieve multiple payments by payment id, by looking only in cold storage 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPaymentsHot(self, request, context):
        """*
        Retrieve multiple payments by payment id, by looking only in hot storage, within the local
        region
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentInternalHybridStorageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPaymentCold': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentCold,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentResponse.SerializeToString,
            ),
            'GetPaymentHot': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentHot,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentResponse.SerializeToString,
            ),
            'GetPaymentsCold': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentsCold,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsResponse.SerializeToString,
            ),
            'GetPaymentsHot': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPaymentsHot,
                    request_deserializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsRequest.FromString,
                    response_serializer=squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.esperanto.api.PaymentInternalHybridStorageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentInternalHybridStorageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPaymentCold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentCold',
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentHot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentHot',
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentsCold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentsCold',
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPaymentsHot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.PaymentInternalHybridStorageService/GetPaymentsHot',
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsRequest.SerializeToString,
            squareup_dot_esperanto_dot_api_dot_getpayment__pb2.GetPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class FeedInternalHybridSourceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchCold = channel.unary_unary(
                '/squareup.esperanto.api.FeedInternalHybridSourceService/FetchCold',
                request_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
                response_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.FromString,
                )
        self.FetchHot = channel.unary_unary(
                '/squareup.esperanto.api.FeedInternalHybridSourceService/FetchHot',
                request_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
                response_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.FromString,
                )
        self.FetchHybrid = channel.unary_unary(
                '/squareup.esperanto.api.FeedInternalHybridSourceService/FetchHybrid',
                request_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
                response_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.FromString,
                )


class FeedInternalHybridSourceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FetchCold(self, request, context):
        """* FeedSourceService which fetches entities only from cold storage 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchHot(self, request, context):
        """* FeedSourceService which fetches entities only from hot storage 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchHybrid(self, request, context):
        """*
        FeedSourceService which fetches entities from hot and cold storage,
        depending on availability.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeedInternalHybridSourceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchCold': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchCold,
                    request_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.FromString,
                    response_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.SerializeToString,
            ),
            'FetchHot': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchHot,
                    request_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.FromString,
                    response_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.SerializeToString,
            ),
            'FetchHybrid': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchHybrid,
                    request_deserializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.FromString,
                    response_serializer=squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.esperanto.api.FeedInternalHybridSourceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FeedInternalHybridSourceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FetchCold(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.FeedInternalHybridSourceService/FetchCold',
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchHot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.FeedInternalHybridSourceService/FetchHot',
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchHybrid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.esperanto.api.FeedInternalHybridSourceService/FetchHybrid',
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchRequest.SerializeToString,
            squareup_dot_feedsync_dot_service_dot_service__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
