# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.modelarbiter import service_pb2 as squareup_dot_modelarbiter_dot_service__pb2


class ModelArbiterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInference = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/GetInference',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.FromString,
                )
        self.GetInferenceSlow = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/GetInferenceSlow',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.FromString,
                )
        self.GetInferenceCheck = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/GetInferenceCheck',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.FromString,
                )
        self.BatchEvaluateModels = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/BatchEvaluateModels',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.BatchEvaluateModelRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.BatchEvaluateModelResponse.FromString,
                )
        self.EvaluateModel = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/EvaluateModel',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.EvaluateModelRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.EvaluateModelResponse.FromString,
                )
        self.ExplainModel = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/ExplainModel',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.ExplainModelRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.ExplainModelResponse.FromString,
                )
        self.ListModelSignals = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/ListModelSignals',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelSignalsRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelSignalsResponse.FromString,
                )
        self.ListModels = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/ListModels',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelsRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelsResponse.FromString,
                )
        self.GetModelTypes = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterService/GetModelTypes',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetModelTypesRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetModelTypesResponse.FromString,
                )


class ModelArbiterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetInference(self, request, context):
        """*
        Evaluate a given model to retrieve an inference, accepts and returns (non-double) Values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInferenceSlow(self, request, context):
        """*
        Evaluate a given model to retrieve an inference, accepts and returns (non-double) Values.
        this one omits retry_timeout_millis because we expect these to requests to be less
        latency sensitive, so retry less aggressively
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInferenceCheck(self, request, context):
        """*
        Dedicated endpoint for non-production traffic that spot check a given model to retrieve an
        inference, accepts and returns (non-double) Values. This endpoint is heavily rate limited.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchEvaluateModels(self, request, context):
        """* Batch version of EvaluateModel 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EvaluateModel(self, request, context):
        """*
        Evaluate a given model.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExplainModel(self, request, context):
        """*
        High level interface to explain model decisions.
        Calculates the most important signals that affect model decision.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListModelSignals(self, request, context):
        """*
        List the signals required for a set of models.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListModels(self, request, context):
        """*
        List the models currently available for evaluation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelTypes(self, request, context):
        """*
        Display a list of available Model Types.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelArbiterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInference': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInference,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.SerializeToString,
            ),
            'GetInferenceSlow': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInferenceSlow,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.SerializeToString,
            ),
            'GetInferenceCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInferenceCheck,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.SerializeToString,
            ),
            'BatchEvaluateModels': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchEvaluateModels,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.BatchEvaluateModelRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.BatchEvaluateModelResponse.SerializeToString,
            ),
            'EvaluateModel': grpc.unary_unary_rpc_method_handler(
                    servicer.EvaluateModel,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.EvaluateModelRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.EvaluateModelResponse.SerializeToString,
            ),
            'ExplainModel': grpc.unary_unary_rpc_method_handler(
                    servicer.ExplainModel,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.ExplainModelRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.ExplainModelResponse.SerializeToString,
            ),
            'ListModelSignals': grpc.unary_unary_rpc_method_handler(
                    servicer.ListModelSignals,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelSignalsRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelSignalsResponse.SerializeToString,
            ),
            'ListModels': grpc.unary_unary_rpc_method_handler(
                    servicer.ListModels,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelsRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.ListModelsResponse.SerializeToString,
            ),
            'GetModelTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelTypes,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GetModelTypesRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.GetModelTypesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.modelarbiter.api.ModelArbiterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ModelArbiterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetInference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/GetInference',
            squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInferenceSlow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/GetInferenceSlow',
            squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInferenceCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/GetInferenceCheck',
            squareup_dot_modelarbiter_dot_service__pb2.GetInferenceRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.GetInferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchEvaluateModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/BatchEvaluateModels',
            squareup_dot_modelarbiter_dot_service__pb2.BatchEvaluateModelRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.BatchEvaluateModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EvaluateModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/EvaluateModel',
            squareup_dot_modelarbiter_dot_service__pb2.EvaluateModelRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.EvaluateModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExplainModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/ExplainModel',
            squareup_dot_modelarbiter_dot_service__pb2.ExplainModelRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.ExplainModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListModelSignals(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/ListModelSignals',
            squareup_dot_modelarbiter_dot_service__pb2.ListModelSignalsRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.ListModelSignalsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListModels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/ListModels',
            squareup_dot_modelarbiter_dot_service__pb2.ListModelsRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.ListModelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetModelTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterService/GetModelTypes',
            squareup_dot_modelarbiter_dot_service__pb2.GetModelTypesRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.GetModelTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ModelArbiterUploadServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadModelAndInsertSetting = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/UploadModelAndInsertSetting',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelAndInsertSettingRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelAndInsertSettingResponse.FromString,
                )
        self.UploadModel = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/UploadModel',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelResponse.FromString,
                )
        self.InsertModelSetting = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/InsertModelSetting',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.InsertModelSettingRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.InsertModelSettingResponse.FromString,
                )
        self.DisableModelSetting = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/DisableModelSetting',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.DisableModelSettingRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.DisableModelSettingResponse.FromString,
                )
        self.GenerateGoldenScores = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/GenerateGoldenScores',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.GenerateGoldenScoresRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GenerateGoldenScoresResponse.FromString,
                )
        self.CreateGoldenScore = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/CreateGoldenScore',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.CreateGoldenScoreRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.CreateGoldenScoreResponse.FromString,
                )
        self.DisableGoldenScore = channel.unary_unary(
                '/squareup.modelarbiter.api.ModelArbiterUploadService/DisableGoldenScore',
                request_serializer=squareup_dot_modelarbiter_dot_service__pb2.DisableGoldenScoreRequest.SerializeToString,
                response_deserializer=squareup_dot_modelarbiter_dot_service__pb2.DisableGoldenScoreResponse.FromString,
                )


class ModelArbiterUploadServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadModelAndInsertSetting(self, request, context):
        """*
        Combines Upload Model with Insert Model Setting but does some prevalidation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadModel(self, request, context):
        """*
        Upload a Model to GCP.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertModelSetting(self, request, context):
        """*
        Insert Model Settings
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableModelSetting(self, request, context):
        """*
        Disable a particular model
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateGoldenScores(self, request, context):
        """*
        Generate & insert models' golden scores.
        Scores are generated using random signal values with fixed seed
        and fixed PseudoRandomGen algorithm for riskartbier parity
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGoldenScore(self, request, context):
        """*
        Create golden scores based on an explicit set of signal values.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisableGoldenScore(self, request, context):
        """*
        Disable golden score checking
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelArbiterUploadServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadModelAndInsertSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadModelAndInsertSetting,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelAndInsertSettingRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelAndInsertSettingResponse.SerializeToString,
            ),
            'UploadModel': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadModel,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.UploadModelResponse.SerializeToString,
            ),
            'InsertModelSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertModelSetting,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.InsertModelSettingRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.InsertModelSettingResponse.SerializeToString,
            ),
            'DisableModelSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableModelSetting,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.DisableModelSettingRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.DisableModelSettingResponse.SerializeToString,
            ),
            'GenerateGoldenScores': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateGoldenScores,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.GenerateGoldenScoresRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.GenerateGoldenScoresResponse.SerializeToString,
            ),
            'CreateGoldenScore': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGoldenScore,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.CreateGoldenScoreRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.CreateGoldenScoreResponse.SerializeToString,
            ),
            'DisableGoldenScore': grpc.unary_unary_rpc_method_handler(
                    servicer.DisableGoldenScore,
                    request_deserializer=squareup_dot_modelarbiter_dot_service__pb2.DisableGoldenScoreRequest.FromString,
                    response_serializer=squareup_dot_modelarbiter_dot_service__pb2.DisableGoldenScoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.modelarbiter.api.ModelArbiterUploadService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ModelArbiterUploadService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadModelAndInsertSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/UploadModelAndInsertSetting',
            squareup_dot_modelarbiter_dot_service__pb2.UploadModelAndInsertSettingRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.UploadModelAndInsertSettingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadModel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/UploadModel',
            squareup_dot_modelarbiter_dot_service__pb2.UploadModelRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.UploadModelResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertModelSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/InsertModelSetting',
            squareup_dot_modelarbiter_dot_service__pb2.InsertModelSettingRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.InsertModelSettingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableModelSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/DisableModelSetting',
            squareup_dot_modelarbiter_dot_service__pb2.DisableModelSettingRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.DisableModelSettingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateGoldenScores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/GenerateGoldenScores',
            squareup_dot_modelarbiter_dot_service__pb2.GenerateGoldenScoresRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.GenerateGoldenScoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateGoldenScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/CreateGoldenScore',
            squareup_dot_modelarbiter_dot_service__pb2.CreateGoldenScoreRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.CreateGoldenScoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisableGoldenScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.modelarbiter.api.ModelArbiterUploadService/DisableGoldenScore',
            squareup_dot_modelarbiter_dot_service__pb2.DisableGoldenScoreRequest.SerializeToString,
            squareup_dot_modelarbiter_dot_service__pb2.DisableGoldenScoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
