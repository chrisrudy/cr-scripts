# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.oauth.v1 import api_pb2 as squareup_dot_oauth_dot_v1_dot_api__pb2


class OAuthServiceStub(object):
    """*
    OAuthService provides a set of public endpoints for the OAuth flow.
    Note that currently these endpoints are not implemented via this service interface.
    Instead they are handled directly via the http Router module.
    See oauth/app/http/api/handler_*.go
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ObtainToken = channel.unary_unary(
                '/squareup.oauth.v1.OAuthService/ObtainToken',
                request_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.ObtainTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.ObtainTokenResponse.FromString,
                )
        self.RenewToken = channel.unary_unary(
                '/squareup.oauth.v1.OAuthService/RenewToken',
                request_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RenewTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RenewTokenResponse.FromString,
                )
        self.RevokeToken = channel.unary_unary(
                '/squareup.oauth.v1.OAuthService/RevokeToken',
                request_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RevokeTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RevokeTokenResponse.FromString,
                )
        self.Authorize = channel.unary_unary(
                '/squareup.oauth.v1.OAuthService/Authorize',
                request_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.AuthorizeRequest.SerializeToString,
                response_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.AuthorizeResponse.FromString,
                )
        self.CreateMobileAuthorizationCode = channel.unary_unary(
                '/squareup.oauth.v1.OAuthService/CreateMobileAuthorizationCode',
                request_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.CreateMobileAuthorizationCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.CreateMobileAuthorizationCodeResponse.FromString,
                )
        self.RedeemMobileAuthorizationCode = channel.unary_unary(
                '/squareup.oauth.v1.OAuthService/RedeemMobileAuthorizationCode',
                request_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RedeemMobileAuthorizationCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RedeemMobileAuthorizationCodeResponse.FromString,
                )


class OAuthServiceServicer(object):
    """*
    OAuthService provides a set of public endpoints for the OAuth flow.
    Note that currently these endpoints are not implemented via this service interface.
    Instead they are handled directly via the http Router module.
    See oauth/app/http/api/handler_*.go
    """

    def ObtainToken(self, request, context):
        """--
        @desc Returns an OAuth access token.

        The endpoint supports distinct methods of obtaining OAuth access tokens.
        Applications specify a method by adding the `grant_type` parameter
        in the request and also provide relevant information.

        __Note:__ Regardless of the method application specified,
        the endpoint always returns two items; an OAuth access token and
        a refresh token in the response.

        __OAuth tokens should only live on secure servers. Application clients
        should never interact directly with OAuth tokens__.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenewToken(self, request, context):
        """--
        @desc `RenewToken` is deprecated. For information about refreshing OAuth access tokens, see
        [Renew OAuth Token](https://developer.squareup.com/docs/oauth-api/cookbook/renew-oauth-tokens).


        Renews an OAuth access token before it expires.

        OAuth access tokens besides your application's personal access token expire after __30 days__.
        You can also renew expired tokens within __15 days__ of their expiration.
        You cannot renew an access token that has been expired for more than 15 days.
        Instead, the associated user must re-complete the OAuth flow from the beginning.

        __Important:__ The `Authorization` header for this endpoint must have the
        following format:

        ```
        Authorization: Client APPLICATION_SECRET
        ```

        Replace `APPLICATION_SECRET` with the application secret on the Credentials
        page in the [application dashboard](https://connect.squareup.com/apps).
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RevokeToken(self, request, context):
        """--
        @desc Revokes an access token generated with the OAuth flow.

        If an account has more than one OAuth access token for your application, this
        endpoint revokes all of them, regardless of which token you specify. When an
        OAuth access token is revoked, all of the active subscriptions associated
        with that OAuth token are canceled immediately.

        __Important:__ The `Authorization` header for this endpoint must have the
        following format:

        ```
        Authorization: Client APPLICATION_SECRET
        ```

        Replace `APPLICATION_SECRET` with the application secret on the Credentials
        page in the [Developer Dashboard](https://developer.squareup.com/apps).
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authorize(self, request, context):
        """--
        @desc Presents a Permission Request form that returns an access
        code to be exchanged during the OAuth flow for a valid OAuth access token.
        To send users to the Permission Request form and start the OAuth flow,
        configure a link with the desired permissions that directs users to the
        OAuth Authorization endpoint.

        In the event of an error, Authorize returns an error response
        (`error` and `error_description`). If the failure is a result of the user
        denying the request, the value is `access_denied` with a description of
        `user_denied`.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateMobileAuthorizationCode(self, request, context):
        """--
        @desc Generates code to authorize a mobile application to connect to a Square card reader

        Authorization codes are one-time-use and expire __60 minutes__ after being issued.

        __Important:__ The `Authorization` header you provide to this endpoint must have the following format:

        ```
        Authorization: Bearer ACCESS_TOKEN
        ```

        Replace `ACCESS_TOKEN` with a
        [valid production authorization credential](/docs/build-basics/access-tokens).
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedeemMobileAuthorizationCode(self, request, context):
        """--
        PRIVATE ENDPOINT
        Redeems MobileAuthorizationCode for a Multipass session if the authorization code is not expired.
        --
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OAuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ObtainToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ObtainToken,
                    request_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.ObtainTokenRequest.FromString,
                    response_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.ObtainTokenResponse.SerializeToString,
            ),
            'RenewToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RenewToken,
                    request_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RenewTokenRequest.FromString,
                    response_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RenewTokenResponse.SerializeToString,
            ),
            'RevokeToken': grpc.unary_unary_rpc_method_handler(
                    servicer.RevokeToken,
                    request_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RevokeTokenRequest.FromString,
                    response_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RevokeTokenResponse.SerializeToString,
            ),
            'Authorize': grpc.unary_unary_rpc_method_handler(
                    servicer.Authorize,
                    request_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.AuthorizeRequest.FromString,
                    response_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.AuthorizeResponse.SerializeToString,
            ),
            'CreateMobileAuthorizationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateMobileAuthorizationCode,
                    request_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.CreateMobileAuthorizationCodeRequest.FromString,
                    response_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.CreateMobileAuthorizationCodeResponse.SerializeToString,
            ),
            'RedeemMobileAuthorizationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.RedeemMobileAuthorizationCode,
                    request_deserializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RedeemMobileAuthorizationCodeRequest.FromString,
                    response_serializer=squareup_dot_oauth_dot_v1_dot_api__pb2.RedeemMobileAuthorizationCodeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.oauth.v1.OAuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OAuthService(object):
    """*
    OAuthService provides a set of public endpoints for the OAuth flow.
    Note that currently these endpoints are not implemented via this service interface.
    Instead they are handled directly via the http Router module.
    See oauth/app/http/api/handler_*.go
    """

    @staticmethod
    def ObtainToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.oauth.v1.OAuthService/ObtainToken',
            squareup_dot_oauth_dot_v1_dot_api__pb2.ObtainTokenRequest.SerializeToString,
            squareup_dot_oauth_dot_v1_dot_api__pb2.ObtainTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenewToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.oauth.v1.OAuthService/RenewToken',
            squareup_dot_oauth_dot_v1_dot_api__pb2.RenewTokenRequest.SerializeToString,
            squareup_dot_oauth_dot_v1_dot_api__pb2.RenewTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RevokeToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.oauth.v1.OAuthService/RevokeToken',
            squareup_dot_oauth_dot_v1_dot_api__pb2.RevokeTokenRequest.SerializeToString,
            squareup_dot_oauth_dot_v1_dot_api__pb2.RevokeTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authorize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.oauth.v1.OAuthService/Authorize',
            squareup_dot_oauth_dot_v1_dot_api__pb2.AuthorizeRequest.SerializeToString,
            squareup_dot_oauth_dot_v1_dot_api__pb2.AuthorizeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateMobileAuthorizationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.oauth.v1.OAuthService/CreateMobileAuthorizationCode',
            squareup_dot_oauth_dot_v1_dot_api__pb2.CreateMobileAuthorizationCodeRequest.SerializeToString,
            squareup_dot_oauth_dot_v1_dot_api__pb2.CreateMobileAuthorizationCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedeemMobileAuthorizationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.oauth.v1.OAuthService/RedeemMobileAuthorizationCode',
            squareup_dot_oauth_dot_v1_dot_api__pb2.RedeemMobileAuthorizationCodeRequest.SerializeToString,
            squareup_dot_oauth_dot_v1_dot_api__pb2.RedeemMobileAuthorizationCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
