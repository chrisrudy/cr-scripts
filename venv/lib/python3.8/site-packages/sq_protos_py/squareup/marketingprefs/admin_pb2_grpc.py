# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.marketingprefs import admin_pb2 as squareup_dot_marketingprefs_dot_admin__pb2


class MarketingPrefsAdminServiceStub(object):
    """////////////////////////////////////

    SERVICE DEFINITION

    ////////////////////////////////////

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRecipientData = channel.unary_unary(
                '/squareup.marketingprefs.MarketingPrefsAdminService/GetRecipientData',
                request_serializer=squareup_dot_marketingprefs_dot_admin__pb2.GetRecipientDataRequest.SerializeToString,
                response_deserializer=squareup_dot_marketingprefs_dot_admin__pb2.GetRecipientDataResponse.FromString,
                )
        self.GetFeedEntry = channel.unary_unary(
                '/squareup.marketingprefs.MarketingPrefsAdminService/GetFeedEntry',
                request_serializer=squareup_dot_marketingprefs_dot_admin__pb2.GetFeedEntryRequest.SerializeToString,
                response_deserializer=squareup_dot_marketingprefs_dot_admin__pb2.GetFeedEntryResponse.FromString,
                )


class MarketingPrefsAdminServiceServicer(object):
    """////////////////////////////////////

    SERVICE DEFINITION

    ////////////////////////////////////

    """

    def GetRecipientData(self, request, context):
        """*
        FindOrCreates a MarketingPreference and returns it
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeedEntry(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MarketingPrefsAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRecipientData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecipientData,
                    request_deserializer=squareup_dot_marketingprefs_dot_admin__pb2.GetRecipientDataRequest.FromString,
                    response_serializer=squareup_dot_marketingprefs_dot_admin__pb2.GetRecipientDataResponse.SerializeToString,
            ),
            'GetFeedEntry': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeedEntry,
                    request_deserializer=squareup_dot_marketingprefs_dot_admin__pb2.GetFeedEntryRequest.FromString,
                    response_serializer=squareup_dot_marketingprefs_dot_admin__pb2.GetFeedEntryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.marketingprefs.MarketingPrefsAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MarketingPrefsAdminService(object):
    """////////////////////////////////////

    SERVICE DEFINITION

    ////////////////////////////////////

    """

    @staticmethod
    def GetRecipientData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.marketingprefs.MarketingPrefsAdminService/GetRecipientData',
            squareup_dot_marketingprefs_dot_admin__pb2.GetRecipientDataRequest.SerializeToString,
            squareup_dot_marketingprefs_dot_admin__pb2.GetRecipientDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFeedEntry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.marketingprefs.MarketingPrefsAdminService/GetFeedEntry',
            squareup_dot_marketingprefs_dot_admin__pb2.GetFeedEntryRequest.SerializeToString,
            squareup_dot_marketingprefs_dot_admin__pb2.GetFeedEntryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
