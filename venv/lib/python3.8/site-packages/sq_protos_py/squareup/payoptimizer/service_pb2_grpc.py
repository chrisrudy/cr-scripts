# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.payoptimizer import service_pb2 as squareup_dot_payoptimizer_dot_service__pb2


class CustomPricingEstimatorServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EstimateNewMerchantCost = channel.unary_unary(
                '/squareup.payoptimizer.service.CustomPricingEstimatorService/EstimateNewMerchantCost',
                request_serializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionRequest.SerializeToString,
                response_deserializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionResponse.FromString,
                )
        self.EstimateNewMerchantCostCombined = channel.unary_unary(
                '/squareup.payoptimizer.service.CustomPricingEstimatorService/EstimateNewMerchantCostCombined',
                request_serializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionRequest.SerializeToString,
                response_deserializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionResponseCombined.FromString,
                )


class CustomPricingEstimatorServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EstimateNewMerchantCost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EstimateNewMerchantCostCombined(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CustomPricingEstimatorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EstimateNewMerchantCost': grpc.unary_unary_rpc_method_handler(
                    servicer.EstimateNewMerchantCost,
                    request_deserializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionRequest.FromString,
                    response_serializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionResponse.SerializeToString,
            ),
            'EstimateNewMerchantCostCombined': grpc.unary_unary_rpc_method_handler(
                    servicer.EstimateNewMerchantCostCombined,
                    request_deserializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionRequest.FromString,
                    response_serializer=squareup_dot_payoptimizer_dot_service__pb2.CostPredictionResponseCombined.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payoptimizer.service.CustomPricingEstimatorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CustomPricingEstimatorService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EstimateNewMerchantCost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payoptimizer.service.CustomPricingEstimatorService/EstimateNewMerchantCost',
            squareup_dot_payoptimizer_dot_service__pb2.CostPredictionRequest.SerializeToString,
            squareup_dot_payoptimizer_dot_service__pb2.CostPredictionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EstimateNewMerchantCostCombined(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payoptimizer.service.CustomPricingEstimatorService/EstimateNewMerchantCostCombined',
            squareup_dot_payoptimizer_dot_service__pb2.CostPredictionRequest.SerializeToString,
            squareup_dot_payoptimizer_dot_service__pb2.CostPredictionResponseCombined.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PayOptimizerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChooseParameterValues = channel.unary_unary(
                '/squareup.payoptimizer.service.PayOptimizerService/ChooseParameterValues',
                request_serializer=squareup_dot_payoptimizer_dot_service__pb2.ChooseParameterValuesRequest.SerializeToString,
                response_deserializer=squareup_dot_payoptimizer_dot_service__pb2.ChooseParameterValuesResponse.FromString,
                )


class PayOptimizerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChooseParameterValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PayOptimizerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChooseParameterValues': grpc.unary_unary_rpc_method_handler(
                    servicer.ChooseParameterValues,
                    request_deserializer=squareup_dot_payoptimizer_dot_service__pb2.ChooseParameterValuesRequest.FromString,
                    response_serializer=squareup_dot_payoptimizer_dot_service__pb2.ChooseParameterValuesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.payoptimizer.service.PayOptimizerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PayOptimizerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChooseParameterValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.payoptimizer.service.PayOptimizerService/ChooseParameterValues',
            squareup_dot_payoptimizer_dot_service__pb2.ChooseParameterValuesRequest.SerializeToString,
            squareup_dot_payoptimizer_dot_service__pb2.ChooseParameterValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
