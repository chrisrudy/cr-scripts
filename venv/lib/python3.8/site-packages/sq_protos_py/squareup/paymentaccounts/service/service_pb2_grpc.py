# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.paymentaccounts import paymentaccounts_pb2 as squareup_dot_paymentaccounts_dot_paymentaccounts__pb2


class PaymentAccountsServiceStub(object):
    """* Manages payment accounts 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPaymentAccounts = channel.unary_unary(
                '/squareup.paymentaccounts.service.PaymentAccountsService/ListPaymentAccounts',
                request_serializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.ListPaymentAccountsRequest.SerializeToString,
                response_deserializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.ListPaymentAccountsResponse.FromString,
                )
        self.VerifyPaymentAccount = channel.unary_unary(
                '/squareup.paymentaccounts.service.PaymentAccountsService/VerifyPaymentAccount',
                request_serializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.VerifyPaymentAccountRequest.SerializeToString,
                response_deserializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.VerifyPaymentAccountResponse.FromString,
                )


class PaymentAccountsServiceServicer(object):
    """* Manages payment accounts 
    """

    def ListPaymentAccounts(self, request, context):
        """* Lists payment sources associated with a given user and device 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyPaymentAccount(self, request, context):
        """* Verifies a payment source for use on a given device 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PaymentAccountsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPaymentAccounts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPaymentAccounts,
                    request_deserializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.ListPaymentAccountsRequest.FromString,
                    response_serializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.ListPaymentAccountsResponse.SerializeToString,
            ),
            'VerifyPaymentAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyPaymentAccount,
                    request_deserializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.VerifyPaymentAccountRequest.FromString,
                    response_serializer=squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.VerifyPaymentAccountResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.paymentaccounts.service.PaymentAccountsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PaymentAccountsService(object):
    """* Manages payment accounts 
    """

    @staticmethod
    def ListPaymentAccounts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paymentaccounts.service.PaymentAccountsService/ListPaymentAccounts',
            squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.ListPaymentAccountsRequest.SerializeToString,
            squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.ListPaymentAccountsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VerifyPaymentAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.paymentaccounts.service.PaymentAccountsService/VerifyPaymentAccount',
            squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.VerifyPaymentAccountRequest.SerializeToString,
            squareup_dot_paymentaccounts_dot_paymentaccounts__pb2.VerifyPaymentAccountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
