# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.connectedusers import service_pb2 as squareup_dot_connectedusers_dot_service__pb2


class ConnectedUsersServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConnectedNodes = channel.unary_unary(
                '/squareup.connectedusers.service.ConnectedUsersService/GetConnectedNodes',
                request_serializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.SerializeToString,
                response_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.FromString,
                )
        self.GetConnectedBuyerNodes = channel.unary_unary(
                '/squareup.connectedusers.service.ConnectedUsersService/GetConnectedBuyerNodes',
                request_serializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.SerializeToString,
                response_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.FromString,
                )
        self.GetNodeLabels = channel.unary_unary(
                '/squareup.connectedusers.service.ConnectedUsersService/GetNodeLabels',
                request_serializer=squareup_dot_connectedusers_dot_service__pb2.GetNodeLabelsRequest.SerializeToString,
                response_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetNodeLabelsResponse.FromString,
                )
        self.RecordEdges = channel.unary_unary(
                '/squareup.connectedusers.service.ConnectedUsersService/RecordEdges',
                request_serializer=squareup_dot_connectedusers_dot_service__pb2.RecordEdgesRequest.SerializeToString,
                response_deserializer=squareup_dot_connectedusers_dot_service__pb2.RecordEdgesResponse.FromString,
                )
        self.RecordLabels = channel.unary_unary(
                '/squareup.connectedusers.service.ConnectedUsersService/RecordLabels',
                request_serializer=squareup_dot_connectedusers_dot_service__pb2.RecordLabelsRequest.SerializeToString,
                response_deserializer=squareup_dot_connectedusers_dot_service__pb2.RecordLabelsResponse.FromString,
                )
        self.KgServiceTesting = channel.unary_unary(
                '/squareup.connectedusers.service.ConnectedUsersService/KgServiceTesting',
                request_serializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.SerializeToString,
                response_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.FromString,
                )


class ConnectedUsersServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetConnectedNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConnectedBuyerNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordEdges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordLabels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KgServiceTesting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectedUsersServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConnectedNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectedNodes,
                    request_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.FromString,
                    response_serializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.SerializeToString,
            ),
            'GetConnectedBuyerNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConnectedBuyerNodes,
                    request_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.FromString,
                    response_serializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.SerializeToString,
            ),
            'GetNodeLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeLabels,
                    request_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetNodeLabelsRequest.FromString,
                    response_serializer=squareup_dot_connectedusers_dot_service__pb2.GetNodeLabelsResponse.SerializeToString,
            ),
            'RecordEdges': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordEdges,
                    request_deserializer=squareup_dot_connectedusers_dot_service__pb2.RecordEdgesRequest.FromString,
                    response_serializer=squareup_dot_connectedusers_dot_service__pb2.RecordEdgesResponse.SerializeToString,
            ),
            'RecordLabels': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordLabels,
                    request_deserializer=squareup_dot_connectedusers_dot_service__pb2.RecordLabelsRequest.FromString,
                    response_serializer=squareup_dot_connectedusers_dot_service__pb2.RecordLabelsResponse.SerializeToString,
            ),
            'KgServiceTesting': grpc.unary_unary_rpc_method_handler(
                    servicer.KgServiceTesting,
                    request_deserializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.FromString,
                    response_serializer=squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.connectedusers.service.ConnectedUsersService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ConnectedUsersService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetConnectedNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connectedusers.service.ConnectedUsersService/GetConnectedNodes',
            squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.SerializeToString,
            squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConnectedBuyerNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connectedusers.service.ConnectedUsersService/GetConnectedBuyerNodes',
            squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.SerializeToString,
            squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connectedusers.service.ConnectedUsersService/GetNodeLabels',
            squareup_dot_connectedusers_dot_service__pb2.GetNodeLabelsRequest.SerializeToString,
            squareup_dot_connectedusers_dot_service__pb2.GetNodeLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordEdges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connectedusers.service.ConnectedUsersService/RecordEdges',
            squareup_dot_connectedusers_dot_service__pb2.RecordEdgesRequest.SerializeToString,
            squareup_dot_connectedusers_dot_service__pb2.RecordEdgesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordLabels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connectedusers.service.ConnectedUsersService/RecordLabels',
            squareup_dot_connectedusers_dot_service__pb2.RecordLabelsRequest.SerializeToString,
            squareup_dot_connectedusers_dot_service__pb2.RecordLabelsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KgServiceTesting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.connectedusers.service.ConnectedUsersService/KgServiceTesting',
            squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesRequest.SerializeToString,
            squareup_dot_connectedusers_dot_service__pb2.GetConnectedNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
