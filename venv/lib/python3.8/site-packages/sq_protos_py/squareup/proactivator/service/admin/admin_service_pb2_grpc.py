# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.proactivator.service.admin import admin_service_pb2 as squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2


class ProactivatorAdminServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SimulatePayment = channel.unary_unary(
                '/squareup.proactivator.service.admin.ProactivatorAdminService/SimulatePayment',
                request_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.SimulatePaymentRequest.SerializeToString,
                response_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.SimulatePaymentResponse.FromString,
                )
        self.GetProvisionalStatus = channel.unary_unary(
                '/squareup.proactivator.service.admin.ProactivatorAdminService/GetProvisionalStatus',
                request_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.GetProvisionalStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.GetProvisionalStatusResponse.FromString,
                )
        self.ForceExpiration = channel.unary_unary(
                '/squareup.proactivator.service.admin.ProactivatorAdminService/ForceExpiration',
                request_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.ForceExpirationRequest.SerializeToString,
                response_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.ForceExpirationResponse.FromString,
                )
        self.RefundPayments = channel.unary_unary(
                '/squareup.proactivator.service.admin.ProactivatorAdminService/RefundPayments',
                request_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.RefundPaymentsRequest.SerializeToString,
                response_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.RefundPaymentsResponse.FromString,
                )


class ProactivatorAdminServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SimulatePayment(self, request, context):
        """Simulate a payment event 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProvisionalStatus(self, request, context):
        """Read information on the provisional status for a given Legal Entity. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForceExpiration(self, request, context):
        """Force Expiration of a provisional activation for a given Legal Entity 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefundPayments(self, request, context):
        """
        Trigger the refund-all-payments flow for a terminated provisional activation.

        Will only execute the refunds if all of the following conditions are met:
        - provisional activation record is marked as terminated
        - refunds have not been previously issued
        - the Legal Entity's verification status is either UNVERIFIED or SUSPENDED
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProactivatorAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SimulatePayment': grpc.unary_unary_rpc_method_handler(
                    servicer.SimulatePayment,
                    request_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.SimulatePaymentRequest.FromString,
                    response_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.SimulatePaymentResponse.SerializeToString,
            ),
            'GetProvisionalStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProvisionalStatus,
                    request_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.GetProvisionalStatusRequest.FromString,
                    response_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.GetProvisionalStatusResponse.SerializeToString,
            ),
            'ForceExpiration': grpc.unary_unary_rpc_method_handler(
                    servicer.ForceExpiration,
                    request_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.ForceExpirationRequest.FromString,
                    response_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.ForceExpirationResponse.SerializeToString,
            ),
            'RefundPayments': grpc.unary_unary_rpc_method_handler(
                    servicer.RefundPayments,
                    request_deserializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.RefundPaymentsRequest.FromString,
                    response_serializer=squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.RefundPaymentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.proactivator.service.admin.ProactivatorAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProactivatorAdminService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SimulatePayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.proactivator.service.admin.ProactivatorAdminService/SimulatePayment',
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.SimulatePaymentRequest.SerializeToString,
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.SimulatePaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProvisionalStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.proactivator.service.admin.ProactivatorAdminService/GetProvisionalStatus',
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.GetProvisionalStatusRequest.SerializeToString,
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.GetProvisionalStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForceExpiration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.proactivator.service.admin.ProactivatorAdminService/ForceExpiration',
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.ForceExpirationRequest.SerializeToString,
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.ForceExpirationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefundPayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.proactivator.service.admin.ProactivatorAdminService/RefundPayments',
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.RefundPaymentsRequest.SerializeToString,
            squareup_dot_proactivator_dot_service_dot_admin_dot_admin__service__pb2.RefundPaymentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
