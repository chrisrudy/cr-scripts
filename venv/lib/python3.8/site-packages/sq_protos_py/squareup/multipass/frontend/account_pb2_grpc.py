# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.multipass.frontend import account_pb2 as squareup_dot_multipass_dot_frontend_dot_account__pb2


class AccountServiceStub(object):
    """------------- SERVICES ------------- //

    * This interface is used by the MultipassFE account web client. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAccountInformation = channel.unary_unary(
                '/squareup.multipass.frontend.AccountService/GetAccountInformation',
                request_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetAccountInformationRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetAccountInformationResponse.FromString,
                )
        self.GetMerchantSelectorInformation = channel.unary_unary(
                '/squareup.multipass.frontend.AccountService/GetMerchantSelectorInformation',
                request_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetMerchantSelectorInformationRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetMerchantSelectorInformationResponse.FromString,
                )
        self.SetAccountInformation = channel.unary_unary(
                '/squareup.multipass.frontend.AccountService/SetAccountInformation',
                request_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.SetAccountInformationRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.SetAccountInformationResponse.FromString,
                )
        self.ChangeEmail = channel.unary_unary(
                '/squareup.multipass.frontend.AccountService/ChangeEmail',
                request_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.ChangeEmailRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.ChangeEmailResponse.FromString,
                )


class AccountServiceServicer(object):
    """------------- SERVICES ------------- //

    * This interface is used by the MultipassFE account web client. 
    """

    def GetAccountInformation(self, request, context):
        """* Get an person's account information. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMerchantSelectorInformation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAccountInformation(self, request, context):
        """* Set an person's account information. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeEmail(self, request, context):
        """* Confirm verification code to complete the change email process 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AccountServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAccountInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccountInformation,
                    request_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetAccountInformationRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetAccountInformationResponse.SerializeToString,
            ),
            'GetMerchantSelectorInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMerchantSelectorInformation,
                    request_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetMerchantSelectorInformationRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.GetMerchantSelectorInformationResponse.SerializeToString,
            ),
            'SetAccountInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAccountInformation,
                    request_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.SetAccountInformationRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.SetAccountInformationResponse.SerializeToString,
            ),
            'ChangeEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeEmail,
                    request_deserializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.ChangeEmailRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_frontend_dot_account__pb2.ChangeEmailResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.multipass.frontend.AccountService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AccountService(object):
    """------------- SERVICES ------------- //

    * This interface is used by the MultipassFE account web client. 
    """

    @staticmethod
    def GetAccountInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.frontend.AccountService/GetAccountInformation',
            squareup_dot_multipass_dot_frontend_dot_account__pb2.GetAccountInformationRequest.SerializeToString,
            squareup_dot_multipass_dot_frontend_dot_account__pb2.GetAccountInformationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMerchantSelectorInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.frontend.AccountService/GetMerchantSelectorInformation',
            squareup_dot_multipass_dot_frontend_dot_account__pb2.GetMerchantSelectorInformationRequest.SerializeToString,
            squareup_dot_multipass_dot_frontend_dot_account__pb2.GetMerchantSelectorInformationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAccountInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.frontend.AccountService/SetAccountInformation',
            squareup_dot_multipass_dot_frontend_dot_account__pb2.SetAccountInformationRequest.SerializeToString,
            squareup_dot_multipass_dot_frontend_dot_account__pb2.SetAccountInformationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.frontend.AccountService/ChangeEmail',
            squareup_dot_multipass_dot_frontend_dot_account__pb2.ChangeEmailRequest.SerializeToString,
            squareup_dot_multipass_dot_frontend_dot_account__pb2.ChangeEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
