# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.multipass import encryption_pb2 as squareup_dot_multipass_dot_encryption__pb2
from sq_protos_py.squareup.multipass import external_pb2 as squareup_dot_multipass_dot_external__pb2
from sq_protos_py.squareup.multipass.service import service_pb2 as squareup_dot_multipass_dot_service_dot_service__pb2


class MultipassExternalServiceStub(object):
    """------------- SERVICES ------------- //

    * This interface is used by front-ends that deal directly with client devices. 
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChangePassword = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ChangePassword',
                request_serializer=squareup_dot_multipass_dot_external__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.ChangePasswordResponse.FromString,
                )
        self.LinkAlias = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/LinkAlias',
                request_serializer=squareup_dot_multipass_dot_external__pb2.LinkAliasRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.LinkAliasResponse.FromString,
                )
        self.RemoveTwoFactor = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/RemoveTwoFactor',
                request_serializer=squareup_dot_multipass_dot_external__pb2.RemoveTwoFactorRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.RemoveTwoFactorResponse.FromString,
                )
        self.SendVerificationCode = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/SendVerificationCode',
                request_serializer=squareup_dot_multipass_dot_external__pb2.VerificationCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.VerificationCodeResponse.FromString,
                )
        self.ClaimAccountSetPassword = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ClaimAccountSetPassword',
                request_serializer=squareup_dot_multipass_dot_external__pb2.SetPasswordRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.SetPasswordResponse.FromString,
                )
        self.CreateOtk = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/CreateOtk',
                request_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateOtkRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateOtkResponse.FromString,
                )
        self.DecryptEmail = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/DecryptEmail',
                request_serializer=squareup_dot_multipass_dot_encryption__pb2.DecryptEmailRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_encryption__pb2.DecryptEmailResponse.FromString,
                )
        self.EnrollTwoFactor = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/EnrollTwoFactor',
                request_serializer=squareup_dot_multipass_dot_external__pb2.EnrollTwoFactorRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.EnrollTwoFactorResponse.FromString,
                )
        self.ListTwoFactor = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ListTwoFactor',
                request_serializer=squareup_dot_multipass_dot_external__pb2.ListTwoFactorRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.ListTwoFactorResponse.FromString,
                )
        self.UpgradeSessionTwoFactor = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/UpgradeSessionTwoFactor',
                request_serializer=squareup_dot_multipass_dot_external__pb2.UpgradeSessionTwoFactorRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.UpgradeSessionTwoFactorResponse.FromString,
                )
        self.ResetPasswordSendCode = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ResetPasswordSendCode',
                request_serializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordSendCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordSendCodeResponse.FromString,
                )
        self.ResetPasswordVerifyCode = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ResetPasswordVerifyCode',
                request_serializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordVerifyCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordVerifyCodeResponse.FromString,
                )
        self.ResetPasswordChangePassword = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ResetPasswordChangePassword',
                request_serializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordChangePasswordRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordChangePasswordResponse.FromString,
                )
        self.ClaimAccountSendCode = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ClaimAccountSendCode',
                request_serializer=squareup_dot_multipass_dot_external__pb2.ClaimAccountSendCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_external__pb2.ClaimAccountSendCodeResponse.FromString,
                )
        self.ExternalDeleteTwoFactorDetails = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/ExternalDeleteTwoFactorDetails',
                request_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.DeleteTwoFactorDetailsRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.DeleteTwoFactorDetailsResponse.FromString,
                )
        self.CheckPassword = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/CheckPassword',
                request_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.CheckPasswordRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.CheckPasswordResponse.FromString,
                )
        self.RedeemAuthorizationCode = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/RedeemAuthorizationCode',
                request_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.RedeemAuthorizationCodeRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.RedeemAuthorizationCodeResponse.FromString,
                )
        self.CreateIdentityTokenFromSession = channel.unary_unary(
                '/squareup.multipass.external.MultipassExternalService/CreateIdentityTokenFromSession',
                request_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateIdentityTokenFromSessionRequest.SerializeToString,
                response_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateIdentityTokenFromSessionResponse.FromString,
                )


class MultipassExternalServiceServicer(object):
    """------------- SERVICES ------------- //

    * This interface is used by front-ends that deal directly with client devices. 
    """

    def ChangePassword(self, request, context):
        """e.g. https://api.squareup.com/services/squareup.multipass.external.MultipassExternalService/ChangePassword

        * Changes the logged-in user's password if the old password is correct. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkAlias(self, request, context):
        """* Links a new alias to the currently logged in user. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTwoFactor(self, request, context):
        """*
        Remove a 2FA method from the currently logged in user.  Note that since this is idempotent,
        deleting a method not linked to the account returns success.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendVerificationCode(self, request, context):
        """* Create a new verification code and send the code to the requested contact. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimAccountSetPassword(self, request, context):
        """* Set password if the verification code is correct. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOtk(self, request, context):
        """* Create an OTK for an existing session. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecryptEmail(self, request, context):
        """*
        Decrypts a string from encrypted email in the request. Intended for use by clients that want
        to decrypt encrypted email from 3rd party. For invalid input that cannot be decrypted,
        returns nothing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EnrollTwoFactor(self, request, context):
        """*
        Add a 2FA method for the current person.

        Enrollment will usually require multiple calls, passing data back and forth between client
        and server until an RPC returns an error or complete=true.  The data parameters required for
        the first call, what should be done with server-provided values, and which ones need to be
        passed back to the next step will be documented for each type.

        For SMS, the first call must supply phone, which will cause a verification code to be sent.
        The second call must have both phone and verification_code set, and will complete successfully
        if the supplied code matches.

        EnrollTwoFactor requires a 2FA-provided timestamp in the past 5 minutes if there are any
        enrolled 2FA methods on the person's account.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTwoFactor(self, request, context):
        """* List the 2FA methods for the current person. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpgradeSessionTwoFactor(self, request, context):
        """* Upgrade the current session to a 2FA-protected session. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPasswordSendCode(self, request, context):
        """* Send verification code to start the password reset process 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPasswordVerifyCode(self, request, context):
        """* Verify password reset code and lookup security question 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetPasswordChangePassword(self, request, context):
        """* Reset password if the verification code and security answer are correct. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClaimAccountSendCode(self, request, context):
        """* Send code to start the claim account process (similar te ResetPasswordSendCode) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExternalDeleteTwoFactorDetails(self, request, context):
        """* Delete the specified person's TwoFactorDetails from the staging Multipass database. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckPassword(self, request, context):
        """* A request to check if the logged in user's password is correct 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RedeemAuthorizationCode(self, request, context):
        """* Redeem an authorization code for the OpenID flow and get information about a Person. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateIdentityTokenFromSession(self, request, context):
        """* Return an identity (Paseto) token from a valid session ID. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MultipassExternalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.ChangePasswordRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.ChangePasswordResponse.SerializeToString,
            ),
            'LinkAlias': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkAlias,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.LinkAliasRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.LinkAliasResponse.SerializeToString,
            ),
            'RemoveTwoFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTwoFactor,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.RemoveTwoFactorRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.RemoveTwoFactorResponse.SerializeToString,
            ),
            'SendVerificationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.SendVerificationCode,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.VerificationCodeRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.VerificationCodeResponse.SerializeToString,
            ),
            'ClaimAccountSetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimAccountSetPassword,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.SetPasswordRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.SetPasswordResponse.SerializeToString,
            ),
            'CreateOtk': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOtk,
                    request_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateOtkRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateOtkResponse.SerializeToString,
            ),
            'DecryptEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.DecryptEmail,
                    request_deserializer=squareup_dot_multipass_dot_encryption__pb2.DecryptEmailRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_encryption__pb2.DecryptEmailResponse.SerializeToString,
            ),
            'EnrollTwoFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.EnrollTwoFactor,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.EnrollTwoFactorRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.EnrollTwoFactorResponse.SerializeToString,
            ),
            'ListTwoFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTwoFactor,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.ListTwoFactorRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.ListTwoFactorResponse.SerializeToString,
            ),
            'UpgradeSessionTwoFactor': grpc.unary_unary_rpc_method_handler(
                    servicer.UpgradeSessionTwoFactor,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.UpgradeSessionTwoFactorRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.UpgradeSessionTwoFactorResponse.SerializeToString,
            ),
            'ResetPasswordSendCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPasswordSendCode,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordSendCodeRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordSendCodeResponse.SerializeToString,
            ),
            'ResetPasswordVerifyCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPasswordVerifyCode,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordVerifyCodeRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordVerifyCodeResponse.SerializeToString,
            ),
            'ResetPasswordChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetPasswordChangePassword,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordChangePasswordRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.ResetPasswordChangePasswordResponse.SerializeToString,
            ),
            'ClaimAccountSendCode': grpc.unary_unary_rpc_method_handler(
                    servicer.ClaimAccountSendCode,
                    request_deserializer=squareup_dot_multipass_dot_external__pb2.ClaimAccountSendCodeRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_external__pb2.ClaimAccountSendCodeResponse.SerializeToString,
            ),
            'ExternalDeleteTwoFactorDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.ExternalDeleteTwoFactorDetails,
                    request_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.DeleteTwoFactorDetailsRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.DeleteTwoFactorDetailsResponse.SerializeToString,
            ),
            'CheckPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckPassword,
                    request_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.CheckPasswordRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.CheckPasswordResponse.SerializeToString,
            ),
            'RedeemAuthorizationCode': grpc.unary_unary_rpc_method_handler(
                    servicer.RedeemAuthorizationCode,
                    request_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.RedeemAuthorizationCodeRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.RedeemAuthorizationCodeResponse.SerializeToString,
            ),
            'CreateIdentityTokenFromSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIdentityTokenFromSession,
                    request_deserializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateIdentityTokenFromSessionRequest.FromString,
                    response_serializer=squareup_dot_multipass_dot_service_dot_service__pb2.CreateIdentityTokenFromSessionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.multipass.external.MultipassExternalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MultipassExternalService(object):
    """------------- SERVICES ------------- //

    * This interface is used by front-ends that deal directly with client devices. 
    """

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ChangePassword',
            squareup_dot_multipass_dot_external__pb2.ChangePasswordRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.ChangePasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkAlias(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/LinkAlias',
            squareup_dot_multipass_dot_external__pb2.LinkAliasRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.LinkAliasResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveTwoFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/RemoveTwoFactor',
            squareup_dot_multipass_dot_external__pb2.RemoveTwoFactorRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.RemoveTwoFactorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendVerificationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/SendVerificationCode',
            squareup_dot_multipass_dot_external__pb2.VerificationCodeRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.VerificationCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimAccountSetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ClaimAccountSetPassword',
            squareup_dot_multipass_dot_external__pb2.SetPasswordRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.SetPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOtk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/CreateOtk',
            squareup_dot_multipass_dot_service_dot_service__pb2.CreateOtkRequest.SerializeToString,
            squareup_dot_multipass_dot_service_dot_service__pb2.CreateOtkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecryptEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/DecryptEmail',
            squareup_dot_multipass_dot_encryption__pb2.DecryptEmailRequest.SerializeToString,
            squareup_dot_multipass_dot_encryption__pb2.DecryptEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EnrollTwoFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/EnrollTwoFactor',
            squareup_dot_multipass_dot_external__pb2.EnrollTwoFactorRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.EnrollTwoFactorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTwoFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ListTwoFactor',
            squareup_dot_multipass_dot_external__pb2.ListTwoFactorRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.ListTwoFactorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpgradeSessionTwoFactor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/UpgradeSessionTwoFactor',
            squareup_dot_multipass_dot_external__pb2.UpgradeSessionTwoFactorRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.UpgradeSessionTwoFactorResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPasswordSendCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ResetPasswordSendCode',
            squareup_dot_multipass_dot_external__pb2.ResetPasswordSendCodeRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.ResetPasswordSendCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPasswordVerifyCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ResetPasswordVerifyCode',
            squareup_dot_multipass_dot_external__pb2.ResetPasswordVerifyCodeRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.ResetPasswordVerifyCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetPasswordChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ResetPasswordChangePassword',
            squareup_dot_multipass_dot_external__pb2.ResetPasswordChangePasswordRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.ResetPasswordChangePasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClaimAccountSendCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ClaimAccountSendCode',
            squareup_dot_multipass_dot_external__pb2.ClaimAccountSendCodeRequest.SerializeToString,
            squareup_dot_multipass_dot_external__pb2.ClaimAccountSendCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExternalDeleteTwoFactorDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/ExternalDeleteTwoFactorDetails',
            squareup_dot_multipass_dot_service_dot_service__pb2.DeleteTwoFactorDetailsRequest.SerializeToString,
            squareup_dot_multipass_dot_service_dot_service__pb2.DeleteTwoFactorDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/CheckPassword',
            squareup_dot_multipass_dot_service_dot_service__pb2.CheckPasswordRequest.SerializeToString,
            squareup_dot_multipass_dot_service_dot_service__pb2.CheckPasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RedeemAuthorizationCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/RedeemAuthorizationCode',
            squareup_dot_multipass_dot_service_dot_service__pb2.RedeemAuthorizationCodeRequest.SerializeToString,
            squareup_dot_multipass_dot_service_dot_service__pb2.RedeemAuthorizationCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateIdentityTokenFromSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.multipass.external.MultipassExternalService/CreateIdentityTokenFromSession',
            squareup_dot_multipass_dot_service_dot_service__pb2.CreateIdentityTokenFromSessionRequest.SerializeToString,
            squareup_dot_multipass_dot_service_dot_service__pb2.CreateIdentityTokenFromSessionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
