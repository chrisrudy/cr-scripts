# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.sub2 import subscription_service_pb2 as squareup_dot_sub2_dot_subscription__service__pb2


class SubscriptionServiceStub(object):
    """*
    SubscriptionService provides APIs to manage subscriptions for products.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPastCharges = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListPastCharges',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListPastChargesRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListPastChargesResponse.FromString,
                )
        self.GetNextCharge = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/GetNextCharge',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeResponse.FromString,
                )
        self.CancelOrRefundCharge = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/CancelOrRefundCharge',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CancelOrRefundChargeResponse.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeResponse.FromString,
                )
        self.RetryCharges = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/RetryCharges',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.RetryChargesRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.RetryChargesResponse.FromString,
                )
        self.CreateSingleCharge = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/CreateSingleCharge',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateSingleChargeRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateSingleChargeResponse.FromString,
                )
        self.CreateOrUpdateSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/CreateOrUpdateSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateOrUpdateSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateOrUpdateSubscriptionResponse.FromString,
                )
        self.UpdateSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/UpdateSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateSubscriptionResponse.FromString,
                )
        self.CancelSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/CancelSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CancelSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CancelSubscriptionResponse.FromString,
                )
        self.PauseSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/PauseSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.PauseSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.PauseSubscriptionResponse.FromString,
                )
        self.ResumeSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ResumeSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ResumeSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ResumeSubscriptionResponse.FromString,
                )
        self.ListSubscribedFeatures = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListSubscribedFeatures',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribedFeaturesRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribedFeaturesResponse.FromString,
                )
        self.GetSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/GetSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetSubscriptionResponse.FromString,
                )
        self.GetPlanComponents = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/GetPlanComponents',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPlanComponentsRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPlanComponentsResponse.FromString,
                )
        self.GetBillerLocationToken = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/GetBillerLocationToken',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetBillerLocationTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetBillerLocationTokenResponse.FromString,
                )
        self.UpdateUsage = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/UpdateUsage',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateUsageRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateUsageResponse.FromString,
                )
        self.IsSubscribedToFeature = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/IsSubscribedToFeature',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.IsSubscribedToFeatureRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.IsSubscribedToFeatureResponse.FromString,
                )
        self.ListSubscriptions = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListSubscriptions',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionsRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionsResponse.FromString,
                )
        self.ListMergedSubscriptions = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListMergedSubscriptions',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListMergedSubscriptionsRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListMergedSubscriptionsResponse.FromString,
                )
        self.ListSubscriptionHistory = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListSubscriptionHistory',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionHistoryRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionHistoryResponse.FromString,
                )
        self.SubscriptionsForPayment = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/SubscriptionsForPayment',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.SubscriptionsForPaymentRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.SubscriptionsForPaymentResponse.FromString,
                )
        self.ExtendFreeTrialForSubscription = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ExtendFreeTrialForSubscription',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ExtendFreeTrialForSubscriptionRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ExtendFreeTrialForSubscriptionResponse.FromString,
                )
        self.GetPricingInfo = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/GetPricingInfo',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPricingInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPricingInfoResponse.FromString,
                )
        self.GetDefaultPricingInfo = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/GetDefaultPricingInfo',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetDefaultPricingInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetDefaultPricingInfoResponse.FromString,
                )
        self.ListFeatureStatuses = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListFeatureStatuses',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListFeatureStatusesRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListFeatureStatusesResponse.FromString,
                )
        self.BatchCreateAndCancelSubscriptions = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/BatchCreateAndCancelSubscriptions',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.BatchCreateAndCancelSubscriptionsRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.BatchCreateAndCancelSubscriptionsResponse.FromString,
                )
        self.ListAvailablePlans = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListAvailablePlans',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListAvailablePlansRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListAvailablePlansResponse.FromString,
                )
        self.ListSubscribers = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/ListSubscribers',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribersRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribersResponse.FromString,
                )
        self.SetAvailableFreeTrial = channel.unary_unary(
                '/squareup.sub2.service.SubscriptionService/SetAvailableFreeTrial',
                request_serializer=squareup_dot_sub2_dot_subscription__service__pb2.SetAvailableFreeTrialRequest.SerializeToString,
                response_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.SetAvailableFreeTrialResponse.FromString,
                )


class SubscriptionServiceServicer(object):
    """*
    SubscriptionService provides APIs to manage subscriptions for products.
    """

    def ListPastCharges(self, request, context):
        """* NOT IMPLEMENTED ListPastCharges returns the list of past charges for a given subscription 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNextCharge(self, request, context):
        """* NOT IMPLEMENTED GetNextCharge returns the next charge for the given subscription 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelOrRefundCharge(self, request, context):
        """* NOT IMPLEMENTED CancelOrRefundCharge refunds (paid charges) or cancels (unpaid charges) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetryCharges(self, request, context):
        """* NOT IMPLEMENTED RetryCharge retries a failed charge. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSingleCharge(self, request, context):
        """* NOT IMPLEMENTED CreateSingleCharge creates a single one-off charge on the subscription. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrUpdateSubscription(self, request, context):
        """* CreateOrUpdateSubscription creates, re-activates, or changes the plan of a subscription.
        Plan changes across different billing cycles ie. prepay and postpay are not permitted. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSubscription(self, request, context):
        """* UpdateSubscription changes attributes of a subscription, such as the plan 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelSubscription(self, request, context):
        """* CancelSubscription cancels the plan of a subscription 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseSubscription(self, request, context):
        """* Pauses an active subscription 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeSubscription(self, request, context):
        """* Resumes a paused subscription 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscribedFeatures(self, request, context):
        """* Should be Deprecated - ListSubscribedFeatures lists all the features the subscriber is subscribed to via active/free trial subscriptions. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSubscription(self, request, context):
        """* GetSubscription fetches a subscription given a token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlanComponents(self, request, context):
        """* GetPlanComponents lists the component plans for a plan given a plan token and subscriber token. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBillerLocationToken(self, request, context):
        """* GetBillerLocationToken retrieves the location token for a country code, falling back to US. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUsage(self, request, context):
        """* UpdateUsage updates a usage for a subscriber. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsSubscribedToFeature(self, request, context):
        """* IsSubscribedToFeatureResponse returns if a subscriber has access to a feature. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscriptions(self, request, context):
        """* ListSubscriptions returns the subscriptions a subscriber is subscribed to. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMergedSubscriptions(self, request, context):
        """* ListMergedSubscriptions returns the subscriptions a subscriber is subscribed to but hides overlapping subscriptions. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscriptionHistory(self, request, context):
        """* ListSubscriptionHistory returns subscription action history events in reverse timestamp order. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscriptionsForPayment(self, request, context):
        """* SubscriptionsForPayment returns the subscriptions associated with a given payment token (via Billing charge) 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtendFreeTrialForSubscription(self, request, context):
        """* ExtendFreeTrialForSubscription extends the number of free trial days for a subscription. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPricingInfo(self, request, context):
        """* GetPricingInfo returns the pricing info for a subscriber and a plan. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultPricingInfo(self, request, context):
        """* GetDefaultPricingInfo returns the default pricing info for a plan in the context of a subscriber. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFeatureStatuses(self, request, context):
        """* ListFeatureStatuses returns the list of features and their status for the subscriber. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateAndCancelSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAvailablePlans(self, request, context):
        """* ListAvailablePlans returns the list of features and their status for the subscriber. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscribers(self, request, context):
        """* ListSubscribers returns all subscribers meeting specified criteria. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAvailableFreeTrial(self, request, context):
        """* SetAvailableFreeTrial sets the number of free trial days available per user and plan. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SubscriptionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPastCharges': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPastCharges,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListPastChargesRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListPastChargesResponse.SerializeToString,
            ),
            'GetNextCharge': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNextCharge,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeResponse.SerializeToString,
            ),
            'CancelOrRefundCharge': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelOrRefundCharge,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CancelOrRefundChargeResponse.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeResponse.SerializeToString,
            ),
            'RetryCharges': grpc.unary_unary_rpc_method_handler(
                    servicer.RetryCharges,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.RetryChargesRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.RetryChargesResponse.SerializeToString,
            ),
            'CreateSingleCharge': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSingleCharge,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateSingleChargeRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateSingleChargeResponse.SerializeToString,
            ),
            'CreateOrUpdateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrUpdateSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateOrUpdateSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CreateOrUpdateSubscriptionResponse.SerializeToString,
            ),
            'UpdateSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateSubscriptionResponse.SerializeToString,
            ),
            'CancelSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.CancelSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.CancelSubscriptionResponse.SerializeToString,
            ),
            'PauseSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.PauseSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.PauseSubscriptionResponse.SerializeToString,
            ),
            'ResumeSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ResumeSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ResumeSubscriptionResponse.SerializeToString,
            ),
            'ListSubscribedFeatures': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscribedFeatures,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribedFeaturesRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribedFeaturesResponse.SerializeToString,
            ),
            'GetSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetSubscriptionResponse.SerializeToString,
            ),
            'GetPlanComponents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlanComponents,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPlanComponentsRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPlanComponentsResponse.SerializeToString,
            ),
            'GetBillerLocationToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBillerLocationToken,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetBillerLocationTokenRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetBillerLocationTokenResponse.SerializeToString,
            ),
            'UpdateUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUsage,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateUsageRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.UpdateUsageResponse.SerializeToString,
            ),
            'IsSubscribedToFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.IsSubscribedToFeature,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.IsSubscribedToFeatureRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.IsSubscribedToFeatureResponse.SerializeToString,
            ),
            'ListSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscriptions,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionsRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionsResponse.SerializeToString,
            ),
            'ListMergedSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMergedSubscriptions,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListMergedSubscriptionsRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListMergedSubscriptionsResponse.SerializeToString,
            ),
            'ListSubscriptionHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscriptionHistory,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionHistoryRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionHistoryResponse.SerializeToString,
            ),
            'SubscriptionsForPayment': grpc.unary_unary_rpc_method_handler(
                    servicer.SubscriptionsForPayment,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.SubscriptionsForPaymentRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.SubscriptionsForPaymentResponse.SerializeToString,
            ),
            'ExtendFreeTrialForSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtendFreeTrialForSubscription,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ExtendFreeTrialForSubscriptionRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ExtendFreeTrialForSubscriptionResponse.SerializeToString,
            ),
            'GetPricingInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPricingInfo,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPricingInfoRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetPricingInfoResponse.SerializeToString,
            ),
            'GetDefaultPricingInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultPricingInfo,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.GetDefaultPricingInfoRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.GetDefaultPricingInfoResponse.SerializeToString,
            ),
            'ListFeatureStatuses': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFeatureStatuses,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListFeatureStatusesRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListFeatureStatusesResponse.SerializeToString,
            ),
            'BatchCreateAndCancelSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateAndCancelSubscriptions,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.BatchCreateAndCancelSubscriptionsRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.BatchCreateAndCancelSubscriptionsResponse.SerializeToString,
            ),
            'ListAvailablePlans': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAvailablePlans,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListAvailablePlansRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListAvailablePlansResponse.SerializeToString,
            ),
            'ListSubscribers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscribers,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribersRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribersResponse.SerializeToString,
            ),
            'SetAvailableFreeTrial': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAvailableFreeTrial,
                    request_deserializer=squareup_dot_sub2_dot_subscription__service__pb2.SetAvailableFreeTrialRequest.FromString,
                    response_serializer=squareup_dot_sub2_dot_subscription__service__pb2.SetAvailableFreeTrialResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.sub2.service.SubscriptionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SubscriptionService(object):
    """*
    SubscriptionService provides APIs to manage subscriptions for products.
    """

    @staticmethod
    def ListPastCharges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListPastCharges',
            squareup_dot_sub2_dot_subscription__service__pb2.ListPastChargesRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListPastChargesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNextCharge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/GetNextCharge',
            squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelOrRefundCharge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/CancelOrRefundCharge',
            squareup_dot_sub2_dot_subscription__service__pb2.CancelOrRefundChargeResponse.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetNextChargeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetryCharges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/RetryCharges',
            squareup_dot_sub2_dot_subscription__service__pb2.RetryChargesRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.RetryChargesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSingleCharge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/CreateSingleCharge',
            squareup_dot_sub2_dot_subscription__service__pb2.CreateSingleChargeRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.CreateSingleChargeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrUpdateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/CreateOrUpdateSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.CreateOrUpdateSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.CreateOrUpdateSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/UpdateSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.UpdateSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.UpdateSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/CancelSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.CancelSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.CancelSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/PauseSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.PauseSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.PauseSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ResumeSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.ResumeSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ResumeSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscribedFeatures(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListSubscribedFeatures',
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribedFeaturesRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribedFeaturesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/GetSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.GetSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPlanComponents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/GetPlanComponents',
            squareup_dot_sub2_dot_subscription__service__pb2.GetPlanComponentsRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetPlanComponentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBillerLocationToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/GetBillerLocationToken',
            squareup_dot_sub2_dot_subscription__service__pb2.GetBillerLocationTokenRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetBillerLocationTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/UpdateUsage',
            squareup_dot_sub2_dot_subscription__service__pb2.UpdateUsageRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.UpdateUsageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsSubscribedToFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/IsSubscribedToFeature',
            squareup_dot_sub2_dot_subscription__service__pb2.IsSubscribedToFeatureRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.IsSubscribedToFeatureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListSubscriptions',
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionsRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMergedSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListMergedSubscriptions',
            squareup_dot_sub2_dot_subscription__service__pb2.ListMergedSubscriptionsRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListMergedSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscriptionHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListSubscriptionHistory',
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionHistoryRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscriptionHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscriptionsForPayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/SubscriptionsForPayment',
            squareup_dot_sub2_dot_subscription__service__pb2.SubscriptionsForPaymentRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.SubscriptionsForPaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExtendFreeTrialForSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ExtendFreeTrialForSubscription',
            squareup_dot_sub2_dot_subscription__service__pb2.ExtendFreeTrialForSubscriptionRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ExtendFreeTrialForSubscriptionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPricingInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/GetPricingInfo',
            squareup_dot_sub2_dot_subscription__service__pb2.GetPricingInfoRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetPricingInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDefaultPricingInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/GetDefaultPricingInfo',
            squareup_dot_sub2_dot_subscription__service__pb2.GetDefaultPricingInfoRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.GetDefaultPricingInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFeatureStatuses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListFeatureStatuses',
            squareup_dot_sub2_dot_subscription__service__pb2.ListFeatureStatusesRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListFeatureStatusesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateAndCancelSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/BatchCreateAndCancelSubscriptions',
            squareup_dot_sub2_dot_subscription__service__pb2.BatchCreateAndCancelSubscriptionsRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.BatchCreateAndCancelSubscriptionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAvailablePlans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListAvailablePlans',
            squareup_dot_sub2_dot_subscription__service__pb2.ListAvailablePlansRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListAvailablePlansResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscribers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/ListSubscribers',
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribersRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.ListSubscribersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAvailableFreeTrial(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.sub2.service.SubscriptionService/SetAvailableFreeTrial',
            squareup_dot_sub2_dot_subscription__service__pb2.SetAvailableFreeTrialRequest.SerializeToString,
            squareup_dot_sub2_dot_subscription__service__pb2.SetAvailableFreeTrialResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
