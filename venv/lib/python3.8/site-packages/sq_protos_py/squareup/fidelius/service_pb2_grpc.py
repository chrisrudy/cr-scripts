# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.fidelius import service_pb2 as squareup_dot_fidelius_dot_service__pb2


class SecretServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSecret = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/GetSecret',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.GetSecretRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.GetSecretResponse.FromString,
                )
        self.GetSecrets = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/GetSecrets',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.GetSecretsRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.GetSecretsResponse.FromString,
                )
        self.PutSecret = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/PutSecret',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.PutSecretRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.PutSecretResponse.FromString,
                )
        self.PutSecrets = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/PutSecrets',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.PutSecretsRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.PutSecretsResponse.FromString,
                )
        self.PutEncryptedSecrets = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/PutEncryptedSecrets',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.PutEncryptedSecretsRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.PutEncryptedSecretsResponse.FromString,
                )
        self.SetIndefiniteRetention = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/SetIndefiniteRetention',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.SetIndefiniteRetentionRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.SetIndefiniteRetentionResponse.FromString,
                )
        self.ProposeDeletion = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/ProposeDeletion',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.ProposeDeletionRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.ProposeDeletionResponse.FromString,
                )
        self.CommitDeletion = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/CommitDeletion',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.CommitDeletionRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.CommitDeletionResponse.FromString,
                )
        self.TokenizeWithoutPersistence = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/TokenizeWithoutPersistence',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.TokenizeWithoutPersistenceRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.TokenizeWithoutPersistenceResponse.FromString,
                )
        self.HasTokens = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/HasTokens',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.HasTokensRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.HasTokensResponse.FromString,
                )
        self.HasSuffix = channel.unary_unary(
                '/squareup.fidelius.service.SecretService/HasSuffix',
                request_serializer=squareup_dot_fidelius_dot_service__pb2.HasSuffixRequest.SerializeToString,
                response_deserializer=squareup_dot_fidelius_dot_service__pb2.HasSuffixResponse.FromString,
                )


class SecretServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSecret(self, request, context):
        """*
        Gets one secret. Unlike GetSecrets, this service can only fetch one
        secret at a time, but has a service retry timeout.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSecrets(self, request, context):
        """* Gets one or more secrets for a single category. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutSecret(self, request, context):
        """* Puts a single secret. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutSecrets(self, request, context):
        """*
        Puts a batch of secrets.

        The order for the response is not guaranteed to match the input's,
        which is why each request id is reflected back in the response.

        If inserting one of the secrets fails, the response will not contain
        a corresponding entry. It is the client's responsability to then
        implement the right logic (e.g. retry).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutEncryptedSecrets(self, request, context):
        """*
        @deprecated Not supported anymore
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIndefiniteRetention(self, request, context):
        """*
        Marks a secret as used for card on file. Sets its ttl to indefinite.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProposeDeletion(self, request, context):
        """*
        Propose a set of secrets for deletion (for internal use only!).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommitDeletion(self, request, context):
        """*
        Commit deletion of a set of secrets (for internal use only!).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TokenizeWithoutPersistence(self, request, context):
        """*
        Tokenize a secret without persisting it in the DB. Returns a different token format starting with fid-2-.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasTokens(self, request, context):
        """*
        Check whether the given list of fingerprints for tokens are present in the database
        (for internal use only!).
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HasSuffix(self, request, context):
        """*
        Check whether a given token has a given suffix.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SecretServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecret,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.GetSecretRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.GetSecretResponse.SerializeToString,
            ),
            'GetSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSecrets,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.GetSecretsRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.GetSecretsResponse.SerializeToString,
            ),
            'PutSecret': grpc.unary_unary_rpc_method_handler(
                    servicer.PutSecret,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.PutSecretRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.PutSecretResponse.SerializeToString,
            ),
            'PutSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.PutSecrets,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.PutSecretsRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.PutSecretsResponse.SerializeToString,
            ),
            'PutEncryptedSecrets': grpc.unary_unary_rpc_method_handler(
                    servicer.PutEncryptedSecrets,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.PutEncryptedSecretsRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.PutEncryptedSecretsResponse.SerializeToString,
            ),
            'SetIndefiniteRetention': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIndefiniteRetention,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.SetIndefiniteRetentionRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.SetIndefiniteRetentionResponse.SerializeToString,
            ),
            'ProposeDeletion': grpc.unary_unary_rpc_method_handler(
                    servicer.ProposeDeletion,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.ProposeDeletionRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.ProposeDeletionResponse.SerializeToString,
            ),
            'CommitDeletion': grpc.unary_unary_rpc_method_handler(
                    servicer.CommitDeletion,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.CommitDeletionRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.CommitDeletionResponse.SerializeToString,
            ),
            'TokenizeWithoutPersistence': grpc.unary_unary_rpc_method_handler(
                    servicer.TokenizeWithoutPersistence,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.TokenizeWithoutPersistenceRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.TokenizeWithoutPersistenceResponse.SerializeToString,
            ),
            'HasTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.HasTokens,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.HasTokensRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.HasTokensResponse.SerializeToString,
            ),
            'HasSuffix': grpc.unary_unary_rpc_method_handler(
                    servicer.HasSuffix,
                    request_deserializer=squareup_dot_fidelius_dot_service__pb2.HasSuffixRequest.FromString,
                    response_serializer=squareup_dot_fidelius_dot_service__pb2.HasSuffixResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.fidelius.service.SecretService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SecretService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/GetSecret',
            squareup_dot_fidelius_dot_service__pb2.GetSecretRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.GetSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/GetSecrets',
            squareup_dot_fidelius_dot_service__pb2.GetSecretsRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.GetSecretsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutSecret(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/PutSecret',
            squareup_dot_fidelius_dot_service__pb2.PutSecretRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.PutSecretResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/PutSecrets',
            squareup_dot_fidelius_dot_service__pb2.PutSecretsRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.PutSecretsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutEncryptedSecrets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/PutEncryptedSecrets',
            squareup_dot_fidelius_dot_service__pb2.PutEncryptedSecretsRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.PutEncryptedSecretsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIndefiniteRetention(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/SetIndefiniteRetention',
            squareup_dot_fidelius_dot_service__pb2.SetIndefiniteRetentionRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.SetIndefiniteRetentionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProposeDeletion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/ProposeDeletion',
            squareup_dot_fidelius_dot_service__pb2.ProposeDeletionRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.ProposeDeletionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommitDeletion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/CommitDeletion',
            squareup_dot_fidelius_dot_service__pb2.CommitDeletionRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.CommitDeletionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TokenizeWithoutPersistence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/TokenizeWithoutPersistence',
            squareup_dot_fidelius_dot_service__pb2.TokenizeWithoutPersistenceRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.TokenizeWithoutPersistenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/HasTokens',
            squareup_dot_fidelius_dot_service__pb2.HasTokensRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.HasTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HasSuffix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.fidelius.service.SecretService/HasSuffix',
            squareup_dot_fidelius_dot_service__pb2.HasSuffixRequest.SerializeToString,
            squareup_dot_fidelius_dot_service__pb2.HasSuffixResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
