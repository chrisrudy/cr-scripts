# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.onboard.activation.common_pb2 import (
    BeneficialOwnerRoleValue as squareup___onboard___activation___common_pb2___BeneficialOwnerRoleValue,
)

from typing import (
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Business(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    companies_house_registration_number: typing___Text = ...
    type: typing___Text = ...
    legal_name: typing___Text = ...
    registered_address_token: typing___Text = ...
    location_address_token: typing___Text = ...
    vat_number: typing___Text = ...
    vat_name: typing___Text = ...
    vat_address: typing___Text = ...
    vat_country_code: typing___Text = ...

    def __init__(self,
        *,
        companies_house_registration_number : typing___Optional[typing___Text] = None,
        type : typing___Optional[typing___Text] = None,
        legal_name : typing___Optional[typing___Text] = None,
        registered_address_token : typing___Optional[typing___Text] = None,
        location_address_token : typing___Optional[typing___Text] = None,
        vat_number : typing___Optional[typing___Text] = None,
        vat_name : typing___Optional[typing___Text] = None,
        vat_address : typing___Optional[typing___Text] = None,
        vat_country_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"companies_house_registration_number",b"companies_house_registration_number",u"legal_name",b"legal_name",u"location_address_token",b"location_address_token",u"registered_address_token",b"registered_address_token",u"type",b"type",u"vat_address",b"vat_address",u"vat_country_code",b"vat_country_code",u"vat_name",b"vat_name",u"vat_number",b"vat_number"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"companies_house_registration_number",b"companies_house_registration_number",u"legal_name",b"legal_name",u"location_address_token",b"location_address_token",u"registered_address_token",b"registered_address_token",u"type",b"type",u"vat_address",b"vat_address",u"vat_country_code",b"vat_country_code",u"vat_name",b"vat_name",u"vat_number",b"vat_number"]) -> None: ...
type___Business = Business

class Persona(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    beneficial_owner_role: squareup___onboard___activation___common_pb2___BeneficialOwnerRoleValue = ...
    incorrect: builtin___bool = ...
    incorrect_reason: typing___Text = ...

    def __init__(self,
        *,
        beneficial_owner_role : typing___Optional[squareup___onboard___activation___common_pb2___BeneficialOwnerRoleValue] = None,
        incorrect : typing___Optional[builtin___bool] = None,
        incorrect_reason : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"beneficial_owner_role",b"beneficial_owner_role",u"incorrect",b"incorrect",u"incorrect_reason",b"incorrect_reason"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"beneficial_owner_role",b"beneficial_owner_role",u"incorrect",b"incorrect",u"incorrect_reason",b"incorrect_reason"]) -> None: ...
type___Persona = Persona

class Bank(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    sort_code: typing___Text = ...

    def __init__(self,
        *,
        sort_code : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"sort_code",b"sort_code"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"sort_code",b"sort_code"]) -> None: ...
type___Bank = Bank
