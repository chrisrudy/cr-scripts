# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.onboard.activation.signupTokens import service_pb2 as squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2


class SignupTokenUseServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserSignupTokenUse = channel.unary_unary(
                '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/GetUserSignupTokenUse',
                request_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.GetUserSignupTokenUseRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.GetUserSignupTokenUseResponse.FromString,
                )
        self.Claim = channel.unary_unary(
                '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/Claim',
                request_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ClaimRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ClaimResponse.FromString,
                )
        self.Unclaim = channel.unary_unary(
                '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/Unclaim',
                request_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.UnclaimRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.UnclaimResponse.FromString,
                )
        self.Activate = channel.unary_unary(
                '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/Activate',
                request_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ActivateRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ActivateResponse.FromString,
                )


class SignupTokenUseServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserSignupTokenUse(self, request, context):
        """* Get information about a referee's signup token use 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Claim(self, request, context):
        """*
        Create a signup token use for a signup token and a referee. Will return
        success if such a signup token use has already been created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Unclaim(self, request, context):
        """*
        Mark the referee's signup token use as inactive. Will return success if the
        signup token use has already been unclaimed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Activate(self, request, context):
        """*
        Mark the referee's signup token use as activated. Will return success if the
        signup token use has already been marked as activated.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SignupTokenUseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserSignupTokenUse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserSignupTokenUse,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.GetUserSignupTokenUseRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.GetUserSignupTokenUseResponse.SerializeToString,
            ),
            'Claim': grpc.unary_unary_rpc_method_handler(
                    servicer.Claim,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ClaimRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ClaimResponse.SerializeToString,
            ),
            'Unclaim': grpc.unary_unary_rpc_method_handler(
                    servicer.Unclaim,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.UnclaimRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.UnclaimResponse.SerializeToString,
            ),
            'Activate': grpc.unary_unary_rpc_method_handler(
                    servicer.Activate,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ActivateRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ActivateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.onboard.activation.signupTokens.service.SignupTokenUseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SignupTokenUseService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserSignupTokenUse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/GetUserSignupTokenUse',
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.GetUserSignupTokenUseRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.GetUserSignupTokenUseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Claim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/Claim',
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ClaimRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ClaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Unclaim(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/Unclaim',
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.UnclaimRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.UnclaimResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Activate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.signupTokens.service.SignupTokenUseService/Activate',
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ActivateRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_signupTokens_dot_service__pb2.ActivateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
