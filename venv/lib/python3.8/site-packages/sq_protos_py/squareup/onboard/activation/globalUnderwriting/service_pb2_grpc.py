# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.onboard.activation.globalUnderwriting import service_pb2 as squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2


class ServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitManualReview = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.Service/SubmitManualReview',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.ManualReviewRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.ManualReviewResponse.FromString,
                )
        self.GetActivation = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.Service/GetActivation',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationResponse.FromString,
                )


class ServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubmitManualReview(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActivation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitManualReview': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitManualReview,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.ManualReviewRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.ManualReviewResponse.SerializeToString,
            ),
            'GetActivation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActivation,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.onboard.activation.globalUnderwriting.service.Service', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Service(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubmitManualReview(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.Service/SubmitManualReview',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.ManualReviewRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.ManualReviewResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActivation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.Service/GetActivation',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ActivationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetActivationForUnitToken = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetActivationForUnitToken',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationForUnitTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationForUnitTokenResponse.FromString,
                )
        self.GetActivationBatchForUnitTokens = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetActivationBatchForUnitTokens',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationBatchForUnitTokensRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationBatchForUnitTokensResponse.FromString,
                )
        self.GetActivationsForMerchantToken = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetActivationsForMerchantToken',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationsForMerchantTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationsForMerchantTokenResponse.FromString,
                )
        self.GetCurrentUnderwritingDecisionsForMerchantToken = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetCurrentUnderwritingDecisionsForMerchantToken',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetCurrentUnderwritingDecisionsForMerchantTokenRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetCurrentUnderwritingDecisionsForMerchantTokenResponse.FromString,
                )
        self.GetLegalEntityForUnit = channel.unary_unary(
                '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetLegalEntityForUnit',
                request_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetLegalEntityForUnitRequest.SerializeToString,
                response_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetLegalEntityForUnitResponse.FromString,
                )


class ActivationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetActivationForUnitToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActivationBatchForUnitTokens(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActivationsForMerchantToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentUnderwritingDecisionsForMerchantToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLegalEntityForUnit(self, request, context):
        """
        Lookup a Legal Entity's structure token, based on a Unit token. If no activation exists for the specified Unit,
        a 404 error will be returned.

        The token returned by this operation can be used against LegalEntitiesService.GetStructure()
        to load the entire Legal Entity (which contains business and individual data nodes, a.k.a. structure).

        NB: GetStructure() is expected to be renamed to GetLegalEntity() soon, hence the slight naming mismatch.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ActivationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetActivationForUnitToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActivationForUnitToken,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationForUnitTokenRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationForUnitTokenResponse.SerializeToString,
            ),
            'GetActivationBatchForUnitTokens': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActivationBatchForUnitTokens,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationBatchForUnitTokensRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationBatchForUnitTokensResponse.SerializeToString,
            ),
            'GetActivationsForMerchantToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActivationsForMerchantToken,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationsForMerchantTokenRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationsForMerchantTokenResponse.SerializeToString,
            ),
            'GetCurrentUnderwritingDecisionsForMerchantToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentUnderwritingDecisionsForMerchantToken,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetCurrentUnderwritingDecisionsForMerchantTokenRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetCurrentUnderwritingDecisionsForMerchantTokenResponse.SerializeToString,
            ),
            'GetLegalEntityForUnit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLegalEntityForUnit,
                    request_deserializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetLegalEntityForUnitRequest.FromString,
                    response_serializer=squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetLegalEntityForUnitResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.onboard.activation.globalUnderwriting.service.ActivationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ActivationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetActivationForUnitToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetActivationForUnitToken',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationForUnitTokenRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationForUnitTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActivationBatchForUnitTokens(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetActivationBatchForUnitTokens',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationBatchForUnitTokensRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationBatchForUnitTokensResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetActivationsForMerchantToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetActivationsForMerchantToken',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationsForMerchantTokenRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetActivationsForMerchantTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCurrentUnderwritingDecisionsForMerchantToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetCurrentUnderwritingDecisionsForMerchantToken',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetCurrentUnderwritingDecisionsForMerchantTokenRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetCurrentUnderwritingDecisionsForMerchantTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLegalEntityForUnit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.onboard.activation.globalUnderwriting.service.ActivationService/GetLegalEntityForUnit',
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetLegalEntityForUnitRequest.SerializeToString,
            squareup_dot_onboard_dot_activation_dot_globalUnderwriting_dot_service__pb2.GetLegalEntityForUnitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
