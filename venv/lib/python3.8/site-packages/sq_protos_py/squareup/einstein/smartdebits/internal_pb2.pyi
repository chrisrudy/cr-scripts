# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from sq_protos_py.squareup.common.countries_pb2 import (
    CountryValue as squareup___common___countries_pb2___CountryValue,
)

from sq_protos_py.squareup.common.currency_codes_pb2 import (
    CurrencyCodeValue as squareup___common___currency_codes_pb2___CurrencyCodeValue,
)

from sq_protos_py.squareup.common.currency_pb2 import (
    Money as squareup___common___currency_pb2___Money,
)

from sq_protos_py.squareup.einstein.smartdebits.service.external_pb2 import (
    SmartDebitsConcernValue as squareup___einstein___smartdebits___service___external_pb2___SmartDebitsConcernValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

SmartDebitsActionValue = typing___NewType('SmartDebitsActionValue', builtin___int)
type___SmartDebitsActionValue = SmartDebitsActionValue
SmartDebitsAction: _SmartDebitsAction
class _SmartDebitsAction(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SmartDebitsActionValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    SD_UNKNOWN = typing___cast(SmartDebitsActionValue, 0)
    FAILED_DEBIT = typing___cast(SmartDebitsActionValue, 1)
SD_UNKNOWN = typing___cast(SmartDebitsActionValue, 0)
FAILED_DEBIT = typing___cast(SmartDebitsActionValue, 1)
type___SmartDebitsAction = SmartDebitsAction

SmartDebitsResultTypeValue = typing___NewType('SmartDebitsResultTypeValue', builtin___int)
type___SmartDebitsResultTypeValue = SmartDebitsResultTypeValue
SmartDebitsResultType: _SmartDebitsResultType
class _SmartDebitsResultType(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[SmartDebitsResultTypeValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    SDRT_UNKNOWN = typing___cast(SmartDebitsResultTypeValue, 0)
    SDRT_UNIT_TOKEN = typing___cast(SmartDebitsResultTypeValue, 1)
SDRT_UNKNOWN = typing___cast(SmartDebitsResultTypeValue, 0)
SDRT_UNIT_TOKEN = typing___cast(SmartDebitsResultTypeValue, 1)
type___SmartDebitsResultType = SmartDebitsResultType

class SmartDebitsActionData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    idempotence_token: typing___Text = ...
    instrument_token: typing___Text = ...
    smart_debits_concern: squareup___einstein___smartdebits___service___external_pb2___SmartDebitsConcernValue = ...
    model_score: builtin___float = ...
    model_name: typing___Text = ...
    unit_token: typing___Text = ...
    scored_event_token: typing___Text = ...
    scored_event_type: typing___Text = ...
    balance_token: typing___Text = ...
    square_bank_account_instruments_id: typing___Text = ...
    total_atomic_amount: builtin___int = ...
    currency_code: squareup___common___currency_codes_pb2___CurrencyCodeValue = ...
    bank_account_instruments_id: typing___Text = ...
    bank_settlement_token: typing___Text = ...
    country: squareup___common___countries_pb2___CountryValue = ...

    @property
    def failed_debit_amount(self) -> squareup___common___currency_pb2___Money: ...

    def __init__(self,
        *,
        idempotence_token : typing___Optional[typing___Text] = None,
        instrument_token : typing___Optional[typing___Text] = None,
        failed_debit_amount : typing___Optional[squareup___common___currency_pb2___Money] = None,
        smart_debits_concern : typing___Optional[squareup___einstein___smartdebits___service___external_pb2___SmartDebitsConcernValue] = None,
        model_score : typing___Optional[builtin___float] = None,
        model_name : typing___Optional[typing___Text] = None,
        unit_token : typing___Optional[typing___Text] = None,
        scored_event_token : typing___Optional[typing___Text] = None,
        scored_event_type : typing___Optional[typing___Text] = None,
        balance_token : typing___Optional[typing___Text] = None,
        square_bank_account_instruments_id : typing___Optional[typing___Text] = None,
        total_atomic_amount : typing___Optional[builtin___int] = None,
        currency_code : typing___Optional[squareup___common___currency_codes_pb2___CurrencyCodeValue] = None,
        bank_account_instruments_id : typing___Optional[typing___Text] = None,
        bank_settlement_token : typing___Optional[typing___Text] = None,
        country : typing___Optional[squareup___common___countries_pb2___CountryValue] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"balance_token",b"balance_token",u"bank_account_instruments_id",b"bank_account_instruments_id",u"bank_settlement_token",b"bank_settlement_token",u"country",b"country",u"currency_code",b"currency_code",u"failed_debit_amount",b"failed_debit_amount",u"idempotence_token",b"idempotence_token",u"instrument_token",b"instrument_token",u"model_name",b"model_name",u"model_score",b"model_score",u"scored_event_token",b"scored_event_token",u"scored_event_type",b"scored_event_type",u"smart_debits_concern",b"smart_debits_concern",u"square_bank_account_instruments_id",b"square_bank_account_instruments_id",u"total_atomic_amount",b"total_atomic_amount",u"unit_token",b"unit_token"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"balance_token",b"balance_token",u"bank_account_instruments_id",b"bank_account_instruments_id",u"bank_settlement_token",b"bank_settlement_token",u"country",b"country",u"currency_code",b"currency_code",u"failed_debit_amount",b"failed_debit_amount",u"idempotence_token",b"idempotence_token",u"instrument_token",b"instrument_token",u"model_name",b"model_name",u"model_score",b"model_score",u"scored_event_token",b"scored_event_token",u"scored_event_type",b"scored_event_type",u"smart_debits_concern",b"smart_debits_concern",u"square_bank_account_instruments_id",b"square_bank_account_instruments_id",u"total_atomic_amount",b"total_atomic_amount",u"unit_token",b"unit_token"]) -> None: ...
type___SmartDebitsActionData = SmartDebitsActionData
