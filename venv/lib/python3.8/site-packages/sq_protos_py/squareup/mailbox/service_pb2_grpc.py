# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.mailbox import service_pb2 as squareup_dot_mailbox_dot_service__pb2


class MailboxServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/List',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ListRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ListResponse.FromString,
                )
        self.ListDirectory = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/ListDirectory',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ListDirectoryRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ListDirectoryResponse.FromString,
                )
        self.Fetch = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/Fetch',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.FetchRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.FetchResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/Delete',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.DeleteRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.DeleteResponse.FromString,
                )
        self.Rename = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/Rename',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.RenameRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.RenameResponse.FromString,
                )
        self.Send = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/Send',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.SendRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.SendResponse.FromString,
                )
        self.ListRemote = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/ListRemote',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ListRemoteRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ListRemoteResponse.FromString,
                )
        self.FetchRemote = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/FetchRemote',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.FetchRemoteRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.FetchRemoteResponse.FromString,
                )
        self.RenameRemote = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/RenameRemote',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.RenameRemoteRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.RenameRemoteResponse.FromString,
                )
        self.SendStreaming = channel.stream_unary(
                '/squareup.mailbox.service.MailboxService/SendStreaming',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.SendStreamingRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.SendStreamingResponse.FromString,
                )
        self.RetrieveFileInfo = channel.unary_unary(
                '/squareup.mailbox.service.MailboxService/RetrieveFileInfo',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileInfoRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileInfoResponse.FromString,
                )


class MailboxServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """*
        Lists the files in the given file path.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDirectory(self, request, context):
        """*
        Lists the files/subdirectories in a directory, optionally recursively.

        Unlike List, includes file metadata, which is expensive to lookup.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Fetch(self, request, context):
        """*
        Fetches a single file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """*
        Deletes a list of files.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rename(self, request, context):
        """*
        Renames a file.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Send(self, request, context):
        """*
        Sends the given file data to a remote location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRemote(self, request, context):
        """*
        Lists the files in the given file path at the remote destination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchRemote(self, request, context):
        """*
        Fetches a single file from the given file path at the remote destination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenameRemote(self, request, context):
        """*
        Renames a file at the remote destination.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendStreaming(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveFileInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MailboxServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ListRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ListResponse.SerializeToString,
            ),
            'ListDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDirectory,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ListDirectoryRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ListDirectoryResponse.SerializeToString,
            ),
            'Fetch': grpc.unary_unary_rpc_method_handler(
                    servicer.Fetch,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.FetchRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.FetchResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.DeleteRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.DeleteResponse.SerializeToString,
            ),
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.RenameRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.RenameResponse.SerializeToString,
            ),
            'Send': grpc.unary_unary_rpc_method_handler(
                    servicer.Send,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.SendRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.SendResponse.SerializeToString,
            ),
            'ListRemote': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRemote,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ListRemoteRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ListRemoteResponse.SerializeToString,
            ),
            'FetchRemote': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchRemote,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.FetchRemoteRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.FetchRemoteResponse.SerializeToString,
            ),
            'RenameRemote': grpc.unary_unary_rpc_method_handler(
                    servicer.RenameRemote,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.RenameRemoteRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.RenameRemoteResponse.SerializeToString,
            ),
            'SendStreaming': grpc.stream_unary_rpc_method_handler(
                    servicer.SendStreaming,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.SendStreamingRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.SendStreamingResponse.SerializeToString,
            ),
            'RetrieveFileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveFileInfo,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileInfoRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileInfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.mailbox.service.MailboxService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MailboxService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/List',
            squareup_dot_mailbox_dot_service__pb2.ListRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/ListDirectory',
            squareup_dot_mailbox_dot_service__pb2.ListDirectoryRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ListDirectoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Fetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/Fetch',
            squareup_dot_mailbox_dot_service__pb2.FetchRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.FetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/Delete',
            squareup_dot_mailbox_dot_service__pb2.DeleteRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/Rename',
            squareup_dot_mailbox_dot_service__pb2.RenameRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.RenameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Send(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/Send',
            squareup_dot_mailbox_dot_service__pb2.SendRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.SendResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRemote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/ListRemote',
            squareup_dot_mailbox_dot_service__pb2.ListRemoteRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ListRemoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchRemote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/FetchRemote',
            squareup_dot_mailbox_dot_service__pb2.FetchRemoteRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.FetchRemoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RenameRemote(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/RenameRemote',
            squareup_dot_mailbox_dot_service__pb2.RenameRemoteRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.RenameRemoteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/squareup.mailbox.service.MailboxService/SendStreaming',
            squareup_dot_mailbox_dot_service__pb2.SendStreamingRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.SendStreamingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveFileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxService/RetrieveFileInfo',
            squareup_dot_mailbox_dot_service__pb2.RetrieveFileInfoRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.RetrieveFileInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MailboxConfigServiceStub(object):
    """*
    Methods used to pass configuration from mailbox-config -> mailbox.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfigHash = channel.unary_unary(
                '/squareup.mailbox.service.MailboxConfigService/GetConfigHash',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.GetConfigHashRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.GetConfigHashResponse.FromString,
                )
        self.GetConfig = channel.unary_unary(
                '/squareup.mailbox.service.MailboxConfigService/GetConfig',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.GetConfigRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.GetConfigResponse.FromString,
                )


class MailboxConfigServiceServicer(object):
    """*
    Methods used to pass configuration from mailbox-config -> mailbox.
    """

    def GetConfigHash(self, request, context):
        """* Return hashes for  
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConfig(self, request, context):
        """* Passes configuration from mailbox-config -> mailbox and mailbox to dashboard. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MailboxConfigServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfigHash': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfigHash,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.GetConfigHashRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.GetConfigHashResponse.SerializeToString,
            ),
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.GetConfigRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.GetConfigResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.mailbox.service.MailboxConfigService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MailboxConfigService(object):
    """*
    Methods used to pass configuration from mailbox-config -> mailbox.
    """

    @staticmethod
    def GetConfigHash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxConfigService/GetConfigHash',
            squareup_dot_mailbox_dot_service__pb2.GetConfigHashRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.GetConfigHashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxConfigService/GetConfig',
            squareup_dot_mailbox_dot_service__pb2.GetConfigRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.GetConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class SyncServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChangedFiles = channel.unary_unary(
                '/squareup.mailbox.service.SyncService/ChangedFiles',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ChangedFilesRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ChangedFilesResponse.FromString,
                )
        self.ResolveFileDifference = channel.unary_unary(
                '/squareup.mailbox.service.SyncService/ResolveFileDifference',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ResolveFileDifferenceRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ResolveFileDifferenceResponse.FromString,
                )


class SyncServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChangedFiles(self, request, context):
        """* Returns a list of all files that have changed for a given file and version 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResolveFileDifference(self, request, context):
        """* Resolves a filesystem difference with a mailbox cluster in another datacenter 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SyncServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChangedFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangedFiles,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ChangedFilesRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ChangedFilesResponse.SerializeToString,
            ),
            'ResolveFileDifference': grpc.unary_unary_rpc_method_handler(
                    servicer.ResolveFileDifference,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ResolveFileDifferenceRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ResolveFileDifferenceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.mailbox.service.SyncService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SyncService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChangedFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.SyncService/ChangedFiles',
            squareup_dot_mailbox_dot_service__pb2.ChangedFilesRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ChangedFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResolveFileDifference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.SyncService/ResolveFileDifference',
            squareup_dot_mailbox_dot_service__pb2.ResolveFileDifferenceRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ResolveFileDifferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MailboxAdminServiceStub(object):
    """*
    Admin actions to migrate a files or directories from one filesystem to another.

    <p>The MigrateFile action implements a bidirectional streaming API that allows for initiating
    and managing migrations.

    <p>Requests may do one of (1) request to connect to an existing migration, (2) request to start
    migrating a particular file or directory, or (3) request to stop a migration. Note that only one
    migrations can be connected to by an individual streaming call at a given time, and a request to
    migrate a file or directory will start a new migration if is not currently associated with that
    call.

    <p>Responses are a simple stream of human-readable progress updates and/or error messages.

    <p>All migrations for a particular host are processed by a single thread, and individual files
    are migrated one-by-one with a hardcoded ratelimit. Directories are migrated recursively, by
    automatically generating requests to migrate their individual constituent files, such that they
    still obey the ratelimiting contraints (and furthermore, can be easily stopped without having to
    wait for an entire directory subtree to terminate.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MigrateFile = channel.unary_unary(
                '/squareup.mailbox.service.MailboxAdminService/MigrateFile',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.MigrateFileRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.MigrateFileResponse.FromString,
                )
        self.ListFileSystem = channel.unary_unary(
                '/squareup.mailbox.service.MailboxAdminService/ListFileSystem',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ListFileSystemRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ListFileSystemResponse.FromString,
                )
        self.RetrieveFileShasum = channel.unary_unary(
                '/squareup.mailbox.service.MailboxAdminService/RetrieveFileShasum',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileShasumRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileShasumResponse.FromString,
                )
        self.StartSystemMigration = channel.unary_unary(
                '/squareup.mailbox.service.MailboxAdminService/StartSystemMigration',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.StartSystemMigrationRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.StartSystemMigrationResponse.FromString,
                )
        self.ListSystemMigrationStatus = channel.unary_unary(
                '/squareup.mailbox.service.MailboxAdminService/ListSystemMigrationStatus',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.ListSystemMigrationStatusRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.ListSystemMigrationStatusResponse.FromString,
                )
        self.StopSystemMigration = channel.unary_unary(
                '/squareup.mailbox.service.MailboxAdminService/StopSystemMigration',
                request_serializer=squareup_dot_mailbox_dot_service__pb2.StopSystemMigrationRequest.SerializeToString,
                response_deserializer=squareup_dot_mailbox_dot_service__pb2.StopSystemMigrationResponse.FromString,
                )


class MailboxAdminServiceServicer(object):
    """*
    Admin actions to migrate a files or directories from one filesystem to another.

    <p>The MigrateFile action implements a bidirectional streaming API that allows for initiating
    and managing migrations.

    <p>Requests may do one of (1) request to connect to an existing migration, (2) request to start
    migrating a particular file or directory, or (3) request to stop a migration. Note that only one
    migrations can be connected to by an individual streaming call at a given time, and a request to
    migrate a file or directory will start a new migration if is not currently associated with that
    call.

    <p>Responses are a simple stream of human-readable progress updates and/or error messages.

    <p>All migrations for a particular host are processed by a single thread, and individual files
    are migrated one-by-one with a hardcoded ratelimit. Directories are migrated recursively, by
    automatically generating requests to migrate their individual constituent files, such that they
    still obey the ratelimiting contraints (and furthermore, can be easily stopped without having to
    wait for an entire directory subtree to terminate.
    """

    def MigrateFile(self, request, context):
        """* Migrate files from one file system to another. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFileSystem(self, request, context):
        """* List files in a specific filesystem. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RetrieveFileShasum(self, request, context):
        """* Retrieve the shasum of a file. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartSystemMigration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSystemMigrationStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopSystemMigration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MailboxAdminServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MigrateFile': grpc.unary_unary_rpc_method_handler(
                    servicer.MigrateFile,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.MigrateFileRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.MigrateFileResponse.SerializeToString,
            ),
            'ListFileSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFileSystem,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ListFileSystemRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ListFileSystemResponse.SerializeToString,
            ),
            'RetrieveFileShasum': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveFileShasum,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileShasumRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.RetrieveFileShasumResponse.SerializeToString,
            ),
            'StartSystemMigration': grpc.unary_unary_rpc_method_handler(
                    servicer.StartSystemMigration,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.StartSystemMigrationRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.StartSystemMigrationResponse.SerializeToString,
            ),
            'ListSystemMigrationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSystemMigrationStatus,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.ListSystemMigrationStatusRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.ListSystemMigrationStatusResponse.SerializeToString,
            ),
            'StopSystemMigration': grpc.unary_unary_rpc_method_handler(
                    servicer.StopSystemMigration,
                    request_deserializer=squareup_dot_mailbox_dot_service__pb2.StopSystemMigrationRequest.FromString,
                    response_serializer=squareup_dot_mailbox_dot_service__pb2.StopSystemMigrationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.mailbox.service.MailboxAdminService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MailboxAdminService(object):
    """*
    Admin actions to migrate a files or directories from one filesystem to another.

    <p>The MigrateFile action implements a bidirectional streaming API that allows for initiating
    and managing migrations.

    <p>Requests may do one of (1) request to connect to an existing migration, (2) request to start
    migrating a particular file or directory, or (3) request to stop a migration. Note that only one
    migrations can be connected to by an individual streaming call at a given time, and a request to
    migrate a file or directory will start a new migration if is not currently associated with that
    call.

    <p>Responses are a simple stream of human-readable progress updates and/or error messages.

    <p>All migrations for a particular host are processed by a single thread, and individual files
    are migrated one-by-one with a hardcoded ratelimit. Directories are migrated recursively, by
    automatically generating requests to migrate their individual constituent files, such that they
    still obey the ratelimiting contraints (and furthermore, can be easily stopped without having to
    wait for an entire directory subtree to terminate.
    """

    @staticmethod
    def MigrateFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxAdminService/MigrateFile',
            squareup_dot_mailbox_dot_service__pb2.MigrateFileRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.MigrateFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFileSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxAdminService/ListFileSystem',
            squareup_dot_mailbox_dot_service__pb2.ListFileSystemRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ListFileSystemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RetrieveFileShasum(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxAdminService/RetrieveFileShasum',
            squareup_dot_mailbox_dot_service__pb2.RetrieveFileShasumRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.RetrieveFileShasumResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartSystemMigration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxAdminService/StartSystemMigration',
            squareup_dot_mailbox_dot_service__pb2.StartSystemMigrationRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.StartSystemMigrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSystemMigrationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxAdminService/ListSystemMigrationStatus',
            squareup_dot_mailbox_dot_service__pb2.ListSystemMigrationStatusRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.ListSystemMigrationStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopSystemMigration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.mailbox.service.MailboxAdminService/StopSystemMigration',
            squareup_dot_mailbox_dot_service__pb2.StopSystemMigrationRequest.SerializeToString,
            squareup_dot_mailbox_dot_service__pb2.StopSystemMigrationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
