# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.inforad import service_pb2 as squareup_dot_inforad_dot_service__pb2


class InforadServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateTeam = channel.unary_unary(
                '/squareup.inforad.service.InforadService/CreateTeam',
                request_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamRequest.SerializeToString,
                response_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamResponse.FromString,
                )
        self.UpdateTeam = channel.unary_unary(
                '/squareup.inforad.service.InforadService/UpdateTeam',
                request_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamRequest.SerializeToString,
                response_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamResponse.FromString,
                )
        self.DeleteTeam = channel.unary_unary(
                '/squareup.inforad.service.InforadService/DeleteTeam',
                request_serializer=squareup_dot_inforad_dot_service__pb2.DeleteTeamRequest.SerializeToString,
                response_deserializer=squareup_dot_inforad_dot_service__pb2.DeleteTeamResponse.FromString,
                )
        self.CreateOrUpdateSlide = channel.unary_unary(
                '/squareup.inforad.service.InforadService/CreateOrUpdateSlide',
                request_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideRequest.SerializeToString,
                response_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideResponse.FromString,
                )
        self.UpdateSlide = channel.unary_unary(
                '/squareup.inforad.service.InforadService/UpdateSlide',
                request_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideRequest.SerializeToString,
                response_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideResponse.FromString,
                )
        self.DeleteSlide = channel.unary_unary(
                '/squareup.inforad.service.InforadService/DeleteSlide',
                request_serializer=squareup_dot_inforad_dot_service__pb2.DeleteSlideRequest.SerializeToString,
                response_deserializer=squareup_dot_inforad_dot_service__pb2.DeleteSlideResponse.FromString,
                )


class InforadServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateTeam(self, request, context):
        """Create a new team.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTeam(self, request, context):
        """Update a single team.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTeam(self, request, context):
        """Delete a single team.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrUpdateSlide(self, request, context):
        """Upsert a slide for the given team.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSlide(self, request, context):
        """Update an existing slide for the given team. Will fail if the slide does not already exist.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSlide(self, request, context):
        """Delete a single slide.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InforadServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTeam,
                    request_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamRequest.FromString,
                    response_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamResponse.SerializeToString,
            ),
            'UpdateTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTeam,
                    request_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamRequest.FromString,
                    response_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamResponse.SerializeToString,
            ),
            'DeleteTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTeam,
                    request_deserializer=squareup_dot_inforad_dot_service__pb2.DeleteTeamRequest.FromString,
                    response_serializer=squareup_dot_inforad_dot_service__pb2.DeleteTeamResponse.SerializeToString,
            ),
            'CreateOrUpdateSlide': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrUpdateSlide,
                    request_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideRequest.FromString,
                    response_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideResponse.SerializeToString,
            ),
            'UpdateSlide': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSlide,
                    request_deserializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideRequest.FromString,
                    response_serializer=squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideResponse.SerializeToString,
            ),
            'DeleteSlide': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSlide,
                    request_deserializer=squareup_dot_inforad_dot_service__pb2.DeleteSlideRequest.FromString,
                    response_serializer=squareup_dot_inforad_dot_service__pb2.DeleteSlideResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.inforad.service.InforadService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InforadService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inforad.service.InforadService/CreateTeam',
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamRequest.SerializeToString,
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inforad.service.InforadService/UpdateTeam',
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamRequest.SerializeToString,
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateTeamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inforad.service.InforadService/DeleteTeam',
            squareup_dot_inforad_dot_service__pb2.DeleteTeamRequest.SerializeToString,
            squareup_dot_inforad_dot_service__pb2.DeleteTeamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrUpdateSlide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inforad.service.InforadService/CreateOrUpdateSlide',
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideRequest.SerializeToString,
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSlide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inforad.service.InforadService/UpdateSlide',
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideRequest.SerializeToString,
            squareup_dot_inforad_dot_service__pb2.CreateOrUpdateSlideResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSlide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.inforad.service.InforadService/DeleteSlide',
            squareup_dot_inforad_dot_service__pb2.DeleteSlideRequest.SerializeToString,
            squareup_dot_inforad_dot_service__pb2.DeleteSlideResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
