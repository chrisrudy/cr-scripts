# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    Optional as typing___Optional,
    Text as typing___Text,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class JumbotronFilterData(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    country_code: typing___Text = ...
    default_locale_code: typing___Text = ...
    is_multiunit: builtin___bool = ...
    is_activated: builtin___bool = ...
    is_eligible_for_card_processing: builtin___bool = ...
    is_frozen: builtin___bool = ...
    subscribes_to_customers_pro: builtin___bool = ...
    subscribes_to_appointments: builtin___bool = ...
    subscribes_to_payroll: builtin___bool = ...
    permissions: google___protobuf___internal___containers___RepeatedScalarFieldContainer[typing___Text] = ...
    activation_status: typing___Text = ...
    bank_status: typing___Text = ...

    def __init__(self,
        *,
        country_code : typing___Optional[typing___Text] = None,
        default_locale_code : typing___Optional[typing___Text] = None,
        is_multiunit : typing___Optional[builtin___bool] = None,
        is_activated : typing___Optional[builtin___bool] = None,
        is_eligible_for_card_processing : typing___Optional[builtin___bool] = None,
        is_frozen : typing___Optional[builtin___bool] = None,
        subscribes_to_customers_pro : typing___Optional[builtin___bool] = None,
        subscribes_to_appointments : typing___Optional[builtin___bool] = None,
        subscribes_to_payroll : typing___Optional[builtin___bool] = None,
        permissions : typing___Optional[typing___Iterable[typing___Text]] = None,
        activation_status : typing___Optional[typing___Text] = None,
        bank_status : typing___Optional[typing___Text] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"activation_status",b"activation_status",u"bank_status",b"bank_status",u"country_code",b"country_code",u"default_locale_code",b"default_locale_code",u"is_activated",b"is_activated",u"is_eligible_for_card_processing",b"is_eligible_for_card_processing",u"is_frozen",b"is_frozen",u"is_multiunit",b"is_multiunit",u"subscribes_to_appointments",b"subscribes_to_appointments",u"subscribes_to_customers_pro",b"subscribes_to_customers_pro",u"subscribes_to_payroll",b"subscribes_to_payroll"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"activation_status",b"activation_status",u"bank_status",b"bank_status",u"country_code",b"country_code",u"default_locale_code",b"default_locale_code",u"is_activated",b"is_activated",u"is_eligible_for_card_processing",b"is_eligible_for_card_processing",u"is_frozen",b"is_frozen",u"is_multiunit",b"is_multiunit",u"permissions",b"permissions",u"subscribes_to_appointments",b"subscribes_to_appointments",u"subscribes_to_customers_pro",b"subscribes_to_customers_pro",u"subscribes_to_payroll",b"subscribes_to_payroll"]) -> None: ...
type___JumbotronFilterData = JumbotronFilterData
