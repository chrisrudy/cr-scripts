# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.entitlements import service_pb2 as squareup_dot_entitlements_dot_service__pb2


class EntitlementsServiceStub(object):
    """*
    Service to provide fine-grained feature entitlements for square user accounts (ldap)
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RetrieveEntitlement = channel.unary_unary(
                '/squareup.entitlements.service.EntitlementsService/RetrieveEntitlement',
                request_serializer=squareup_dot_entitlements_dot_service__pb2.RetrieveEntitlementRequest.SerializeToString,
                response_deserializer=squareup_dot_entitlements_dot_service__pb2.RetrieveEntitlementResponse.FromString,
                )
        self.CreateEntitlement = channel.unary_unary(
                '/squareup.entitlements.service.EntitlementsService/CreateEntitlement',
                request_serializer=squareup_dot_entitlements_dot_service__pb2.CreateEntitlementRequest.SerializeToString,
                response_deserializer=squareup_dot_entitlements_dot_service__pb2.CreateEntitlementResponse.FromString,
                )
        self.DeleteEntitlement = channel.unary_unary(
                '/squareup.entitlements.service.EntitlementsService/DeleteEntitlement',
                request_serializer=squareup_dot_entitlements_dot_service__pb2.DeleteEntitlementRequest.SerializeToString,
                response_deserializer=squareup_dot_entitlements_dot_service__pb2.DeleteEntitlementResponse.FromString,
                )
        self.ListUserEntitlements = channel.unary_unary(
                '/squareup.entitlements.service.EntitlementsService/ListUserEntitlements',
                request_serializer=squareup_dot_entitlements_dot_service__pb2.ListUserEntitlementsRequest.SerializeToString,
                response_deserializer=squareup_dot_entitlements_dot_service__pb2.ListUserEntitlementsResponse.FromString,
                )


class EntitlementsServiceServicer(object):
    """*
    Service to provide fine-grained feature entitlements for square user accounts (ldap)
    """

    def RetrieveEntitlement(self, request, context):
        """Retrieves an entitlement matching the specified id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateEntitlement(self, request, context):
        """Create a new entitlement for an ldap
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEntitlement(self, request, context):
        """Delete an entitlement for the specified id
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUserEntitlements(self, request, context):
        """Lists all entitlements matching the specified criteria
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EntitlementsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RetrieveEntitlement': grpc.unary_unary_rpc_method_handler(
                    servicer.RetrieveEntitlement,
                    request_deserializer=squareup_dot_entitlements_dot_service__pb2.RetrieveEntitlementRequest.FromString,
                    response_serializer=squareup_dot_entitlements_dot_service__pb2.RetrieveEntitlementResponse.SerializeToString,
            ),
            'CreateEntitlement': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEntitlement,
                    request_deserializer=squareup_dot_entitlements_dot_service__pb2.CreateEntitlementRequest.FromString,
                    response_serializer=squareup_dot_entitlements_dot_service__pb2.CreateEntitlementResponse.SerializeToString,
            ),
            'DeleteEntitlement': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEntitlement,
                    request_deserializer=squareup_dot_entitlements_dot_service__pb2.DeleteEntitlementRequest.FromString,
                    response_serializer=squareup_dot_entitlements_dot_service__pb2.DeleteEntitlementResponse.SerializeToString,
            ),
            'ListUserEntitlements': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUserEntitlements,
                    request_deserializer=squareup_dot_entitlements_dot_service__pb2.ListUserEntitlementsRequest.FromString,
                    response_serializer=squareup_dot_entitlements_dot_service__pb2.ListUserEntitlementsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.entitlements.service.EntitlementsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EntitlementsService(object):
    """*
    Service to provide fine-grained feature entitlements for square user accounts (ldap)
    """

    @staticmethod
    def RetrieveEntitlement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.entitlements.service.EntitlementsService/RetrieveEntitlement',
            squareup_dot_entitlements_dot_service__pb2.RetrieveEntitlementRequest.SerializeToString,
            squareup_dot_entitlements_dot_service__pb2.RetrieveEntitlementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateEntitlement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.entitlements.service.EntitlementsService/CreateEntitlement',
            squareup_dot_entitlements_dot_service__pb2.CreateEntitlementRequest.SerializeToString,
            squareup_dot_entitlements_dot_service__pb2.CreateEntitlementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteEntitlement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.entitlements.service.EntitlementsService/DeleteEntitlement',
            squareup_dot_entitlements_dot_service__pb2.DeleteEntitlementRequest.SerializeToString,
            squareup_dot_entitlements_dot_service__pb2.DeleteEntitlementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUserEntitlements(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.entitlements.service.EntitlementsService/ListUserEntitlements',
            squareup_dot_entitlements_dot_service__pb2.ListUserEntitlementsRequest.SerializeToString,
            squareup_dot_entitlements_dot_service__pb2.ListUserEntitlementsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
