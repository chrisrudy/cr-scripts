# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from sq_protos_py.squareup.bookkeeper import internal_balance_id_pb2 as squareup_dot_bookkeeper_dot_internal__balance__id__pb2


class InternalBalanceIdServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.EncodeBalanceId = channel.unary_unary(
                '/squareup.ledger.bookkeeper.InternalBalanceIdService/EncodeBalanceId',
                request_serializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.EncodeBalanceIdRequest.SerializeToString,
                response_deserializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.EncodeBalanceIdResponse.FromString,
                )
        self.DecodeBalanceId = channel.unary_unary(
                '/squareup.ledger.bookkeeper.InternalBalanceIdService/DecodeBalanceId',
                request_serializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.DecodeBalanceIdRequest.SerializeToString,
                response_deserializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.DecodeBalanceIdResponse.FromString,
                )


class InternalBalanceIdServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def EncodeBalanceId(self, request, context):
        """* Returns a balance ID that encodes a given entity. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DecodeBalanceId(self, request, context):
        """* Returns an entity decoded from a given balance ID. 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InternalBalanceIdServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'EncodeBalanceId': grpc.unary_unary_rpc_method_handler(
                    servicer.EncodeBalanceId,
                    request_deserializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.EncodeBalanceIdRequest.FromString,
                    response_serializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.EncodeBalanceIdResponse.SerializeToString,
            ),
            'DecodeBalanceId': grpc.unary_unary_rpc_method_handler(
                    servicer.DecodeBalanceId,
                    request_deserializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.DecodeBalanceIdRequest.FromString,
                    response_serializer=squareup_dot_bookkeeper_dot_internal__balance__id__pb2.DecodeBalanceIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'squareup.ledger.bookkeeper.InternalBalanceIdService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InternalBalanceIdService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def EncodeBalanceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.bookkeeper.InternalBalanceIdService/EncodeBalanceId',
            squareup_dot_bookkeeper_dot_internal__balance__id__pb2.EncodeBalanceIdRequest.SerializeToString,
            squareup_dot_bookkeeper_dot_internal__balance__id__pb2.EncodeBalanceIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DecodeBalanceId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/squareup.ledger.bookkeeper.InternalBalanceIdService/DecodeBalanceId',
            squareup_dot_bookkeeper_dot_internal__balance__id__pb2.DecodeBalanceIdRequest.SerializeToString,
            squareup_dot_bookkeeper_dot_internal__balance__id__pb2.DecodeBalanceIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
